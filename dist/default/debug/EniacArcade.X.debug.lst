

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Mar 29 19:54:00 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           	psect	idataCOMRAM
    49  000C36                     __pidataCOMRAM:
    50                           	opt stack 0
    51                           
    52                           ;initializer for drawSymbol@F3226
    53  000C36  02                 	db	2
    54  000C37  05                 	db	5
    55  000C38  03                 	db	3
    56  000C39  06                 	db	6
    57  000C3A  04                 	db	4
    58  000C3B  07                 	db	7
    59  000C3C  04                 	db	4
    60  000C3D  06                 	db	6
    61  000C3E  04                 	db	4
    62  000C3F  05                 	db	5
    63  000C40  04                 	db	4
    64  000C41  04                 	db	4
    65  000C42  04                 	db	4
    66  000C43  03                 	db	3
    67  000C44  04                 	db	4
    68  000C45  02                 	db	2
    69  000C46  04                 	db	4
    70  000C47  01                 	db	1
    71  000C48  04                 	db	4
    72  000C49  00                 	db	0
    73  000C4A  03                 	db	3
    74  000C4B  00                 	db	0
    75  000C4C  05                 	db	5
    76  000C4D  00                 	db	0
    77                           
    78                           ;initializer for drawSymbol@F3232
    79  000C4E  02                 	db	2
    80  000C4F  06                 	db	6
    81  000C50  03                 	db	3
    82  000C51  07                 	db	7
    83  000C52  04                 	db	4
    84  000C53  07                 	db	7
    85  000C54  05                 	db	5
    86  000C55  06                 	db	6
    87  000C56  05                 	db	5
    88  000C57  05                 	db	5
    89  000C58  04                 	db	4
    90  000C59  04                 	db	4
    91  000C5A  05                 	db	5
    92  000C5B  03                 	db	3
    93  000C5C  05                 	db	5
    94  000C5D  02                 	db	2
    95  000C5E  05                 	db	5
    96  000C5F  01                 	db	1
    97  000C60  04                 	db	4
    98  000C61  00                 	db	0
    99  000C62  03                 	db	3
   100  000C63  00                 	db	0
   101  000C64  02                 	db	2
   102  000C65  01                 	db	1
   103                           
   104                           ;initializer for __speed
   105  000C66  00C8               	dw	200
   106                           
   107                           	psect	idataBANK2
   108  000CC0                     __pidataBANK2:
   109                           	opt stack 0
   110                           
   111                           ;initializer for drawSymbol@F3229
   112  000CC0  02                 	db	2
   113  000CC1  05                 	db	5
   114  000CC2  03                 	db	3
   115  000CC3  06                 	db	6
   116  000CC4  04                 	db	4
   117  000CC5  06                 	db	6
   118  000CC6  05                 	db	5
   119  000CC7  06                 	db	6
   120  000CC8  06                 	db	6
   121  000CC9  05                 	db	5
   122  000CCA  06                 	db	6
   123  000CCB  04                 	db	4
   124  000CCC  05                 	db	5
   125  000CCD  03                 	db	3
   126  000CCE  04                 	db	4
   127  000CCF  02                 	db	2
   128  000CD0  03                 	db	3
   129  000CD1  01                 	db	1
   130  000CD2  02                 	db	2
   131  000CD3  00                 	db	0
   132  000CD4  03                 	db	3
   133  000CD5  00                 	db	0
   134  000CD6  04                 	db	4
   135  000CD7  00                 	db	0
   136  000CD8  05                 	db	5
   137  000CD9  00                 	db	0
   138  000CDA  06                 	db	6
   139  000CDB  00                 	db	0
   140                           
   141                           	psect	idataBANK3
   142  000678                     __pidataBANK3:
   143                           	opt stack 0
   144                           
   145                           ;initializer for drawSymbol@F3235
   146  000678  01                 	db	1
   147  000679  01                 	db	1
   148  00067A  01                 	db	1
   149  00067B  02                 	db	2
   150  00067C  01                 	db	1
   151  00067D  03                 	db	3
   152  00067E  01                 	db	1
   153  00067F  04                 	db	4
   154  000680  01                 	db	1
   155  000681  05                 	db	5
   156  000682  01                 	db	1
   157  000683  06                 	db	6
   158  000684  02                 	db	2
   159  000685  06                 	db	6
   160  000686  03                 	db	3
   161  000687  06                 	db	6
   162  000688  03                 	db	3
   163  000689  05                 	db	5
   164  00068A  03                 	db	3
   165  00068B  04                 	db	4
   166  00068C  02                 	db	2
   167  00068D  04                 	db	4
   168  00068E  05                 	db	5
   169  00068F  06                 	db	6
   170  000690  05                 	db	5
   171  000691  05                 	db	5
   172  000692  05                 	db	5
   173  000693  04                 	db	4
   174  000694  05                 	db	5
   175  000695  03                 	db	3
   176  000696  05                 	db	5
   177  000697  02                 	db	2
   178  000698  05                 	db	5
   179  000699  01                 	db	1
   180  00069A  06                 	db	6
   181  00069B  01                 	db	1
   182  00069C  08                 	db	8
   183  00069D  01                 	db	1
   184  00069E  08                 	db	8
   185  00069F  02                 	db	2
   186  0006A0  08                 	db	8
   187  0006A1  03                 	db	3
   188  0006A2  09                 	db	9
   189  0006A3  04                 	db	4
   190  0006A4  0A                 	db	10
   191  0006A5  04                 	db	4
   192  0006A6  0B                 	db	11
   193  0006A7  03                 	db	3
   194  0006A8  0B                 	db	11
   195  0006A9  02                 	db	2
   196  0006AA  0B                 	db	11
   197  0006AB  01                 	db	1
   198  0006AC  0D                 	db	13
   199  0006AD  01                 	db	1
   200  0006AE  0D                 	db	13
   201  0006AF  02                 	db	2
   202  0006B0  0D                 	db	13
   203  0006B1  03                 	db	3
   204  0006B2  0D                 	db	13
   205  0006B3  04                 	db	4
   206  0006B4  0C                 	db	12
   207  0006B5  05                 	db	5
   208  0006B6  0B                 	db	11
   209  0006B7  06                 	db	6
   210  0006B8  0E                 	db	14
   211  0006B9  05                 	db	5
   212  0006BA  0E                 	db	14
   213  0006BB  06                 	db	6
   214                           
   215                           ;initializer for drawSymbol@F3238
   216  0006BC  06                 	db	6
   217  0006BD  06                 	db	6
   218  0006BE  05                 	db	5
   219  0006BF  07                 	db	7
   220  0006C0  04                 	db	4
   221  0006C1  07                 	db	7
   222  0006C2  03                 	db	3
   223  0006C3  07                 	db	7
   224  0006C4  02                 	db	2
   225  0006C5  06                 	db	6
   226  0006C6  02                 	db	2
   227  0006C7  05                 	db	5
   228  0006C8  02                 	db	2
   229  0006C9  04                 	db	4
   230  0006CA  02                 	db	2
   231  0006CB  03                 	db	3
   232  0006CC  02                 	db	2
   233  0006CD  02                 	db	2
   234  0006CE  02                 	db	2
   235  0006CF  01                 	db	1
   236  0006D0  03                 	db	3
   237  0006D1  00                 	db	0
   238  0006D2  04                 	db	4
   239  0006D3  00                 	db	0
   240  0006D4  05                 	db	5
   241  0006D5  00                 	db	0
   242  0006D6  06                 	db	6
   243  0006D7  01                 	db	1
   244  0006D8  05                 	db	5
   245  0006D9  02                 	db	2
   246  0006DA  04                 	db	4
   247  0006DB  02                 	db	2
   248  0006DC  09                 	db	9
   249  0006DD  06                 	db	6
   250  0006DE  09                 	db	9
   251  0006DF  05                 	db	5
   252  0006E0  09                 	db	9
   253  0006E1  04                 	db	4
   254  0006E2  09                 	db	9
   255  0006E3  03                 	db	3
   256  0006E4  09                 	db	9
   257  0006E5  02                 	db	2
   258  0006E6  09                 	db	9
   259  0006E7  01                 	db	1
   260  0006E8  0A                 	db	10
   261  0006E9  00                 	db	0
   262  0006EA  0B                 	db	11
   263  0006EB  00                 	db	0
   264  0006EC  0C                 	db	12
   265  0006ED  00                 	db	0
   266  0006EE  0D                 	db	13
   267  0006EF  01                 	db	1
   268  0006F0  0D                 	db	13
   269  0006F1  02                 	db	2
   270  0006F2  0D                 	db	13
   271  0006F3  04                 	db	4
   272  0006F4  0D                 	db	13
   273  0006F5  05                 	db	5
   274  0006F6  0D                 	db	13
   275  0006F7  06                 	db	6
   276  0006F8  0C                 	db	12
   277  0006F9  07                 	db	7
   278  0006FA  0B                 	db	11
   279  0006FB  07                 	db	7
   280  0006FC  0A                 	db	10
   281  0006FD  07                 	db	7
   282  0006FE  00                 	db	0
   283  0006FF  00                 	db	0
   284  0000                     _LATA	set	3977
   285  0000                     _LATC	set	3979
   286  0000                     _LATD	set	3980
   287  0000                     _OSCTUNEbits	set	3995
   288  0000                     _TRISA	set	3986
   289  0000                     _TRISBbits	set	3987
   290  0000                     _TRISC	set	3988
   291  0000                     _TRISD	set	3989
   292  0000                     _PLLEN	set	31966
   293  0000                     _ADRES	set	4035
   294  0000                     _ADCON0bits	set	4034
   295  0000                     _ADCON1bits	set	4033
   296  0000                     _ADCON2bits	set	4032
   297  0000                     _OSCCONbits	set	4051
   298  0000                     _ADIE	set	31982
   299  0000                     _ADIF	set	31990
   300  0000                     _PSA	set	32427
   301  0000                     _T08BIT	set	32430
   302  0000                     _T0CS	set	32429
   303  0000                     _T0PS0	set	32424
   304  0000                     _T0PS1	set	32425
   305  0000                     _T0PS2	set	32426
   306  0000                     _TMR0ON	set	32431
   307  0000                     _GIE	set	32663
   308  0000                     _PEIE	set	32662
   309  0000                     _TMR0IE	set	32661
   310  0000                     _TMR0IF	set	32658
   311                           
   312                           ; #config settings
   313  0000                     
   314                           	psect	cinit
   315  000700                     __pcinit:
   316                           	opt stack 0
   317  000700                     start_initialization:
   318                           	opt stack 0
   319  000700                     __initialization:
   320                           	opt stack 0
   321                           
   322                           ; Clear objects allocated to BANK0 (128 bytes)
   323  000700  EE00  F080         	lfsr	0,__pbssBANK0
   324  000704  0E80               	movlw	128
   325  000706                     clear_0:
   326  000706  6AEE               	clrf	postinc0,c
   327  000708  06E8               	decf	wreg,f,c
   328  00070A  E1FD               	bnz	clear_0
   329                           
   330                           ; Clear objects allocated to COMRAM (17 bytes)
   331  00070C  EE00  F052         	lfsr	0,__pbssCOMRAM
   332  000710  0E11               	movlw	17
   333  000712                     clear_1:
   334  000712  6AEE               	clrf	postinc0,c
   335  000714  06E8               	decf	wreg,f,c
   336  000716  E1FD               	bnz	clear_1
   337                           
   338                           ; Initialize objects allocated to BANK3 (136 bytes)
   339                           ; load TBLPTR registers with __pidataBANK3
   340  000718  0E78               	movlw	low __pidataBANK3
   341  00071A  6EF6               	movwf	tblptrl,c
   342  00071C  0E06               	movlw	high __pidataBANK3
   343  00071E  6EF7               	movwf	tblptrh,c
   344  000720  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   345  000722  6EF8               	movwf	tblptru,c
   346  000724  EE03  F000         	lfsr	0,__pdataBANK3
   347  000728  EE10 F088          	lfsr	1,136
   348  00072C                     copy_data0:
   349  00072C  0009               	tblrd		*+
   350  00072E  CFF5 FFEE          	movff	tablat,postinc0
   351  000732  50E5               	movf	postdec1,w,c
   352  000734  50E1               	movf	fsr1l,w,c
   353  000736  E1FA               	bnz	copy_data0
   354                           
   355                           ; Initialize objects allocated to BANK2 (28 bytes)
   356                           ; load TBLPTR registers with __pidataBANK2
   357  000738  0EC0               	movlw	low __pidataBANK2
   358  00073A  6EF6               	movwf	tblptrl,c
   359  00073C  0E0C               	movlw	high __pidataBANK2
   360  00073E  6EF7               	movwf	tblptrh,c
   361  000740  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   362  000742  6EF8               	movwf	tblptru,c
   363  000744  EE02  F0DD         	lfsr	0,__pdataBANK2
   364  000748  EE10 F01C          	lfsr	1,28
   365  00074C                     copy_data1:
   366  00074C  0009               	tblrd		*+
   367  00074E  CFF5 FFEE          	movff	tablat,postinc0
   368  000752  50E5               	movf	postdec1,w,c
   369  000754  50E1               	movf	fsr1l,w,c
   370  000756  E1FA               	bnz	copy_data1
   371                           
   372                           ; Initialize objects allocated to COMRAM (50 bytes)
   373                           ; load TBLPTR registers with __pidataCOMRAM
   374  000758  0E36               	movlw	low __pidataCOMRAM
   375  00075A  6EF6               	movwf	tblptrl,c
   376  00075C  0E0C               	movlw	high __pidataCOMRAM
   377  00075E  6EF7               	movwf	tblptrh,c
   378  000760  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   379  000762  6EF8               	movwf	tblptru,c
   380  000764  EE00  F001         	lfsr	0,__pdataCOMRAM
   381  000768  EE10 F032          	lfsr	1,50
   382  00076C                     copy_data2:
   383  00076C  0009               	tblrd		*+
   384  00076E  CFF5 FFEE          	movff	tablat,postinc0
   385  000772  50E5               	movf	postdec1,w,c
   386  000774  50E1               	movf	fsr1l,w,c
   387  000776  E1FA               	bnz	copy_data2
   388  000778                     end_of_initialization:
   389                           	opt stack 0
   390  000778                     __end_of__initialization:
   391                           	opt stack 0
   392  000778  9063               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   393  00077A  9263               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   394  00077C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   395  00077E  6EF8               	movwf	tblptru,c
   396  000780  0100               	movlb	0
   397  000782  EF7C  F006         	goto	_main	;jump to C main() function
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           postdec1	equ	0xFE5
   405                           fsr1l	equ	0xFE1
   406                           
   407                           	psect	bssCOMRAM
   408  000052                     __pbssCOMRAM:
   409                           	opt stack 0
   410  000052                     __p1:
   411                           	opt stack 0
   412  000052                     	ds	5
   413  000057                     __p2:
   414                           	opt stack 0
   415  000057                     	ds	5
   416  00005C                     __ball:
   417                           	opt stack 0
   418  00005C                     	ds	3
   419  00005F                     __nextPos:
   420                           	opt stack 0
   421  00005F                     	ds	2
   422  000061                     __timerCounter:
   423                           	opt stack 0
   424  000061                     	ds	2
   425                           tblptru	equ	0xFF8
   426                           tblptrh	equ	0xFF7
   427                           tblptrl	equ	0xFF6
   428                           tablat	equ	0xFF5
   429                           postinc0	equ	0xFEE
   430                           wreg	equ	0xFE8
   431                           postdec1	equ	0xFE5
   432                           fsr1l	equ	0xFE1
   433                           
   434                           	psect	dataCOMRAM
   435  000001                     __pdataCOMRAM:
   436                           	opt stack 0
   437  000001                     drawSymbol@F3226:
   438                           	opt stack 0
   439  000001                     	ds	24
   440  000019                     drawSymbol@F3232:
   441                           	opt stack 0
   442  000019                     	ds	24
   443  000031                     __speed:
   444                           	opt stack 0
   445  000031                     	ds	2
   446                           tblptru	equ	0xFF8
   447                           tblptrh	equ	0xFF7
   448                           tblptrl	equ	0xFF6
   449                           tablat	equ	0xFF5
   450                           postinc0	equ	0xFEE
   451                           wreg	equ	0xFE8
   452                           postdec1	equ	0xFE5
   453                           fsr1l	equ	0xFE1
   454                           
   455                           	psect	bssBANK0
   456  000080                     __pbssBANK0:
   457                           	opt stack 0
   458  000080                     _pixels:
   459                           	opt stack 0
   460  000080                     	ds	128
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           postdec1	equ	0xFE5
   468                           fsr1l	equ	0xFE1
   469                           
   470                           	psect	dataBANK2
   471  0002DD                     __pdataBANK2:
   472                           	opt stack 0
   473  0002DD                     drawSymbol@F3229:
   474                           	opt stack 0
   475  0002DD                     	ds	28
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1l	equ	0xFE1
   484                           
   485                           	psect	dataBANK3
   486  000300                     __pdataBANK3:
   487                           	opt stack 0
   488  000300                     drawSymbol@F3235:
   489                           	opt stack 0
   490  000300                     	ds	68
   491  000344                     drawSymbol@F3238:
   492                           	opt stack 0
   493  000344                     	ds	68
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           
   503                           	psect	cstackBANK2
   504  000200                     __pcstackBANK2:
   505                           	opt stack 0
   506  000200                     ??_refresh:
   507  000200                     ?___wmul:
   508                           	opt stack 0
   509  000200                     initializeLED@i:
   510                           	opt stack 0
   511  000200                     on@column:
   512                           	opt stack 0
   513  000200                     turnAllOff@i:
   514                           	opt stack 0
   515  000200                     ___wmul@multiplier:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x0
   519  000200                     	ds	1
   520  000201                     initializeLED@j:
   521                           	opt stack 0
   522  000201                     turnAllOff@j:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x1
   526  000201                     	ds	1
   527  000202                     drawSymbol@offSetX:
   528                           	opt stack 0
   529  000202                     ___wmul@multiplicand:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x2
   533  000202                     	ds	1
   534  000203                     refresh@theCol:
   535                           	opt stack 0
   536  000203                     drawSymbol@symbolGo:
   537                           	opt stack 0
   538                           
   539                           ; 68 bytes @ 0x3
   540  000203                     	ds	1
   541  000204                     refresh@theRow:
   542                           	opt stack 0
   543  000204                     delaySeconds@numberOfSeconds:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x4
   547  000204                     	ds	2
   548  000206                     delaySeconds@i:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x6
   552  000206                     	ds	65
   553  000247                     drawSymbol@symbolPlay:
   554                           	opt stack 0
   555                           
   556                           ; 68 bytes @ 0x47
   557  000247                     	ds	68
   558  00028B                     drawSymbol@symbolTwo:
   559                           	opt stack 0
   560                           
   561                           ; 28 bytes @ 0x8B
   562  00028B                     	ds	28
   563  0002A7                     drawSymbol@symbolOne:
   564                           	opt stack 0
   565                           
   566                           ; 24 bytes @ 0xA7
   567  0002A7                     	ds	24
   568  0002BF                     drawSymbol@symbolThree:
   569                           	opt stack 0
   570                           
   571                           ; 24 bytes @ 0xBF
   572  0002BF                     	ds	24
   573  0002D7                     drawSymbol@chosenSymbol:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0xD7
   577  0002D7                     	ds	1
   578  0002D8                     drawSymbol@i_81:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0xD8
   582  0002D8                     	ds	1
   583  0002D9                     drawSymbol@i:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0xD9
   587  0002D9                     	ds	1
   588  0002DA                     drawSymbol@i_78:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0xDA
   592  0002DA                     	ds	1
   593  0002DB                     drawSymbol@i_79:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0xDB
   597  0002DB                     	ds	1
   598  0002DC                     drawSymbol@i_80:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0xDC
   602  0002DC                     	ds	1
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           
   612                           	psect	cstackBANK1
   613  000100                     __pcstackBANK1:
   614                           	opt stack 0
   615  000100                     i2drawSymbol@symbolGo:
   616                           	opt stack 0
   617                           
   618                           ; 68 bytes @ 0x0
   619  000100                     	ds	68
   620  000144                     i2drawSymbol@symbolPlay:
   621                           	opt stack 0
   622                           
   623                           ; 68 bytes @ 0x44
   624  000144                     	ds	68
   625  000188                     i2drawSymbol@symbolTwo:
   626                           	opt stack 0
   627                           
   628                           ; 28 bytes @ 0x88
   629  000188                     	ds	28
   630  0001A4                     i2drawSymbol@symbolOne:
   631                           	opt stack 0
   632                           
   633                           ; 24 bytes @ 0xA4
   634  0001A4                     	ds	24
   635  0001BC                     i2drawSymbol@symbolThree:
   636                           	opt stack 0
   637                           
   638                           ; 24 bytes @ 0xBC
   639  0001BC                     	ds	24
   640  0001D4                     i2drawSymbol@chosenSymbol:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0xD4
   644  0001D4                     	ds	1
   645  0001D5                     i2drawSymbol@i_81:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0xD5
   649  0001D5                     	ds	1
   650  0001D6                     i2drawSymbol@i:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0xD6
   654  0001D6                     	ds	1
   655  0001D7                     i2drawSymbol@i_78:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0xD7
   659  0001D7                     	ds	1
   660  0001D8                     i2drawSymbol@i_79:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0xD8
   664  0001D8                     	ds	1
   665  0001D9                     i2drawSymbol@i_80:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0xD9
   669  0001D9                     	ds	1
   670                           tblptru	equ	0xFF8
   671                           tblptrh	equ	0xFF7
   672                           tblptrl	equ	0xFF6
   673                           tablat	equ	0xFF5
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           postdec1	equ	0xFE5
   677                           fsr1l	equ	0xFE1
   678                           
   679                           	psect	cstackCOMRAM
   680  000033                     __pcstackCOMRAM:
   681                           	opt stack 0
   682  000033                     ??i2_turnAllOff:
   683  000033                     ?___lwdiv:
   684                           	opt stack 0
   685  000033                     ?i2___wmul:
   686                           	opt stack 0
   687  000033                     off@row:
   688                           	opt stack 0
   689  000033                     i2on@row:
   690                           	opt stack 0
   691  000033                     ___lwdiv@dividend:
   692                           	opt stack 0
   693  000033                     i2___wmul@multiplier:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x0
   697  000033                     	ds	1
   698  000034                     ??_off:
   699  000034                     ??i2_on:
   700                           
   701                           ; 1 bytes @ 0x1
   702  000034                     	ds	1
   703  000035                     i2turnAllOff@i:
   704                           	opt stack 0
   705  000035                     ___lwdiv@divisor:
   706                           	opt stack 0
   707  000035                     i2___wmul@multiplicand:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x2
   711  000035                     	ds	1
   712  000036                     off@column:
   713                           	opt stack 0
   714  000036                     i2on@column:
   715                           	opt stack 0
   716  000036                     i2turnAllOff@j:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x3
   720  000036                     	ds	1
   721  000037                     i2drawSymbol@offSetX:
   722                           	opt stack 0
   723  000037                     ___lwdiv@quotient:
   724                           	opt stack 0
   725  000037                     i2___wmul@product:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x4
   729  000037                     	ds	1
   730  000038                     
   731                           ; 1 bytes @ 0x5
   732  000038                     	ds	1
   733  000039                     ___lwdiv@counter:
   734                           	opt stack 0
   735  000039                     i2delaySeconds@numberOfSeconds:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x6
   739  000039                     	ds	2
   740  00003B                     ??i2_delaySeconds:
   741                           
   742                           ; 1 bytes @ 0x8
   743  00003B                     	ds	1
   744  00003C                     i2delaySeconds@i:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x9
   748  00003C                     	ds	2
   749  00003E                     ??_ISR:
   750  00003E                     
   751                           ; 1 bytes @ 0xB
   752  00003E                     	ds	14
   753  00004C                     ISR@ADvalue:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x19
   757  00004C                     	ds	2
   758  00004E                     ISR@value:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x1B
   762  00004E                     	ds	1
   763  00004F                     ??_turnAllOff:
   764  00004F                     ??_setColHigh:
   765  00004F                     ??_setRowHigh:
   766  00004F                     ??_initializeLED:
   767  00004F                     on@row:
   768                           	opt stack 0
   769  00004F                     ___wmul@product:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x1C
   773  00004F                     	ds	1
   774  000050                     ??_on:
   775                           
   776                           ; 1 bytes @ 0x1D
   777  000050                     	ds	1
   778  000051                     ??_delaySeconds:
   779  000051                     setColHigh@column:
   780                           	opt stack 0
   781  000051                     setRowHigh@row:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x1E
   785  000051                     	ds	1
   786  000052                     tblptru	equ	0xFF8
   787                           tblptrh	equ	0xFF7
   788                           tblptrl	equ	0xFF6
   789                           tablat	equ	0xFF5
   790                           postinc0	equ	0xFEE
   791                           wreg	equ	0xFE8
   792                           postdec1	equ	0xFE5
   793                           fsr1l	equ	0xFE1
   794                           
   795                           ; 1 bytes @ 0x1F
   796 ;;
   797 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   798 ;;
   799 ;; *************** function _main *****************
   800 ;; Defined at:
   801 ;;		line 350 in file "main.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  GO_SYMBOL       1    0        const unsigned char 
   806 ;;  ONE_SYMBOL      1    0        const unsigned char 
   807 ;;  TWO_SYMBOL      1    0        const unsigned char 
   808 ;;  THREE_SYMBOL    1    0        const unsigned char 
   809 ;;  HELLO_SYMBOL    1    0        const unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   819 ;;      Params:         0       0       0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0
   822 ;;      Totals:         0       0       0       0       0       0       0
   823 ;;Total ram usage:        0 bytes
   824 ;; Hardware stack levels required when called:    9
   825 ;; This function calls:
   826 ;;		_initialize
   827 ;;		_initializeLED
   828 ;;		_initializePong
   829 ;;		_refresh
   830 ;; This function is called by:
   831 ;;		Startup code after reset
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text0
   836  000CF8                     __ptext0:
   837                           	opt stack 0
   838  000CF8                     _main:
   839                           	opt stack 22
   840                           
   841                           ;main.c: 352: initializeLED();
   842                           
   843                           ;incstack = 0
   844  000CF8  ECC3  F003         	call	_initializeLED	;wreg free
   845                           
   846                           ;main.c: 353: initializePong();
   847  000CFC  EC8C  F006         	call	_initializePong	;wreg free
   848                           
   849                           ;main.c: 354: initialize();
   850  000D00  EC61  F004         	call	_initialize	;wreg free
   851  000D04                     l2191:
   852  000D04  ECF6  F002         	call	_refresh	;wreg free
   853  000D08  D7FD               	goto	l2191
   854  000D0A                     __end_of_main:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           postdec1	equ	0xFE5
   863                           fsr1l	equ	0xFE1
   864                           
   865 ;; *************** function _refresh *****************
   866 ;; Defined at:
   867 ;;		line 168 in file "Source/LED-API.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  theRow          1    4[BANK2 ] unsigned char 
   872 ;;  theCol          1    3[BANK2 ] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   882 ;;      Params:         0       0       0       0       0       0       0
   883 ;;      Locals:         0       0       0       2       0       0       0
   884 ;;      Temps:          0       0       0       3       0       0       0
   885 ;;      Totals:         0       0       0       5       0       0       0
   886 ;;Total ram usage:        5 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    6
   889 ;; This function calls:
   890 ;;		_allOff
   891 ;;		_setColHigh
   892 ;;		_setRowHigh
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text1
   899  0005EC                     __ptext1:
   900                           	opt stack 0
   901  0005EC                     _refresh:
   902                           	opt stack 24
   903                           
   904                           ;LED-API.c: 170: for (unsigned char theCol = 0; theCol < 8; theCol++) {
   905                           
   906                           ;incstack = 0
   907  0005EC  0E00               	movlw	0
   908  0005EE  0102               	movlb	2	; () banked
   909  0005F0  6F03               	movwf	refresh@theCol& (0+255),b
   910  0005F2                     l2153:
   911                           
   912                           ; BSR set to: 2
   913  0005F2  0E07               	movlw	7
   914  0005F4  0102               	movlb	2	; () banked
   915  0005F6  6503               	cpfsgt	refresh@theCol& (0+255),b
   916  0005F8  D001               	goto	l2157
   917  0005FA  0012               	return	
   918  0005FC                     l2157:
   919                           
   920                           ; BSR set to: 2
   921                           ;LED-API.c: 172: for (unsigned char theRow = 0; theRow < 16; theRow++) {
   922  0005FC  0E00               	movlw	0
   923  0005FE  0102               	movlb	2	; () banked
   924  000600  6F04               	movwf	refresh@theRow& (0+255),b
   925  000602                     l2159:
   926                           
   927                           ; BSR set to: 2
   928  000602  0E0F               	movlw	15
   929  000604  0102               	movlb	2	; () banked
   930  000606  6504               	cpfsgt	refresh@theRow& (0+255),b
   931  000608  D001               	goto	l2163
   932  00060A  D024               	goto	l2171
   933  00060C                     l2163:
   934                           
   935                           ; BSR set to: 2
   936                           ;LED-API.c: 174: if (pixels[theCol][theRow] == 1)
   937  00060C  0102               	movlb	2	; () banked
   938  00060E  5103               	movf	refresh@theCol& (0+255),w,b
   939  000610  0D10               	mullw	16
   940  000612  0E80               	movlw	low _pixels
   941  000614  0102               	movlb	2	; () banked
   942  000616  6F00               	movwf	??_refresh& (0+255),b
   943  000618  0E00               	movlw	high _pixels
   944  00061A  0102               	movlb	2	; () banked
   945  00061C  6F01               	movwf	(??_refresh+1)& (0+255),b
   946  00061E  50F3               	movf	prodl,w,c
   947  000620  0102               	movlb	2	; () banked
   948  000622  2700               	addwf	??_refresh& (0+255),f,b
   949  000624  50F4               	movf	prodh,w,c
   950  000626  0102               	movlb	2	; () banked
   951  000628  2301               	addwfc	(??_refresh+1)& (0+255),f,b
   952  00062A  0102               	movlb	2	; () banked
   953  00062C  5104               	movf	refresh@theRow& (0+255),w,b
   954  00062E  0D01               	mullw	1
   955  000630  50F3               	movf	prodl,w,c
   956  000632  0102               	movlb	2	; () banked
   957  000634  2500               	addwf	??_refresh& (0+255),w,b
   958  000636  6ED9               	movwf	fsr2l,c
   959  000638  50F4               	movf	prodh,w,c
   960  00063A  0102               	movlb	2	; () banked
   961  00063C  2101               	addwfc	(??_refresh+1)& (0+255),w,b
   962  00063E  6EDA               	movwf	fsr2h,c
   963  000640  04DE               	decf	postinc2,w,c
   964  000642  A4D8               	btfss	status,2,c
   965  000644  D004               	goto	l2167
   966                           
   967                           ; BSR set to: 2
   968                           ;LED-API.c: 175: setRowHigh(theRow);
   969  000646  0102               	movlb	2	; () banked
   970  000648  5104               	movf	refresh@theRow& (0+255),w,b
   971  00064A  ECBF  F005         	call	_setRowHigh
   972  00064E                     l2167:
   973  00064E  0102               	movlb	2	; () banked
   974  000650  2B04               	incf	refresh@theRow& (0+255),f,b
   975  000652  D7D7               	goto	l2159
   976  000654                     l2171:
   977                           
   978                           ; BSR set to: 2
   979                           ;LED-API.c: 176: }
   980                           ;LED-API.c: 180: setColHigh(theCol);
   981  000654  0102               	movlb	2	; () banked
   982  000656  5103               	movf	refresh@theCol& (0+255),w,b
   983  000658  EC6E  F006         	call	_setColHigh
   984                           
   985                           ;LED-API.c: 181: _delay((unsigned long)((500)*(32000000/4000000.0)));
   986  00065C  0E06               	movlw	6
   987  00065E  0102               	movlb	2	; () banked
   988  000660  6F00               	movwf	??_refresh& (0+255),b
   989  000662  0E30               	movlw	48
   990  000664                     u1847:
   991  000664  2EE8               	decfsz	wreg,f,c
   992  000666  D7FE               	goto	u1847
   993  000668  2F00               	decfsz	??_refresh& (0+255),f,b
   994  00066A  D7FC               	goto	u1847
   995  00066C  D000               	nop2	
   996                           
   997                           ;LED-API.c: 182: allOff();
   998  00066E  EC85  F006         	call	_allOff	;wreg free
   999  000672  0102               	movlb	2	; () banked
  1000  000674  2B03               	incf	refresh@theCol& (0+255),f,b
  1001  000676  D7BD               	goto	l2153
  1002  000678                     __end_of_refresh:
  1003                           	opt stack 0
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           prodh	equ	0xFF4
  1009                           prodl	equ	0xFF3
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           postinc2	equ	0xFDE
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _setRowHigh *****************
  1020 ;; Defined at:
  1021 ;;		line 24 in file "Source/LED-API.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  row             1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  row             1   30[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1035 ;;      Params:         0       0       0       0       0       0       0
  1036 ;;      Locals:         1       0       0       0       0       0       0
  1037 ;;      Temps:          2       0       0       0       0       0       0
  1038 ;;      Totals:         3       0       0       0       0       0       0
  1039 ;;Total ram usage:        3 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    5
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_refresh
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text2
  1050  000B7E                     __ptext2:
  1051                           	opt stack 0
  1052  000B7E                     _setRowHigh:
  1053                           	opt stack 24
  1054                           
  1055                           ; BSR set to: 2
  1056                           ;incstack = 0
  1057                           ;setRowHigh@row stored from wreg
  1058  000B7E  6E51               	movwf	setRowHigh@row,c
  1059                           
  1060                           ;LED-API.c: 25: if(row < 8)
  1061  000B80  0E08               	movlw	8
  1062  000B82  6051               	cpfslt	setRowHigh@row,c
  1063  000B84  D00D               	goto	l2105
  1064                           
  1065                           ;LED-API.c: 26: LATC |= (1 << row);
  1066  000B86  C051  F04F         	movff	setRowHigh@row,??_setRowHigh
  1067  000B8A  0E01               	movlw	1
  1068  000B8C  6E50               	movwf	(??_setRowHigh+1)& (0+255),c
  1069  000B8E  2A4F               	incf	??_setRowHigh,f,c
  1070  000B90  D002               	goto	u1724
  1071  000B92                     u1725:
  1072  000B92  90D8               	bcf	status,0,c
  1073  000B94  3650               	rlcf	??_setRowHigh+1,f,c
  1074  000B96                     u1724:
  1075  000B96  2E4F               	decfsz	??_setRowHigh,f,c
  1076  000B98  D7FC               	goto	u1725
  1077  000B9A  5050               	movf	??_setRowHigh+1,w,c
  1078  000B9C  128B               	iorwf	3979,f,c	;volatile
  1079  000B9E  0012               	return	
  1080  000BA0                     l2105:
  1081                           
  1082                           ;LED-API.c: 27: else
  1083                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  1084  000BA0  C051  F04F         	movff	setRowHigh@row,??_setRowHigh
  1085  000BA4  0EF8               	movlw	-8
  1086  000BA6  264F               	addwf	??_setRowHigh,f,c
  1087  000BA8  0E01               	movlw	1
  1088  000BAA  6E50               	movwf	(??_setRowHigh+1)& (0+255),c
  1089  000BAC  2A4F               	incf	??_setRowHigh,f,c
  1090  000BAE  D002               	goto	u1734
  1091  000BB0                     u1735:
  1092  000BB0  90D8               	bcf	status,0,c
  1093  000BB2  3650               	rlcf	??_setRowHigh+1,f,c
  1094  000BB4                     u1734:
  1095  000BB4  2E4F               	decfsz	??_setRowHigh,f,c
  1096  000BB6  D7FC               	goto	u1735
  1097  000BB8  5050               	movf	??_setRowHigh+1,w,c
  1098  000BBA  128C               	iorwf	3980,f,c	;volatile
  1099  000BBC  0012               	return	
  1100  000BBE                     __end_of_setRowHigh:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           prodh	equ	0xFF4
  1107                           prodl	equ	0xFF3
  1108                           postinc0	equ	0xFEE
  1109                           wreg	equ	0xFE8
  1110                           postdec1	equ	0xFE5
  1111                           fsr1l	equ	0xFE1
  1112                           postinc2	equ	0xFDE
  1113                           fsr2h	equ	0xFDA
  1114                           fsr2l	equ	0xFD9
  1115                           status	equ	0xFD8
  1116                           
  1117 ;; *************** function _setColHigh *****************
  1118 ;; Defined at:
  1119 ;;		line 20 in file "Source/LED-API.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  column          1    wreg     unsigned char 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  column          1   30[COMRAM] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1133 ;;      Params:         0       0       0       0       0       0       0
  1134 ;;      Locals:         1       0       0       0       0       0       0
  1135 ;;      Temps:          2       0       0       0       0       0       0
  1136 ;;      Totals:         3       0       0       0       0       0       0
  1137 ;;Total ram usage:        3 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    5
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_refresh
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text3
  1148  000CDC                     __ptext3:
  1149                           	opt stack 0
  1150  000CDC                     _setColHigh:
  1151                           	opt stack 24
  1152                           
  1153                           ;incstack = 0
  1154                           ;setColHigh@column stored from wreg
  1155  000CDC  6E51               	movwf	setColHigh@column,c
  1156                           
  1157                           ;LED-API.c: 21: LATA |= (1 << column);
  1158  000CDE  C051  F04F         	movff	setColHigh@column,??_setColHigh
  1159  000CE2  0E01               	movlw	1
  1160  000CE4  6E50               	movwf	(??_setColHigh+1)& (0+255),c
  1161  000CE6  2A4F               	incf	??_setColHigh,f,c
  1162  000CE8  D002               	goto	u1704
  1163  000CEA                     u1705:
  1164  000CEA  90D8               	bcf	status,0,c
  1165  000CEC  3650               	rlcf	??_setColHigh+1,f,c
  1166  000CEE                     u1704:
  1167  000CEE  2E4F               	decfsz	??_setColHigh,f,c
  1168  000CF0  D7FC               	goto	u1705
  1169  000CF2  5050               	movf	??_setColHigh+1,w,c
  1170  000CF4  1289               	iorwf	3977,f,c	;volatile
  1171  000CF6  0012               	return		;funcret
  1172  000CF8                     __end_of_setColHigh:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           prodh	equ	0xFF4
  1179                           prodl	equ	0xFF3
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1l	equ	0xFE1
  1184                           postinc2	equ	0xFDE
  1185                           fsr2h	equ	0xFDA
  1186                           fsr2l	equ	0xFD9
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function _allOff *****************
  1190 ;; Defined at:
  1191 ;;		line 162 in file "Source/LED-API.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1205 ;;      Params:         0       0       0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0
  1208 ;;      Totals:         0       0       0       0       0       0       0
  1209 ;;Total ram usage:        0 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    5
  1212 ;; This function calls:
  1213 ;;		Nothing
  1214 ;; This function is called by:
  1215 ;;		_refresh
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text4
  1220  000D0A                     __ptext4:
  1221                           	opt stack 0
  1222  000D0A                     _allOff:
  1223                           	opt stack 24
  1224                           
  1225                           ;LED-API.c: 163: LATA = 0;
  1226                           
  1227                           ;incstack = 0
  1228  000D0A  0E00               	movlw	0
  1229  000D0C  6E89               	movwf	3977,c	;volatile
  1230                           
  1231                           ;LED-API.c: 164: LATC = 0;
  1232  000D0E  0E00               	movlw	0
  1233  000D10  6E8B               	movwf	3979,c	;volatile
  1234                           
  1235                           ;LED-API.c: 165: LATD = 0;
  1236  000D12  0E00               	movlw	0
  1237  000D14  6E8C               	movwf	3980,c	;volatile
  1238  000D16  0012               	return		;funcret
  1239  000D18                     __end_of_allOff:
  1240                           	opt stack 0
  1241                           tblptru	equ	0xFF8
  1242                           tblptrh	equ	0xFF7
  1243                           tblptrl	equ	0xFF6
  1244                           tablat	equ	0xFF5
  1245                           prodh	equ	0xFF4
  1246                           prodl	equ	0xFF3
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           postdec1	equ	0xFE5
  1250                           fsr1l	equ	0xFE1
  1251                           postinc2	equ	0xFDE
  1252                           fsr2h	equ	0xFDA
  1253                           fsr2l	equ	0xFD9
  1254                           status	equ	0xFD8
  1255                           
  1256 ;; *************** function _initializePong *****************
  1257 ;; Defined at:
  1258 ;;		line 77 in file "main.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1272 ;;      Params:         0       0       0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0
  1275 ;;      Totals:         0       0       0       0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    8
  1279 ;; This function calls:
  1280 ;;		_startPong
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text5
  1287  000D18                     __ptext5:
  1288                           	opt stack 0
  1289  000D18                     _initializePong:
  1290                           	opt stack 22
  1291                           
  1292                           ;main.c: 82: _p1.lives = 2;
  1293                           
  1294                           ;incstack = 0
  1295  000D18  0E02               	movlw	2
  1296  000D1A  6E56               	movwf	__p1+4,c
  1297                           
  1298                           ;main.c: 83: _p2.lives = 2;
  1299  000D1C  0E02               	movlw	2
  1300  000D1E  6E5B               	movwf	__p2+4,c
  1301                           
  1302                           ;main.c: 85: startPong();
  1303  000D20  EC0F  F005         	call	_startPong	;wreg free
  1304  000D24  0012               	return		;funcret
  1305  000D26                     __end_of_initializePong:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           prodh	equ	0xFF4
  1312                           prodl	equ	0xFF3
  1313                           postinc0	equ	0xFEE
  1314                           wreg	equ	0xFE8
  1315                           postdec1	equ	0xFE5
  1316                           fsr1l	equ	0xFE1
  1317                           postinc2	equ	0xFDE
  1318                           fsr2h	equ	0xFDA
  1319                           fsr2l	equ	0xFD9
  1320                           status	equ	0xFD8
  1321                           
  1322 ;; *************** function _startPong *****************
  1323 ;; Defined at:
  1324 ;;		line 58 in file "main.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1338 ;;      Params:         0       0       0       0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0
  1341 ;;      Totals:         0       0       0       0       0       0       0
  1342 ;;Total ram usage:        0 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    7
  1345 ;; This function calls:
  1346 ;;		_delaySeconds
  1347 ;;		_drawSymbol
  1348 ;;		_turnAllOff
  1349 ;; This function is called by:
  1350 ;;		_initializePong
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text6
  1355  000A1E                     __ptext6:
  1356                           	opt stack 0
  1357  000A1E                     _startPong:
  1358                           	opt stack 22
  1359                           
  1360                           ;main.c: 61: turnAllOff();
  1361                           
  1362                           ;incstack = 0
  1363  000A1E  EC8E  F004         	call	_turnAllOff	;wreg free
  1364                           
  1365                           ;main.c: 62: drawSymbol(_p1.lives, 0);
  1366  000A22  0E00               	movlw	0
  1367  000A24  0102               	movlb	2	; () banked
  1368  000A26  6F02               	movwf	drawSymbol@offSetX& (0+255),b
  1369  000A28  5056               	movf	__p1+4,w,c
  1370  000A2A  EC0D  F000         	call	_drawSymbol
  1371                           
  1372                           ;main.c: 63: drawSymbol(_p2.lives, 8);
  1373  000A2E  0E08               	movlw	8
  1374  000A30  0102               	movlb	2	; () banked
  1375  000A32  6F02               	movwf	drawSymbol@offSetX& (0+255),b
  1376  000A34  505B               	movf	__p2+4,w,c
  1377  000A36  EC0D  F000         	call	_drawSymbol
  1378  000A3A                     l2115:
  1379  000A3A  0E00               	movlw	0
  1380  000A3C  0102               	movlb	2	; () banked
  1381  000A3E  6F05               	movwf	(delaySeconds@numberOfSeconds+1)& (0+255),b
  1382  000A40  0E02               	movlw	2
  1383  000A42  6F04               	movwf	delaySeconds@numberOfSeconds& (0+255),b
  1384  000A44  ECBA  F004         	call	_delaySeconds	;wreg free
  1385  000A48  0102               	movlb	2	; () banked
  1386  000A4A  A0D8               	btfss	status,0,c
  1387  000A4C  D7F6               	goto	l2115
  1388                           
  1389                           ; BSR set to: 2
  1390                           ;main.c: 65: turnAllOff();
  1391                           
  1392                           ; BSR set to: 2
  1393  000A4E  EC8E  F004         	call	_turnAllOff	;wreg free
  1394                           
  1395                           ;main.c: 68: _ball.bDirection = 3;
  1396  000A52  0E03               	movlw	3
  1397  000A54  6E5E               	movwf	__ball+2,c
  1398                           
  1399                           ;main.c: 69: _ball.bPos[0] = 2;
  1400  000A56  0E02               	movlw	2
  1401  000A58  6E5C               	movwf	__ball,c
  1402                           
  1403                           ;main.c: 70: _ball.bPos[1] = 4;
  1404  000A5A  0E04               	movlw	4
  1405  000A5C  6E5D               	movwf	__ball+1,c
  1406                           
  1407                           ;main.c: 72: _nextPos[0] = _ball.bPos[0];
  1408  000A5E  C05C  F05F         	movff	__ball,__nextPos
  1409                           
  1410                           ;main.c: 73: _nextPos[1] = _ball.bPos[1];
  1411  000A62  C05D  F060         	movff	__ball+1,__nextPos+1
  1412  000A66  0012               	return		;funcret
  1413  000A68                     __end_of_startPong:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           prodh	equ	0xFF4
  1420                           prodl	equ	0xFF3
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           postdec1	equ	0xFE5
  1424                           fsr1l	equ	0xFE1
  1425                           postinc2	equ	0xFDE
  1426                           fsr2h	equ	0xFDA
  1427                           fsr2l	equ	0xFD9
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _drawSymbol *****************
  1431 ;; Defined at:
  1432 ;;		line 89 in file "Source/LED-API.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  chosenSymbol    1    wreg     unsigned char 
  1435 ;;  offSetX         1    2[BANK2 ] unsigned char 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  chosenSymbol    1  215[BANK2 ] unsigned char 
  1438 ;;  i               1  216[BANK2 ] unsigned char 
  1439 ;;  i               1  220[BANK2 ] unsigned char 
  1440 ;;  i               1  219[BANK2 ] unsigned char 
  1441 ;;  i               1  218[BANK2 ] unsigned char 
  1442 ;;  i               1  217[BANK2 ] unsigned char 
  1443 ;;  symbolPlay     68   71[BANK2 ] unsigned char [2][34]
  1444 ;;  symbolGo       68    3[BANK2 ] unsigned char [2][34]
  1445 ;;  symbolTwo      28  139[BANK2 ] unsigned char [2][14]
  1446 ;;  symbolThree    24  191[BANK2 ] unsigned char [2][12]
  1447 ;;  symbolOne      24  167[BANK2 ] unsigned char [2][12]
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1457 ;;      Params:         0       0       0       1       0       0       0
  1458 ;;      Locals:         0       0       0     218       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0
  1460 ;;      Totals:         0       0       0     219       0       0       0
  1461 ;;Total ram usage:      219 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    6
  1464 ;; This function calls:
  1465 ;;		_on
  1466 ;;		_turnAllOff
  1467 ;; This function is called by:
  1468 ;;		_startPong
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text7
  1473  00001A                     __ptext7:
  1474                           	opt stack 0
  1475  00001A                     _drawSymbol:
  1476                           	opt stack 22
  1477                           
  1478                           ;incstack = 0
  1479                           ;drawSymbol@chosenSymbol stored from wreg
  1480  00001A  0102               	movlb	2	; () banked
  1481  00001C  6FD7               	movwf	drawSymbol@chosenSymbol& (0+255),b
  1482                           
  1483                           ;LED-API.c: 91: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  1484  00001E  EE20  F001         	lfsr	2,drawSymbol@F3226
  1485  000022  EE12  F0A7         	lfsr	1,drawSymbol@symbolOne
  1486  000026  0E17               	movlw	23
  1487  000028                     u1541:
  1488  000028  CFDB FFE3          	movff	plusw2,plusw1
  1489  00002C  06E8               	decf	wreg,f,c
  1490  00002E  E2FC               	bc	u1541
  1491                           
  1492                           ;LED-API.c: 92: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  1493  000030  EE22  F0DD         	lfsr	2,drawSymbol@F3229
  1494  000034  EE12  F08B         	lfsr	1,drawSymbol@symbolTwo
  1495  000038  0E1B               	movlw	27
  1496  00003A                     u1551:
  1497  00003A  CFDB FFE3          	movff	plusw2,plusw1
  1498  00003E  06E8               	decf	wreg,f,c
  1499  000040  E2FC               	bc	u1551
  1500                           
  1501                           ;LED-API.c: 93: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  1502  000042  EE20  F019         	lfsr	2,drawSymbol@F3232
  1503  000046  EE12  F0BF         	lfsr	1,drawSymbol@symbolThree
  1504  00004A  0E17               	movlw	23
  1505  00004C                     u1561:
  1506  00004C  CFDB FFE3          	movff	plusw2,plusw1
  1507  000050  06E8               	decf	wreg,f,c
  1508  000052  E2FC               	bc	u1561
  1509                           
  1510                           ;LED-API.c: 95: char symbolPlay[34][2] = {
  1511                           ;LED-API.c: 96: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  1512                           ;LED-API.c: 97: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  1513                           ;LED-API.c: 98: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  1514                           ;LED-API.c: 99: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  1515  000054  EE23  F000         	lfsr	2,drawSymbol@F3235
  1516  000058  EE12  F047         	lfsr	1,drawSymbol@symbolPlay
  1517  00005C  0E43               	movlw	67
  1518  00005E                     u1571:
  1519  00005E  CFDB FFE3          	movff	plusw2,plusw1
  1520  000062  06E8               	decf	wreg,f,c
  1521  000064  E2FC               	bc	u1571
  1522                           
  1523                           ;LED-API.c: 101: char symbolGo[34][2] = {
  1524                           ;LED-API.c: 102: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0}
      +                          ,{5,0},{6,1},{5,2},{4,2},
  1525                           ;LED-API.c: 103: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},
      +                          {13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  1526  000066  EE23  F044         	lfsr	2,drawSymbol@F3238
  1527  00006A  EE12  F003         	lfsr	1,drawSymbol@symbolGo
  1528  00006E  0E43               	movlw	67
  1529  000070                     u1581:
  1530  000070  CFDB FFE3          	movff	plusw2,plusw1
  1531  000074  06E8               	decf	wreg,f,c
  1532  000076  E2FC               	bc	u1581
  1533                           
  1534                           ;LED-API.c: 105: switch(chosenSymbol)
  1535  000078  D0AF               	goto	l2085
  1536  00007A                     l2021:
  1537                           
  1538                           ;LED-API.c: 110: for(unsigned char i = 0; i < 12; i++)
  1539  00007A  0E00               	movlw	0
  1540  00007C  0102               	movlb	2	; () banked
  1541  00007E  6FD9               	movwf	drawSymbol@i& (0+255),b
  1542  000080                     l2023:
  1543                           
  1544                           ; BSR set to: 2
  1545  000080  0E0B               	movlw	11
  1546  000082  0102               	movlb	2	; () banked
  1547  000084  65D9               	cpfsgt	drawSymbol@i& (0+255),b
  1548  000086  D001               	goto	l2027
  1549  000088  0012               	return	
  1550  00008A                     l2027:
  1551                           
  1552                           ; BSR set to: 2
  1553                           ;LED-API.c: 111: {
  1554                           ;LED-API.c: 112: on(symbolOne[i][0] + offSetX, symbolOne[i][1]);
  1555  00008A  0102               	movlb	2	; () banked
  1556  00008C  51D9               	movf	drawSymbol@i& (0+255),w,b
  1557  00008E  0D02               	mullw	2
  1558  000090  0E01               	movlw	1
  1559  000092  26F3               	addwf	prodl,f,c
  1560  000094  0E00               	movlw	0
  1561  000096  22F4               	addwfc	prodh,f,c
  1562  000098  0EA7               	movlw	low drawSymbol@symbolOne
  1563  00009A  24F3               	addwf	prodl,w,c
  1564  00009C  6ED9               	movwf	fsr2l,c
  1565  00009E  0E02               	movlw	high drawSymbol@symbolOne
  1566  0000A0  20F4               	addwfc	prodh,w,c
  1567  0000A2  6EDA               	movwf	fsr2h,c
  1568  0000A4  50DF               	movf	indf2,w,c
  1569  0000A6  6E4F               	movwf	on@row,c
  1570  0000A8  0102               	movlb	2	; () banked
  1571  0000AA  51D9               	movf	drawSymbol@i& (0+255),w,b
  1572  0000AC  0D02               	mullw	2
  1573  0000AE  0EA7               	movlw	low drawSymbol@symbolOne
  1574  0000B0  24F3               	addwf	prodl,w,c
  1575  0000B2  6ED9               	movwf	fsr2l,c
  1576  0000B4  0E02               	movlw	high drawSymbol@symbolOne
  1577  0000B6  20F4               	addwfc	prodh,w,c
  1578  0000B8  6EDA               	movwf	fsr2h,c
  1579  0000BA  50DF               	movf	indf2,w,c
  1580  0000BC  0102               	movlb	2	; () banked
  1581  0000BE  2502               	addwf	drawSymbol@offSetX& (0+255),w,b
  1582  0000C0  EC7D  F005         	call	_on
  1583  0000C4  0102               	movlb	2	; () banked
  1584  0000C6  2BD9               	incf	drawSymbol@i& (0+255),f,b
  1585  0000C8  D7DB               	goto	l2023
  1586  0000CA                     l2033:
  1587                           
  1588                           ; BSR set to: 2
  1589                           ;LED-API.c: 118: for(unsigned char i = 0; i < 14; i++)
  1590  0000CA  0E00               	movlw	0
  1591  0000CC  0102               	movlb	2	; () banked
  1592  0000CE  6FDA               	movwf	drawSymbol@i_78& (0+255),b
  1593  0000D0                     l2035:
  1594                           
  1595                           ; BSR set to: 2
  1596  0000D0  0E0D               	movlw	13
  1597  0000D2  0102               	movlb	2	; () banked
  1598  0000D4  65DA               	cpfsgt	drawSymbol@i_78& (0+255),b
  1599  0000D6  D001               	goto	l2039
  1600  0000D8  0012               	return	
  1601  0000DA                     l2039:
  1602                           
  1603                           ; BSR set to: 2
  1604                           ;LED-API.c: 119: {
  1605                           ;LED-API.c: 120: on(symbolTwo[i][0] + offSetX, symbolTwo[i][1]);
  1606  0000DA  0102               	movlb	2	; () banked
  1607  0000DC  51DA               	movf	drawSymbol@i_78& (0+255),w,b
  1608  0000DE  0D02               	mullw	2
  1609  0000E0  0E01               	movlw	1
  1610  0000E2  26F3               	addwf	prodl,f,c
  1611  0000E4  0E00               	movlw	0
  1612  0000E6  22F4               	addwfc	prodh,f,c
  1613  0000E8  0E8B               	movlw	low drawSymbol@symbolTwo
  1614  0000EA  24F3               	addwf	prodl,w,c
  1615  0000EC  6ED9               	movwf	fsr2l,c
  1616  0000EE  0E02               	movlw	high drawSymbol@symbolTwo
  1617  0000F0  20F4               	addwfc	prodh,w,c
  1618  0000F2  6EDA               	movwf	fsr2h,c
  1619  0000F4  50DF               	movf	indf2,w,c
  1620  0000F6  6E4F               	movwf	on@row,c
  1621  0000F8  0102               	movlb	2	; () banked
  1622  0000FA  51DA               	movf	drawSymbol@i_78& (0+255),w,b
  1623  0000FC  0D02               	mullw	2
  1624  0000FE  0E8B               	movlw	low drawSymbol@symbolTwo
  1625  000100  24F3               	addwf	prodl,w,c
  1626  000102  6ED9               	movwf	fsr2l,c
  1627  000104  0E02               	movlw	high drawSymbol@symbolTwo
  1628  000106  20F4               	addwfc	prodh,w,c
  1629  000108  6EDA               	movwf	fsr2h,c
  1630  00010A  50DF               	movf	indf2,w,c
  1631  00010C  0102               	movlb	2	; () banked
  1632  00010E  2502               	addwf	drawSymbol@offSetX& (0+255),w,b
  1633  000110  EC7D  F005         	call	_on
  1634  000114  0102               	movlb	2	; () banked
  1635  000116  2BDA               	incf	drawSymbol@i_78& (0+255),f,b
  1636  000118  D7DB               	goto	l2035
  1637  00011A                     l2045:
  1638                           
  1639                           ; BSR set to: 2
  1640                           ;LED-API.c: 126: for(unsigned char i = 0; i < 12; i++)
  1641  00011A  0E00               	movlw	0
  1642  00011C  0102               	movlb	2	; () banked
  1643  00011E  6FDB               	movwf	drawSymbol@i_79& (0+255),b
  1644  000120                     l2047:
  1645                           
  1646                           ; BSR set to: 2
  1647  000120  0E0B               	movlw	11
  1648  000122  0102               	movlb	2	; () banked
  1649  000124  65DB               	cpfsgt	drawSymbol@i_79& (0+255),b
  1650  000126  D001               	goto	l2051
  1651  000128  0012               	return	
  1652  00012A                     l2051:
  1653                           
  1654                           ; BSR set to: 2
  1655                           ;LED-API.c: 127: {
  1656                           ;LED-API.c: 128: on(symbolThree[i][0] + offSetX, symbolThree[i][1]);
  1657  00012A  0102               	movlb	2	; () banked
  1658  00012C  51DB               	movf	drawSymbol@i_79& (0+255),w,b
  1659  00012E  0D02               	mullw	2
  1660  000130  0E01               	movlw	1
  1661  000132  26F3               	addwf	prodl,f,c
  1662  000134  0E00               	movlw	0
  1663  000136  22F4               	addwfc	prodh,f,c
  1664  000138  0EBF               	movlw	low drawSymbol@symbolThree
  1665  00013A  24F3               	addwf	prodl,w,c
  1666  00013C  6ED9               	movwf	fsr2l,c
  1667  00013E  0E02               	movlw	high drawSymbol@symbolThree
  1668  000140  20F4               	addwfc	prodh,w,c
  1669  000142  6EDA               	movwf	fsr2h,c
  1670  000144  50DF               	movf	indf2,w,c
  1671  000146  6E4F               	movwf	on@row,c
  1672  000148  0102               	movlb	2	; () banked
  1673  00014A  51DB               	movf	drawSymbol@i_79& (0+255),w,b
  1674  00014C  0D02               	mullw	2
  1675  00014E  0EBF               	movlw	low drawSymbol@symbolThree
  1676  000150  24F3               	addwf	prodl,w,c
  1677  000152  6ED9               	movwf	fsr2l,c
  1678  000154  0E02               	movlw	high drawSymbol@symbolThree
  1679  000156  20F4               	addwfc	prodh,w,c
  1680  000158  6EDA               	movwf	fsr2h,c
  1681  00015A  50DF               	movf	indf2,w,c
  1682  00015C  0102               	movlb	2	; () banked
  1683  00015E  2502               	addwf	drawSymbol@offSetX& (0+255),w,b
  1684  000160  EC7D  F005         	call	_on
  1685  000164  0102               	movlb	2	; () banked
  1686  000166  2BDB               	incf	drawSymbol@i_79& (0+255),f,b
  1687  000168  D7DB               	goto	l2047
  1688  00016A                     l2057:
  1689                           
  1690                           ; BSR set to: 2
  1691                           ;LED-API.c: 134: turnAllOff();
  1692  00016A  EC8E  F004         	call	_turnAllOff	;wreg free
  1693                           
  1694                           ;LED-API.c: 135: for(unsigned char i = 0; i < 34; i++)
  1695  00016E  0E00               	movlw	0
  1696  000170  0102               	movlb	2	; () banked
  1697  000172  6FDC               	movwf	drawSymbol@i_80& (0+255),b
  1698  000174                     l2061:
  1699                           
  1700                           ; BSR set to: 2
  1701  000174  0E21               	movlw	33
  1702  000176  0102               	movlb	2	; () banked
  1703  000178  65DC               	cpfsgt	drawSymbol@i_80& (0+255),b
  1704  00017A  D001               	goto	l2065
  1705  00017C  0012               	return	
  1706  00017E                     l2065:
  1707                           
  1708                           ; BSR set to: 2
  1709                           ;LED-API.c: 136: {
  1710                           ;LED-API.c: 137: on(symbolPlay[i][0] + offSetX, symbolPlay[i][1]);
  1711  00017E  0102               	movlb	2	; () banked
  1712  000180  51DC               	movf	drawSymbol@i_80& (0+255),w,b
  1713  000182  0D02               	mullw	2
  1714  000184  0E01               	movlw	1
  1715  000186  26F3               	addwf	prodl,f,c
  1716  000188  0E00               	movlw	0
  1717  00018A  22F4               	addwfc	prodh,f,c
  1718  00018C  0E47               	movlw	low drawSymbol@symbolPlay
  1719  00018E  24F3               	addwf	prodl,w,c
  1720  000190  6ED9               	movwf	fsr2l,c
  1721  000192  0E02               	movlw	high drawSymbol@symbolPlay
  1722  000194  20F4               	addwfc	prodh,w,c
  1723  000196  6EDA               	movwf	fsr2h,c
  1724  000198  50DF               	movf	indf2,w,c
  1725  00019A  6E4F               	movwf	on@row,c
  1726  00019C  0102               	movlb	2	; () banked
  1727  00019E  51DC               	movf	drawSymbol@i_80& (0+255),w,b
  1728  0001A0  0D02               	mullw	2
  1729  0001A2  0E47               	movlw	low drawSymbol@symbolPlay
  1730  0001A4  24F3               	addwf	prodl,w,c
  1731  0001A6  6ED9               	movwf	fsr2l,c
  1732  0001A8  0E02               	movlw	high drawSymbol@symbolPlay
  1733  0001AA  20F4               	addwfc	prodh,w,c
  1734  0001AC  6EDA               	movwf	fsr2h,c
  1735  0001AE  50DF               	movf	indf2,w,c
  1736  0001B0  0102               	movlb	2	; () banked
  1737  0001B2  2502               	addwf	drawSymbol@offSetX& (0+255),w,b
  1738  0001B4  EC7D  F005         	call	_on
  1739  0001B8  0102               	movlb	2	; () banked
  1740  0001BA  2BDC               	incf	drawSymbol@i_80& (0+255),f,b
  1741  0001BC  D7DB               	goto	l2061
  1742  0001BE                     l2071:
  1743                           
  1744                           ; BSR set to: 2
  1745                           ;LED-API.c: 143: turnAllOff();
  1746  0001BE  EC8E  F004         	call	_turnAllOff	;wreg free
  1747                           
  1748                           ;LED-API.c: 144: for(unsigned char i = 0; i < 34; i++)
  1749  0001C2  0E00               	movlw	0
  1750  0001C4  0102               	movlb	2	; () banked
  1751  0001C6  6FD8               	movwf	drawSymbol@i_81& (0+255),b
  1752  0001C8                     l2075:
  1753                           
  1754                           ; BSR set to: 2
  1755  0001C8  0E21               	movlw	33
  1756  0001CA  0102               	movlb	2	; () banked
  1757  0001CC  65D8               	cpfsgt	drawSymbol@i_81& (0+255),b
  1758  0001CE  D001               	goto	l2079
  1759  0001D0  0012               	return	
  1760  0001D2                     l2079:
  1761                           
  1762                           ; BSR set to: 2
  1763                           ;LED-API.c: 145: {
  1764  0001D2  0102               	movlb	2	; () banked
  1765  0001D4  2BD8               	incf	drawSymbol@i_81& (0+255),f,b
  1766  0001D6  D7F8               	goto	l2075
  1767  0001D8                     l2085:
  1768  0001D8  0102               	movlb	2	; () banked
  1769  0001DA  51D7               	movf	drawSymbol@chosenSymbol& (0+255),w,b
  1770                           
  1771                           ; Switch size 1, requested type "space"
  1772                           ; Number of cases is 5, Range of values is 1 to 5
  1773                           ; switch strategies available:
  1774                           ; Name         Instructions Cycles
  1775                           ; simple_byte           16     9 (average)
  1776                           ;	Chosen strategy is simple_byte
  1777  0001DC  0A01               	xorlw	1	; case 1
  1778  0001DE  B4D8               	btfsc	status,2,c
  1779  0001E0  D74C               	goto	l2021
  1780  0001E2  0A03               	xorlw	3	; case 2
  1781  0001E4  B4D8               	btfsc	status,2,c
  1782  0001E6  D771               	goto	l2033
  1783  0001E8  0A01               	xorlw	1	; case 3
  1784  0001EA  B4D8               	btfsc	status,2,c
  1785  0001EC  D796               	goto	l2045
  1786  0001EE  0A07               	xorlw	7	; case 4
  1787  0001F0  B4D8               	btfsc	status,2,c
  1788  0001F2  D7BB               	goto	l2057
  1789  0001F4  0A01               	xorlw	1	; case 5
  1790  0001F6  A4D8               	btfss	status,2,c
  1791  0001F8  0012               	return	
  1792  0001FA  D7E1               	goto	l2071
  1793  0001FC                     __end_of_drawSymbol:
  1794                           	opt stack 0
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           prodh	equ	0xFF4
  1800                           prodl	equ	0xFF3
  1801                           postinc0	equ	0xFEE
  1802                           wreg	equ	0xFE8
  1803                           postdec1	equ	0xFE5
  1804                           plusw1	equ	0xFE3
  1805                           fsr1l	equ	0xFE1
  1806                           indf2	equ	0xFDF
  1807                           postinc2	equ	0xFDE
  1808                           plusw2	equ	0xFDB
  1809                           fsr2h	equ	0xFDA
  1810                           fsr2l	equ	0xFD9
  1811                           status	equ	0xFD8
  1812                           
  1813 ;; *************** function _turnAllOff *****************
  1814 ;; Defined at:
  1815 ;;		line 152 in file "Source/LED-API.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  j               1    1[BANK2 ] unsigned char 
  1820 ;;  i               1    0[BANK2 ] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1830 ;;      Params:         0       0       0       0       0       0       0
  1831 ;;      Locals:         0       0       0       2       0       0       0
  1832 ;;      Temps:          2       0       0       0       0       0       0
  1833 ;;      Totals:         2       0       0       2       0       0       0
  1834 ;;Total ram usage:        4 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    5
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_drawSymbol
  1841 ;;		_startPong
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text8
  1846  00091C                     __ptext8:
  1847                           	opt stack 0
  1848  00091C                     _turnAllOff:
  1849                           	opt stack 23
  1850                           
  1851                           ;LED-API.c: 155: for (unsigned char i = 0; i < 8; i++) {
  1852                           
  1853                           ; BSR set to: 2
  1854                           ;incstack = 0
  1855  00091C  0E00               	movlw	0
  1856  00091E  0102               	movlb	2	; () banked
  1857  000920  6F00               	movwf	turnAllOff@i& (0+255),b
  1858  000922                     l1993:
  1859                           
  1860                           ; BSR set to: 2
  1861  000922  0E07               	movlw	7
  1862  000924  0102               	movlb	2	; () banked
  1863  000926  6500               	cpfsgt	turnAllOff@i& (0+255),b
  1864  000928  D001               	goto	l1997
  1865  00092A  0012               	return	
  1866  00092C                     l1997:
  1867                           
  1868                           ; BSR set to: 2
  1869                           ;LED-API.c: 156: for (unsigned char j = 0; j < 16; j++) {
  1870  00092C  0E00               	movlw	0
  1871  00092E  0102               	movlb	2	; () banked
  1872  000930  6F01               	movwf	turnAllOff@j& (0+255),b
  1873  000932                     l1999:
  1874                           
  1875                           ; BSR set to: 2
  1876  000932  0E0F               	movlw	15
  1877  000934  0102               	movlb	2	; () banked
  1878  000936  6501               	cpfsgt	turnAllOff@j& (0+255),b
  1879  000938  D001               	goto	l2003
  1880  00093A  D019               	goto	l2009
  1881  00093C                     l2003:
  1882                           
  1883                           ; BSR set to: 2
  1884                           ;LED-API.c: 157: pixels[i][j] = 0;
  1885  00093C  0102               	movlb	2	; () banked
  1886  00093E  5100               	movf	turnAllOff@i& (0+255),w,b
  1887  000940  0D10               	mullw	16
  1888  000942  0E80               	movlw	low _pixels
  1889  000944  6E4F               	movwf	??_turnAllOff& (0+255),c
  1890  000946  0E00               	movlw	high _pixels
  1891  000948  6E50               	movwf	(??_turnAllOff+1)& (0+255),c
  1892  00094A  50F3               	movf	prodl,w,c
  1893  00094C  264F               	addwf	??_turnAllOff,f,c
  1894  00094E  50F4               	movf	prodh,w,c
  1895  000950  2250               	addwfc	??_turnAllOff+1,f,c
  1896  000952  0102               	movlb	2	; () banked
  1897  000954  5101               	movf	turnAllOff@j& (0+255),w,b
  1898  000956  0D01               	mullw	1
  1899  000958  50F3               	movf	prodl,w,c
  1900  00095A  244F               	addwf	??_turnAllOff,w,c
  1901  00095C  6ED9               	movwf	fsr2l,c
  1902  00095E  50F4               	movf	prodh,w,c
  1903  000960  2050               	addwfc	??_turnAllOff+1,w,c
  1904  000962  6EDA               	movwf	fsr2h,c
  1905  000964  0E00               	movlw	0
  1906  000966  6EDF               	movwf	indf2,c
  1907                           
  1908                           ; BSR set to: 2
  1909  000968  0102               	movlb	2	; () banked
  1910  00096A  2B01               	incf	turnAllOff@j& (0+255),f,b
  1911  00096C  D7E2               	goto	l1999
  1912  00096E                     l2009:
  1913                           
  1914                           ; BSR set to: 2
  1915  00096E  0102               	movlb	2	; () banked
  1916  000970  2B00               	incf	turnAllOff@i& (0+255),f,b
  1917  000972  D7D7               	goto	l1993
  1918  000974                     __end_of_turnAllOff:
  1919                           	opt stack 0
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           prodh	equ	0xFF4
  1925                           prodl	equ	0xFF3
  1926                           postinc0	equ	0xFEE
  1927                           wreg	equ	0xFE8
  1928                           postdec1	equ	0xFE5
  1929                           plusw1	equ	0xFE3
  1930                           fsr1l	equ	0xFE1
  1931                           indf2	equ	0xFDF
  1932                           postinc2	equ	0xFDE
  1933                           plusw2	equ	0xFDB
  1934                           fsr2h	equ	0xFDA
  1935                           fsr2l	equ	0xFD9
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function _on *****************
  1939 ;; Defined at:
  1940 ;;		line 47 in file "Source/LED-API.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  column          1    wreg     unsigned char 
  1943 ;;  row             1   28[COMRAM] unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  column          1    0[BANK2 ] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1955 ;;      Params:         1       0       0       0       0       0       0
  1956 ;;      Locals:         0       0       0       1       0       0       0
  1957 ;;      Temps:          2       0       0       0       0       0       0
  1958 ;;      Totals:         3       0       0       1       0       0       0
  1959 ;;Total ram usage:        4 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    5
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_drawSymbol
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text9
  1970  000AFA                     __ptext9:
  1971                           	opt stack 0
  1972  000AFA                     _on:
  1973                           	opt stack 22
  1974                           
  1975                           ; BSR set to: 2
  1976                           ;incstack = 0
  1977                           ;on@column stored from wreg
  1978  000AFA  0102               	movlb	2	; () banked
  1979  000AFC  6F00               	movwf	on@column& (0+255),b
  1980                           
  1981                           ;LED-API.c: 49: if (row < 0 || row >= 16)
  1982  000AFE  0E0F               	movlw	15
  1983  000B00  644F               	cpfsgt	on@row,c
  1984  000B02  D001               	goto	l1985
  1985  000B04  0012               	return	
  1986  000B06                     l1985:
  1987                           
  1988                           ;LED-API.c: 51: if (column < 0 || column >= 8)
  1989  000B06  0E07               	movlw	7
  1990  000B08  0102               	movlb	2	; () banked
  1991  000B0A  6500               	cpfsgt	on@column& (0+255),b
  1992  000B0C  D001               	goto	l1989
  1993  000B0E  0012               	return	
  1994  000B10                     l1989:
  1995                           
  1996                           ; BSR set to: 2
  1997                           ;LED-API.c: 54: pixels[column][row] = 1;
  1998  000B10  0102               	movlb	2	; () banked
  1999  000B12  5100               	movf	on@column& (0+255),w,b
  2000  000B14  0D10               	mullw	16
  2001  000B16  0E80               	movlw	low _pixels
  2002  000B18  6E50               	movwf	??_on& (0+255),c
  2003  000B1A  0E00               	movlw	high _pixels
  2004  000B1C  6E51               	movwf	(??_on+1)& (0+255),c
  2005  000B1E  50F3               	movf	prodl,w,c
  2006  000B20  2650               	addwf	??_on,f,c
  2007  000B22  50F4               	movf	prodh,w,c
  2008  000B24  2251               	addwfc	??_on+1,f,c
  2009  000B26  504F               	movf	on@row,w,c
  2010  000B28  0D01               	mullw	1
  2011  000B2A  50F3               	movf	prodl,w,c
  2012  000B2C  2450               	addwf	??_on,w,c
  2013  000B2E  6ED9               	movwf	fsr2l,c
  2014  000B30  50F4               	movf	prodh,w,c
  2015  000B32  2051               	addwfc	??_on+1,w,c
  2016  000B34  6EDA               	movwf	fsr2h,c
  2017  000B36  0E01               	movlw	1
  2018  000B38  6EDF               	movwf	indf2,c
  2019  000B3A  0012               	return		;funcret
  2020  000B3C                     __end_of_on:
  2021                           	opt stack 0
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           prodh	equ	0xFF4
  2027                           prodl	equ	0xFF3
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           postdec1	equ	0xFE5
  2031                           plusw1	equ	0xFE3
  2032                           fsr1l	equ	0xFE1
  2033                           indf2	equ	0xFDF
  2034                           postinc2	equ	0xFDE
  2035                           plusw2	equ	0xFDB
  2036                           fsr2h	equ	0xFDA
  2037                           fsr2l	equ	0xFD9
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function _delaySeconds *****************
  2041 ;; Defined at:
  2042 ;;		line 49 in file "main.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  numberOfSeco    2    4[BANK2 ] int 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  i               2    6[BANK2 ] int 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;		None               void
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2056 ;;      Params:         0       0       0       2       0       0       0
  2057 ;;      Locals:         0       0       0       2       0       0       0
  2058 ;;      Temps:          1       0       0       0       0       0       0
  2059 ;;      Totals:         1       0       0       4       0       0       0
  2060 ;;Total ram usage:        5 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    6
  2063 ;; This function calls:
  2064 ;;		___wmul
  2065 ;; This function is called by:
  2066 ;;		_startPong
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text10
  2071  000974                     __ptext10:
  2072                           	opt stack 0
  2073  000974                     _delaySeconds:
  2074                           	opt stack 22
  2075                           
  2076                           ;main.c: 51: for(int i = 0; i < numberOfSeconds * 100; i++)
  2077                           
  2078                           ;incstack = 0
  2079  000974  0E00               	movlw	0
  2080  000976  0102               	movlb	2	; () banked
  2081  000978  6F07               	movwf	(delaySeconds@i+1)& (0+255),b
  2082  00097A  0E00               	movlw	0
  2083  00097C  6F06               	movwf	delaySeconds@i& (0+255),b
  2084  00097E  D00B               	goto	l2093
  2085  000980                     l2089:
  2086                           
  2087                           ; BSR set to: 2
  2088                           ;main.c: 52: _delay((unsigned long)((10)*(32000000/4000.0)));
  2089  000980  0E68               	movlw	104
  2090  000982  6E51               	movwf	??_delaySeconds& (0+255),c
  2091  000984  0EE4               	movlw	228
  2092  000986                     u1857:
  2093  000986  2EE8               	decfsz	wreg,f,c
  2094  000988  D7FE               	goto	u1857
  2095  00098A  2E51               	decfsz	??_delaySeconds& (0+255),f,c
  2096  00098C  D7FC               	goto	u1857
  2097  00098E  D000               	nop2	
  2098  000990  0102               	movlb	2	; () banked
  2099  000992  4B06               	infsnz	delaySeconds@i& (0+255),f,b
  2100  000994  2B07               	incf	(delaySeconds@i+1)& (0+255),f,b
  2101  000996                     l2093:
  2102                           
  2103                           ; BSR set to: 2
  2104  000996  C204  F200         	movff	delaySeconds@numberOfSeconds,___wmul@multiplier
  2105  00099A  C205  F201         	movff	delaySeconds@numberOfSeconds+1,___wmul@multiplier+1
  2106  00099E  0E00               	movlw	0
  2107  0009A0  0102               	movlb	2	; () banked
  2108  0009A2  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2109  0009A4  0E64               	movlw	100
  2110  0009A6  6F02               	movwf	___wmul@multiplicand& (0+255),b
  2111  0009A8  EC34  F006         	call	___wmul	;wreg free
  2112  0009AC  0102               	movlb	2	; () banked
  2113  0009AE  5100               	movf	?___wmul& (0+255),w,b
  2114  0009B0  0102               	movlb	2	; () banked
  2115  0009B2  5D06               	subwf	delaySeconds@i& (0+255),w,b
  2116  0009B4  0102               	movlb	2	; () banked
  2117  0009B6  5107               	movf	(delaySeconds@i+1)& (0+255),w,b
  2118  0009B8  0A80               	xorlw	128
  2119  0009BA  6E51               	movwf	??_delaySeconds& (0+255),c
  2120  0009BC  0102               	movlb	2	; () banked
  2121  0009BE  5101               	movf	(?___wmul+1)& (0+255),w,b
  2122  0009C0  0A80               	xorlw	128
  2123  0009C2  5851               	subwfb	??_delaySeconds& (0+255),w,c
  2124  0009C4  A0D8               	btfss	status,0,c
  2125  0009C6  D7DC               	goto	l2089
  2126                           
  2127                           ; BSR set to: 2
  2128                           ;main.c: 54: return 1;
  2129                           
  2130                           ; BSR set to: 2
  2131  0009C8  80D8               	bsf	status,0,c
  2132  0009CA  0012               	return	
  2133  0009CC                     __end_of_delaySeconds:
  2134                           	opt stack 0
  2135                           tblptru	equ	0xFF8
  2136                           tblptrh	equ	0xFF7
  2137                           tblptrl	equ	0xFF6
  2138                           tablat	equ	0xFF5
  2139                           prodh	equ	0xFF4
  2140                           prodl	equ	0xFF3
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           postdec1	equ	0xFE5
  2144                           plusw1	equ	0xFE3
  2145                           fsr1l	equ	0xFE1
  2146                           indf2	equ	0xFDF
  2147                           postinc2	equ	0xFDE
  2148                           plusw2	equ	0xFDB
  2149                           fsr2h	equ	0xFDA
  2150                           fsr2l	equ	0xFD9
  2151                           status	equ	0xFD8
  2152                           
  2153 ;; *************** function ___wmul *****************
  2154 ;; Defined at:
  2155 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  multiplier      2    0[BANK2 ] unsigned int 
  2158 ;;  multiplicand    2    2[BANK2 ] unsigned int 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  product         2   28[COMRAM] unsigned int 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2    0[BANK2 ] unsigned int 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, prodl, prodh
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2170 ;;      Params:         0       0       0       4       0       0       0
  2171 ;;      Locals:         2       0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0
  2173 ;;      Totals:         2       0       0       4       0       0       0
  2174 ;;Total ram usage:        6 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    5
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_delaySeconds
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text11
  2185  000C68                     __ptext11:
  2186                           	opt stack 0
  2187  000C68                     ___wmul:
  2188                           	opt stack 22
  2189                           
  2190                           ; BSR set to: 2
  2191                           ;incstack = 0
  2192  000C68  0102               	movlb	2	; () banked
  2193  000C6A  5100               	movf	___wmul@multiplier& (0+255),w,b
  2194  000C6C  0102               	movlb	2	; () banked
  2195  000C6E  0302               	mulwf	___wmul@multiplicand& (0+255),b
  2196  000C70  CFF3 F04F          	movff	prodl,___wmul@product
  2197  000C74  CFF4 F050          	movff	prodh,___wmul@product+1
  2198  000C78  0102               	movlb	2	; () banked
  2199  000C7A  5100               	movf	___wmul@multiplier& (0+255),w,b
  2200  000C7C  0102               	movlb	2	; () banked
  2201  000C7E  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2202  000C80  50F3               	movf	prodl,w,c
  2203  000C82  2650               	addwf	___wmul@product+1,f,c
  2204  000C84  0102               	movlb	2	; () banked
  2205  000C86  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2206  000C88  0102               	movlb	2	; () banked
  2207  000C8A  0302               	mulwf	___wmul@multiplicand& (0+255),b
  2208  000C8C  50F3               	movf	prodl,w,c
  2209  000C8E  2650               	addwf	___wmul@product+1,f,c
  2210                           
  2211                           ; BSR set to: 2
  2212  000C90  C04F  F200         	movff	___wmul@product,?___wmul
  2213  000C94  C050  F201         	movff	___wmul@product+1,?___wmul+1
  2214  000C98  0012               	return	
  2215  000C9A                     __end_of___wmul:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           prodh	equ	0xFF4
  2222                           prodl	equ	0xFF3
  2223                           postinc0	equ	0xFEE
  2224                           wreg	equ	0xFE8
  2225                           postdec1	equ	0xFE5
  2226                           plusw1	equ	0xFE3
  2227                           fsr1l	equ	0xFE1
  2228                           indf2	equ	0xFDF
  2229                           postinc2	equ	0xFDE
  2230                           plusw2	equ	0xFDB
  2231                           fsr2h	equ	0xFDA
  2232                           fsr2l	equ	0xFD9
  2233                           status	equ	0xFD8
  2234                           
  2235 ;; *************** function _initializeLED *****************
  2236 ;; Defined at:
  2237 ;;		line 31 in file "Source/LED-API.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  j               1    1[BANK2 ] unsigned char 
  2242 ;;  i               1    0[BANK2 ] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2252 ;;      Params:         0       0       0       0       0       0       0
  2253 ;;      Locals:         0       0       0       2       0       0       0
  2254 ;;      Temps:          2       0       0       0       0       0       0
  2255 ;;      Totals:         2       0       0       2       0       0       0
  2256 ;;Total ram usage:        4 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    5
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text12
  2267  000786                     __ptext12:
  2268                           	opt stack 0
  2269  000786                     _initializeLED:
  2270                           	opt stack 25
  2271                           
  2272                           ;LED-API.c: 32: TRISA = 0b00000000;
  2273                           
  2274                           ; BSR set to: 2
  2275                           ;incstack = 0
  2276  000786  0E00               	movlw	0
  2277  000788  6E92               	movwf	3986,c	;volatile
  2278                           
  2279                           ;LED-API.c: 33: TRISC = 0b00000000;
  2280  00078A  0E00               	movlw	0
  2281  00078C  6E94               	movwf	3988,c	;volatile
  2282                           
  2283                           ;LED-API.c: 34: TRISD = 0b00000000;
  2284  00078E  0E00               	movlw	0
  2285  000790  6E95               	movwf	3989,c	;volatile
  2286                           
  2287                           ;LED-API.c: 35: LATA = 0b00000000;
  2288  000792  0E00               	movlw	0
  2289  000794  6E89               	movwf	3977,c	;volatile
  2290                           
  2291                           ;LED-API.c: 36: LATC = 0b00000000;
  2292  000796  0E00               	movlw	0
  2293  000798  6E8B               	movwf	3979,c	;volatile
  2294                           
  2295                           ;LED-API.c: 37: LATD = 0b00000000;
  2296  00079A  0E00               	movlw	0
  2297  00079C  6E8C               	movwf	3980,c	;volatile
  2298                           
  2299                           ;LED-API.c: 40: for (unsigned char i = 0; i < 8; i++) {
  2300  00079E  0E00               	movlw	0
  2301  0007A0  0102               	movlb	2	; () banked
  2302  0007A2  6F00               	movwf	initializeLED@i& (0+255),b
  2303  0007A4                     l2131:
  2304                           
  2305                           ; BSR set to: 2
  2306  0007A4  0E07               	movlw	7
  2307  0007A6  0102               	movlb	2	; () banked
  2308  0007A8  6500               	cpfsgt	initializeLED@i& (0+255),b
  2309  0007AA  D001               	goto	l2135
  2310  0007AC  0012               	return	
  2311  0007AE                     l2135:
  2312                           
  2313                           ; BSR set to: 2
  2314                           ;LED-API.c: 41: for (unsigned char j = 0; j < 16; j++) {
  2315  0007AE  0E00               	movlw	0
  2316  0007B0  0102               	movlb	2	; () banked
  2317  0007B2  6F01               	movwf	initializeLED@j& (0+255),b
  2318  0007B4                     l2137:
  2319                           
  2320                           ; BSR set to: 2
  2321  0007B4  0E0F               	movlw	15
  2322  0007B6  0102               	movlb	2	; () banked
  2323  0007B8  6501               	cpfsgt	initializeLED@j& (0+255),b
  2324  0007BA  D001               	goto	l2141
  2325  0007BC  D019               	goto	l2147
  2326  0007BE                     l2141:
  2327                           
  2328                           ; BSR set to: 2
  2329                           ;LED-API.c: 42: pixels[i][j] = 0;
  2330  0007BE  0102               	movlb	2	; () banked
  2331  0007C0  5100               	movf	initializeLED@i& (0+255),w,b
  2332  0007C2  0D10               	mullw	16
  2333  0007C4  0E80               	movlw	low _pixels
  2334  0007C6  6E4F               	movwf	??_initializeLED& (0+255),c
  2335  0007C8  0E00               	movlw	high _pixels
  2336  0007CA  6E50               	movwf	(??_initializeLED+1)& (0+255),c
  2337  0007CC  50F3               	movf	prodl,w,c
  2338  0007CE  264F               	addwf	??_initializeLED,f,c
  2339  0007D0  50F4               	movf	prodh,w,c
  2340  0007D2  2250               	addwfc	??_initializeLED+1,f,c
  2341  0007D4  0102               	movlb	2	; () banked
  2342  0007D6  5101               	movf	initializeLED@j& (0+255),w,b
  2343  0007D8  0D01               	mullw	1
  2344  0007DA  50F3               	movf	prodl,w,c
  2345  0007DC  244F               	addwf	??_initializeLED,w,c
  2346  0007DE  6ED9               	movwf	fsr2l,c
  2347  0007E0  50F4               	movf	prodh,w,c
  2348  0007E2  2050               	addwfc	??_initializeLED+1,w,c
  2349  0007E4  6EDA               	movwf	fsr2h,c
  2350  0007E6  0E00               	movlw	0
  2351  0007E8  6EDF               	movwf	indf2,c
  2352                           
  2353                           ; BSR set to: 2
  2354  0007EA  0102               	movlb	2	; () banked
  2355  0007EC  2B01               	incf	initializeLED@j& (0+255),f,b
  2356  0007EE  D7E2               	goto	l2137
  2357  0007F0                     l2147:
  2358                           
  2359                           ; BSR set to: 2
  2360  0007F0  0102               	movlb	2	; () banked
  2361  0007F2  2B00               	incf	initializeLED@i& (0+255),f,b
  2362  0007F4  D7D7               	goto	l2131
  2363  0007F6                     __end_of_initializeLED:
  2364                           	opt stack 0
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           prodh	equ	0xFF4
  2370                           prodl	equ	0xFF3
  2371                           postinc0	equ	0xFEE
  2372                           wreg	equ	0xFE8
  2373                           postdec1	equ	0xFE5
  2374                           plusw1	equ	0xFE3
  2375                           fsr1l	equ	0xFE1
  2376                           indf2	equ	0xFDF
  2377                           postinc2	equ	0xFDE
  2378                           plusw2	equ	0xFDB
  2379                           fsr2h	equ	0xFDA
  2380                           fsr2l	equ	0xFD9
  2381                           status	equ	0xFD8
  2382                           
  2383 ;; *************** function _initialize *****************
  2384 ;; Defined at:
  2385 ;;		line 88 in file "main.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2399 ;;      Params:         0       0       0       0       0       0       0
  2400 ;;      Locals:         0       0       0       0       0       0       0
  2401 ;;      Temps:          0       0       0       0       0       0       0
  2402 ;;      Totals:         0       0       0       0       0       0       0
  2403 ;;Total ram usage:        0 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    5
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text13
  2414  0008C2                     __ptext13:
  2415                           	opt stack 0
  2416  0008C2                     _initialize:
  2417                           	opt stack 25
  2418                           
  2419                           ;main.c: 91: OSCTUNEbits.PLLEN = 1;
  2420                           
  2421                           ; BSR set to: 2
  2422                           ;incstack = 0
  2423  0008C2  8C9B               	bsf	3995,6,c	;volatile
  2424                           
  2425                           ;main.c: 92: OSCTUNEbits.TUN = 011111;
  2426  0008C4  809B               	bsf	3995,0,c	;volatile
  2427  0008C6  929B               	bcf	3995,1,c	;volatile
  2428  0008C8  949B               	bcf	3995,2,c	;volatile
  2429  0008CA  869B               	bsf	3995,3,c	;volatile
  2430  0008CC  989B               	bcf	3995,4,c	;volatile
  2431                           
  2432                           ;main.c: 94: OSCCONbits.SCS = 00;
  2433  0008CE  0EFC               	movlw	-4
  2434  0008D0  16D3               	andwf	4051,f,c	;volatile
  2435                           
  2436                           ;main.c: 95: OSCCONbits.IRCF = 111;
  2437  0008D2  88D3               	bsf	4051,4,c	;volatile
  2438  0008D4  8AD3               	bsf	4051,5,c	;volatile
  2439  0008D6  8CD3               	bsf	4051,6,c	;volatile
  2440                           
  2441                           ;main.c: 97: PLLEN = 1;
  2442  0008D8  8C9B               	bsf	3995,6,c	;volatile
  2443                           
  2444                           ;main.c: 100: GIE = 1;
  2445  0008DA  8EF2               	bsf	intcon,7,c	;volatile
  2446                           
  2447                           ;main.c: 101: PEIE=1;
  2448  0008DC  8CF2               	bsf	intcon,6,c	;volatile
  2449                           
  2450                           ;main.c: 104: TRISBbits.TRISB0 = 1;
  2451  0008DE  8093               	bsf	3987,0,c	;volatile
  2452                           
  2453                           ;main.c: 105: TRISBbits.TRISB1 = 1;
  2454  0008E0  8293               	bsf	3987,1,c	;volatile
  2455                           
  2456                           ;main.c: 106: ADCON2bits.ADFM = 1;
  2457  0008E2  8EC0               	bsf	4032,7,c	;volatile
  2458                           
  2459                           ;main.c: 107: ADCON2bits.ADCS = 010;
  2460  0008E4  90C0               	bcf	4032,0,c	;volatile
  2461  0008E6  92C0               	bcf	4032,1,c	;volatile
  2462  0008E8  94C0               	bcf	4032,2,c	;volatile
  2463                           
  2464                           ;main.c: 108: ADCON2bits.ACQT = 111;
  2465  0008EA  86C0               	bsf	4032,3,c	;volatile
  2466  0008EC  88C0               	bsf	4032,4,c	;volatile
  2467  0008EE  8AC0               	bsf	4032,5,c	;volatile
  2468                           
  2469                           ;main.c: 109: ADCON1bits.VCFG0 = 0;
  2470  0008F0  98C1               	bcf	4033,4,c	;volatile
  2471                           
  2472                           ;main.c: 110: ADCON1bits.VCFG1 = 0;
  2473  0008F2  9AC1               	bcf	4033,5,c	;volatile
  2474                           
  2475                           ;main.c: 111: ADCON1bits.PCFG = 0000;
  2476  0008F4  90C1               	bcf	4033,0,c	;volatile
  2477  0008F6  92C1               	bcf	4033,1,c	;volatile
  2478  0008F8  94C1               	bcf	4033,2,c	;volatile
  2479  0008FA  96C1               	bcf	4033,3,c	;volatile
  2480                           
  2481                           ;main.c: 112: ADCON0bits.CHS = 1100;
  2482  0008FC  50C2               	movf	4034,w,c	;volatile
  2483  0008FE  0BC3               	andlw	-61
  2484  000900  0930               	iorlw	48
  2485  000902  6EC2               	movwf	4034,c	;volatile
  2486                           
  2487                           ;main.c: 113: ADCON0bits.ADON = 1;
  2488  000904  80C2               	bsf	4034,0,c	;volatile
  2489                           
  2490                           ;main.c: 114: ADIE = 1;
  2491  000906  8C9D               	bsf	3997,6,c	;volatile
  2492                           
  2493                           ;main.c: 117: T0PS0 = 1;
  2494  000908  80D5               	bsf	4053,0,c	;volatile
  2495                           
  2496                           ;main.c: 118: T0PS1 = 0;
  2497  00090A  92D5               	bcf	4053,1,c	;volatile
  2498                           
  2499                           ;main.c: 119: T0PS2 = 1;
  2500  00090C  84D5               	bsf	4053,2,c	;volatile
  2501                           
  2502                           ;main.c: 120: PSA = 0;
  2503  00090E  96D5               	bcf	4053,3,c	;volatile
  2504                           
  2505                           ;main.c: 121: T0CS = 0;
  2506  000910  9AD5               	bcf	4053,5,c	;volatile
  2507                           
  2508                           ;main.c: 122: T08BIT = 1;
  2509  000912  8CD5               	bsf	4053,6,c	;volatile
  2510                           
  2511                           ;main.c: 123: TMR0IE = 1;
  2512  000914  8AF2               	bsf	intcon,5,c	;volatile
  2513                           
  2514                           ;main.c: 124: TMR0IF = 0;
  2515  000916  94F2               	bcf	intcon,2,c	;volatile
  2516                           
  2517                           ;main.c: 126: TMR0ON = 1;
  2518  000918  8ED5               	bsf	4053,7,c	;volatile
  2519  00091A  0012               	return		;funcret
  2520  00091C                     __end_of_initialize:
  2521                           	opt stack 0
  2522                           tblptru	equ	0xFF8
  2523                           tblptrh	equ	0xFF7
  2524                           tblptrl	equ	0xFF6
  2525                           tablat	equ	0xFF5
  2526                           prodh	equ	0xFF4
  2527                           prodl	equ	0xFF3
  2528                           intcon	equ	0xFF2
  2529                           postinc0	equ	0xFEE
  2530                           wreg	equ	0xFE8
  2531                           postdec1	equ	0xFE5
  2532                           plusw1	equ	0xFE3
  2533                           fsr1l	equ	0xFE1
  2534                           indf2	equ	0xFDF
  2535                           postinc2	equ	0xFDE
  2536                           plusw2	equ	0xFDB
  2537                           fsr2h	equ	0xFDA
  2538                           fsr2l	equ	0xFD9
  2539                           status	equ	0xFD8
  2540                           
  2541 ;; *************** function _ISR *****************
  2542 ;; Defined at:
  2543 ;;		line 295 in file "main.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  ADvalue         2   25[COMRAM] unsigned short 
  2548 ;;  value           1   27[COMRAM] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2558 ;;      Params:         0       0       0       0       0       0       0
  2559 ;;      Locals:         3       0       0       0       0       0       0
  2560 ;;      Temps:         14       0       0       0       0       0       0
  2561 ;;      Totals:        17       0       0       0       0       0       0
  2562 ;;Total ram usage:       17 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    4
  2565 ;; This function calls:
  2566 ;;		___lwdiv
  2567 ;;		_checkNextPosition
  2568 ;;		_writePong
  2569 ;; This function is called by:
  2570 ;;		Interrupt level 2
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	intcode
  2575  000008                     __pintcode:
  2576                           	opt stack 0
  2577  000008                     _ISR:
  2578                           	opt stack 22
  2579                           
  2580                           ;incstack = 0
  2581  000008  8263               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2582  00000A  CFFA F03E          	movff	pclath,??_ISR
  2583  00000E  CFFB F03F          	movff	pclatu,??_ISR+1
  2584  000012  ED77  F002         	call	int_func,f	;refresh shadow registers
  2585                           pclatu	equ	0xFFB
  2586                           pclath	equ	0xFFA
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           prodh	equ	0xFF4
  2592                           prodl	equ	0xFF3
  2593                           intcon	equ	0xFF2
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           postdec1	equ	0xFE5
  2597                           plusw1	equ	0xFE3
  2598                           fsr1l	equ	0xFE1
  2599                           indf2	equ	0xFDF
  2600                           postinc2	equ	0xFDE
  2601                           plusw2	equ	0xFDB
  2602                           fsr2h	equ	0xFDA
  2603                           fsr2l	equ	0xFD9
  2604                           status	equ	0xFD8
  2605                           
  2606                           	psect	intcode_body
  2607  0004EE                     __pintcode_body:
  2608                           	opt stack 22
  2609  0004EE                     int_func:
  2610                           	opt stack 22
  2611  0004EE  0006               	pop		; remove dummy address from shadow register refresh
  2612  0004F0  CFE9 F040          	movff	fsr0l,??_ISR+2
  2613  0004F4  CFEA F041          	movff	fsr0h,??_ISR+3
  2614  0004F8  CFE1 F042          	movff	fsr1l,??_ISR+4
  2615  0004FC  CFE2 F043          	movff	fsr1h,??_ISR+5
  2616  000500  CFD9 F044          	movff	fsr2l,??_ISR+6
  2617  000504  CFDA F045          	movff	fsr2h,??_ISR+7
  2618  000508  CFF3 F046          	movff	prodl,??_ISR+8
  2619  00050C  CFF4 F047          	movff	prodh,??_ISR+9
  2620  000510  CFF6 F048          	movff	tblptrl,??_ISR+10
  2621  000514  CFF7 F049          	movff	tblptrh,??_ISR+11
  2622  000518  CFF8 F04A          	movff	tblptru,??_ISR+12
  2623  00051C  CFF5 F04B          	movff	tablat,??_ISR+13
  2624                           
  2625                           ;main.c: 297: if(TMR0IE && TMR0IF)
  2626  000520  BAF2               	btfsc	intcon,5,c	;volatile
  2627  000522  A4F2               	btfss	intcon,2,c	;volatile
  2628  000524  D012               	goto	i2l1943
  2629                           
  2630                           ;main.c: 298: {
  2631                           ;main.c: 300: TMR0IF = 0;
  2632  000526  94F2               	bcf	intcon,2,c	;volatile
  2633                           
  2634                           ;main.c: 302: if(_timerCounter > _speed)
  2635  000528  5061               	movf	__timerCounter,w,c
  2636  00052A  5C31               	subwf	__speed,w,c
  2637  00052C  5062               	movf	__timerCounter+1,w,c
  2638  00052E  5832               	subwfb	__speed+1,w,c
  2639  000530  B0D8               	btfsc	status,0,c
  2640  000532  D006               	goto	i2l1937
  2641                           
  2642                           ;main.c: 303: {
  2643                           ;main.c: 304: checkNextPosition();
  2644  000534  ECEB  F001         	call	_checkNextPosition	;wreg free
  2645                           
  2646                           ;main.c: 305: _timerCounter = 0;
  2647  000538  0E00               	movlw	0
  2648  00053A  6E62               	movwf	__timerCounter+1,c
  2649  00053C  0E00               	movlw	0
  2650  00053E  6E61               	movwf	__timerCounter,c
  2651  000540                     i2l1937:
  2652                           
  2653                           ;main.c: 306: }
  2654                           ;main.c: 308: _timerCounter++;
  2655  000540  4A61               	infsnz	__timerCounter,f,c
  2656  000542  2A62               	incf	__timerCounter+1,f,c
  2657                           
  2658                           ;main.c: 309: writePong();
  2659  000544  ECFB  F003         	call	_writePong	;wreg free
  2660                           
  2661                           ;main.c: 312: ADCON0bits.GODONE = 1;
  2662  000548  82C2               	bsf	4034,1,c	;volatile
  2663  00054A                     i2l1943:
  2664                           
  2665                           ;main.c: 314: }
  2666                           ;main.c: 316: if(ADIE && ADIF)
  2667  00054A  BC9D               	btfsc	3997,6,c	;volatile
  2668  00054C  AC9E               	btfss	3998,6,c	;volatile
  2669  00054E  D030               	goto	i2l251
  2670                           
  2671                           ;main.c: 317: {
  2672                           ;main.c: 319: ADIF = 0;
  2673  000550  9C9E               	bcf	3998,6,c	;volatile
  2674                           
  2675                           ;main.c: 321: unsigned short ADvalue = ADRES;
  2676  000552  CFC3 F04C          	movff	4035,ISR@ADvalue	;volatile
  2677  000556  CFC4 F04D          	movff	4036,ISR@ADvalue+1	;volatile
  2678                           
  2679                           ;main.c: 322: unsigned char value = (ADvalue / 85);
  2680  00055A  C04C  F033         	movff	ISR@ADvalue,___lwdiv@dividend
  2681  00055E  C04D  F034         	movff	ISR@ADvalue+1,___lwdiv@dividend+1
  2682  000562  0E00               	movlw	0
  2683  000564  6E36               	movwf	___lwdiv@divisor+1,c
  2684  000566  0E55               	movlw	85
  2685  000568  6E35               	movwf	___lwdiv@divisor,c
  2686  00056A  ECE6  F004         	call	___lwdiv	;wreg free
  2687  00056E  5033               	movf	?___lwdiv,w,c
  2688  000570  6E4E               	movwf	ISR@value,c
  2689                           
  2690                           ;main.c: 325: if(ADCON0bits.CHS == 12)
  2691  000572  30C2               	rrcf	4034,w,c	;volatile
  2692  000574  32E8               	rrcf	wreg,f,c
  2693  000576  0B0F               	andlw	15
  2694  000578  0A0C               	xorlw	12
  2695  00057A  A4D8               	btfss	status,2,c
  2696  00057C  D00D               	goto	i2l1963
  2697                           
  2698                           ;main.c: 326: {
  2699                           ;main.c: 327: ADCON0bits.CHS = 10;
  2700  00057E  50C2               	movf	4034,w,c	;volatile
  2701  000580  0BC3               	andlw	-61
  2702  000582  0928               	iorlw	40
  2703  000584  6EC2               	movwf	4034,c	;volatile
  2704                           
  2705                           ;main.c: 330: _p1.paddlePosOld[0] = _p1.paddlePos[0];
  2706  000586  C054  F052         	movff	__p1+2,__p1
  2707                           
  2708                           ;main.c: 331: _p1.paddlePos[0] = value;
  2709  00058A  C04E  F054         	movff	ISR@value,__p1+2
  2710                           
  2711                           ;main.c: 333: _p1.paddlePosOld[1] = _p1.paddlePos[1];
  2712  00058E  C055  F053         	movff	__p1+3,__p1+1
  2713                           
  2714                           ;main.c: 334: _p1.paddlePos[1] = value + 1;
  2715  000592  284E               	incf	ISR@value,w,c
  2716  000594  6E55               	movwf	__p1+3,c
  2717                           
  2718                           ;main.c: 335: }
  2719  000596  D00C               	goto	i2l251
  2720  000598                     i2l1963:
  2721                           
  2722                           ;main.c: 336: else
  2723                           ;main.c: 337: {
  2724                           ;main.c: 338: ADCON0bits.CHS = 12;
  2725  000598  50C2               	movf	4034,w,c	;volatile
  2726  00059A  0BC3               	andlw	-61
  2727  00059C  0930               	iorlw	48
  2728  00059E  6EC2               	movwf	4034,c	;volatile
  2729                           
  2730                           ;main.c: 341: _p2.paddlePosOld[0] = _p2.paddlePos[0];
  2731  0005A0  C059  F057         	movff	__p2+2,__p2
  2732                           
  2733                           ;main.c: 342: _p2.paddlePos[0] = value;
  2734  0005A4  C04E  F059         	movff	ISR@value,__p2+2
  2735                           
  2736                           ;main.c: 344: _p2.paddlePosOld[1] = _p2.paddlePos[1];
  2737  0005A8  C05A  F058         	movff	__p2+3,__p2+1
  2738                           
  2739                           ;main.c: 345: _p2.paddlePos[1] = value + 1;
  2740  0005AC  284E               	incf	ISR@value,w,c
  2741  0005AE  6E5A               	movwf	__p2+3,c
  2742  0005B0                     i2l251:
  2743  0005B0  C04B  FFF5         	movff	??_ISR+13,tablat
  2744  0005B4  C04A  FFF8         	movff	??_ISR+12,tblptru
  2745  0005B8  C049  FFF7         	movff	??_ISR+11,tblptrh
  2746  0005BC  C048  FFF6         	movff	??_ISR+10,tblptrl
  2747  0005C0  C047  FFF4         	movff	??_ISR+9,prodh
  2748  0005C4  C046  FFF3         	movff	??_ISR+8,prodl
  2749  0005C8  C045  FFDA         	movff	??_ISR+7,fsr2h
  2750  0005CC  C044  FFD9         	movff	??_ISR+6,fsr2l
  2751  0005D0  C043  FFE2         	movff	??_ISR+5,fsr1h
  2752  0005D4  C042  FFE1         	movff	??_ISR+4,fsr1l
  2753  0005D8  C041  FFEA         	movff	??_ISR+3,fsr0h
  2754  0005DC  C040  FFE9         	movff	??_ISR+2,fsr0l
  2755  0005E0  C03F  FFFB         	movff	??_ISR+1,pclatu
  2756  0005E4  C03E  FFFA         	movff	??_ISR,pclath
  2757  0005E8  9263               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2758  0005EA  0011               	retfie		f
  2759  0005EC                     __end_of_ISR:
  2760                           	opt stack 0
  2761                           pclatu	equ	0xFFB
  2762                           pclath	equ	0xFFA
  2763                           tblptru	equ	0xFF8
  2764                           tblptrh	equ	0xFF7
  2765                           tblptrl	equ	0xFF6
  2766                           tablat	equ	0xFF5
  2767                           prodh	equ	0xFF4
  2768                           prodl	equ	0xFF3
  2769                           intcon	equ	0xFF2
  2770                           postinc0	equ	0xFEE
  2771                           fsr0h	equ	0xFEA
  2772                           fsr0l	equ	0xFE9
  2773                           wreg	equ	0xFE8
  2774                           postdec1	equ	0xFE5
  2775                           plusw1	equ	0xFE3
  2776                           fsr1h	equ	0xFE2
  2777                           fsr1l	equ	0xFE1
  2778                           indf2	equ	0xFDF
  2779                           postinc2	equ	0xFDE
  2780                           plusw2	equ	0xFDB
  2781                           fsr2h	equ	0xFDA
  2782                           fsr2l	equ	0xFD9
  2783                           status	equ	0xFD8
  2784                           
  2785 ;; *************** function _writePong *****************
  2786 ;; Defined at:
  2787 ;;		line 130 in file "main.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2801 ;;      Params:         0       0       0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    1
  2808 ;; This function calls:
  2809 ;;		_off
  2810 ;;		i2_on
  2811 ;; This function is called by:
  2812 ;;		_ISR
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text15
  2817  0007F6                     __ptext15:
  2818                           	opt stack 0
  2819  0007F6                     _writePong:
  2820                           	opt stack 24
  2821                           
  2822                           ;main.c: 135: off(_ball.bPos[1], _ball.bPos[0]);
  2823                           
  2824                           ;incstack = 0
  2825  0007F6  C05C  F033         	movff	__ball,off@row
  2826  0007FA  505D               	movf	__ball+1,w,c
  2827  0007FC  ECDF  F005         	call	_off
  2828                           
  2829                           ;main.c: 136: _ball.bPos[0] = _nextPos[0];
  2830  000800  C05F  F05C         	movff	__nextPos,__ball
  2831                           
  2832                           ;main.c: 137: _ball.bPos[1] = _nextPos[1];
  2833  000804  C060  F05D         	movff	__nextPos+1,__ball+1
  2834                           
  2835                           ;main.c: 138: on(_ball.bPos[1], _ball.bPos[0]);
  2836  000808  C05C  F033         	movff	__ball,i2on@row
  2837  00080C  505D               	movf	__ball+1,w,c
  2838  00080E  ECFD  F005         	call	i2_on
  2839                           
  2840                           ;main.c: 141: off(_p1.paddlePosOld[0], 0);
  2841  000812  0E00               	movlw	0
  2842  000814  6E33               	movwf	off@row,c
  2843  000816  5052               	movf	__p1,w,c
  2844  000818  ECDF  F005         	call	_off
  2845                           
  2846                           ;main.c: 142: off(_p1.paddlePosOld[1], 0);
  2847  00081C  0E00               	movlw	0
  2848  00081E  6E33               	movwf	off@row,c
  2849  000820  5053               	movf	__p1+1,w,c
  2850  000822  ECDF  F005         	call	_off
  2851                           
  2852                           ;main.c: 144: off(_p2.paddlePosOld[0], 15);
  2853  000826  0E0F               	movlw	15
  2854  000828  6E33               	movwf	off@row,c
  2855  00082A  5057               	movf	__p2,w,c
  2856  00082C  ECDF  F005         	call	_off
  2857                           
  2858                           ;main.c: 145: off(_p2.paddlePosOld[1], 15);
  2859  000830  0E0F               	movlw	15
  2860  000832  6E33               	movwf	off@row,c
  2861  000834  5058               	movf	__p2+1,w,c
  2862  000836  ECDF  F005         	call	_off
  2863                           
  2864                           ;main.c: 147: on(_p1.paddlePos[0], 0);
  2865  00083A  0E00               	movlw	0
  2866  00083C  6E33               	movwf	i2on@row,c
  2867  00083E  5054               	movf	__p1+2,w,c
  2868  000840  ECFD  F005         	call	i2_on
  2869                           
  2870                           ;main.c: 148: on(_p1.paddlePos[1], 0);
  2871  000844  0E00               	movlw	0
  2872  000846  6E33               	movwf	i2on@row,c
  2873  000848  5055               	movf	__p1+3,w,c
  2874  00084A  ECFD  F005         	call	i2_on
  2875                           
  2876                           ;main.c: 149: on(_p2.paddlePos[0], 15);
  2877  00084E  0E0F               	movlw	15
  2878  000850  6E33               	movwf	i2on@row,c
  2879  000852  5059               	movf	__p2+2,w,c
  2880  000854  ECFD  F005         	call	i2_on
  2881                           
  2882                           ;main.c: 150: on(_p2.paddlePos[1], 15);
  2883  000858  0E0F               	movlw	15
  2884  00085A  6E33               	movwf	i2on@row,c
  2885  00085C  505A               	movf	__p2+3,w,c
  2886  00085E  ECFD  F005         	call	i2_on
  2887  000862  0012               	return		;funcret
  2888  000864                     __end_of_writePong:
  2889                           	opt stack 0
  2890                           pclatu	equ	0xFFB
  2891                           pclath	equ	0xFFA
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           prodh	equ	0xFF4
  2897                           prodl	equ	0xFF3
  2898                           intcon	equ	0xFF2
  2899                           postinc0	equ	0xFEE
  2900                           fsr0h	equ	0xFEA
  2901                           fsr0l	equ	0xFE9
  2902                           wreg	equ	0xFE8
  2903                           postdec1	equ	0xFE5
  2904                           plusw1	equ	0xFE3
  2905                           fsr1h	equ	0xFE2
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           postinc2	equ	0xFDE
  2909                           plusw2	equ	0xFDB
  2910                           fsr2h	equ	0xFDA
  2911                           fsr2l	equ	0xFD9
  2912                           status	equ	0xFD8
  2913                           
  2914 ;; *************** function _off *****************
  2915 ;; Defined at:
  2916 ;;		line 68 in file "Source/LED-API.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  column          1    wreg     unsigned char 
  2919 ;;  row             1    0[COMRAM] unsigned char 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  column          1    3[COMRAM] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2931 ;;      Params:         1       0       0       0       0       0       0
  2932 ;;      Locals:         1       0       0       0       0       0       0
  2933 ;;      Temps:          2       0       0       0       0       0       0
  2934 ;;      Totals:         4       0       0       0       0       0       0
  2935 ;;Total ram usage:        4 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_writePong
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text16
  2945  000BBE                     __ptext16:
  2946                           	opt stack 0
  2947  000BBE                     _off:
  2948                           	opt stack 24
  2949                           
  2950                           ;incstack = 0
  2951                           ;off@column stored from wreg
  2952  000BBE  6E36               	movwf	off@column,c
  2953                           
  2954                           ;LED-API.c: 70: if (row < 0 || row > 16)
  2955  000BC0  0E10               	movlw	16
  2956  000BC2  6433               	cpfsgt	off@row,c
  2957  000BC4  D001               	goto	i2l1739
  2958  000BC6  0012               	return	
  2959  000BC8                     i2l1739:
  2960                           
  2961                           ;LED-API.c: 72: if (column < 0 || column > 8)
  2962  000BC8  0E08               	movlw	8
  2963  000BCA  6436               	cpfsgt	off@column,c
  2964  000BCC  D001               	goto	i2l1743
  2965  000BCE  0012               	return	
  2966  000BD0                     i2l1743:
  2967                           
  2968                           ;LED-API.c: 75: pixels[column][row] = 0;
  2969  000BD0  5036               	movf	off@column,w,c
  2970  000BD2  0D10               	mullw	16
  2971  000BD4  0E80               	movlw	low _pixels
  2972  000BD6  6E34               	movwf	??_off& (0+255),c
  2973  000BD8  0E00               	movlw	high _pixels
  2974  000BDA  6E35               	movwf	(??_off+1)& (0+255),c
  2975  000BDC  50F3               	movf	prodl,w,c
  2976  000BDE  2634               	addwf	??_off,f,c
  2977  000BE0  50F4               	movf	prodh,w,c
  2978  000BE2  2235               	addwfc	??_off+1,f,c
  2979  000BE4  5033               	movf	off@row,w,c
  2980  000BE6  0D01               	mullw	1
  2981  000BE8  50F3               	movf	prodl,w,c
  2982  000BEA  2434               	addwf	??_off,w,c
  2983  000BEC  6ED9               	movwf	fsr2l,c
  2984  000BEE  50F4               	movf	prodh,w,c
  2985  000BF0  2035               	addwfc	??_off+1,w,c
  2986  000BF2  6EDA               	movwf	fsr2h,c
  2987  000BF4  0E00               	movlw	0
  2988  000BF6  6EDF               	movwf	indf2,c
  2989  000BF8  0012               	return		;funcret
  2990  000BFA                     __end_of_off:
  2991                           	opt stack 0
  2992                           pclatu	equ	0xFFB
  2993                           pclath	equ	0xFFA
  2994                           tblptru	equ	0xFF8
  2995                           tblptrh	equ	0xFF7
  2996                           tblptrl	equ	0xFF6
  2997                           tablat	equ	0xFF5
  2998                           prodh	equ	0xFF4
  2999                           prodl	equ	0xFF3
  3000                           intcon	equ	0xFF2
  3001                           postinc0	equ	0xFEE
  3002                           fsr0h	equ	0xFEA
  3003                           fsr0l	equ	0xFE9
  3004                           wreg	equ	0xFE8
  3005                           postdec1	equ	0xFE5
  3006                           plusw1	equ	0xFE3
  3007                           fsr1h	equ	0xFE2
  3008                           fsr1l	equ	0xFE1
  3009                           indf2	equ	0xFDF
  3010                           postinc2	equ	0xFDE
  3011                           plusw2	equ	0xFDB
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function _checkNextPosition *****************
  3017 ;; Defined at:
  3018 ;;		line 184 in file "main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3032 ;;      Params:         0       0       0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0
  3035 ;;      Totals:         0       0       0       0       0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    3
  3039 ;; This function calls:
  3040 ;;		_getNextPosition
  3041 ;;		i2_startPong
  3042 ;; This function is called by:
  3043 ;;		_ISR
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text17
  3048  0003D6                     __ptext17:
  3049                           	opt stack 0
  3050  0003D6                     _checkNextPosition:
  3051                           	opt stack 22
  3052                           
  3053                           ;main.c: 186: getNextPosition();
  3054                           
  3055                           ;incstack = 0
  3056  0003D6  EC32  F004         	call	_getNextPosition	;wreg free
  3057                           
  3058                           ;main.c: 187: if(_nextPos[0] == 0)
  3059  0003DA  505F               	movf	__nextPos,w,c
  3060  0003DC  A4D8               	btfss	status,2,c
  3061  0003DE  D032               	goto	i2l1839
  3062                           
  3063                           ;main.c: 188: {
  3064                           ;main.c: 189: if(_p1.paddlePos[0] == _nextPos[1])
  3065  0003E0  5060               	movf	__nextPos+1,w,c
  3066  0003E2  1854               	xorwf	__p1+2,w,c
  3067  0003E4  B4D8               	btfsc	status,2,c
  3068  0003E6  D006               	goto	i2l1809
  3069  0003E8  D012               	goto	i2l1817
  3070  0003EA                     i2l1805:
  3071                           
  3072                           ;main.c: 199: _ball.bDirection = 1;
  3073  0003EA  0E01               	movlw	1
  3074  0003EC  D001               	goto	L2
  3075  0003EE                     i2l1807:
  3076                           
  3077                           ;main.c: 202: _ball.bDirection = 2;
  3078  0003EE  0E02               	movlw	2
  3079  0003F0                     L2:
  3080  0003F0  6E5E               	movwf	__ball+2,c
  3081                           
  3082                           ;main.c: 203: }
  3083  0003F2  D00A               	goto	i2l1811
  3084  0003F4                     i2l1809:
  3085  0003F4  505E               	movf	__ball+2,w,c
  3086                           
  3087                           ; Switch size 1, requested type "space"
  3088                           ; Number of cases is 3, Range of values is 4 to 6
  3089                           ; switch strategies available:
  3090                           ; Name         Instructions Cycles
  3091                           ; simple_byte           10     6 (average)
  3092                           ;	Chosen strategy is simple_byte
  3093  0003F6  0A04               	xorlw	4	; case 4
  3094  0003F8  B4D8               	btfsc	status,2,c
  3095  0003FA  D7F9               	goto	i2l1807
  3096  0003FC  0A01               	xorlw	1	; case 5
  3097  0003FE  B4D8               	btfsc	status,2,c
  3098  000400  D7F4               	goto	i2l1805
  3099  000402  0A03               	xorlw	3	; case 6
  3100  000404  B4D8               	btfsc	status,2,c
  3101  000406  D7F3               	goto	i2l1807
  3102  000408                     i2l1811:
  3103                           
  3104                           ;main.c: 204: getNextPosition();
  3105  000408  EC32  F004         	call	_getNextPosition	;wreg free
  3106                           
  3107                           ;main.c: 205: return;
  3108  00040C  0012               	return	
  3109  00040E                     i2l1817:
  3110                           
  3111                           ;main.c: 207: else if(_p1.paddlePos[1] == _nextPos[1])
  3112  00040E  5060               	movf	__nextPos+1,w,c
  3113  000410  1855               	xorwf	__p1+3,w,c
  3114  000412  B4D8               	btfsc	status,2,c
  3115  000414  D006               	goto	i2l1829
  3116  000416  D012               	goto	i2l1835
  3117  000418                     i2l1821:
  3118                           
  3119                           ;main.c: 214: _ball.bDirection = 1;
  3120  000418  0E01               	movlw	1
  3121  00041A                     L3:
  3122  00041A  6E5E               	movwf	__ball+2,c
  3123                           
  3124                           ;main.c: 218: break;
  3125  00041C  D00C               	goto	i2l1831
  3126  00041E                     i2l1825:
  3127                           
  3128                           ;main.c: 220: _ball.bDirection = 3;
  3129  00041E  0E03               	movlw	3
  3130  000420  D7FC               	goto	L3
  3131  000422                     i2l1829:
  3132  000422  505E               	movf	__ball+2,w,c
  3133                           
  3134                           ; Switch size 1, requested type "space"
  3135                           ; Number of cases is 3, Range of values is 4 to 6
  3136                           ; switch strategies available:
  3137                           ; Name         Instructions Cycles
  3138                           ; simple_byte           10     6 (average)
  3139                           ;	Chosen strategy is simple_byte
  3140  000424  0A04               	xorlw	4	; case 4
  3141  000426  B4D8               	btfsc	status,2,c
  3142  000428  D7F7               	goto	i2l1821
  3143  00042A  0A01               	xorlw	1	; case 5
  3144  00042C  B4D8               	btfsc	status,2,c
  3145  00042E  D7F7               	goto	i2l1825
  3146  000430  0A03               	xorlw	3	; case 6
  3147  000432  B4D8               	btfsc	status,2,c
  3148  000434  D7F4               	goto	i2l1825
  3149  000436                     i2l1831:
  3150                           
  3151                           ;main.c: 223: getNextPosition();
  3152  000436  EC32  F004         	call	_getNextPosition	;wreg free
  3153                           
  3154                           ;main.c: 224: return;
  3155  00043A  0012               	return	
  3156  00043C                     i2l1835:
  3157                           
  3158                           ;main.c: 225: }
  3159                           ;main.c: 227: _p1.lives--;
  3160  00043C  0656               	decf	__p1+4,f,c
  3161                           
  3162                           ;main.c: 228: startPong();
  3163  00043E  EC9E  F005         	call	i2_startPong	;wreg free
  3164                           
  3165                           ;main.c: 229: }
  3166  000442  0012               	return	
  3167  000444                     i2l1839:
  3168                           
  3169                           ;main.c: 230: else if(_nextPos[0] == 15)
  3170  000444  0E0F               	movlw	15
  3171  000446  185F               	xorwf	__nextPos,w,c
  3172  000448  A4D8               	btfss	status,2,c
  3173  00044A  D034               	goto	i2l1883
  3174                           
  3175                           ;main.c: 231: {
  3176                           ;main.c: 232: if(_p2.paddlePos[0] == _nextPos[1])
  3177  00044C  5060               	movf	__nextPos+1,w,c
  3178  00044E  1859               	xorwf	__p2+2,w,c
  3179  000450  B4D8               	btfsc	status,2,c
  3180  000452  D008               	goto	i2l1853
  3181  000454  D014               	goto	i2l1861
  3182  000456                     i2l1845:
  3183                           
  3184                           ;main.c: 238: _ball.bDirection = 4;
  3185  000456  0E04               	movlw	4
  3186  000458  D003               	goto	L5
  3187  00045A                     i2l1847:
  3188                           
  3189                           ;main.c: 241: _ball.bDirection = 6;
  3190  00045A  0E06               	movlw	6
  3191  00045C  D001               	goto	L5
  3192  00045E                     i2l1849:
  3193                           
  3194                           ;main.c: 244: _ball.bDirection = 5;
  3195  00045E  0E05               	movlw	5
  3196  000460                     L5:
  3197  000460  6E5E               	movwf	__ball+2,c
  3198                           
  3199                           ;main.c: 246: }
  3200                           
  3201                           ;main.c: 245: break;
  3202  000462  D00A               	goto	i2l1855
  3203  000464                     i2l1853:
  3204  000464  505E               	movf	__ball+2,w,c
  3205                           
  3206                           ; Switch size 1, requested type "space"
  3207                           ; Number of cases is 3, Range of values is 1 to 3
  3208                           ; switch strategies available:
  3209                           ; Name         Instructions Cycles
  3210                           ; simple_byte           10     6 (average)
  3211                           ;	Chosen strategy is simple_byte
  3212  000466  0A01               	xorlw	1	; case 1
  3213  000468  B4D8               	btfsc	status,2,c
  3214  00046A  D7F5               	goto	i2l1845
  3215  00046C  0A03               	xorlw	3	; case 2
  3216  00046E  B4D8               	btfsc	status,2,c
  3217  000470  D7F4               	goto	i2l1847
  3218  000472  0A01               	xorlw	1	; case 3
  3219  000474  B4D8               	btfsc	status,2,c
  3220  000476  D7F3               	goto	i2l1849
  3221  000478                     i2l1855:
  3222                           
  3223                           ;main.c: 247: getNextPosition();
  3224  000478  EC32  F004         	call	_getNextPosition	;wreg free
  3225                           
  3226                           ;main.c: 248: return;
  3227  00047C  0012               	return	
  3228  00047E                     i2l1861:
  3229                           
  3230                           ;main.c: 250: else if( _p2.paddlePos[1] == _nextPos[1])
  3231  00047E  5060               	movf	__nextPos+1,w,c
  3232  000480  185A               	xorwf	__p2+3,w,c
  3233  000482  B4D8               	btfsc	status,2,c
  3234  000484  D006               	goto	i2l1873
  3235  000486  D012               	goto	i2l1879
  3236  000488                     i2l1867:
  3237                           
  3238                           ;main.c: 259: _ball.bDirection = 4;
  3239  000488  0E04               	movlw	4
  3240  00048A  D001               	goto	L6
  3241  00048C                     i2l1869:
  3242                           
  3243                           ;main.c: 262: _ball.bDirection = 6;
  3244  00048C  0E06               	movlw	6
  3245  00048E                     L6:
  3246  00048E  6E5E               	movwf	__ball+2,c
  3247                           
  3248                           ;main.c: 264: }
  3249                           
  3250                           ;main.c: 263: break;
  3251  000490  D00A               	goto	i2l1875
  3252  000492                     i2l1873:
  3253  000492  505E               	movf	__ball+2,w,c
  3254                           
  3255                           ; Switch size 1, requested type "space"
  3256                           ; Number of cases is 3, Range of values is 1 to 3
  3257                           ; switch strategies available:
  3258                           ; Name         Instructions Cycles
  3259                           ; simple_byte           10     6 (average)
  3260                           ;	Chosen strategy is simple_byte
  3261  000494  0A01               	xorlw	1	; case 1
  3262  000496  B4D8               	btfsc	status,2,c
  3263  000498  D7F7               	goto	i2l1867
  3264  00049A  0A03               	xorlw	3	; case 2
  3265  00049C  B4D8               	btfsc	status,2,c
  3266  00049E  D7F4               	goto	i2l1867
  3267  0004A0  0A01               	xorlw	1	; case 3
  3268  0004A2  B4D8               	btfsc	status,2,c
  3269  0004A4  D7F3               	goto	i2l1869
  3270  0004A6                     i2l1875:
  3271                           
  3272                           ;main.c: 265: getNextPosition();
  3273  0004A6  EC32  F004         	call	_getNextPosition	;wreg free
  3274                           
  3275                           ;main.c: 266: return;
  3276  0004AA  0012               	return	
  3277  0004AC                     i2l1879:
  3278                           
  3279                           ;main.c: 267: }
  3280                           ;main.c: 269: _p2.lives--;
  3281  0004AC  065B               	decf	__p2+4,f,c
  3282                           
  3283                           ;main.c: 270: startPong();
  3284  0004AE  EC9E  F005         	call	i2_startPong	;wreg free
  3285                           
  3286                           ;main.c: 271: }
  3287  0004B2  0012               	return	
  3288  0004B4                     i2l1883:
  3289                           
  3290                           ;main.c: 272: else if(_nextPos[1] < 0 || _nextPos[1] > 7)
  3291  0004B4  0E07               	movlw	7
  3292  0004B6  6460               	cpfsgt	__nextPos+1,c
  3293  0004B8  0012               	return	
  3294  0004BA  D009               	goto	i2l1897
  3295  0004BC                     i2l1887:
  3296                           
  3297                           ;main.c: 277: _ball.bDirection = 3;
  3298  0004BC  0E03               	movlw	3
  3299  0004BE  D005               	goto	L9
  3300  0004C0                     i2l1889:
  3301                           
  3302                           ;main.c: 280: _ball.bDirection = 1;
  3303  0004C0  0E01               	movlw	1
  3304  0004C2  D003               	goto	L9
  3305  0004C4                     i2l1891:
  3306                           
  3307                           ;main.c: 283: _ball.bDirection = 6;
  3308  0004C4  0E06               	movlw	6
  3309  0004C6  D001               	goto	L9
  3310  0004C8                     i2l1893:
  3311                           
  3312                           ;main.c: 286: _ball.bDirection = 4;
  3313  0004C8  0E04               	movlw	4
  3314  0004CA                     L9:
  3315  0004CA  6E5E               	movwf	__ball+2,c
  3316                           
  3317                           ;main.c: 288: }
  3318                           
  3319                           ;main.c: 287: break;
  3320  0004CC  D00D               	goto	i2l1899
  3321  0004CE                     i2l1897:
  3322  0004CE  505E               	movf	__ball+2,w,c
  3323                           
  3324                           ; Switch size 1, requested type "space"
  3325                           ; Number of cases is 4, Range of values is 1 to 6
  3326                           ; switch strategies available:
  3327                           ; Name         Instructions Cycles
  3328                           ; simple_byte           13     7 (average)
  3329                           ;	Chosen strategy is simple_byte
  3330  0004D0  0A01               	xorlw	1	; case 1
  3331  0004D2  B4D8               	btfsc	status,2,c
  3332  0004D4  D7F3               	goto	i2l1887
  3333  0004D6  0A02               	xorlw	2	; case 3
  3334  0004D8  B4D8               	btfsc	status,2,c
  3335  0004DA  D7F2               	goto	i2l1889
  3336  0004DC  0A07               	xorlw	7	; case 4
  3337  0004DE  B4D8               	btfsc	status,2,c
  3338  0004E0  D7F1               	goto	i2l1891
  3339  0004E2  0A02               	xorlw	2	; case 6
  3340  0004E4  B4D8               	btfsc	status,2,c
  3341  0004E6  D7F0               	goto	i2l1893
  3342  0004E8                     i2l1899:
  3343                           
  3344                           ;main.c: 289: getNextPosition();
  3345  0004E8  EC32  F004         	call	_getNextPosition	;wreg free
  3346                           
  3347                           ;main.c: 290: return;
  3348  0004EC  0012               	return	
  3349  0004EE                     __end_of_checkNextPosition:
  3350                           	opt stack 0
  3351                           pclatu	equ	0xFFB
  3352                           pclath	equ	0xFFA
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           intcon	equ	0xFF2
  3360                           postinc0	equ	0xFEE
  3361                           fsr0h	equ	0xFEA
  3362                           fsr0l	equ	0xFE9
  3363                           wreg	equ	0xFE8
  3364                           postdec1	equ	0xFE5
  3365                           plusw1	equ	0xFE3
  3366                           fsr1h	equ	0xFE2
  3367                           fsr1l	equ	0xFE1
  3368                           indf2	equ	0xFDF
  3369                           postinc2	equ	0xFDE
  3370                           plusw2	equ	0xFDB
  3371                           fsr2h	equ	0xFDA
  3372                           fsr2l	equ	0xFD9
  3373                           status	equ	0xFD8
  3374                           
  3375 ;; *************** function i2_startPong *****************
  3376 ;; Defined at:
  3377 ;;		line 58 in file "main.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3391 ;;      Params:         0       0       0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0
  3394 ;;      Totals:         0       0       0       0       0       0       0
  3395 ;;Total ram usage:        0 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    2
  3398 ;; This function calls:
  3399 ;;		i2_delaySeconds
  3400 ;;		i2_drawSymbol
  3401 ;;		i2_turnAllOff
  3402 ;; This function is called by:
  3403 ;;		_checkNextPosition
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text18
  3408  000B3C                     __ptext18:
  3409                           	opt stack 0
  3410  000B3C                     i2_startPong:
  3411                           	opt stack 22
  3412                           
  3413                           ;main.c: 61: turnAllOff();
  3414                           
  3415                           ;incstack = 0
  3416  000B3C  EC59  F005         	call	i2_turnAllOff	;wreg free
  3417                           
  3418                           ;main.c: 62: drawSymbol(_p1.lives, 0);
  3419  000B40  0E00               	movlw	0
  3420  000B42  6E37               	movwf	i2drawSymbol@offSetX,c
  3421  000B44  5056               	movf	__p1+4,w,c
  3422  000B46  ECFE  F000         	call	i2_drawSymbol
  3423                           
  3424                           ;main.c: 63: drawSymbol(_p2.lives, 8);
  3425  000B4A  0E08               	movlw	8
  3426  000B4C  6E37               	movwf	i2drawSymbol@offSetX,c
  3427  000B4E  505B               	movf	__p2+4,w,c
  3428  000B50  ECFE  F000         	call	i2_drawSymbol
  3429  000B54                     i2l1771:
  3430  000B54  0E00               	movlw	0
  3431  000B56  6E3A               	movwf	i2delaySeconds@numberOfSeconds+1,c
  3432  000B58  0E02               	movlw	2
  3433  000B5A  6E39               	movwf	i2delaySeconds@numberOfSeconds,c
  3434  000B5C  EC34  F005         	call	i2_delaySeconds	;wreg free
  3435  000B60  A0D8               	btfss	status,0,c
  3436  000B62  D7F8               	goto	i2l1771
  3437                           
  3438                           ;main.c: 65: turnAllOff();
  3439  000B64  EC59  F005         	call	i2_turnAllOff	;wreg free
  3440                           
  3441                           ;main.c: 68: _ball.bDirection = 3;
  3442  000B68  0E03               	movlw	3
  3443  000B6A  6E5E               	movwf	__ball+2,c
  3444                           
  3445                           ;main.c: 69: _ball.bPos[0] = 2;
  3446  000B6C  0E02               	movlw	2
  3447  000B6E  6E5C               	movwf	__ball,c
  3448                           
  3449                           ;main.c: 70: _ball.bPos[1] = 4;
  3450  000B70  0E04               	movlw	4
  3451  000B72  6E5D               	movwf	__ball+1,c
  3452                           
  3453                           ;main.c: 72: _nextPos[0] = _ball.bPos[0];
  3454  000B74  C05C  F05F         	movff	__ball,__nextPos
  3455                           
  3456                           ;main.c: 73: _nextPos[1] = _ball.bPos[1];
  3457  000B78  C05D  F060         	movff	__ball+1,__nextPos+1
  3458  000B7C  0012               	return		;funcret
  3459  000B7E                     __end_ofi2_startPong:
  3460                           	opt stack 0
  3461                           pclatu	equ	0xFFB
  3462                           pclath	equ	0xFFA
  3463                           tblptru	equ	0xFF8
  3464                           tblptrh	equ	0xFF7
  3465                           tblptrl	equ	0xFF6
  3466                           tablat	equ	0xFF5
  3467                           prodh	equ	0xFF4
  3468                           prodl	equ	0xFF3
  3469                           intcon	equ	0xFF2
  3470                           postinc0	equ	0xFEE
  3471                           fsr0h	equ	0xFEA
  3472                           fsr0l	equ	0xFE9
  3473                           wreg	equ	0xFE8
  3474                           postdec1	equ	0xFE5
  3475                           plusw1	equ	0xFE3
  3476                           fsr1h	equ	0xFE2
  3477                           fsr1l	equ	0xFE1
  3478                           indf2	equ	0xFDF
  3479                           postinc2	equ	0xFDE
  3480                           plusw2	equ	0xFDB
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function i2_drawSymbol *****************
  3486 ;; Defined at:
  3487 ;;		line 89 in file "Source/LED-API.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  chosenSymbol    1    wreg     unsigned char 
  3490 ;;  offSetX         1    4[COMRAM] unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  chosenSymbol    1  212[BANK1 ] unsigned char 
  3493 ;;  drawSymbol     68   68[BANK1 ] unsigned char [2][34]
  3494 ;;  drawSymbol     68    0[BANK1 ] unsigned char [2][34]
  3495 ;;  drawSymbol     28  136[BANK1 ] unsigned char [2][14]
  3496 ;;  drawSymbol     24  188[BANK1 ] unsigned char [2][12]
  3497 ;;  drawSymbol     24  164[BANK1 ] unsigned char [2][12]
  3498 ;;  drawSymbol      1  217[BANK1 ] unsigned char 
  3499 ;;  drawSymbol      1  216[BANK1 ] unsigned char 
  3500 ;;  drawSymbol      1  215[BANK1 ] unsigned char 
  3501 ;;  drawSymbol      1  214[BANK1 ] unsigned char 
  3502 ;;  drawSymbol      1  213[BANK1 ] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3512 ;;      Params:         1       0       0       0       0       0       0
  3513 ;;      Locals:         0       0     218       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0
  3515 ;;      Totals:         1       0     218       0       0       0       0
  3516 ;;Total ram usage:      219 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    1
  3519 ;; This function calls:
  3520 ;;		i2_on
  3521 ;;		i2_turnAllOff
  3522 ;; This function is called by:
  3523 ;;		i2_startPong
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text19
  3528  0001FC                     __ptext19:
  3529                           	opt stack 0
  3530  0001FC                     i2_drawSymbol:
  3531                           	opt stack 22
  3532                           
  3533                           ;incstack = 0
  3534                           ;i2drawSymbol@chosenSymbol stored from wreg
  3535  0001FC  0101               	movlb	1	; () banked
  3536  0001FE  6FD4               	movwf	i2drawSymbol@chosenSymbol& (0+255),b
  3537                           
  3538                           ;LED-API.c: 91: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  3539  000200  EE20  F001         	lfsr	2,drawSymbol@F3226
  3540  000204  EE11  F0A4         	lfsr	1,i2drawSymbol@symbolOne
  3541  000208  0E17               	movlw	23
  3542  00020A                     i2u112_41:
  3543  00020A  CFDB FFE3          	movff	plusw2,plusw1
  3544  00020E  06E8               	decf	wreg,f,c
  3545  000210  E2FC               	bc	i2u112_41
  3546                           
  3547                           ;LED-API.c: 92: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  3548  000212  EE22  F0DD         	lfsr	2,drawSymbol@F3229
  3549  000216  EE11  F088         	lfsr	1,i2drawSymbol@symbolTwo
  3550  00021A  0E1B               	movlw	27
  3551  00021C                     i2u113_41:
  3552  00021C  CFDB FFE3          	movff	plusw2,plusw1
  3553  000220  06E8               	decf	wreg,f,c
  3554  000222  E2FC               	bc	i2u113_41
  3555                           
  3556                           ;LED-API.c: 93: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  3557  000224  EE20  F019         	lfsr	2,drawSymbol@F3232
  3558  000228  EE11  F0BC         	lfsr	1,i2drawSymbol@symbolThree
  3559  00022C  0E17               	movlw	23
  3560  00022E                     i2u114_41:
  3561  00022E  CFDB FFE3          	movff	plusw2,plusw1
  3562  000232  06E8               	decf	wreg,f,c
  3563  000234  E2FC               	bc	i2u114_41
  3564                           
  3565                           ;LED-API.c: 95: char symbolPlay[34][2] = {
  3566                           ;LED-API.c: 96: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  3567                           ;LED-API.c: 97: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  3568                           ;LED-API.c: 98: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  3569                           ;LED-API.c: 99: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  3570  000236  EE23  F000         	lfsr	2,drawSymbol@F3235
  3571  00023A  EE11  F044         	lfsr	1,i2drawSymbol@symbolPlay
  3572  00023E  0E43               	movlw	67
  3573  000240                     i2u115_41:
  3574  000240  CFDB FFE3          	movff	plusw2,plusw1
  3575  000244  06E8               	decf	wreg,f,c
  3576  000246  E2FC               	bc	i2u115_41
  3577                           
  3578                           ;LED-API.c: 101: char symbolGo[34][2] = {
  3579                           ;LED-API.c: 102: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0}
      +                          ,{5,0},{6,1},{5,2},{4,2},
  3580                           ;LED-API.c: 103: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},
      +                          {13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  3581  000248  EE23  F044         	lfsr	2,drawSymbol@F3238
  3582  00024C  EE11  F000         	lfsr	1,i2drawSymbol@symbolGo
  3583  000250  0E43               	movlw	67
  3584  000252                     i2u116_41:
  3585  000252  CFDB FFE3          	movff	plusw2,plusw1
  3586  000256  06E8               	decf	wreg,f,c
  3587  000258  E2FC               	bc	i2u116_41
  3588                           
  3589                           ;LED-API.c: 105: switch(chosenSymbol)
  3590  00025A  D0AB               	goto	i2l1721
  3591  00025C                     i2l1657:
  3592                           
  3593                           ;LED-API.c: 110: for(unsigned char i = 0; i < 12; i++)
  3594  00025C  0E00               	movlw	0
  3595  00025E  0101               	movlb	1	; () banked
  3596  000260  6FD6               	movwf	i2drawSymbol@i& (0+255),b
  3597  000262                     i2l1659:
  3598                           
  3599                           ; BSR set to: 1
  3600  000262  0E0B               	movlw	11
  3601  000264  0101               	movlb	1	; () banked
  3602  000266  65D6               	cpfsgt	i2drawSymbol@i& (0+255),b
  3603  000268  D001               	goto	i2l1663
  3604  00026A  0012               	return	
  3605  00026C                     i2l1663:
  3606                           
  3607                           ; BSR set to: 1
  3608                           ;LED-API.c: 111: {
  3609                           ;LED-API.c: 112: on(symbolOne[i][0] + offSetX, symbolOne[i][1]);
  3610  00026C  0101               	movlb	1	; () banked
  3611  00026E  51D6               	movf	i2drawSymbol@i& (0+255),w,b
  3612  000270  0D02               	mullw	2
  3613  000272  0E01               	movlw	1
  3614  000274  26F3               	addwf	prodl,f,c
  3615  000276  0E00               	movlw	0
  3616  000278  22F4               	addwfc	prodh,f,c
  3617  00027A  0EA4               	movlw	low i2drawSymbol@symbolOne
  3618  00027C  24F3               	addwf	prodl,w,c
  3619  00027E  6ED9               	movwf	fsr2l,c
  3620  000280  0E01               	movlw	high i2drawSymbol@symbolOne
  3621  000282  20F4               	addwfc	prodh,w,c
  3622  000284  6EDA               	movwf	fsr2h,c
  3623  000286  50DF               	movf	indf2,w,c
  3624  000288  6E33               	movwf	i2on@row,c
  3625  00028A  0101               	movlb	1	; () banked
  3626  00028C  51D6               	movf	i2drawSymbol@i& (0+255),w,b
  3627  00028E  0D02               	mullw	2
  3628  000290  0EA4               	movlw	low i2drawSymbol@symbolOne
  3629  000292  24F3               	addwf	prodl,w,c
  3630  000294  6ED9               	movwf	fsr2l,c
  3631  000296  0E01               	movlw	high i2drawSymbol@symbolOne
  3632  000298  20F4               	addwfc	prodh,w,c
  3633  00029A  6EDA               	movwf	fsr2h,c
  3634  00029C  50DF               	movf	indf2,w,c
  3635  00029E  2437               	addwf	i2drawSymbol@offSetX,w,c
  3636  0002A0  ECFD  F005         	call	i2_on
  3637  0002A4  0101               	movlb	1	; () banked
  3638  0002A6  2BD6               	incf	i2drawSymbol@i& (0+255),f,b
  3639  0002A8  D7DC               	goto	i2l1659
  3640  0002AA                     i2l1669:
  3641                           
  3642                           ; BSR set to: 1
  3643                           ;LED-API.c: 118: for(unsigned char i = 0; i < 14; i++)
  3644  0002AA  0E00               	movlw	0
  3645  0002AC  0101               	movlb	1	; () banked
  3646  0002AE  6FD7               	movwf	i2drawSymbol@i_78& (0+255),b
  3647  0002B0                     i2l1671:
  3648                           
  3649                           ; BSR set to: 1
  3650  0002B0  0E0D               	movlw	13
  3651  0002B2  0101               	movlb	1	; () banked
  3652  0002B4  65D7               	cpfsgt	i2drawSymbol@i_78& (0+255),b
  3653  0002B6  D001               	goto	i2l1675
  3654  0002B8  0012               	return	
  3655  0002BA                     i2l1675:
  3656                           
  3657                           ; BSR set to: 1
  3658                           ;LED-API.c: 119: {
  3659                           ;LED-API.c: 120: on(symbolTwo[i][0] + offSetX, symbolTwo[i][1]);
  3660  0002BA  0101               	movlb	1	; () banked
  3661  0002BC  51D7               	movf	i2drawSymbol@i_78& (0+255),w,b
  3662  0002BE  0D02               	mullw	2
  3663  0002C0  0E01               	movlw	1
  3664  0002C2  26F3               	addwf	prodl,f,c
  3665  0002C4  0E00               	movlw	0
  3666  0002C6  22F4               	addwfc	prodh,f,c
  3667  0002C8  0E88               	movlw	low i2drawSymbol@symbolTwo
  3668  0002CA  24F3               	addwf	prodl,w,c
  3669  0002CC  6ED9               	movwf	fsr2l,c
  3670  0002CE  0E01               	movlw	high i2drawSymbol@symbolTwo
  3671  0002D0  20F4               	addwfc	prodh,w,c
  3672  0002D2  6EDA               	movwf	fsr2h,c
  3673  0002D4  50DF               	movf	indf2,w,c
  3674  0002D6  6E33               	movwf	i2on@row,c
  3675  0002D8  0101               	movlb	1	; () banked
  3676  0002DA  51D7               	movf	i2drawSymbol@i_78& (0+255),w,b
  3677  0002DC  0D02               	mullw	2
  3678  0002DE  0E88               	movlw	low i2drawSymbol@symbolTwo
  3679  0002E0  24F3               	addwf	prodl,w,c
  3680  0002E2  6ED9               	movwf	fsr2l,c
  3681  0002E4  0E01               	movlw	high i2drawSymbol@symbolTwo
  3682  0002E6  20F4               	addwfc	prodh,w,c
  3683  0002E8  6EDA               	movwf	fsr2h,c
  3684  0002EA  50DF               	movf	indf2,w,c
  3685  0002EC  2437               	addwf	i2drawSymbol@offSetX,w,c
  3686  0002EE  ECFD  F005         	call	i2_on
  3687  0002F2  0101               	movlb	1	; () banked
  3688  0002F4  2BD7               	incf	i2drawSymbol@i_78& (0+255),f,b
  3689  0002F6  D7DC               	goto	i2l1671
  3690  0002F8                     i2l1681:
  3691                           
  3692                           ; BSR set to: 1
  3693                           ;LED-API.c: 126: for(unsigned char i = 0; i < 12; i++)
  3694  0002F8  0E00               	movlw	0
  3695  0002FA  0101               	movlb	1	; () banked
  3696  0002FC  6FD8               	movwf	i2drawSymbol@i_79& (0+255),b
  3697  0002FE                     i2l1683:
  3698                           
  3699                           ; BSR set to: 1
  3700  0002FE  0E0B               	movlw	11
  3701  000300  0101               	movlb	1	; () banked
  3702  000302  65D8               	cpfsgt	i2drawSymbol@i_79& (0+255),b
  3703  000304  D001               	goto	i2l1687
  3704  000306  0012               	return	
  3705  000308                     i2l1687:
  3706                           
  3707                           ; BSR set to: 1
  3708                           ;LED-API.c: 127: {
  3709                           ;LED-API.c: 128: on(symbolThree[i][0] + offSetX, symbolThree[i][1]);
  3710  000308  0101               	movlb	1	; () banked
  3711  00030A  51D8               	movf	i2drawSymbol@i_79& (0+255),w,b
  3712  00030C  0D02               	mullw	2
  3713  00030E  0E01               	movlw	1
  3714  000310  26F3               	addwf	prodl,f,c
  3715  000312  0E00               	movlw	0
  3716  000314  22F4               	addwfc	prodh,f,c
  3717  000316  0EBC               	movlw	low i2drawSymbol@symbolThree
  3718  000318  24F3               	addwf	prodl,w,c
  3719  00031A  6ED9               	movwf	fsr2l,c
  3720  00031C  0E01               	movlw	high i2drawSymbol@symbolThree
  3721  00031E  20F4               	addwfc	prodh,w,c
  3722  000320  6EDA               	movwf	fsr2h,c
  3723  000322  50DF               	movf	indf2,w,c
  3724  000324  6E33               	movwf	i2on@row,c
  3725  000326  0101               	movlb	1	; () banked
  3726  000328  51D8               	movf	i2drawSymbol@i_79& (0+255),w,b
  3727  00032A  0D02               	mullw	2
  3728  00032C  0EBC               	movlw	low i2drawSymbol@symbolThree
  3729  00032E  24F3               	addwf	prodl,w,c
  3730  000330  6ED9               	movwf	fsr2l,c
  3731  000332  0E01               	movlw	high i2drawSymbol@symbolThree
  3732  000334  20F4               	addwfc	prodh,w,c
  3733  000336  6EDA               	movwf	fsr2h,c
  3734  000338  50DF               	movf	indf2,w,c
  3735  00033A  2437               	addwf	i2drawSymbol@offSetX,w,c
  3736  00033C  ECFD  F005         	call	i2_on
  3737  000340  0101               	movlb	1	; () banked
  3738  000342  2BD8               	incf	i2drawSymbol@i_79& (0+255),f,b
  3739  000344  D7DC               	goto	i2l1683
  3740  000346                     i2l1693:
  3741                           
  3742                           ; BSR set to: 1
  3743                           ;LED-API.c: 134: turnAllOff();
  3744  000346  EC59  F005         	call	i2_turnAllOff	;wreg free
  3745                           
  3746                           ;LED-API.c: 135: for(unsigned char i = 0; i < 34; i++)
  3747  00034A  0E00               	movlw	0
  3748  00034C  0101               	movlb	1	; () banked
  3749  00034E  6FD9               	movwf	i2drawSymbol@i_80& (0+255),b
  3750  000350                     i2l1697:
  3751                           
  3752                           ; BSR set to: 1
  3753  000350  0E21               	movlw	33
  3754  000352  0101               	movlb	1	; () banked
  3755  000354  65D9               	cpfsgt	i2drawSymbol@i_80& (0+255),b
  3756  000356  D001               	goto	i2l1701
  3757  000358  0012               	return	
  3758  00035A                     i2l1701:
  3759                           
  3760                           ; BSR set to: 1
  3761                           ;LED-API.c: 136: {
  3762                           ;LED-API.c: 137: on(symbolPlay[i][0] + offSetX, symbolPlay[i][1]);
  3763  00035A  0101               	movlb	1	; () banked
  3764  00035C  51D9               	movf	i2drawSymbol@i_80& (0+255),w,b
  3765  00035E  0D02               	mullw	2
  3766  000360  0E01               	movlw	1
  3767  000362  26F3               	addwf	prodl,f,c
  3768  000364  0E00               	movlw	0
  3769  000366  22F4               	addwfc	prodh,f,c
  3770  000368  0E44               	movlw	low i2drawSymbol@symbolPlay
  3771  00036A  24F3               	addwf	prodl,w,c
  3772  00036C  6ED9               	movwf	fsr2l,c
  3773  00036E  0E01               	movlw	high i2drawSymbol@symbolPlay
  3774  000370  20F4               	addwfc	prodh,w,c
  3775  000372  6EDA               	movwf	fsr2h,c
  3776  000374  50DF               	movf	indf2,w,c
  3777  000376  6E33               	movwf	i2on@row,c
  3778  000378  0101               	movlb	1	; () banked
  3779  00037A  51D9               	movf	i2drawSymbol@i_80& (0+255),w,b
  3780  00037C  0D02               	mullw	2
  3781  00037E  0E44               	movlw	low i2drawSymbol@symbolPlay
  3782  000380  24F3               	addwf	prodl,w,c
  3783  000382  6ED9               	movwf	fsr2l,c
  3784  000384  0E01               	movlw	high i2drawSymbol@symbolPlay
  3785  000386  20F4               	addwfc	prodh,w,c
  3786  000388  6EDA               	movwf	fsr2h,c
  3787  00038A  50DF               	movf	indf2,w,c
  3788  00038C  2437               	addwf	i2drawSymbol@offSetX,w,c
  3789  00038E  ECFD  F005         	call	i2_on
  3790  000392  0101               	movlb	1	; () banked
  3791  000394  2BD9               	incf	i2drawSymbol@i_80& (0+255),f,b
  3792  000396  D7DC               	goto	i2l1697
  3793  000398                     i2l1707:
  3794                           
  3795                           ; BSR set to: 1
  3796                           ;LED-API.c: 143: turnAllOff();
  3797  000398  EC59  F005         	call	i2_turnAllOff	;wreg free
  3798                           
  3799                           ;LED-API.c: 144: for(unsigned char i = 0; i < 34; i++)
  3800  00039C  0E00               	movlw	0
  3801  00039E  0101               	movlb	1	; () banked
  3802  0003A0  6FD5               	movwf	i2drawSymbol@i_81& (0+255),b
  3803  0003A2                     i2l1711:
  3804                           
  3805                           ; BSR set to: 1
  3806  0003A2  0E21               	movlw	33
  3807  0003A4  0101               	movlb	1	; () banked
  3808  0003A6  65D5               	cpfsgt	i2drawSymbol@i_81& (0+255),b
  3809  0003A8  D001               	goto	i2l1715
  3810  0003AA  0012               	return	
  3811  0003AC                     i2l1715:
  3812                           
  3813                           ; BSR set to: 1
  3814                           ;LED-API.c: 145: {
  3815  0003AC  0101               	movlb	1	; () banked
  3816  0003AE  2BD5               	incf	i2drawSymbol@i_81& (0+255),f,b
  3817  0003B0  D7F8               	goto	i2l1711
  3818  0003B2                     i2l1721:
  3819  0003B2  0101               	movlb	1	; () banked
  3820  0003B4  51D4               	movf	i2drawSymbol@chosenSymbol& (0+255),w,b
  3821                           
  3822                           ; Switch size 1, requested type "space"
  3823                           ; Number of cases is 5, Range of values is 1 to 5
  3824                           ; switch strategies available:
  3825                           ; Name         Instructions Cycles
  3826                           ; simple_byte           16     9 (average)
  3827                           ;	Chosen strategy is simple_byte
  3828  0003B6  0A01               	xorlw	1	; case 1
  3829  0003B8  B4D8               	btfsc	status,2,c
  3830  0003BA  D750               	goto	i2l1657
  3831  0003BC  0A03               	xorlw	3	; case 2
  3832  0003BE  B4D8               	btfsc	status,2,c
  3833  0003C0  D774               	goto	i2l1669
  3834  0003C2  0A01               	xorlw	1	; case 3
  3835  0003C4  B4D8               	btfsc	status,2,c
  3836  0003C6  D798               	goto	i2l1681
  3837  0003C8  0A07               	xorlw	7	; case 4
  3838  0003CA  B4D8               	btfsc	status,2,c
  3839  0003CC  D7BC               	goto	i2l1693
  3840  0003CE  0A01               	xorlw	1	; case 5
  3841  0003D0  A4D8               	btfss	status,2,c
  3842  0003D2  0012               	return	
  3843  0003D4  D7E1               	goto	i2l1707
  3844  0003D6                     __end_ofi2_drawSymbol:
  3845                           	opt stack 0
  3846                           pclatu	equ	0xFFB
  3847                           pclath	equ	0xFFA
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           postinc0	equ	0xFEE
  3856                           fsr0h	equ	0xFEA
  3857                           fsr0l	equ	0xFE9
  3858                           wreg	equ	0xFE8
  3859                           postdec1	equ	0xFE5
  3860                           plusw1	equ	0xFE3
  3861                           fsr1h	equ	0xFE2
  3862                           fsr1l	equ	0xFE1
  3863                           indf2	equ	0xFDF
  3864                           postinc2	equ	0xFDE
  3865                           plusw2	equ	0xFDB
  3866                           fsr2h	equ	0xFDA
  3867                           fsr2l	equ	0xFD9
  3868                           status	equ	0xFD8
  3869                           
  3870 ;; *************** function i2_turnAllOff *****************
  3871 ;; Defined at:
  3872 ;;		line 152 in file "Source/LED-API.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  turnAllOff      1    3[COMRAM] unsigned char 
  3877 ;;  turnAllOff      1    2[COMRAM] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3887 ;;      Params:         0       0       0       0       0       0       0
  3888 ;;      Locals:         2       0       0       0       0       0       0
  3889 ;;      Temps:          2       0       0       0       0       0       0
  3890 ;;      Totals:         4       0       0       0       0       0       0
  3891 ;;Total ram usage:        4 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		i2_drawSymbol
  3897 ;;		i2_startPong
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text20
  3902  000AB2                     __ptext20:
  3903                           	opt stack 0
  3904  000AB2                     i2_turnAllOff:
  3905                           	opt stack 23
  3906                           
  3907                           ;LED-API.c: 155: for (unsigned char i = 0; i < 8; i++) {
  3908                           
  3909                           ; BSR set to: 1
  3910                           ;incstack = 0
  3911  000AB2  0E00               	movlw	0
  3912  000AB4  6E35               	movwf	i2turnAllOff@i,c
  3913  000AB6                     i2l1549:
  3914  000AB6  0E07               	movlw	7
  3915  000AB8  6435               	cpfsgt	i2turnAllOff@i,c
  3916  000ABA  D001               	goto	i2l1553
  3917  000ABC  0012               	return	
  3918  000ABE                     i2l1553:
  3919                           
  3920                           ;LED-API.c: 156: for (unsigned char j = 0; j < 16; j++) {
  3921  000ABE  0E00               	movlw	0
  3922  000AC0  6E36               	movwf	i2turnAllOff@j,c
  3923  000AC2                     i2l1555:
  3924  000AC2  0E0F               	movlw	15
  3925  000AC4  6436               	cpfsgt	i2turnAllOff@j,c
  3926  000AC6  D001               	goto	i2l1559
  3927  000AC8  D016               	goto	i2l1565
  3928  000ACA                     i2l1559:
  3929                           
  3930                           ;LED-API.c: 157: pixels[i][j] = 0;
  3931  000ACA  5035               	movf	i2turnAllOff@i,w,c
  3932  000ACC  0D10               	mullw	16
  3933  000ACE  0E80               	movlw	low _pixels
  3934  000AD0  6E33               	movwf	??i2_turnAllOff& (0+255),c
  3935  000AD2  0E00               	movlw	high _pixels
  3936  000AD4  6E34               	movwf	(??i2_turnAllOff+1)& (0+255),c
  3937  000AD6  50F3               	movf	prodl,w,c
  3938  000AD8  2633               	addwf	??i2_turnAllOff,f,c
  3939  000ADA  50F4               	movf	prodh,w,c
  3940  000ADC  2234               	addwfc	??i2_turnAllOff+1,f,c
  3941  000ADE  5036               	movf	i2turnAllOff@j,w,c
  3942  000AE0  0D01               	mullw	1
  3943  000AE2  50F3               	movf	prodl,w,c
  3944  000AE4  2433               	addwf	??i2_turnAllOff,w,c
  3945  000AE6  6ED9               	movwf	fsr2l,c
  3946  000AE8  50F4               	movf	prodh,w,c
  3947  000AEA  2034               	addwfc	??i2_turnAllOff+1,w,c
  3948  000AEC  6EDA               	movwf	fsr2h,c
  3949  000AEE  0E00               	movlw	0
  3950  000AF0  6EDF               	movwf	indf2,c
  3951  000AF2  2A36               	incf	i2turnAllOff@j,f,c
  3952  000AF4  D7E6               	goto	i2l1555
  3953  000AF6                     i2l1565:
  3954  000AF6  2A35               	incf	i2turnAllOff@i,f,c
  3955  000AF8  D7DE               	goto	i2l1549
  3956  000AFA                     __end_ofi2_turnAllOff:
  3957                           	opt stack 0
  3958                           pclatu	equ	0xFFB
  3959                           pclath	equ	0xFFA
  3960                           tblptru	equ	0xFF8
  3961                           tblptrh	equ	0xFF7
  3962                           tblptrl	equ	0xFF6
  3963                           tablat	equ	0xFF5
  3964                           prodh	equ	0xFF4
  3965                           prodl	equ	0xFF3
  3966                           intcon	equ	0xFF2
  3967                           postinc0	equ	0xFEE
  3968                           fsr0h	equ	0xFEA
  3969                           fsr0l	equ	0xFE9
  3970                           wreg	equ	0xFE8
  3971                           postdec1	equ	0xFE5
  3972                           plusw1	equ	0xFE3
  3973                           fsr1h	equ	0xFE2
  3974                           fsr1l	equ	0xFE1
  3975                           indf2	equ	0xFDF
  3976                           postinc2	equ	0xFDE
  3977                           plusw2	equ	0xFDB
  3978                           fsr2h	equ	0xFDA
  3979                           fsr2l	equ	0xFD9
  3980                           status	equ	0xFD8
  3981                           
  3982 ;; *************** function i2_on *****************
  3983 ;; Defined at:
  3984 ;;		line 47 in file "Source/LED-API.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  column          1    wreg     unsigned char 
  3987 ;;  row             1    0[COMRAM] unsigned char 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  column          1    3[COMRAM] unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3999 ;;      Params:         1       0       0       0       0       0       0
  4000 ;;      Locals:         1       0       0       0       0       0       0
  4001 ;;      Temps:          2       0       0       0       0       0       0
  4002 ;;      Totals:         4       0       0       0       0       0       0
  4003 ;;Total ram usage:        4 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_writePong
  4009 ;;		i2_drawSymbol
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text21
  4014  000BFA                     __ptext21:
  4015                           	opt stack 0
  4016  000BFA                     i2_on:
  4017                           	opt stack 24
  4018                           
  4019                           ;incstack = 0
  4020                           ;i2on@column stored from wreg
  4021  000BFA  6E36               	movwf	i2on@column,c
  4022                           
  4023                           ;LED-API.c: 49: if (row < 0 || row >= 16)
  4024  000BFC  0E0F               	movlw	15
  4025  000BFE  6433               	cpfsgt	i2on@row,c
  4026  000C00  D001               	goto	i2l1541
  4027  000C02  0012               	return	
  4028  000C04                     i2l1541:
  4029                           
  4030                           ;LED-API.c: 51: if (column < 0 || column >= 8)
  4031  000C04  0E07               	movlw	7
  4032  000C06  6436               	cpfsgt	i2on@column,c
  4033  000C08  D001               	goto	i2l1545
  4034  000C0A  0012               	return	
  4035  000C0C                     i2l1545:
  4036                           
  4037                           ;LED-API.c: 54: pixels[column][row] = 1;
  4038  000C0C  5036               	movf	i2on@column,w,c
  4039  000C0E  0D10               	mullw	16
  4040  000C10  0E80               	movlw	low _pixels
  4041  000C12  6E34               	movwf	??i2_on& (0+255),c
  4042  000C14  0E00               	movlw	high _pixels
  4043  000C16  6E35               	movwf	(??i2_on+1)& (0+255),c
  4044  000C18  50F3               	movf	prodl,w,c
  4045  000C1A  2634               	addwf	??i2_on,f,c
  4046  000C1C  50F4               	movf	prodh,w,c
  4047  000C1E  2235               	addwfc	??i2_on+1,f,c
  4048  000C20  5033               	movf	i2on@row,w,c
  4049  000C22  0D01               	mullw	1
  4050  000C24  50F3               	movf	prodl,w,c
  4051  000C26  2434               	addwf	??i2_on,w,c
  4052  000C28  6ED9               	movwf	fsr2l,c
  4053  000C2A  50F4               	movf	prodh,w,c
  4054  000C2C  2035               	addwfc	??i2_on+1,w,c
  4055  000C2E  6EDA               	movwf	fsr2h,c
  4056  000C30  0E01               	movlw	1
  4057  000C32  6EDF               	movwf	indf2,c
  4058  000C34  0012               	return		;funcret
  4059  000C36                     __end_ofi2_on:
  4060                           	opt stack 0
  4061                           pclatu	equ	0xFFB
  4062                           pclath	equ	0xFFA
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           intcon	equ	0xFF2
  4070                           postinc0	equ	0xFEE
  4071                           fsr0h	equ	0xFEA
  4072                           fsr0l	equ	0xFE9
  4073                           wreg	equ	0xFE8
  4074                           postdec1	equ	0xFE5
  4075                           plusw1	equ	0xFE3
  4076                           fsr1h	equ	0xFE2
  4077                           fsr1l	equ	0xFE1
  4078                           indf2	equ	0xFDF
  4079                           postinc2	equ	0xFDE
  4080                           plusw2	equ	0xFDB
  4081                           fsr2h	equ	0xFDA
  4082                           fsr2l	equ	0xFD9
  4083                           status	equ	0xFD8
  4084                           
  4085 ;; *************** function i2_delaySeconds *****************
  4086 ;; Defined at:
  4087 ;;		line 49 in file "main.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  numberOfSeco    2    6[COMRAM] int 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  delaySeconds    2    9[COMRAM] int 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;		None               void
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4101 ;;      Params:         2       0       0       0       0       0       0
  4102 ;;      Locals:         2       0       0       0       0       0       0
  4103 ;;      Temps:          1       0       0       0       0       0       0
  4104 ;;      Totals:         5       0       0       0       0       0       0
  4105 ;;Total ram usage:        5 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    1
  4108 ;; This function calls:
  4109 ;;		i2___wmul
  4110 ;; This function is called by:
  4111 ;;		i2_startPong
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text22
  4116  000A68                     __ptext22:
  4117                           	opt stack 0
  4118  000A68                     i2_delaySeconds:
  4119                           	opt stack 22
  4120                           
  4121                           ;main.c: 51: for(int i = 0; i < numberOfSeconds * 100; i++)
  4122                           
  4123                           ;incstack = 0
  4124  000A68  0E00               	movlw	0
  4125  000A6A  6E3D               	movwf	i2delaySeconds@i+1,c
  4126  000A6C  0E00               	movlw	0
  4127  000A6E  6E3C               	movwf	i2delaySeconds@i,c
  4128  000A70  D00A               	goto	i2l1729
  4129  000A72                     i2l1725:
  4130                           
  4131                           ;main.c: 52: _delay((unsigned long)((10)*(32000000/4000.0)));
  4132  000A72  0E68               	movlw	104
  4133  000A74  6E3B               	movwf	??i2_delaySeconds& (0+255),c
  4134  000A76  0EE4               	movlw	228
  4135  000A78                     i2u186_47:
  4136  000A78  2EE8               	decfsz	wreg,f,c
  4137  000A7A  D7FE               	goto	i2u186_47
  4138  000A7C  2E3B               	decfsz	??i2_delaySeconds& (0+255),f,c
  4139  000A7E  D7FC               	goto	i2u186_47
  4140  000A80  D000               	nop2	
  4141  000A82  4A3C               	infsnz	i2delaySeconds@i,f,c
  4142  000A84  2A3D               	incf	i2delaySeconds@i+1,f,c
  4143  000A86                     i2l1729:
  4144  000A86  C039  F033         	movff	i2delaySeconds@numberOfSeconds,i2___wmul@multiplier
  4145  000A8A  C03A  F034         	movff	i2delaySeconds@numberOfSeconds+1,i2___wmul@multiplier+1
  4146  000A8E  0E00               	movlw	0
  4147  000A90  6E36               	movwf	i2___wmul@multiplicand+1,c
  4148  000A92  0E64               	movlw	100
  4149  000A94  6E35               	movwf	i2___wmul@multiplicand,c
  4150  000A96  EC4D  F006         	call	i2___wmul	;wreg free
  4151  000A9A  5033               	movf	?i2___wmul,w,c
  4152  000A9C  5C3C               	subwf	i2delaySeconds@i,w,c
  4153  000A9E  503D               	movf	i2delaySeconds@i+1,w,c
  4154  000AA0  0A80               	xorlw	128
  4155  000AA2  6E3B               	movwf	??i2_delaySeconds& (0+255),c
  4156  000AA4  5034               	movf	?i2___wmul+1,w,c
  4157  000AA6  0A80               	xorlw	128
  4158  000AA8  583B               	subwfb	??i2_delaySeconds& (0+255),w,c
  4159  000AAA  A0D8               	btfss	status,0,c
  4160  000AAC  D7E2               	goto	i2l1725
  4161                           
  4162                           ;main.c: 54: return 1;
  4163  000AAE  80D8               	bsf	status,0,c
  4164  000AB0  0012               	return	
  4165  000AB2                     __end_ofi2_delaySeconds:
  4166                           	opt stack 0
  4167                           pclatu	equ	0xFFB
  4168                           pclath	equ	0xFFA
  4169                           tblptru	equ	0xFF8
  4170                           tblptrh	equ	0xFF7
  4171                           tblptrl	equ	0xFF6
  4172                           tablat	equ	0xFF5
  4173                           prodh	equ	0xFF4
  4174                           prodl	equ	0xFF3
  4175                           intcon	equ	0xFF2
  4176                           postinc0	equ	0xFEE
  4177                           fsr0h	equ	0xFEA
  4178                           fsr0l	equ	0xFE9
  4179                           wreg	equ	0xFE8
  4180                           postdec1	equ	0xFE5
  4181                           plusw1	equ	0xFE3
  4182                           fsr1h	equ	0xFE2
  4183                           fsr1l	equ	0xFE1
  4184                           indf2	equ	0xFDF
  4185                           postinc2	equ	0xFDE
  4186                           plusw2	equ	0xFDB
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function i2___wmul *****************
  4192 ;; Defined at:
  4193 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  multiplier      2    0[COMRAM] unsigned int 
  4196 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  __wmul          2    4[COMRAM] unsigned int 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2    0[COMRAM] unsigned int 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0, prodl, prodh
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4208 ;;      Params:         4       0       0       0       0       0       0
  4209 ;;      Locals:         2       0       0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0
  4211 ;;      Totals:         6       0       0       0       0       0       0
  4212 ;;Total ram usage:        6 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		i2_delaySeconds
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text23
  4222  000C9A                     __ptext23:
  4223                           	opt stack 0
  4224  000C9A                     i2___wmul:
  4225                           	opt stack 22
  4226                           
  4227                           ;incstack = 0
  4228  000C9A  5033               	movf	i2___wmul@multiplier,w,c
  4229  000C9C  0235               	mulwf	i2___wmul@multiplicand,c
  4230  000C9E  CFF3 F037          	movff	prodl,i2___wmul@product
  4231  000CA2  CFF4 F038          	movff	prodh,i2___wmul@product+1
  4232  000CA6  5033               	movf	i2___wmul@multiplier,w,c
  4233  000CA8  0236               	mulwf	i2___wmul@multiplicand+1,c
  4234  000CAA  50F3               	movf	prodl,w,c
  4235  000CAC  2638               	addwf	i2___wmul@product+1,f,c
  4236  000CAE  5034               	movf	i2___wmul@multiplier+1,w,c
  4237  000CB0  0235               	mulwf	i2___wmul@multiplicand,c
  4238  000CB2  50F3               	movf	prodl,w,c
  4239  000CB4  2638               	addwf	i2___wmul@product+1,f,c
  4240  000CB6  C037  F033         	movff	i2___wmul@product,?i2___wmul
  4241  000CBA  C038  F034         	movff	i2___wmul@product+1,?i2___wmul+1
  4242  000CBE  0012               	return	
  4243  000CC0                     __end_ofi2___wmul:
  4244                           	opt stack 0
  4245                           pclatu	equ	0xFFB
  4246                           pclath	equ	0xFFA
  4247                           tblptru	equ	0xFF8
  4248                           tblptrh	equ	0xFF7
  4249                           tblptrl	equ	0xFF6
  4250                           tablat	equ	0xFF5
  4251                           prodh	equ	0xFF4
  4252                           prodl	equ	0xFF3
  4253                           intcon	equ	0xFF2
  4254                           postinc0	equ	0xFEE
  4255                           fsr0h	equ	0xFEA
  4256                           fsr0l	equ	0xFE9
  4257                           wreg	equ	0xFE8
  4258                           postdec1	equ	0xFE5
  4259                           plusw1	equ	0xFE3
  4260                           fsr1h	equ	0xFE2
  4261                           fsr1l	equ	0xFE1
  4262                           indf2	equ	0xFDF
  4263                           postinc2	equ	0xFDE
  4264                           plusw2	equ	0xFDB
  4265                           fsr2h	equ	0xFDA
  4266                           fsr2l	equ	0xFD9
  4267                           status	equ	0xFD8
  4268                           
  4269 ;; *************** function _getNextPosition *****************
  4270 ;; Defined at:
  4271 ;;		line 155 in file "main.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4285 ;;      Params:         0       0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0       0       0
  4288 ;;      Totals:         0       0       0       0       0       0       0
  4289 ;;Total ram usage:        0 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_checkNextPosition
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text24
  4299  000864                     __ptext24:
  4300                           	opt stack 0
  4301  000864                     _getNextPosition:
  4302                           	opt stack 24
  4303                           
  4304                           ;main.c: 157: switch(_ball.bDirection)
  4305                           
  4306                           ;incstack = 0
  4307  000864  D01A               	goto	i2l1147
  4308  000866                     i2l1133:
  4309                           
  4310                           ;main.c: 160: _nextPos[0] = _ball.bPos[0] + 1;
  4311  000866  285C               	incf	__ball,w,c
  4312  000868  6E5F               	movwf	__nextPos,c
  4313                           
  4314                           ;main.c: 161: _nextPos[1] = _ball.bPos[1] + 1;
  4315  00086A  285D               	incf	__ball+1,w,c
  4316  00086C  6E60               	movwf	__nextPos+1,c
  4317                           
  4318                           ;main.c: 162: break;
  4319  00086E  0012               	return	
  4320  000870                     i2l1135:
  4321                           
  4322                           ;main.c: 164: _nextPos[0] = _ball.bPos[0] + 1;
  4323  000870  285C               	incf	__ball,w,c
  4324  000872  6E5F               	movwf	__nextPos,c
  4325                           
  4326                           ;main.c: 165: break;
  4327  000874  0012               	return	
  4328  000876                     i2l1137:
  4329                           
  4330                           ;main.c: 167: _nextPos[0] = _ball.bPos[0] + 1;
  4331  000876  285C               	incf	__ball,w,c
  4332  000878  6E5F               	movwf	__nextPos,c
  4333                           
  4334                           ;main.c: 168: _nextPos[1] = _ball.bPos[1] - 1;
  4335  00087A  045D               	decf	__ball+1,w,c
  4336  00087C  6E60               	movwf	__nextPos+1,c
  4337                           
  4338                           ;main.c: 169: break;
  4339  00087E  0012               	return	
  4340  000880                     i2l1139:
  4341                           
  4342                           ;main.c: 171: _nextPos[0] = _ball.bPos[0] - 1;
  4343  000880  045C               	decf	__ball,w,c
  4344  000882  6E5F               	movwf	__nextPos,c
  4345                           
  4346                           ;main.c: 172: _nextPos[1] = _ball.bPos[1] - 1;
  4347  000884  045D               	decf	__ball+1,w,c
  4348  000886  6E60               	movwf	__nextPos+1,c
  4349                           
  4350                           ;main.c: 173: break;
  4351  000888  0012               	return	
  4352  00088A                     i2l1141:
  4353                           
  4354                           ;main.c: 175: _nextPos[0] = _ball.bPos[0] - 1;
  4355  00088A  045C               	decf	__ball,w,c
  4356  00088C  6E5F               	movwf	__nextPos,c
  4357                           
  4358                           ;main.c: 176: break;
  4359  00088E  0012               	return	
  4360  000890                     i2l1143:
  4361                           
  4362                           ;main.c: 178: _nextPos[0] = _ball.bPos[0] - 1;
  4363  000890  045C               	decf	__ball,w,c
  4364  000892  6E5F               	movwf	__nextPos,c
  4365                           
  4366                           ;main.c: 179: _nextPos[1] = _ball.bPos[1] + 1;
  4367  000894  285D               	incf	__ball+1,w,c
  4368  000896  6E60               	movwf	__nextPos+1,c
  4369                           
  4370                           ;main.c: 181: }
  4371                           
  4372                           ;main.c: 180: break;
  4373  000898  0012               	return	
  4374  00089A                     i2l1147:
  4375  00089A  505E               	movf	__ball+2,w,c
  4376                           
  4377                           ; Switch size 1, requested type "space"
  4378                           ; Number of cases is 6, Range of values is 1 to 6
  4379                           ; switch strategies available:
  4380                           ; Name         Instructions Cycles
  4381                           ; simple_byte           19    10 (average)
  4382                           ;	Chosen strategy is simple_byte
  4383  00089C  0A01               	xorlw	1	; case 1
  4384  00089E  B4D8               	btfsc	status,2,c
  4385  0008A0  D7E2               	goto	i2l1133
  4386  0008A2  0A03               	xorlw	3	; case 2
  4387  0008A4  B4D8               	btfsc	status,2,c
  4388  0008A6  D7E4               	goto	i2l1135
  4389  0008A8  0A01               	xorlw	1	; case 3
  4390  0008AA  B4D8               	btfsc	status,2,c
  4391  0008AC  D7E4               	goto	i2l1137
  4392  0008AE  0A07               	xorlw	7	; case 4
  4393  0008B0  B4D8               	btfsc	status,2,c
  4394  0008B2  D7E6               	goto	i2l1139
  4395  0008B4  0A01               	xorlw	1	; case 5
  4396  0008B6  B4D8               	btfsc	status,2,c
  4397  0008B8  D7E8               	goto	i2l1141
  4398  0008BA  0A03               	xorlw	3	; case 6
  4399  0008BC  A4D8               	btfss	status,2,c
  4400  0008BE  0012               	return	
  4401  0008C0  D7E7               	goto	i2l1143
  4402  0008C2                     __end_of_getNextPosition:
  4403                           	opt stack 0
  4404                           pclatu	equ	0xFFB
  4405                           pclath	equ	0xFFA
  4406                           tblptru	equ	0xFF8
  4407                           tblptrh	equ	0xFF7
  4408                           tblptrl	equ	0xFF6
  4409                           tablat	equ	0xFF5
  4410                           prodh	equ	0xFF4
  4411                           prodl	equ	0xFF3
  4412                           intcon	equ	0xFF2
  4413                           postinc0	equ	0xFEE
  4414                           fsr0h	equ	0xFEA
  4415                           fsr0l	equ	0xFE9
  4416                           wreg	equ	0xFE8
  4417                           postdec1	equ	0xFE5
  4418                           plusw1	equ	0xFE3
  4419                           fsr1h	equ	0xFE2
  4420                           fsr1l	equ	0xFE1
  4421                           indf2	equ	0xFDF
  4422                           postinc2	equ	0xFDE
  4423                           plusw2	equ	0xFDB
  4424                           fsr2h	equ	0xFDA
  4425                           fsr2l	equ	0xFD9
  4426                           status	equ	0xFD8
  4427                           
  4428 ;; *************** function ___lwdiv *****************
  4429 ;; Defined at:
  4430 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  dividend        2    0[COMRAM] unsigned int 
  4433 ;;  divisor         2    2[COMRAM] unsigned int 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  quotient        2    4[COMRAM] unsigned int 
  4436 ;;  counter         1    6[COMRAM] unsigned char 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  2    0[COMRAM] unsigned int 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4446 ;;      Params:         4       0       0       0       0       0       0
  4447 ;;      Locals:         3       0       0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0
  4449 ;;      Totals:         7       0       0       0       0       0       0
  4450 ;;Total ram usage:        7 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_ISR
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text25
  4460  0009CC                     __ptext25:
  4461                           	opt stack 0
  4462  0009CC                     ___lwdiv:
  4463                           	opt stack 25
  4464                           
  4465                           ;incstack = 0
  4466  0009CC  0E00               	movlw	0
  4467  0009CE  6E38               	movwf	___lwdiv@quotient+1,c
  4468  0009D0  0E00               	movlw	0
  4469  0009D2  6E37               	movwf	___lwdiv@quotient,c
  4470  0009D4  5035               	movf	___lwdiv@divisor,w,c
  4471  0009D6  1036               	iorwf	___lwdiv@divisor+1,w,c
  4472  0009D8  B4D8               	btfsc	status,2,c
  4473  0009DA  D01C               	goto	i2l660
  4474  0009DC  0E01               	movlw	1
  4475  0009DE  6E39               	movwf	___lwdiv@counter,c
  4476  0009E0  D004               	goto	i2l1911
  4477  0009E2                     i2l1909:
  4478  0009E2  90D8               	bcf	status,0,c
  4479  0009E4  3635               	rlcf	___lwdiv@divisor,f,c
  4480  0009E6  3636               	rlcf	___lwdiv@divisor+1,f,c
  4481  0009E8  2A39               	incf	___lwdiv@counter,f,c
  4482  0009EA                     i2l1911:
  4483  0009EA  AE36               	btfss	___lwdiv@divisor+1,7,c
  4484  0009EC  D7FA               	goto	i2l1909
  4485  0009EE                     i2l1913:
  4486  0009EE  90D8               	bcf	status,0,c
  4487  0009F0  3637               	rlcf	___lwdiv@quotient,f,c
  4488  0009F2  3638               	rlcf	___lwdiv@quotient+1,f,c
  4489  0009F4  5035               	movf	___lwdiv@divisor,w,c
  4490  0009F6  5C33               	subwf	___lwdiv@dividend,w,c
  4491  0009F8  5036               	movf	___lwdiv@divisor+1,w,c
  4492  0009FA  5834               	subwfb	___lwdiv@dividend+1,w,c
  4493  0009FC  A0D8               	btfss	status,0,c
  4494  0009FE  D005               	goto	i2l1921
  4495  000A00  5035               	movf	___lwdiv@divisor,w,c
  4496  000A02  5E33               	subwf	___lwdiv@dividend,f,c
  4497  000A04  5036               	movf	___lwdiv@divisor+1,w,c
  4498  000A06  5A34               	subwfb	___lwdiv@dividend+1,f,c
  4499  000A08  8037               	bsf	___lwdiv@quotient,0,c
  4500  000A0A                     i2l1921:
  4501  000A0A  90D8               	bcf	status,0,c
  4502  000A0C  3236               	rrcf	___lwdiv@divisor+1,f,c
  4503  000A0E  3235               	rrcf	___lwdiv@divisor,f,c
  4504  000A10  2E39               	decfsz	___lwdiv@counter,f,c
  4505  000A12  D7ED               	goto	i2l1913
  4506  000A14                     i2l660:
  4507  000A14  C037  F033         	movff	___lwdiv@quotient,?___lwdiv
  4508  000A18  C038  F034         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4509  000A1C  0012               	return		;funcret
  4510  000A1E                     __end_of___lwdiv:
  4511                           	opt stack 0
  4512  0000                     pclatu	equ	0xFFB
  4513                           pclath	equ	0xFFA
  4514                           tblptru	equ	0xFF8
  4515                           tblptrh	equ	0xFF7
  4516                           tblptrl	equ	0xFF6
  4517                           tablat	equ	0xFF5
  4518                           prodh	equ	0xFF4
  4519                           prodl	equ	0xFF3
  4520                           intcon	equ	0xFF2
  4521                           postinc0	equ	0xFEE
  4522                           fsr0h	equ	0xFEA
  4523                           fsr0l	equ	0xFE9
  4524                           wreg	equ	0xFE8
  4525                           postdec1	equ	0xFE5
  4526                           plusw1	equ	0xFE3
  4527                           fsr1h	equ	0xFE2
  4528                           fsr1l	equ	0xFE1
  4529                           indf2	equ	0xFDF
  4530                           postinc2	equ	0xFDE
  4531                           plusw2	equ	0xFDB
  4532                           fsr2h	equ	0xFDA
  4533                           fsr2l	equ	0xFD9
  4534                           status	equ	0xFD8
  4535                           pclatu	equ	0xFFB
  4536                           pclath	equ	0xFFA
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           prodh	equ	0xFF4
  4542                           prodl	equ	0xFF3
  4543                           intcon	equ	0xFF2
  4544                           postinc0	equ	0xFEE
  4545                           fsr0h	equ	0xFEA
  4546                           fsr0l	equ	0xFE9
  4547                           wreg	equ	0xFE8
  4548                           postdec1	equ	0xFE5
  4549                           plusw1	equ	0xFE3
  4550                           fsr1h	equ	0xFE2
  4551                           fsr1l	equ	0xFE1
  4552                           indf2	equ	0xFDF
  4553                           postinc2	equ	0xFDE
  4554                           plusw2	equ	0xFDB
  4555                           fsr2h	equ	0xFDA
  4556                           fsr2l	equ	0xFD9
  4557                           status	equ	0xFD8
  4558                           
  4559                           	psect	rparam
  4560  0000                     pclatu	equ	0xFFB
  4561                           pclath	equ	0xFFA
  4562                           tblptru	equ	0xFF8
  4563                           tblptrh	equ	0xFF7
  4564                           tblptrl	equ	0xFF6
  4565                           tablat	equ	0xFF5
  4566                           prodh	equ	0xFF4
  4567                           prodl	equ	0xFF3
  4568                           intcon	equ	0xFF2
  4569                           postinc0	equ	0xFEE
  4570                           fsr0h	equ	0xFEA
  4571                           fsr0l	equ	0xFE9
  4572                           wreg	equ	0xFE8
  4573                           postdec1	equ	0xFE5
  4574                           plusw1	equ	0xFE3
  4575                           fsr1h	equ	0xFE2
  4576                           fsr1l	equ	0xFE1
  4577                           indf2	equ	0xFDF
  4578                           postinc2	equ	0xFDE
  4579                           plusw2	equ	0xFDB
  4580                           fsr2h	equ	0xFDA
  4581                           fsr2l	equ	0xFD9
  4582                           status	equ	0xFD8
  4583                           
  4584                           	psect	temp
  4585  000063                     btemp:
  4586                           	opt stack 0
  4587  000063                     	ds	1
  4588  0000                     int$flags	set	btemp
  4589                           pclatu	equ	0xFFB
  4590                           pclath	equ	0xFFA
  4591                           tblptru	equ	0xFF8
  4592                           tblptrh	equ	0xFF7
  4593                           tblptrl	equ	0xFF6
  4594                           tablat	equ	0xFF5
  4595                           prodh	equ	0xFF4
  4596                           prodl	equ	0xFF3
  4597                           intcon	equ	0xFF2
  4598                           postinc0	equ	0xFEE
  4599                           fsr0h	equ	0xFEA
  4600                           fsr0l	equ	0xFE9
  4601                           wreg	equ	0xFE8
  4602                           postdec1	equ	0xFE5
  4603                           plusw1	equ	0xFE3
  4604                           fsr1h	equ	0xFE2
  4605                           fsr1l	equ	0xFE1
  4606                           indf2	equ	0xFDF
  4607                           postinc2	equ	0xFDE
  4608                           plusw2	equ	0xFDB
  4609                           fsr2h	equ	0xFDA
  4610                           fsr2l	equ	0xFD9
  4611                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        214
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     31      98
    BANK0           128      0     128
    BANK1           256    218     218
    BANK2           256    221     249
    BANK3           256      0     136
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _refresh->_setColHigh
    _refresh->_setRowHigh
    _startPong->_delaySeconds
    _drawSymbol->_on
    _delaySeconds->___wmul

Critical Paths under _ISR in COMRAM

    _writePong->_off
    _writePong->i2_on
    i2_startPong->i2_delaySeconds
    i2_drawSymbol->i2_on
    i2_drawSymbol->i2_turnAllOff
    i2_delaySeconds->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK2

    _startPong->_drawSymbol
    _drawSymbol->_turnAllOff
    _delaySeconds->___wmul

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2865
                         _initialize
                      _initializeLED
                     _initializePong
                            _refresh
 ---------------------------------------------------------------------------------
 (1) _refresh                                              5     5      0     268
                                              0 BANK2      5     5      0
                             _allOff
                         _setColHigh
                         _setRowHigh
 ---------------------------------------------------------------------------------
 (2) _setRowHigh                                           3     3      0      66
                                             28 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _setColHigh                                           3     3      0      22
                                             28 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _allOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initializePong                                       0     0      0    2461
                          _startPong
 ---------------------------------------------------------------------------------
 (2) _startPong                                            0     0      0    2461
                       _delaySeconds
                         _drawSymbol
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _drawSymbol                                         219   218      1    1795
                                              2 BANK2    219   218      1
                                 _on
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _turnAllOff                                           4     4      0     198
                                             28 COMRAM     2     2      0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (4) _on                                                   4     3      1     435
                                             28 COMRAM     3     2      1
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (3) _delaySeconds                                         5     3      2     468
                                             30 COMRAM     1     1      0
                                              4 BANK2      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     346
                                             28 COMRAM     2     2      0
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (1) _initializeLED                                        4     4      0     136
                                             28 COMRAM     2     2      0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 17    17      0    2609
                                             11 COMRAM    17    17      0
                            ___lwdiv
                  _checkNextPosition
                          _writePong
 ---------------------------------------------------------------------------------
 (6) _writePong                                            0     0      0     625
                                _off
                               i2_on
 ---------------------------------------------------------------------------------
 (7) _off                                                  4     3      1     303
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _checkNextPosition                                    0     0      0    1624
                    _getNextPosition
                        i2_startPong
 ---------------------------------------------------------------------------------
 (7) i2_startPong                                          0     0      0    1624
                     i2_delaySeconds
                       i2_drawSymbol
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (8) i2_drawSymbol                                       219   218      1    1207
                                              4 COMRAM     1     0      1
                                              0 BANK1    218   218      0
                               i2_on
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (8) i2_turnAllOff                                         4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) i2_on                                                 4     3      1     322
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) i2_delaySeconds                                       5     3      2     281
                                              6 COMRAM     5     3      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _getNextPosition                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _initializeLED
   _initializePong
     _startPong
       _delaySeconds
         ___wmul
       _drawSymbol
         _on
         _turnAllOff
       _turnAllOff
   _refresh
     _allOff
     _setColHigh
     _setRowHigh

 _ISR (ROOT)
   ___lwdiv
   _checkNextPosition
     _getNextPosition
     i2_startPong
       i2_delaySeconds
         i2___wmul
       i2_drawSymbol
         i2_on
         i2_turnAllOff
       i2_turnAllOff
   _writePong
     _off
     i2_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      88      10       53.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100     DD      F9       8       97.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     DA      DA       6       85.2%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      80       4      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1F      62       1       77.8%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     33D      14        0.0%
DATA                 0      0     33D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Mar 29 19:54:00 2016

           drawSymbol@symbolGo 0203                             _on 0AFA            ___wmul@multiplicand 0202  
                  __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000            drawSymbol@symbolOne 02A7  
                          ?_on 004F            drawSymbol@symbolTwo 028B                            _GIE 007F97  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000                            _ISR 0008  
                          _PSA 007EAB                            __p1 0052                            __p2 0057  
                          _off 0BBE                            prod 000FF3                            wreg 000FE8  
          __end_ofi2_startPong 0B7E                           ??_on 0050                   __CFG_LVP$OFF 000000  
                         ?_ISR 0033                   __CFG_WDT$OFF 000000           drawSymbol@symbolPlay 0247  
                         l2003 093C                           l2021 007A                           l2023 0080  
                         l2009 096E                           l2033 00CA                           l2105 0BA0  
                         l2131 07A4                           l2051 012A                           l2035 00D0  
                         l2027 008A                           l2115 0A3A                           l2141 07BE  
                         l2061 0174                           l2045 011A                           l2135 07AE  
                         l2071 01BE                           l2047 0120                           l2039 00DA  
                         l2137 07B4                           l2065 017E                           l2057 016A  
                         l2153 05F2                           l2147 07F0                           l2075 01C8  
                         l2171 0654                           l2163 060C                           l2093 0996  
                         l2085 01D8                           l2157 05FC                           l2079 01D2  
                         l2167 064E                           l2159 0602                           l2191 0D04  
                         l2089 0980                           l1985 0B06                           l1993 0922  
                         l1989 0B10                           l1997 092C                           ?_off 0033  
                         l1999 0932                           _ADIE 007CEE                           _ADIF 007CF6  
                         _T0CS 007EAD                           _LATA 000F89                           _LATC 000F8B  
                         _LATD 000F8C                           u1541 0028                           u1551 003A  
                         u1704 0CEE                           u1561 004C                           u1705 0CEA  
                         u1571 005E                           u1724 0B96                           u1581 0070  
                         u1725 0B92                           u1734 0BB4                           u1735 0BB0  
                         u1847 0664                           u1857 0986                           _PEIE 007F96  
                         i2_on 0BFA               ??_initializePong 0052                           _main 0CF8  
                  drawSymbol@i 02D9                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           btemp 0063  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 0016                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010           __end_of_delaySeconds 09CC                          ??_ISR 003E  
                        ??_off 0034                          ?i2_on 0033                     i2on@column 0036  
        drawSymbol@symbolThree 02BF                          ?_main 0033                          _ADRES 000FC3  
                        _T0PS0 007EA8                          _T0PS1 007EA9                          _T0PS2 007EAA  
              __end_of___lwdiv 0A1E                          i2l251 05B0                          i2l660 0A14  
                        _PLLEN 007CDE                          _TRISA 000F92                          _TRISC 000F94  
                        _TRISD 000F95                  __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
         __end_ofi2_turnAllOff 0AFA                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                          __ball 005C  
                __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000                __end_of_refresh 0678  
                        on@row 004F                 __CFG_BOREN$OFF 000000                          tablat 000FF5  
             __end_ofi2___wmul 0CC0                          plusw1 000FE3                          plusw2 000FDB  
                        status 000FD8          __size_ofi2_drawSymbol 01DA                   __end_ofi2_on 0C36  
              __initialization 0700                   __end_of_main 0D0A                         ??i2_on 0034  
              _getNextPosition 0864                         ??_main 0052                    i2_startPong 0B3C  
                __activetblptr 000002                   i2_drawSymbol 01FC                         _T08BIT 007EAE  
                       i2l1141 088A                         i2l1133 0866                         i2l1143 0890  
                       i2l1135 0870                         i2l1137 0876                         i2l1139 0880  
                       i2l1147 089A                         i2l1541 0C04                         i2l1701 035A  
                       i2l1711 03A2                         i2l1545 0C0C                         i2l1553 0ABE  
                       i2l1721 03B2                         i2l1555 0AC2                         i2l1715 03AC  
                       i2l1707 0398                         i2l1811 0408                         i2l1725 0A72  
                       i2l1565 0AF6                         i2l1549 0AB6                         i2l1821 0418  
                       i2l1805 03EA                         i2l1911 09EA                         i2l1559 0ACA  
                       i2l1671 02B0                         i2l1663 026C                         i2l1831 0436  
                       i2l1807 03EE                         i2l1743 0BD0                         i2l1921 0A0A  
                       i2l1913 09EE                         i2l1729 0A86                         i2l1681 02F8  
                       i2l1657 025C                         i2l1825 041E                         i2l1809 03F4  
                       i2l1817 040E                         i2l1683 02FE                         i2l1675 02BA  
                       i2l1659 0262                         i2l1771 0B54                         i2l1835 043C  
                       i2l1739 0BC8                         i2l1909 09E2                         i2l1693 0346  
                       i2l1669 02AA                         i2l1845 0456                         i2l1853 0464  
                       i2l1861 047E                         i2l1829 0422                         i2l1687 0308  
                       i2l1847 045A                         i2l1855 0478                         i2l1839 0444  
                       i2l1943 054A                         i2l1697 0350                         i2l1873 0492  
                       i2l1849 045E                         i2l1937 0540                         i2l1891 04C4  
                       i2l1867 0488                         i2l1875 04A6                         i2l1883 04B4  
                       i2l1963 0598                         i2l1893 04C8                         i2l1869 048C  
                       i2l1887 04BC                         i2l1879 04AC                         i2l1889 04C0  
                       i2l1897 04CE                         i2l1899 04E8                         _TMR0IE 007F95  
                       _TMR0IF 007F92                         _TMR0ON 007EAF            i2drawSymbol@offSetX 0037  
               __CFG_XINST$OFF 000000                         ___wmul 0C68                         _allOff 0D0A  
               __CFG_STVREN$ON 000000                         __speed 0031                      ??___lwdiv 0037  
                       clear_0 0706                         clear_1 0712                         _pixels 0080  
                       off@row 0033                   __pdataCOMRAM 0001                      ??_refresh 0200  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
       __size_of_initializeLED 0070  i2delaySeconds@numberOfSeconds 0039                     __accesstop 0080  
      __end_of__initialization 0778                __CFG_PBADEN$OFF 000000          __size_of_delaySeconds 0058  
                ___rparam_used 000001        __end_of_getNextPosition 08C2                 __pcstackCOMRAM 0033  
             i2drawSymbol@i_80 01D9               i2drawSymbol@i_81 01D5               i2drawSymbol@i_78 01D7  
             i2drawSymbol@i_79 01D8                   __pidataBANK2 0CC0                   __pidataBANK3 0678  
      i2drawSymbol@symbolThree 01BC                     __end_of_on 0B3C          __size_ofi2_turnAllOff 0048  
                    ?i2___wmul 0033                  i2turnAllOff@i 0035                  i2turnAllOff@j 0036  
                 _delaySeconds 0974                     __pbssBANK0 0080        __size_ofi2_delaySeconds 004A  
                _initializeLED 0786                   i2_turnAllOff 0AB2                        ?___wmul 0200  
                      ?_allOff 0033                     ??i2___wmul 0037                     _drawSymbol 001A  
           __size_of_startPong 004A    delaySeconds@numberOfSeconds 0204                        i2on@row 0033  
           __size_of_writePong 006E                 ?_initializeLED 0033                        __Hparam 0000  
                      __Lparam 0000               ?_getNextPosition 0033                  refresh@theCol 0203  
                refresh@theRow 0204                __size_of___wmul 0032                __size_of_allOff 000E  
         i2drawSymbol@symbolGo 0100                        ___lwdiv 09CC                        __pcinit 0700  
       drawSymbol@chosenSymbol 02D7                        __ramtop 0600                     _initialize 08C2  
                      __ptext0 0CF8                        __ptext1 05EC                        __ptext2 0B7E  
                      __ptext3 0CDC                        __ptext4 0D0A                        __ptext5 0D18  
                      __ptext6 0A1E                        __ptext7 001A                        __ptext8 091C  
                      __ptext9 0AFA                   ?i2_startPong 0033                   __size_of_ISR 05E4  
                 __size_of_off 003C                        _refresh 05EC                 drawSymbol@i_80 02DC  
               drawSymbol@i_81 02D8                 drawSymbol@i_78 02DA                 drawSymbol@i_79 02DB  
                   _setColHigh 0CDC                 __pintcode_body 04EE           end_of_initialization 0778  
                __Lmediumconst 0000                        int_func 04EE            i2___wmul@multiplier 0033  
                   _setRowHigh 0B7E                        postdec1 000FE5                        postinc0 000FEE  
                      postinc2 000FDE        __size_of_initializePong 000E              __end_of_startPong 0A68  
            drawSymbol@offSetX 0202                  delaySeconds@i 0206              __end_of_writePong 0864  
                    _TRISBbits 000F93                    ?_drawSymbol 0202                 i2_delaySeconds 0A68  
              ??_initializeLED 004F                     _turnAllOff 091C                  setRowHigh@row 0051  
               __end_of___wmul 0C9A                 __end_of_allOff 0D18                  __pidataCOMRAM 0C36  
                  ?_initialize 0033               i2___wmul@product 0037            start_initialization 0700  
                  __end_of_ISR 05EC              __size_ofi2___wmul 0026                    ?_setColHigh 0033  
                  __end_of_off 0BFA         __end_ofi2_delaySeconds 0AB2                     ISR@ADvalue 004C  
                  ?_setRowHigh 0033               __CFG_OSC$INTIO67 000000                       ??___wmul 004F  
                     ??_allOff 004F            __size_of_drawSymbol 01E2                    __pdataBANK2 02DD  
                  __pdataBANK3 0300               __CFG_LPT1OSC$OFF 000000                    __pbssCOMRAM 0052  
         __size_ofi2_startPong 0042                  __pcstackBANK1 0100                  __pcstackBANK2 0200  
       i2drawSymbol@symbolPlay 0144                ?i2_delaySeconds 0039            __size_of_initialize 005A  
                i2drawSymbol@i 01D6                       ISR@value 004E               ___lwdiv@dividend 0033  
                  ?_turnAllOff 0033              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
               _initializePong 0D18            __size_of_setColHigh 001C                       ?___lwdiv 0033  
          __size_of_setRowHigh 0040                    turnAllOff@i 0200                    turnAllOff@j 0201  
            _checkNextPosition 03D6                       ?_refresh 0033             ?_checkNextPosition 0033  
             ___lwdiv@quotient 0037                  ?i2_drawSymbol 0037                    __size_of_on 0042  
          ??_checkNextPosition 003E                 ___wmul@product 004F         __end_of_initializePong 0D26  
                     i2u112_41 020A                       i2u113_41 021C                       i2u114_41 022E  
                     i2u115_41 0240                       i2u116_41 0252                       i2u186_47 0A78  
             __CFG_WDTPS$32768 000000                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0200      __end_of_checkNextPosition 04EE  
                    _startPong 0A1E       __size_of_getNextPosition 005E                       i2___wmul 0C9A  
                    off@column 0036                 ??i2_drawSymbol 0038            __size_of_turnAllOff 0058  
                 ??_drawSymbol 0052                      _writePong 07F6                      copy_data0 072C  
                    copy_data1 074C                      copy_data2 076C                  __timerCounter 0061  
                     __Hrparam 0000                ?_initializePong 0033                       __Lrparam 0000  
     i2drawSymbol@chosenSymbol 01D4          i2___wmul@multiplicand 0035             __end_of_drawSymbol 01FC  
             __size_of___lwdiv 0052                   ??_initialize 004F          i2drawSymbol@symbolOne 01A4  
        i2drawSymbol@symbolTwo 0188                     ?_startPong 0033                       __nextPos 005F  
              ___lwdiv@divisor 0035                   ??_setColHigh 004F               __size_of_refresh 008C  
              ___lwdiv@counter 0039                  ?_delaySeconds 0204                       __ptext10 0974  
                     __ptext11 0C68                       __ptext20 0AB2                       __ptext12 0786  
                     __ptext21 0BFA                       __ptext13 08C2                       __ptext22 0A68  
                     __ptext23 0C9A                       __ptext15 07F6                       __ptext24 0864  
                     __ptext16 0BBE                       __ptext25 09CC                       __ptext17 03D6  
                     __ptext18 0B3C                       __ptext19 01FC                     ?_writePong 0033  
                __size_ofi2_on 003C                drawSymbol@F3232 0019                drawSymbol@F3226 0001  
              drawSymbol@F3235 0300                drawSymbol@F3229 02DD                drawSymbol@F3238 0344  
                 ??_setRowHigh 004F                  __size_of_main 0012             __end_of_initialize 091C  
        __end_of_initializeLED 07F6                  ?i2_turnAllOff 0033                 initializeLED@i 0200  
               initializeLED@j 0201                       int$flags 0063             __end_of_setColHigh 0CF8  
                     on@column 0200     __size_of_checkNextPosition 0118               ??i2_delaySeconds 003B  
                  _OSCTUNEbits 000F9B             __end_of_setRowHigh 0BBE                 ??_delaySeconds 0051  
             setColHigh@column 0051                i2delaySeconds@i 003C              ??_getNextPosition 0033  
                     intlevel2 0000                 ??i2_turnAllOff 0033                     _OSCCONbits 000FD3  
                 ??_turnAllOff 004F           __end_ofi2_drawSymbol 03D6                  ??i2_startPong 003E  
                  ??_startPong 0052                    ??_writePong 0037             __end_of_turnAllOff 0974  
