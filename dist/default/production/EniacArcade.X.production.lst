

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Mar 29 16:21:19 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataCOMRAM
    44  000E36                     __pidataCOMRAM:
    45                           	opt stack 0
    46                           
    47                           ;initializer for drawSymbol@F3226
    48  000E36  02                 	db	2
    49  000E37  05                 	db	5
    50  000E38  03                 	db	3
    51  000E39  06                 	db	6
    52  000E3A  04                 	db	4
    53  000E3B  07                 	db	7
    54  000E3C  04                 	db	4
    55  000E3D  06                 	db	6
    56  000E3E  04                 	db	4
    57  000E3F  05                 	db	5
    58  000E40  04                 	db	4
    59  000E41  04                 	db	4
    60  000E42  04                 	db	4
    61  000E43  03                 	db	3
    62  000E44  04                 	db	4
    63  000E45  02                 	db	2
    64  000E46  04                 	db	4
    65  000E47  01                 	db	1
    66  000E48  04                 	db	4
    67  000E49  00                 	db	0
    68  000E4A  03                 	db	3
    69  000E4B  00                 	db	0
    70  000E4C  05                 	db	5
    71  000E4D  00                 	db	0
    72                           
    73                           ;initializer for drawSymbol@F3232
    74  000E4E  02                 	db	2
    75  000E4F  06                 	db	6
    76  000E50  03                 	db	3
    77  000E51  07                 	db	7
    78  000E52  04                 	db	4
    79  000E53  07                 	db	7
    80  000E54  05                 	db	5
    81  000E55  06                 	db	6
    82  000E56  05                 	db	5
    83  000E57  05                 	db	5
    84  000E58  04                 	db	4
    85  000E59  04                 	db	4
    86  000E5A  05                 	db	5
    87  000E5B  03                 	db	3
    88  000E5C  05                 	db	5
    89  000E5D  02                 	db	2
    90  000E5E  05                 	db	5
    91  000E5F  01                 	db	1
    92  000E60  04                 	db	4
    93  000E61  00                 	db	0
    94  000E62  03                 	db	3
    95  000E63  00                 	db	0
    96  000E64  02                 	db	2
    97  000E65  01                 	db	1
    98                           
    99                           ;initializer for __speed
   100  000E66  00C8               	dw	200
   101                           
   102                           	psect	idataBANK2
   103  000E68                     __pidataBANK2:
   104                           	opt stack 0
   105                           
   106                           ;initializer for drawSymbol@F3229
   107  000E68  02                 	db	2
   108  000E69  05                 	db	5
   109  000E6A  03                 	db	3
   110  000E6B  06                 	db	6
   111  000E6C  04                 	db	4
   112  000E6D  06                 	db	6
   113  000E6E  05                 	db	5
   114  000E6F  06                 	db	6
   115  000E70  06                 	db	6
   116  000E71  05                 	db	5
   117  000E72  06                 	db	6
   118  000E73  04                 	db	4
   119  000E74  05                 	db	5
   120  000E75  03                 	db	3
   121  000E76  04                 	db	4
   122  000E77  02                 	db	2
   123  000E78  03                 	db	3
   124  000E79  01                 	db	1
   125  000E7A  02                 	db	2
   126  000E7B  00                 	db	0
   127  000E7C  03                 	db	3
   128  000E7D  00                 	db	0
   129  000E7E  04                 	db	4
   130  000E7F  00                 	db	0
   131  000E80  05                 	db	5
   132  000E81  00                 	db	0
   133  000E82  06                 	db	6
   134  000E83  00                 	db	0
   135                           
   136                           	psect	idataBANK3
   137  0008CE                     __pidataBANK3:
   138                           	opt stack 0
   139                           
   140                           ;initializer for drawSymbol@F3235
   141  0008CE  01                 	db	1
   142  0008CF  01                 	db	1
   143  0008D0  01                 	db	1
   144  0008D1  02                 	db	2
   145  0008D2  01                 	db	1
   146  0008D3  03                 	db	3
   147  0008D4  01                 	db	1
   148  0008D5  04                 	db	4
   149  0008D6  01                 	db	1
   150  0008D7  05                 	db	5
   151  0008D8  01                 	db	1
   152  0008D9  06                 	db	6
   153  0008DA  02                 	db	2
   154  0008DB  06                 	db	6
   155  0008DC  03                 	db	3
   156  0008DD  06                 	db	6
   157  0008DE  03                 	db	3
   158  0008DF  05                 	db	5
   159  0008E0  03                 	db	3
   160  0008E1  04                 	db	4
   161  0008E2  02                 	db	2
   162  0008E3  04                 	db	4
   163  0008E4  05                 	db	5
   164  0008E5  06                 	db	6
   165  0008E6  05                 	db	5
   166  0008E7  05                 	db	5
   167  0008E8  05                 	db	5
   168  0008E9  04                 	db	4
   169  0008EA  05                 	db	5
   170  0008EB  03                 	db	3
   171  0008EC  05                 	db	5
   172  0008ED  02                 	db	2
   173  0008EE  05                 	db	5
   174  0008EF  01                 	db	1
   175  0008F0  06                 	db	6
   176  0008F1  01                 	db	1
   177  0008F2  08                 	db	8
   178  0008F3  01                 	db	1
   179  0008F4  08                 	db	8
   180  0008F5  02                 	db	2
   181  0008F6  08                 	db	8
   182  0008F7  03                 	db	3
   183  0008F8  09                 	db	9
   184  0008F9  04                 	db	4
   185  0008FA  0A                 	db	10
   186  0008FB  04                 	db	4
   187  0008FC  0B                 	db	11
   188  0008FD  03                 	db	3
   189  0008FE  0B                 	db	11
   190  0008FF  02                 	db	2
   191  000900  0B                 	db	11
   192  000901  01                 	db	1
   193  000902  0D                 	db	13
   194  000903  01                 	db	1
   195  000904  0D                 	db	13
   196  000905  02                 	db	2
   197  000906  0D                 	db	13
   198  000907  03                 	db	3
   199  000908  0D                 	db	13
   200  000909  04                 	db	4
   201  00090A  0C                 	db	12
   202  00090B  05                 	db	5
   203  00090C  0B                 	db	11
   204  00090D  06                 	db	6
   205  00090E  0E                 	db	14
   206  00090F  05                 	db	5
   207  000910  0E                 	db	14
   208  000911  06                 	db	6
   209                           
   210                           ;initializer for drawSymbol@F3238
   211  000912  06                 	db	6
   212  000913  06                 	db	6
   213  000914  05                 	db	5
   214  000915  07                 	db	7
   215  000916  04                 	db	4
   216  000917  07                 	db	7
   217  000918  03                 	db	3
   218  000919  07                 	db	7
   219  00091A  02                 	db	2
   220  00091B  06                 	db	6
   221  00091C  02                 	db	2
   222  00091D  05                 	db	5
   223  00091E  02                 	db	2
   224  00091F  04                 	db	4
   225  000920  02                 	db	2
   226  000921  03                 	db	3
   227  000922  02                 	db	2
   228  000923  02                 	db	2
   229  000924  02                 	db	2
   230  000925  01                 	db	1
   231  000926  03                 	db	3
   232  000927  00                 	db	0
   233  000928  04                 	db	4
   234  000929  00                 	db	0
   235  00092A  05                 	db	5
   236  00092B  00                 	db	0
   237  00092C  06                 	db	6
   238  00092D  01                 	db	1
   239  00092E  05                 	db	5
   240  00092F  02                 	db	2
   241  000930  04                 	db	4
   242  000931  02                 	db	2
   243  000932  09                 	db	9
   244  000933  06                 	db	6
   245  000934  09                 	db	9
   246  000935  05                 	db	5
   247  000936  09                 	db	9
   248  000937  04                 	db	4
   249  000938  09                 	db	9
   250  000939  03                 	db	3
   251  00093A  09                 	db	9
   252  00093B  02                 	db	2
   253  00093C  09                 	db	9
   254  00093D  01                 	db	1
   255  00093E  0A                 	db	10
   256  00093F  00                 	db	0
   257  000940  0B                 	db	11
   258  000941  00                 	db	0
   259  000942  0C                 	db	12
   260  000943  00                 	db	0
   261  000944  0D                 	db	13
   262  000945  01                 	db	1
   263  000946  0D                 	db	13
   264  000947  02                 	db	2
   265  000948  0D                 	db	13
   266  000949  04                 	db	4
   267  00094A  0D                 	db	13
   268  00094B  05                 	db	5
   269  00094C  0D                 	db	13
   270  00094D  06                 	db	6
   271  00094E  0C                 	db	12
   272  00094F  07                 	db	7
   273  000950  0B                 	db	11
   274  000951  07                 	db	7
   275  000952  0A                 	db	10
   276  000953  07                 	db	7
   277  000954  00                 	db	0
   278  000955  00                 	db	0
   279  0000                     _ADRES	set	4035
   280  0000                     _ADCON0bits	set	4034
   281  0000                     _ADCON1bits	set	4033
   282  0000                     _ADCON2bits	set	4032
   283  0000                     _LATA	set	3977
   284  0000                     _LATC	set	3979
   285  0000                     _LATD	set	3980
   286  0000                     _OSCCONbits	set	4051
   287  0000                     _OSCTUNEbits	set	3995
   288  0000                     _TRISA	set	3986
   289  0000                     _TRISBbits	set	3987
   290  0000                     _TRISC	set	3988
   291  0000                     _TRISD	set	3989
   292  0000                     _ADIE	set	31982
   293  0000                     _ADIF	set	31990
   294  0000                     _GIE	set	32663
   295  0000                     _PEIE	set	32662
   296  0000                     _PLLEN	set	31966
   297  0000                     _PSA	set	32427
   298  0000                     _T08BIT	set	32430
   299  0000                     _T0CS	set	32429
   300  0000                     _T0PS0	set	32424
   301  0000                     _T0PS1	set	32425
   302  0000                     _T0PS2	set	32426
   303  0000                     _TMR0IE	set	32661
   304  0000                     _TMR0IF	set	32658
   305  0000                     _TMR0ON	set	32431
   306                           
   307                           ; #config settings
   308  0000                     
   309                           	psect	cinit
   310  000956                     __pcinit:
   311                           	opt stack 0
   312  000956                     start_initialization:
   313                           	opt stack 0
   314  000956                     __initialization:
   315                           	opt stack 0
   316                           
   317                           ; Clear objects allocated to BANK0 (128 bytes)
   318  000956  EE00  F080         	lfsr	0,__pbssBANK0
   319  00095A  0E80               	movlw	128
   320  00095C                     clear_0:
   321  00095C  6AEE               	clrf	postinc0,c
   322  00095E  06E8               	decf	wreg,f,c
   323  000960  E1FD               	bnz	clear_0
   324                           
   325                           ; Clear objects allocated to COMRAM (17 bytes)
   326  000962  EE00  F053         	lfsr	0,__pbssCOMRAM
   327  000966  0E11               	movlw	17
   328  000968                     clear_1:
   329  000968  6AEE               	clrf	postinc0,c
   330  00096A  06E8               	decf	wreg,f,c
   331  00096C  E1FD               	bnz	clear_1
   332                           
   333                           ; Initialize objects allocated to BANK3 (136 bytes)
   334                           ; load TBLPTR registers with __pidataBANK3
   335  00096E  0ECE               	movlw	low __pidataBANK3
   336  000970  6EF6               	movwf	tblptrl,c
   337  000972  0E08               	movlw	high __pidataBANK3
   338  000974  6EF7               	movwf	tblptrh,c
   339  000976  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   340  000978  6EF8               	movwf	tblptru,c
   341  00097A  EE03  F000         	lfsr	0,__pdataBANK3
   342  00097E  EE10 F088          	lfsr	1,136
   343  000982                     copy_data0:
   344  000982  0009               	tblrd		*+
   345  000984  CFF5 FFEE          	movff	tablat,postinc0
   346  000988  50E5               	movf	postdec1,w,c
   347  00098A  50E1               	movf	fsr1l,w,c
   348  00098C  E1FA               	bnz	copy_data0
   349                           
   350                           ; Initialize objects allocated to BANK2 (28 bytes)
   351                           ; load TBLPTR registers with __pidataBANK2
   352  00098E  0E68               	movlw	low __pidataBANK2
   353  000990  6EF6               	movwf	tblptrl,c
   354  000992  0E0E               	movlw	high __pidataBANK2
   355  000994  6EF7               	movwf	tblptrh,c
   356  000996  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   357  000998  6EF8               	movwf	tblptru,c
   358  00099A  EE02  F0E4         	lfsr	0,__pdataBANK2
   359  00099E  EE10 F01C          	lfsr	1,28
   360  0009A2                     copy_data1:
   361  0009A2  0009               	tblrd		*+
   362  0009A4  CFF5 FFEE          	movff	tablat,postinc0
   363  0009A8  50E5               	movf	postdec1,w,c
   364  0009AA  50E1               	movf	fsr1l,w,c
   365  0009AC  E1FA               	bnz	copy_data1
   366                           
   367                           ; Initialize objects allocated to COMRAM (50 bytes)
   368                           ; load TBLPTR registers with __pidataCOMRAM
   369  0009AE  0E36               	movlw	low __pidataCOMRAM
   370  0009B0  6EF6               	movwf	tblptrl,c
   371  0009B2  0E0E               	movlw	high __pidataCOMRAM
   372  0009B4  6EF7               	movwf	tblptrh,c
   373  0009B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   374  0009B8  6EF8               	movwf	tblptru,c
   375  0009BA  EE00  F001         	lfsr	0,__pdataCOMRAM
   376  0009BE  EE10 F032          	lfsr	1,50
   377  0009C2                     copy_data2:
   378  0009C2  0009               	tblrd		*+
   379  0009C4  CFF5 FFEE          	movff	tablat,postinc0
   380  0009C8  50E5               	movf	postdec1,w,c
   381  0009CA  50E1               	movf	fsr1l,w,c
   382  0009CC  E1FA               	bnz	copy_data2
   383  0009CE                     end_of_initialization:
   384                           	opt stack 0
   385  0009CE                     __end_of__initialization:
   386                           	opt stack 0
   387  0009CE  9064               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   388  0009D0  9264               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   389  0009D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   390  0009D4  6EF8               	movwf	tblptru,c
   391  0009D6  0100               	movlb	0
   392  0009D8  EF50  F007         	goto	_main	;jump to C main() function
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           postdec1	equ	0xFE5
   400                           fsr1l	equ	0xFE1
   401                           
   402                           	psect	bssCOMRAM
   403  000053                     __pbssCOMRAM:
   404                           	opt stack 0
   405  000053                     __p1:
   406                           	opt stack 0
   407  000053                     	ds	5
   408  000058                     __p2:
   409                           	opt stack 0
   410  000058                     	ds	5
   411  00005D                     __ball:
   412                           	opt stack 0
   413  00005D                     	ds	3
   414  000060                     __nextPos:
   415                           	opt stack 0
   416  000060                     	ds	2
   417  000062                     __timerCounter:
   418                           	opt stack 0
   419  000062                     	ds	2
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	dataCOMRAM
   430  000001                     __pdataCOMRAM:
   431                           	opt stack 0
   432  000001                     drawSymbol@F3226:
   433                           	opt stack 0
   434  000001                     	ds	24
   435  000019                     drawSymbol@F3232:
   436                           	opt stack 0
   437  000019                     	ds	24
   438  000031                     __speed:
   439                           	opt stack 0
   440  000031                     	ds	2
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           postdec1	equ	0xFE5
   448                           fsr1l	equ	0xFE1
   449                           
   450                           	psect	bssBANK0
   451  000080                     __pbssBANK0:
   452                           	opt stack 0
   453  000080                     _pixels:
   454                           	opt stack 0
   455  000080                     	ds	128
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           
   465                           	psect	dataBANK2
   466  0002E4                     __pdataBANK2:
   467                           	opt stack 0
   468  0002E4                     drawSymbol@F3229:
   469                           	opt stack 0
   470  0002E4                     	ds	28
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           postdec1	equ	0xFE5
   478                           fsr1l	equ	0xFE1
   479                           
   480                           	psect	dataBANK3
   481  000300                     __pdataBANK3:
   482                           	opt stack 0
   483  000300                     drawSymbol@F3235:
   484                           	opt stack 0
   485  000300                     	ds	68
   486  000344                     drawSymbol@F3238:
   487                           	opt stack 0
   488  000344                     	ds	68
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	cstackBANK2
   499  000200                     __pcstackBANK2:
   500                           	opt stack 0
   501  000200                     ??_drawSymbol:
   502  000200                     ??_refresh:
   503                           
   504                           ; 1 bytes @ 0x0
   505  000200                     	ds	4
   506  000204                     drawSymbol@symbolPlay:
   507                           	opt stack 0
   508                           
   509                           ; 68 bytes @ 0x4
   510  000204                     	ds	68
   511  000248                     drawSymbol@symbolGo:
   512                           	opt stack 0
   513                           
   514                           ; 68 bytes @ 0x48
   515  000248                     	ds	68
   516  00028C                     drawSymbol@symbolTwo:
   517                           	opt stack 0
   518                           
   519                           ; 28 bytes @ 0x8C
   520  00028C                     	ds	28
   521  0002A8                     drawSymbol@symbolOne:
   522                           	opt stack 0
   523                           
   524                           ; 24 bytes @ 0xA8
   525  0002A8                     	ds	24
   526  0002C0                     drawSymbol@symbolThree:
   527                           	opt stack 0
   528                           
   529                           ; 24 bytes @ 0xC0
   530  0002C0                     	ds	24
   531  0002D8                     drawSymbol@chosenSymbol:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0xD8
   535  0002D8                     	ds	1
   536  0002D9                     drawSymbol@i:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0xD9
   540  0002D9                     	ds	2
   541  0002DB                     drawSymbol@i_78:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0xDB
   545  0002DB                     	ds	2
   546  0002DD                     drawSymbol@i_79:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0xDD
   550  0002DD                     	ds	2
   551  0002DF                     drawSymbol@i_80:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0xDF
   555  0002DF                     	ds	2
   556  0002E1                     drawSymbol@i_81:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0xE1
   560  0002E1                     	ds	2
   561  0002E3                     ??_initializePong:
   562                           
   563                           ; 1 bytes @ 0xE3
   564  0002E3                     	ds	1
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           postdec1	equ	0xFE5
   572                           fsr1l	equ	0xFE1
   573                           
   574                           	psect	cstackBANK1
   575  000100                     __pcstackBANK1:
   576                           	opt stack 0
   577  000100                     i2drawSymbol@symbolPlay:
   578                           	opt stack 0
   579                           
   580                           ; 68 bytes @ 0x0
   581  000100                     	ds	68
   582  000144                     i2drawSymbol@symbolGo:
   583                           	opt stack 0
   584                           
   585                           ; 68 bytes @ 0x44
   586  000144                     	ds	68
   587  000188                     i2drawSymbol@symbolTwo:
   588                           	opt stack 0
   589                           
   590                           ; 28 bytes @ 0x88
   591  000188                     	ds	28
   592  0001A4                     i2drawSymbol@symbolOne:
   593                           	opt stack 0
   594                           
   595                           ; 24 bytes @ 0xA4
   596  0001A4                     	ds	24
   597  0001BC                     i2drawSymbol@symbolThree:
   598                           	opt stack 0
   599                           
   600                           ; 24 bytes @ 0xBC
   601  0001BC                     	ds	24
   602  0001D4                     i2drawSymbol@chosenSymbol:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0xD4
   606  0001D4                     	ds	1
   607  0001D5                     i2drawSymbol@i:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0xD5
   611  0001D5                     	ds	2
   612  0001D7                     i2drawSymbol@i_78:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0xD7
   616  0001D7                     	ds	2
   617  0001D9                     i2drawSymbol@i_79:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0xD9
   621  0001D9                     	ds	2
   622  0001DB                     i2drawSymbol@i_80:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0xDB
   626  0001DB                     	ds	2
   627  0001DD                     i2drawSymbol@i_81:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0xDD
   631  0001DD                     	ds	2
   632                           tblptru	equ	0xFF8
   633                           tblptrh	equ	0xFF7
   634                           tblptrl	equ	0xFF6
   635                           tablat	equ	0xFF5
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           postdec1	equ	0xFE5
   639                           fsr1l	equ	0xFE1
   640                           
   641                           	psect	cstackCOMRAM
   642  000033                     __pcstackCOMRAM:
   643                           	opt stack 0
   644  000033                     ??i2_turnAllOff:
   645  000033                     ?___lwdiv:
   646                           	opt stack 0
   647  000033                     off@row:
   648                           	opt stack 0
   649  000033                     i2on@row:
   650                           	opt stack 0
   651  000033                     ___lwdiv@dividend:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x0
   655  000033                     	ds	1
   656  000034                     ??_off:
   657  000034                     ??i2_on:
   658                           
   659                           ; 1 bytes @ 0x1
   660  000034                     	ds	1
   661  000035                     i2turnAllOff@i:
   662                           	opt stack 0
   663  000035                     ___lwdiv@divisor:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x2
   667  000035                     	ds	1
   668  000036                     off@column:
   669                           	opt stack 0
   670  000036                     i2on@column:
   671                           	opt stack 0
   672  000036                     i2turnAllOff@j:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x3
   676  000036                     	ds	1
   677  000037                     i2drawSymbol@offSetX:
   678                           	opt stack 0
   679  000037                     ___lwdiv@quotient:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x4
   683  000037                     	ds	1
   684  000038                     ??i2_drawSymbol:
   685                           
   686                           ; 1 bytes @ 0x5
   687  000038                     	ds	1
   688  000039                     ___lwdiv@counter:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x6
   692  000039                     	ds	3
   693  00003C                     ??i2_initializePong:
   694                           
   695                           ; 1 bytes @ 0x9
   696  00003C                     	ds	1
   697  00003D                     ??_ISR:
   698                           
   699                           ; 1 bytes @ 0xA
   700  00003D                     	ds	14
   701  00004B                     ISR@ADvalue:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x18
   705  00004B                     	ds	2
   706  00004D                     ISR@value:
   707                           	opt stack 0
   708                           
   709                           ; 1 bytes @ 0x1A
   710  00004D                     	ds	1
   711  00004E                     ??_turnAllOff:
   712  00004E                     ??_setColHigh:
   713  00004E                     ??_setRowHigh:
   714  00004E                     ??_initializeLED:
   715  00004E                     on@row:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x1B
   719  00004E                     	ds	1
   720  00004F                     ??_on:
   721                           
   722                           ; 1 bytes @ 0x1C
   723  00004F                     	ds	1
   724  000050                     setColHigh@column:
   725                           	opt stack 0
   726  000050                     setRowHigh@row:
   727                           	opt stack 0
   728  000050                     initializeLED@i:
   729                           	opt stack 0
   730  000050                     turnAllOff@i:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x1D
   734  000050                     	ds	1
   735  000051                     initializeLED@j:
   736                           	opt stack 0
   737  000051                     on@column:
   738                           	opt stack 0
   739  000051                     turnAllOff@j:
   740                           	opt stack 0
   741  000051                     refresh@theCol:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x1E
   745  000051                     	ds	1
   746  000052                     drawSymbol@offSetX:
   747                           	opt stack 0
   748  000052                     refresh@theRow:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x1F
   752  000052                     	ds	1
   753  000053                     tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           tblptrl	equ	0xFF6
   756                           tablat	equ	0xFF5
   757                           postinc0	equ	0xFEE
   758                           wreg	equ	0xFE8
   759                           postdec1	equ	0xFE5
   760                           fsr1l	equ	0xFE1
   761                           
   762                           ; 1 bytes @ 0x20
   763 ;;
   764 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   765 ;;
   766 ;; *************** function _main *****************
   767 ;; Defined at:
   768 ;;		line 330 in file "main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  GO_SYMBOL       1    0        const unsigned char 
   773 ;;  ONE_SYMBOL      1    0        const unsigned char 
   774 ;;  TWO_SYMBOL      1    0        const unsigned char 
   775 ;;  THREE_SYMBOL    1    0        const unsigned char 
   776 ;;  HELLO_SYMBOL    1    0        const unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   786 ;;      Params:         0       0       0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels required when called:    8
   792 ;; This function calls:
   793 ;;		_initialize
   794 ;;		_initializeLED
   795 ;;		_initializePong
   796 ;;		_refresh
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text0
   803  000EA0                     __ptext0:
   804                           	opt stack 0
   805  000EA0                     _main:
   806                           	opt stack 23
   807                           
   808                           ;main.c: 332: initializeLED();
   809                           
   810                           ;incstack = 0
   811  000EA0  EC61  F005         	call	_initializeLED	;wreg free
   812                           
   813                           ;main.c: 333: initializePong();
   814  000EA4  EC5E  F006         	call	_initializePong	;wreg free
   815                           
   816                           ;main.c: 334: initialize();
   817  000EA8  ECC0  F005         	call	_initialize	;wreg free
   818  000EAC                     l2023:
   819  000EAC  ECEE  F004         	call	_refresh	;wreg free
   820  000EB0  D7FD               	goto	l2023
   821  000EB2                     __end_of_main:
   822                           	opt stack 0
   823                           tblptru	equ	0xFF8
   824                           tblptrh	equ	0xFF7
   825                           tblptrl	equ	0xFF6
   826                           tablat	equ	0xFF5
   827                           postinc0	equ	0xFEE
   828                           wreg	equ	0xFE8
   829                           postdec1	equ	0xFE5
   830                           fsr1l	equ	0xFE1
   831                           
   832 ;; *************** function _refresh *****************
   833 ;; Defined at:
   834 ;;		line 169 in file "Source/LED-API.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  theRow          1   31[COMRAM] unsigned char 
   839 ;;  theCol          1   30[COMRAM] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   849 ;;      Params:         0       0       0       0       0       0       0
   850 ;;      Locals:         2       0       0       0       0       0       0
   851 ;;      Temps:          0       0       0       3       0       0       0
   852 ;;      Totals:         2       0       0       3       0       0       0
   853 ;;Total ram usage:        5 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    6
   856 ;; This function calls:
   857 ;;		_allOff
   858 ;;		_setColHigh
   859 ;;		_setRowHigh
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text1
   866  0009DC                     __ptext1:
   867                           	opt stack 0
   868  0009DC                     _refresh:
   869                           	opt stack 24
   870                           
   871                           ;LED-API.c: 171: for (unsigned char theCol = 0; theCol < 8; theCol++) {
   872                           
   873                           ;incstack = 0
   874  0009DC  0E00               	movlw	0
   875  0009DE  6E51               	movwf	refresh@theCol,c
   876  0009E0                     l1969:
   877  0009E0  0E07               	movlw	7
   878  0009E2  6451               	cpfsgt	refresh@theCol,c
   879  0009E4  D001               	goto	l1973
   880  0009E6  0012               	return	
   881  0009E8                     l1973:
   882                           
   883                           ;LED-API.c: 173: for (unsigned char theRow = 0; theRow < 16; theRow++) {
   884  0009E8  0E00               	movlw	0
   885  0009EA  6E52               	movwf	refresh@theRow,c
   886  0009EC                     l1975:
   887  0009EC  0E0F               	movlw	15
   888  0009EE  6452               	cpfsgt	refresh@theRow,c
   889  0009F0  D001               	goto	l1979
   890  0009F2  D020               	goto	l1987
   891  0009F4                     l1979:
   892                           
   893                           ;LED-API.c: 175: if (pixels[theCol][theRow] == 1)
   894  0009F4  5051               	movf	refresh@theCol,w,c
   895  0009F6  0D10               	mullw	16
   896  0009F8  0E80               	movlw	low _pixels
   897  0009FA  0102               	movlb	2	; () banked
   898  0009FC  6F00               	movwf	??_refresh& (0+255),b
   899  0009FE  0E00               	movlw	high _pixels
   900  000A00  0102               	movlb	2	; () banked
   901  000A02  6F01               	movwf	(??_refresh+1)& (0+255),b
   902  000A04  50F3               	movf	prodl,w,c
   903  000A06  0102               	movlb	2	; () banked
   904  000A08  2700               	addwf	??_refresh& (0+255),f,b
   905  000A0A  50F4               	movf	prodh,w,c
   906  000A0C  0102               	movlb	2	; () banked
   907  000A0E  2301               	addwfc	(??_refresh+1)& (0+255),f,b
   908  000A10  5052               	movf	refresh@theRow,w,c
   909  000A12  0D01               	mullw	1
   910  000A14  50F3               	movf	prodl,w,c
   911  000A16  0102               	movlb	2	; () banked
   912  000A18  2500               	addwf	??_refresh& (0+255),w,b
   913  000A1A  6ED9               	movwf	fsr2l,c
   914  000A1C  50F4               	movf	prodh,w,c
   915  000A1E  0102               	movlb	2	; () banked
   916  000A20  2101               	addwfc	(??_refresh+1)& (0+255),w,b
   917  000A22  6EDA               	movwf	fsr2h,c
   918  000A24  04DE               	decf	postinc2,w,c
   919  000A26  A4D8               	btfss	status,2,c
   920  000A28  D003               	goto	l1983
   921                           
   922                           ; BSR set to: 2
   923                           ;LED-API.c: 176: setRowHigh(theRow);
   924  000A2A  5052               	movf	refresh@theRow,w,c
   925  000A2C  ECA1  F006         	call	_setRowHigh
   926  000A30                     l1983:
   927  000A30  2A52               	incf	refresh@theRow,f,c
   928  000A32  D7DC               	goto	l1975
   929  000A34                     l1987:
   930                           
   931                           ;LED-API.c: 177: }
   932                           ;LED-API.c: 181: setColHigh(theCol);
   933  000A34  5051               	movf	refresh@theCol,w,c
   934  000A36  EC42  F007         	call	_setColHigh
   935                           
   936                           ;LED-API.c: 182: _delay((unsigned long)((500)*(32000000/4000000.0)));
   937  000A3A  0E06               	movlw	6
   938  000A3C  0102               	movlb	2	; () banked
   939  000A3E  6F00               	movwf	??_refresh& (0+255),b
   940  000A40  0E30               	movlw	48
   941  000A42                     u1607:
   942  000A42  2EE8               	decfsz	wreg,f,c
   943  000A44  D7FE               	goto	u1607
   944  000A46  2F00               	decfsz	??_refresh& (0+255),f,b
   945  000A48  D7FC               	goto	u1607
   946  000A4A  D000               	nop2	
   947                           
   948                           ;LED-API.c: 183: allOff();
   949  000A4C  EC59  F007         	call	_allOff	;wreg free
   950  000A50  2A51               	incf	refresh@theCol,f,c
   951  000A52  D7C6               	goto	l1969
   952  000A54                     __end_of_refresh:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           prodh	equ	0xFF4
   959                           prodl	equ	0xFF3
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           postdec1	equ	0xFE5
   963                           fsr1l	equ	0xFE1
   964                           postinc2	equ	0xFDE
   965                           fsr2h	equ	0xFDA
   966                           fsr2l	equ	0xFD9
   967                           status	equ	0xFD8
   968                           
   969 ;; *************** function _setRowHigh *****************
   970 ;; Defined at:
   971 ;;		line 24 in file "Source/LED-API.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  row             1    wreg     unsigned char 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  row             1   29[COMRAM] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   985 ;;      Params:         0       0       0       0       0       0       0
   986 ;;      Locals:         1       0       0       0       0       0       0
   987 ;;      Temps:          2       0       0       0       0       0       0
   988 ;;      Totals:         3       0       0       0       0       0       0
   989 ;;Total ram usage:        3 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    5
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_refresh
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text2
  1000  000D42                     __ptext2:
  1001                           	opt stack 0
  1002  000D42                     _setRowHigh:
  1003                           	opt stack 24
  1004                           
  1005                           ;incstack = 0
  1006                           ;setRowHigh@row stored from wreg
  1007  000D42  6E50               	movwf	setRowHigh@row,c
  1008                           
  1009                           ;LED-API.c: 25: if(row < 8)
  1010  000D44  0E08               	movlw	8
  1011  000D46  6050               	cpfslt	setRowHigh@row,c
  1012  000D48  D00D               	goto	l983
  1013                           
  1014                           ;LED-API.c: 26: LATC |= (1 << row);
  1015  000D4A  C050  F04E         	movff	setRowHigh@row,??_setRowHigh
  1016  000D4E  0E01               	movlw	1
  1017  000D50  6E4F               	movwf	(??_setRowHigh+1)& (0+255),c
  1018  000D52  2A4E               	incf	??_setRowHigh,f,c
  1019  000D54  D002               	goto	u304
  1020  000D56                     u305:
  1021  000D56  90D8               	bcf	status,0,c
  1022  000D58  364F               	rlcf	??_setRowHigh+1,f,c
  1023  000D5A                     u304:
  1024  000D5A  2E4E               	decfsz	??_setRowHigh,f,c
  1025  000D5C  D7FC               	goto	u305
  1026  000D5E  504F               	movf	??_setRowHigh+1,w,c
  1027  000D60  128B               	iorwf	3979,f,c	;volatile
  1028  000D62  0012               	return	
  1029  000D64                     l983:
  1030                           
  1031                           ;LED-API.c: 27: else
  1032                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  1033  000D64  C050  F04E         	movff	setRowHigh@row,??_setRowHigh
  1034  000D68  0EF8               	movlw	-8
  1035  000D6A  264E               	addwf	??_setRowHigh,f,c
  1036  000D6C  0E01               	movlw	1
  1037  000D6E  6E4F               	movwf	(??_setRowHigh+1)& (0+255),c
  1038  000D70  2A4E               	incf	??_setRowHigh,f,c
  1039  000D72  D002               	goto	u314
  1040  000D74                     u315:
  1041  000D74  90D8               	bcf	status,0,c
  1042  000D76  364F               	rlcf	??_setRowHigh+1,f,c
  1043  000D78                     u314:
  1044  000D78  2E4E               	decfsz	??_setRowHigh,f,c
  1045  000D7A  D7FC               	goto	u315
  1046  000D7C  504F               	movf	??_setRowHigh+1,w,c
  1047  000D7E  128C               	iorwf	3980,f,c	;volatile
  1048  000D80  0012               	return	
  1049  000D82                     __end_of_setRowHigh:
  1050                           	opt stack 0
  1051                           tblptru	equ	0xFF8
  1052                           tblptrh	equ	0xFF7
  1053                           tblptrl	equ	0xFF6
  1054                           tablat	equ	0xFF5
  1055                           prodh	equ	0xFF4
  1056                           prodl	equ	0xFF3
  1057                           postinc0	equ	0xFEE
  1058                           wreg	equ	0xFE8
  1059                           postdec1	equ	0xFE5
  1060                           fsr1l	equ	0xFE1
  1061                           postinc2	equ	0xFDE
  1062                           fsr2h	equ	0xFDA
  1063                           fsr2l	equ	0xFD9
  1064                           status	equ	0xFD8
  1065                           
  1066 ;; *************** function _setColHigh *****************
  1067 ;; Defined at:
  1068 ;;		line 20 in file "Source/LED-API.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  column          1    wreg     unsigned char 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  column          1   29[COMRAM] unsigned char 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1082 ;;      Params:         0       0       0       0       0       0       0
  1083 ;;      Locals:         1       0       0       0       0       0       0
  1084 ;;      Temps:          2       0       0       0       0       0       0
  1085 ;;      Totals:         3       0       0       0       0       0       0
  1086 ;;Total ram usage:        3 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    5
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_refresh
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text3
  1097  000E84                     __ptext3:
  1098                           	opt stack 0
  1099  000E84                     _setColHigh:
  1100                           	opt stack 24
  1101                           
  1102                           ;incstack = 0
  1103                           ;setColHigh@column stored from wreg
  1104  000E84  6E50               	movwf	setColHigh@column,c
  1105                           
  1106                           ;LED-API.c: 21: LATA |= (1 << column);
  1107  000E86  C050  F04E         	movff	setColHigh@column,??_setColHigh
  1108  000E8A  0E01               	movlw	1
  1109  000E8C  6E4F               	movwf	(??_setColHigh+1)& (0+255),c
  1110  000E8E  2A4E               	incf	??_setColHigh,f,c
  1111  000E90  D002               	goto	u284
  1112  000E92                     u285:
  1113  000E92  90D8               	bcf	status,0,c
  1114  000E94  364F               	rlcf	??_setColHigh+1,f,c
  1115  000E96                     u284:
  1116  000E96  2E4E               	decfsz	??_setColHigh,f,c
  1117  000E98  D7FC               	goto	u285
  1118  000E9A  504F               	movf	??_setColHigh+1,w,c
  1119  000E9C  1289               	iorwf	3977,f,c	;volatile
  1120  000E9E  0012               	return		;funcret
  1121  000EA0                     __end_of_setColHigh:
  1122                           	opt stack 0
  1123                           tblptru	equ	0xFF8
  1124                           tblptrh	equ	0xFF7
  1125                           tblptrl	equ	0xFF6
  1126                           tablat	equ	0xFF5
  1127                           prodh	equ	0xFF4
  1128                           prodl	equ	0xFF3
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec1	equ	0xFE5
  1132                           fsr1l	equ	0xFE1
  1133                           postinc2	equ	0xFDE
  1134                           fsr2h	equ	0xFDA
  1135                           fsr2l	equ	0xFD9
  1136                           status	equ	0xFD8
  1137                           
  1138 ;; *************** function _allOff *****************
  1139 ;; Defined at:
  1140 ;;		line 163 in file "Source/LED-API.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1154 ;;      Params:         0       0       0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    5
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_refresh
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text4
  1169  000EB2                     __ptext4:
  1170                           	opt stack 0
  1171  000EB2                     _allOff:
  1172                           	opt stack 24
  1173                           
  1174                           ;LED-API.c: 164: LATA = 0;
  1175                           
  1176                           ;incstack = 0
  1177  000EB2  0E00               	movlw	0
  1178  000EB4  6E89               	movwf	3977,c	;volatile
  1179                           
  1180                           ;LED-API.c: 165: LATC = 0;
  1181  000EB6  0E00               	movlw	0
  1182  000EB8  6E8B               	movwf	3979,c	;volatile
  1183                           
  1184                           ;LED-API.c: 166: LATD = 0;
  1185  000EBA  0E00               	movlw	0
  1186  000EBC  6E8C               	movwf	3980,c	;volatile
  1187  000EBE  0012               	return		;funcret
  1188  000EC0                     __end_of_allOff:
  1189                           	opt stack 0
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           prodh	equ	0xFF4
  1195                           prodl	equ	0xFF3
  1196                           postinc0	equ	0xFEE
  1197                           wreg	equ	0xFE8
  1198                           postdec1	equ	0xFE5
  1199                           fsr1l	equ	0xFE1
  1200                           postinc2	equ	0xFDE
  1201                           fsr2h	equ	0xFDA
  1202                           fsr2l	equ	0xFD9
  1203                           status	equ	0xFD8
  1204                           
  1205 ;; *************** function _initializePong *****************
  1206 ;; Defined at:
  1207 ;;		line 50 in file "main.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1221 ;;      Params:         0       0       0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0
  1223 ;;      Temps:          0       0       0       1       0       0       0
  1224 ;;      Totals:         0       0       0       1       0       0       0
  1225 ;;Total ram usage:        1 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    7
  1228 ;; This function calls:
  1229 ;;		_drawSymbol
  1230 ;;		_turnAllOff
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text5
  1237  000CBC                     __ptext5:
  1238                           	opt stack 0
  1239  000CBC                     _initializePong:
  1240                           	opt stack 23
  1241                           
  1242                           ;main.c: 53: turnAllOff();
  1243                           
  1244                           ;incstack = 0
  1245  000CBC  EC16  F006         	call	_turnAllOff	;wreg free
  1246                           
  1247                           ;main.c: 54: drawSymbol(_p1.lives, 0);
  1248  000CC0  0E00               	movlw	0
  1249  000CC2  6E52               	movwf	drawSymbol@offSetX,c
  1250  000CC4  5057               	movf	__p1+4,w,c
  1251  000CC6  EC0D  F000         	call	_drawSymbol
  1252                           
  1253                           ;main.c: 55: drawSymbol(_p2.lives, 8);
  1254  000CCA  0E08               	movlw	8
  1255  000CCC  6E52               	movwf	drawSymbol@offSetX,c
  1256  000CCE  505C               	movf	__p2+4,w,c
  1257  000CD0  EC0D  F000         	call	_drawSymbol
  1258                           
  1259                           ;main.c: 56: _delay((unsigned long)((500)*(32000000/4000000.0)));
  1260  000CD4  0E06               	movlw	6
  1261  000CD6  0102               	movlb	2	; () banked
  1262  000CD8  6FE3               	movwf	??_initializePong& (0+255),b
  1263  000CDA  0E30               	movlw	48
  1264  000CDC                     u1617:
  1265  000CDC  2EE8               	decfsz	wreg,f,c
  1266  000CDE  D7FE               	goto	u1617
  1267  000CE0  2FE3               	decfsz	??_initializePong& (0+255),f,b
  1268  000CE2  D7FC               	goto	u1617
  1269  000CE4  D000               	nop2	
  1270                           
  1271                           ;main.c: 57: turnAllOff();
  1272  000CE6  EC16  F006         	call	_turnAllOff	;wreg free
  1273                           
  1274                           ;main.c: 60: _ball.bDirection = 3;
  1275  000CEA  0E03               	movlw	3
  1276  000CEC  6E5F               	movwf	__ball+2,c
  1277                           
  1278                           ;main.c: 61: _ball.bPos[0] = 2;
  1279  000CEE  0E02               	movlw	2
  1280  000CF0  6E5D               	movwf	__ball,c
  1281                           
  1282                           ;main.c: 62: _ball.bPos[1] = 4;
  1283  000CF2  0E04               	movlw	4
  1284  000CF4  6E5E               	movwf	__ball+1,c
  1285                           
  1286                           ;main.c: 64: _nextPos[0] = _ball.bPos[0];
  1287  000CF6  C05D  F060         	movff	__ball,__nextPos
  1288                           
  1289                           ;main.c: 65: _nextPos[1] = _ball.bPos[1];
  1290  000CFA  C05E  F061         	movff	__ball+1,__nextPos+1
  1291  000CFE  0012               	return		;funcret
  1292  000D00                     __end_of_initializePong:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           prodh	equ	0xFF4
  1299                           prodl	equ	0xFF3
  1300                           postinc0	equ	0xFEE
  1301                           wreg	equ	0xFE8
  1302                           postdec1	equ	0xFE5
  1303                           fsr1l	equ	0xFE1
  1304                           postinc2	equ	0xFDE
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _drawSymbol *****************
  1310 ;; Defined at:
  1311 ;;		line 89 in file "Source/LED-API.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  chosenSymbol    1    wreg     unsigned char 
  1314 ;;  offSetX         1   31[COMRAM] unsigned char 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  chosenSymbol    1  216[BANK2 ] unsigned char 
  1317 ;;  i               2  225[BANK2 ] int 
  1318 ;;  i               2  223[BANK2 ] int 
  1319 ;;  i               2  221[BANK2 ] int 
  1320 ;;  i               2  219[BANK2 ] int 
  1321 ;;  i               2  217[BANK2 ] int 
  1322 ;;  symbolGo       68   72[BANK2 ] unsigned char [2][34]
  1323 ;;  symbolPlay     68    4[BANK2 ] unsigned char [2][34]
  1324 ;;  symbolTwo      28  140[BANK2 ] unsigned char [2][14]
  1325 ;;  symbolThree    24  192[BANK2 ] unsigned char [2][12]
  1326 ;;  symbolOne      24  168[BANK2 ] unsigned char [2][12]
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1336 ;;      Params:         1       0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0     223       0       0       0
  1338 ;;      Temps:          0       0       0       4       0       0       0
  1339 ;;      Totals:         1       0       0     227       0       0       0
  1340 ;;Total ram usage:      228 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    6
  1343 ;; This function calls:
  1344 ;;		_on
  1345 ;;		_turnAllOff
  1346 ;; This function is called by:
  1347 ;;		_initializePong
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text6
  1352  00001A                     __ptext6:
  1353                           	opt stack 0
  1354  00001A                     _drawSymbol:
  1355                           	opt stack 23
  1356                           
  1357                           ;incstack = 0
  1358                           ;drawSymbol@chosenSymbol stored from wreg
  1359  00001A  0102               	movlb	2	; () banked
  1360  00001C  6FD8               	movwf	drawSymbol@chosenSymbol& (0+255),b
  1361                           
  1362                           ;LED-API.c: 91: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  1363  00001E  EE20  F001         	lfsr	2,drawSymbol@F3226
  1364  000022  EE12  F0A8         	lfsr	1,drawSymbol@symbolOne
  1365  000026  0E17               	movlw	23
  1366  000028                     u1401:
  1367  000028  CFDB FFE3          	movff	plusw2,plusw1
  1368  00002C  06E8               	decf	wreg,f,c
  1369  00002E  E2FC               	bc	u1401
  1370                           
  1371                           ;LED-API.c: 92: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  1372  000030  EE22  F0E4         	lfsr	2,drawSymbol@F3229
  1373  000034  EE12  F08C         	lfsr	1,drawSymbol@symbolTwo
  1374  000038  0E1B               	movlw	27
  1375  00003A                     u1411:
  1376  00003A  CFDB FFE3          	movff	plusw2,plusw1
  1377  00003E  06E8               	decf	wreg,f,c
  1378  000040  E2FC               	bc	u1411
  1379                           
  1380                           ;LED-API.c: 93: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  1381  000042  EE20  F019         	lfsr	2,drawSymbol@F3232
  1382  000046  EE12  F0C0         	lfsr	1,drawSymbol@symbolThree
  1383  00004A  0E17               	movlw	23
  1384  00004C                     u1421:
  1385  00004C  CFDB FFE3          	movff	plusw2,plusw1
  1386  000050  06E8               	decf	wreg,f,c
  1387  000052  E2FC               	bc	u1421
  1388                           
  1389                           ;LED-API.c: 95: char symbolPlay[34][2] = {
  1390                           ;LED-API.c: 96: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  1391                           ;LED-API.c: 97: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  1392                           ;LED-API.c: 98: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  1393                           ;LED-API.c: 99: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  1394  000054  EE23  F000         	lfsr	2,drawSymbol@F3235
  1395  000058  EE12  F004         	lfsr	1,drawSymbol@symbolPlay
  1396  00005C  0E43               	movlw	67
  1397  00005E                     u1431:
  1398  00005E  CFDB FFE3          	movff	plusw2,plusw1
  1399  000062  06E8               	decf	wreg,f,c
  1400  000064  E2FC               	bc	u1431
  1401                           
  1402                           ;LED-API.c: 101: char symbolGo[34][2] = {
  1403                           ;LED-API.c: 102: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0}
      +                          ,{5,0},{6,1},{5,2},{4,2},
  1404                           ;LED-API.c: 103: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},
      +                          {13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  1405  000066  EE23  F044         	lfsr	2,drawSymbol@F3238
  1406  00006A  EE12  F048         	lfsr	1,drawSymbol@symbolGo
  1407  00006E  0E43               	movlw	67
  1408  000070                     u1441:
  1409  000070  CFDB FFE3          	movff	plusw2,plusw1
  1410  000074  06E8               	decf	wreg,f,c
  1411  000076  E2FC               	bc	u1441
  1412                           
  1413                           ;LED-API.c: 106: switch(chosenSymbol)
  1414  000078  D17B               	goto	l1965
  1415  00007A                     l1899:
  1416                           
  1417                           ;LED-API.c: 111: for(int i = 0; i < 12; i++)
  1418  00007A  0E00               	movlw	0
  1419  00007C  0102               	movlb	2	; () banked
  1420  00007E  6FDA               	movwf	(drawSymbol@i+1)& (0+255),b
  1421  000080  0E00               	movlw	0
  1422  000082  6FD9               	movwf	drawSymbol@i& (0+255),b
  1423                           
  1424                           ; BSR set to: 2
  1425  000084  0102               	movlb	2	; () banked
  1426  000086  BFDA               	btfsc	(drawSymbol@i+1)& (0+255),7,b
  1427  000088  D00A               	goto	l1905
  1428  00008A  0102               	movlb	2	; () banked
  1429  00008C  51DA               	movf	(drawSymbol@i+1)& (0+255),w,b
  1430  00008E  E106               	bnz	u1450
  1431  000090  0E0C               	movlw	12
  1432  000092  0102               	movlb	2	; () banked
  1433  000094  5DD9               	subwf	drawSymbol@i& (0+255),w,b
  1434  000096  B0D8               	btfsc	status,0,c
  1435  000098  0012               	return	
  1436  00009A  D001               	goto	l1905
  1437  00009C                     u1450:
  1438                           
  1439                           ; BSR set to: 2
  1440  00009C  0012               	return	
  1441  00009E                     l1905:
  1442                           
  1443                           ; BSR set to: 2
  1444                           ;LED-API.c: 112: {
  1445                           ;LED-API.c: 113: on(symbolOne[i + offSetX][0], symbolOne[i][1]);
  1446  00009E  C2D9  F200         	movff	drawSymbol@i,??_drawSymbol
  1447  0000A2  C2DA  F201         	movff	drawSymbol@i+1,??_drawSymbol+1
  1448  0000A6  90D8               	bcf	status,0,c
  1449  0000A8  0102               	movlb	2	; () banked
  1450  0000AA  3700               	rlcf	??_drawSymbol& (0+255),f,b
  1451  0000AC  3701               	rlcf	(??_drawSymbol+1)& (0+255),f,b
  1452  0000AE  0E01               	movlw	1
  1453  0000B0  0102               	movlb	2	; () banked
  1454  0000B2  2700               	addwf	??_drawSymbol& (0+255),f,b
  1455  0000B4  0E00               	movlw	0
  1456  0000B6  2301               	addwfc	(??_drawSymbol+1)& (0+255),f,b
  1457  0000B8  0EA8               	movlw	low drawSymbol@symbolOne
  1458  0000BA  0102               	movlb	2	; () banked
  1459  0000BC  2500               	addwf	??_drawSymbol& (0+255),w,b
  1460  0000BE  6ED9               	movwf	fsr2l,c
  1461  0000C0  0E02               	movlw	high drawSymbol@symbolOne
  1462  0000C2  0102               	movlb	2	; () banked
  1463  0000C4  2101               	addwfc	(??_drawSymbol+1)& (0+255),w,b
  1464  0000C6  6EDA               	movwf	fsr2h,c
  1465  0000C8  50DF               	movf	indf2,w,c
  1466  0000CA  6E4E               	movwf	on@row,c
  1467  0000CC  5052               	movf	drawSymbol@offSetX,w,c
  1468  0000CE  0102               	movlb	2	; () banked
  1469  0000D0  25D9               	addwf	drawSymbol@i& (0+255),w,b
  1470  0000D2  0102               	movlb	2	; () banked
  1471  0000D4  6F02               	movwf	(??_drawSymbol+2)& (0+255),b
  1472  0000D6  0E00               	movlw	0
  1473  0000D8  0102               	movlb	2	; () banked
  1474  0000DA  21DA               	addwfc	(drawSymbol@i+1)& (0+255),w,b
  1475  0000DC  0102               	movlb	2	; () banked
  1476  0000DE  6F03               	movwf	(??_drawSymbol+3)& (0+255),b
  1477  0000E0  90D8               	bcf	status,0,c
  1478  0000E2  0102               	movlb	2	; () banked
  1479  0000E4  3702               	rlcf	(??_drawSymbol+2)& (0+255),f,b
  1480  0000E6  3703               	rlcf	(??_drawSymbol+3)& (0+255),f,b
  1481  0000E8  0EA8               	movlw	low drawSymbol@symbolOne
  1482  0000EA  0102               	movlb	2	; () banked
  1483  0000EC  2502               	addwf	(??_drawSymbol+2)& (0+255),w,b
  1484  0000EE  6ED9               	movwf	fsr2l,c
  1485  0000F0  0E02               	movlw	high drawSymbol@symbolOne
  1486  0000F2  0102               	movlb	2	; () banked
  1487  0000F4  2103               	addwfc	(??_drawSymbol+3)& (0+255),w,b
  1488  0000F6  6EDA               	movwf	fsr2h,c
  1489  0000F8  50DF               	movf	indf2,w,c
  1490  0000FA  ECC1  F006         	call	_on
  1491  0000FE  0102               	movlb	2	; () banked
  1492  000100  4BD9               	infsnz	drawSymbol@i& (0+255),f,b
  1493  000102  2BDA               	incf	(drawSymbol@i+1)& (0+255),f,b
  1494                           
  1495                           ; BSR set to: 2
  1496  000104  0102               	movlb	2	; () banked
  1497  000106  BFDA               	btfsc	(drawSymbol@i+1)& (0+255),7,b
  1498  000108  D7CA               	goto	l1905
  1499  00010A  0102               	movlb	2	; () banked
  1500  00010C  51DA               	movf	(drawSymbol@i+1)& (0+255),w,b
  1501  00010E  E101               	bnz	u1460
  1502  000110  D7BF               	goto	L1
  1503  000112                     u1460:
  1504                           
  1505                           ; BSR set to: 2
  1506                           ;LED-API.c: 114: }
  1507                           ;LED-API.c: 115: break;
  1508  000112  0012               	return	
  1509  000114                     l1911:
  1510                           
  1511                           ; BSR set to: 2
  1512                           ;LED-API.c: 119: for(int i = 0; i < 14; i++)
  1513  000114  0E00               	movlw	0
  1514  000116  0102               	movlb	2	; () banked
  1515  000118  6FDC               	movwf	(drawSymbol@i_78+1)& (0+255),b
  1516  00011A  0E00               	movlw	0
  1517  00011C  6FDB               	movwf	drawSymbol@i_78& (0+255),b
  1518                           
  1519                           ; BSR set to: 2
  1520  00011E  0102               	movlb	2	; () banked
  1521  000120  BFDC               	btfsc	(drawSymbol@i_78+1)& (0+255),7,b
  1522  000122  D00A               	goto	l1917
  1523  000124  0102               	movlb	2	; () banked
  1524  000126  51DC               	movf	(drawSymbol@i_78+1)& (0+255),w,b
  1525  000128  E106               	bnz	u1470
  1526  00012A  0E0E               	movlw	14
  1527  00012C  0102               	movlb	2	; () banked
  1528  00012E  5DDB               	subwf	drawSymbol@i_78& (0+255),w,b
  1529  000130  B0D8               	btfsc	status,0,c
  1530  000132  0012               	return	
  1531  000134  D001               	goto	l1917
  1532  000136                     u1470:
  1533                           
  1534                           ; BSR set to: 2
  1535  000136  0012               	return	
  1536  000138                     l1917:
  1537                           
  1538                           ; BSR set to: 2
  1539                           ;LED-API.c: 120: {
  1540                           ;LED-API.c: 121: on(symbolTwo[i + offSetX][0], symbolTwo[i][1]);
  1541  000138  C2DB  F200         	movff	drawSymbol@i_78,??_drawSymbol
  1542  00013C  C2DC  F201         	movff	drawSymbol@i_78+1,??_drawSymbol+1
  1543  000140  90D8               	bcf	status,0,c
  1544  000142  0102               	movlb	2	; () banked
  1545  000144  3700               	rlcf	??_drawSymbol& (0+255),f,b
  1546  000146  3701               	rlcf	(??_drawSymbol+1)& (0+255),f,b
  1547  000148  0E01               	movlw	1
  1548  00014A  0102               	movlb	2	; () banked
  1549  00014C  2700               	addwf	??_drawSymbol& (0+255),f,b
  1550  00014E  0E00               	movlw	0
  1551  000150  2301               	addwfc	(??_drawSymbol+1)& (0+255),f,b
  1552  000152  0E8C               	movlw	low drawSymbol@symbolTwo
  1553  000154  0102               	movlb	2	; () banked
  1554  000156  2500               	addwf	??_drawSymbol& (0+255),w,b
  1555  000158  6ED9               	movwf	fsr2l,c
  1556  00015A  0E02               	movlw	high drawSymbol@symbolTwo
  1557  00015C  0102               	movlb	2	; () banked
  1558  00015E  2101               	addwfc	(??_drawSymbol+1)& (0+255),w,b
  1559  000160  6EDA               	movwf	fsr2h,c
  1560  000162  50DF               	movf	indf2,w,c
  1561  000164  6E4E               	movwf	on@row,c
  1562  000166  5052               	movf	drawSymbol@offSetX,w,c
  1563  000168  0102               	movlb	2	; () banked
  1564  00016A  25DB               	addwf	drawSymbol@i_78& (0+255),w,b
  1565  00016C  0102               	movlb	2	; () banked
  1566  00016E  6F02               	movwf	(??_drawSymbol+2)& (0+255),b
  1567  000170  0E00               	movlw	0
  1568  000172  0102               	movlb	2	; () banked
  1569  000174  21DC               	addwfc	(drawSymbol@i_78+1)& (0+255),w,b
  1570  000176  0102               	movlb	2	; () banked
  1571  000178  6F03               	movwf	(??_drawSymbol+3)& (0+255),b
  1572  00017A  90D8               	bcf	status,0,c
  1573  00017C  0102               	movlb	2	; () banked
  1574  00017E  3702               	rlcf	(??_drawSymbol+2)& (0+255),f,b
  1575  000180  3703               	rlcf	(??_drawSymbol+3)& (0+255),f,b
  1576  000182  0E8C               	movlw	low drawSymbol@symbolTwo
  1577  000184  0102               	movlb	2	; () banked
  1578  000186  2502               	addwf	(??_drawSymbol+2)& (0+255),w,b
  1579  000188  6ED9               	movwf	fsr2l,c
  1580  00018A  0E02               	movlw	high drawSymbol@symbolTwo
  1581  00018C  0102               	movlb	2	; () banked
  1582  00018E  2103               	addwfc	(??_drawSymbol+3)& (0+255),w,b
  1583  000190  6EDA               	movwf	fsr2h,c
  1584  000192  50DF               	movf	indf2,w,c
  1585  000194  ECC1  F006         	call	_on
  1586  000198  0102               	movlb	2	; () banked
  1587  00019A  4BDB               	infsnz	drawSymbol@i_78& (0+255),f,b
  1588  00019C  2BDC               	incf	(drawSymbol@i_78+1)& (0+255),f,b
  1589                           
  1590                           ; BSR set to: 2
  1591  00019E  0102               	movlb	2	; () banked
  1592  0001A0  BFDC               	btfsc	(drawSymbol@i_78+1)& (0+255),7,b
  1593  0001A2  D7CA               	goto	l1917
  1594  0001A4  0102               	movlb	2	; () banked
  1595  0001A6  51DC               	movf	(drawSymbol@i_78+1)& (0+255),w,b
  1596  0001A8  E101               	bnz	u1480
  1597  0001AA  D7BF               	goto	L2
  1598  0001AC                     u1480:
  1599                           
  1600                           ; BSR set to: 2
  1601                           ;LED-API.c: 122: }
  1602                           ;LED-API.c: 123: break;
  1603  0001AC  0012               	return	
  1604  0001AE                     l1923:
  1605                           
  1606                           ; BSR set to: 2
  1607                           ;LED-API.c: 127: for(int i = 0; i < 12; i++)
  1608  0001AE  0E00               	movlw	0
  1609  0001B0  0102               	movlb	2	; () banked
  1610  0001B2  6FDE               	movwf	(drawSymbol@i_79+1)& (0+255),b
  1611  0001B4  0E00               	movlw	0
  1612  0001B6  6FDD               	movwf	drawSymbol@i_79& (0+255),b
  1613                           
  1614                           ; BSR set to: 2
  1615  0001B8  0102               	movlb	2	; () banked
  1616  0001BA  BFDE               	btfsc	(drawSymbol@i_79+1)& (0+255),7,b
  1617  0001BC  D00A               	goto	l1929
  1618  0001BE  0102               	movlb	2	; () banked
  1619  0001C0  51DE               	movf	(drawSymbol@i_79+1)& (0+255),w,b
  1620  0001C2  E106               	bnz	u1490
  1621  0001C4  0E0C               	movlw	12
  1622  0001C6  0102               	movlb	2	; () banked
  1623  0001C8  5DDD               	subwf	drawSymbol@i_79& (0+255),w,b
  1624  0001CA  B0D8               	btfsc	status,0,c
  1625  0001CC  0012               	return	
  1626  0001CE  D001               	goto	l1929
  1627  0001D0                     u1490:
  1628                           
  1629                           ; BSR set to: 2
  1630  0001D0  0012               	return	
  1631  0001D2                     l1929:
  1632                           
  1633                           ; BSR set to: 2
  1634                           ;LED-API.c: 128: {
  1635                           ;LED-API.c: 129: on(symbolThree[i + offSetX][0], symbolThree[i][1]);
  1636  0001D2  C2DD  F200         	movff	drawSymbol@i_79,??_drawSymbol
  1637  0001D6  C2DE  F201         	movff	drawSymbol@i_79+1,??_drawSymbol+1
  1638  0001DA  90D8               	bcf	status,0,c
  1639  0001DC  0102               	movlb	2	; () banked
  1640  0001DE  3700               	rlcf	??_drawSymbol& (0+255),f,b
  1641  0001E0  3701               	rlcf	(??_drawSymbol+1)& (0+255),f,b
  1642  0001E2  0E01               	movlw	1
  1643  0001E4  0102               	movlb	2	; () banked
  1644  0001E6  2700               	addwf	??_drawSymbol& (0+255),f,b
  1645  0001E8  0E00               	movlw	0
  1646  0001EA  2301               	addwfc	(??_drawSymbol+1)& (0+255),f,b
  1647  0001EC  0EC0               	movlw	low drawSymbol@symbolThree
  1648  0001EE  0102               	movlb	2	; () banked
  1649  0001F0  2500               	addwf	??_drawSymbol& (0+255),w,b
  1650  0001F2  6ED9               	movwf	fsr2l,c
  1651  0001F4  0E02               	movlw	high drawSymbol@symbolThree
  1652  0001F6  0102               	movlb	2	; () banked
  1653  0001F8  2101               	addwfc	(??_drawSymbol+1)& (0+255),w,b
  1654  0001FA  6EDA               	movwf	fsr2h,c
  1655  0001FC  50DF               	movf	indf2,w,c
  1656  0001FE  6E4E               	movwf	on@row,c
  1657  000200  5052               	movf	drawSymbol@offSetX,w,c
  1658  000202  0102               	movlb	2	; () banked
  1659  000204  25DD               	addwf	drawSymbol@i_79& (0+255),w,b
  1660  000206  0102               	movlb	2	; () banked
  1661  000208  6F02               	movwf	(??_drawSymbol+2)& (0+255),b
  1662  00020A  0E00               	movlw	0
  1663  00020C  0102               	movlb	2	; () banked
  1664  00020E  21DE               	addwfc	(drawSymbol@i_79+1)& (0+255),w,b
  1665  000210  0102               	movlb	2	; () banked
  1666  000212  6F03               	movwf	(??_drawSymbol+3)& (0+255),b
  1667  000214  90D8               	bcf	status,0,c
  1668  000216  0102               	movlb	2	; () banked
  1669  000218  3702               	rlcf	(??_drawSymbol+2)& (0+255),f,b
  1670  00021A  3703               	rlcf	(??_drawSymbol+3)& (0+255),f,b
  1671  00021C  0EC0               	movlw	low drawSymbol@symbolThree
  1672  00021E  0102               	movlb	2	; () banked
  1673  000220  2502               	addwf	(??_drawSymbol+2)& (0+255),w,b
  1674  000222  6ED9               	movwf	fsr2l,c
  1675  000224  0E02               	movlw	high drawSymbol@symbolThree
  1676  000226  0102               	movlb	2	; () banked
  1677  000228  2103               	addwfc	(??_drawSymbol+3)& (0+255),w,b
  1678  00022A  6EDA               	movwf	fsr2h,c
  1679  00022C  50DF               	movf	indf2,w,c
  1680  00022E  ECC1  F006         	call	_on
  1681  000232  0102               	movlb	2	; () banked
  1682  000234  4BDD               	infsnz	drawSymbol@i_79& (0+255),f,b
  1683  000236  2BDE               	incf	(drawSymbol@i_79+1)& (0+255),f,b
  1684                           
  1685                           ; BSR set to: 2
  1686  000238  0102               	movlb	2	; () banked
  1687  00023A  BFDE               	btfsc	(drawSymbol@i_79+1)& (0+255),7,b
  1688  00023C  D7CA               	goto	l1929
  1689  00023E  0102               	movlb	2	; () banked
  1690  000240  51DE               	movf	(drawSymbol@i_79+1)& (0+255),w,b
  1691  000242  E101               	bnz	u1500
  1692  000244  D7BF               	goto	L3
  1693  000246                     u1500:
  1694                           
  1695                           ; BSR set to: 2
  1696                           ;LED-API.c: 130: }
  1697                           ;LED-API.c: 131: break;
  1698  000246  0012               	return	
  1699  000248                     l1935:
  1700                           
  1701                           ; BSR set to: 2
  1702                           ;LED-API.c: 135: turnAllOff();
  1703  000248  EC16  F006         	call	_turnAllOff	;wreg free
  1704                           
  1705                           ;LED-API.c: 136: for(int i = 0; i < 34; i++)
  1706  00024C  0E00               	movlw	0
  1707  00024E  0102               	movlb	2	; () banked
  1708  000250  6FE0               	movwf	(drawSymbol@i_80+1)& (0+255),b
  1709  000252  0E00               	movlw	0
  1710  000254  6FDF               	movwf	drawSymbol@i_80& (0+255),b
  1711                           
  1712                           ; BSR set to: 2
  1713  000256  0102               	movlb	2	; () banked
  1714  000258  BFE0               	btfsc	(drawSymbol@i_80+1)& (0+255),7,b
  1715  00025A  D00A               	goto	l1943
  1716  00025C  0102               	movlb	2	; () banked
  1717  00025E  51E0               	movf	(drawSymbol@i_80+1)& (0+255),w,b
  1718  000260  E106               	bnz	u1510
  1719  000262  0E22               	movlw	34
  1720  000264  0102               	movlb	2	; () banked
  1721  000266  5DDF               	subwf	drawSymbol@i_80& (0+255),w,b
  1722  000268  B0D8               	btfsc	status,0,c
  1723  00026A  0012               	return	
  1724  00026C  D001               	goto	l1943
  1725  00026E                     u1510:
  1726                           
  1727                           ; BSR set to: 2
  1728  00026E  0012               	return	
  1729  000270                     l1943:
  1730                           
  1731                           ; BSR set to: 2
  1732                           ;LED-API.c: 137: {
  1733                           ;LED-API.c: 138: on(symbolPlay[i + offSetX][0], symbolPlay[i][1]);
  1734  000270  C2DF  F200         	movff	drawSymbol@i_80,??_drawSymbol
  1735  000274  C2E0  F201         	movff	drawSymbol@i_80+1,??_drawSymbol+1
  1736  000278  90D8               	bcf	status,0,c
  1737  00027A  0102               	movlb	2	; () banked
  1738  00027C  3700               	rlcf	??_drawSymbol& (0+255),f,b
  1739  00027E  3701               	rlcf	(??_drawSymbol+1)& (0+255),f,b
  1740  000280  0E01               	movlw	1
  1741  000282  0102               	movlb	2	; () banked
  1742  000284  2700               	addwf	??_drawSymbol& (0+255),f,b
  1743  000286  0E00               	movlw	0
  1744  000288  2301               	addwfc	(??_drawSymbol+1)& (0+255),f,b
  1745  00028A  0E04               	movlw	low drawSymbol@symbolPlay
  1746  00028C  0102               	movlb	2	; () banked
  1747  00028E  2500               	addwf	??_drawSymbol& (0+255),w,b
  1748  000290  6ED9               	movwf	fsr2l,c
  1749  000292  0E02               	movlw	high drawSymbol@symbolPlay
  1750  000294  0102               	movlb	2	; () banked
  1751  000296  2101               	addwfc	(??_drawSymbol+1)& (0+255),w,b
  1752  000298  6EDA               	movwf	fsr2h,c
  1753  00029A  50DF               	movf	indf2,w,c
  1754  00029C  6E4E               	movwf	on@row,c
  1755  00029E  5052               	movf	drawSymbol@offSetX,w,c
  1756  0002A0  0102               	movlb	2	; () banked
  1757  0002A2  25DF               	addwf	drawSymbol@i_80& (0+255),w,b
  1758  0002A4  0102               	movlb	2	; () banked
  1759  0002A6  6F02               	movwf	(??_drawSymbol+2)& (0+255),b
  1760  0002A8  0E00               	movlw	0
  1761  0002AA  0102               	movlb	2	; () banked
  1762  0002AC  21E0               	addwfc	(drawSymbol@i_80+1)& (0+255),w,b
  1763  0002AE  0102               	movlb	2	; () banked
  1764  0002B0  6F03               	movwf	(??_drawSymbol+3)& (0+255),b
  1765  0002B2  90D8               	bcf	status,0,c
  1766  0002B4  0102               	movlb	2	; () banked
  1767  0002B6  3702               	rlcf	(??_drawSymbol+2)& (0+255),f,b
  1768  0002B8  3703               	rlcf	(??_drawSymbol+3)& (0+255),f,b
  1769  0002BA  0E04               	movlw	low drawSymbol@symbolPlay
  1770  0002BC  0102               	movlb	2	; () banked
  1771  0002BE  2502               	addwf	(??_drawSymbol+2)& (0+255),w,b
  1772  0002C0  6ED9               	movwf	fsr2l,c
  1773  0002C2  0E02               	movlw	high drawSymbol@symbolPlay
  1774  0002C4  0102               	movlb	2	; () banked
  1775  0002C6  2103               	addwfc	(??_drawSymbol+3)& (0+255),w,b
  1776  0002C8  6EDA               	movwf	fsr2h,c
  1777  0002CA  50DF               	movf	indf2,w,c
  1778  0002CC  ECC1  F006         	call	_on
  1779  0002D0  0102               	movlb	2	; () banked
  1780  0002D2  4BDF               	infsnz	drawSymbol@i_80& (0+255),f,b
  1781  0002D4  2BE0               	incf	(drawSymbol@i_80+1)& (0+255),f,b
  1782                           
  1783                           ; BSR set to: 2
  1784  0002D6  0102               	movlb	2	; () banked
  1785  0002D8  BFE0               	btfsc	(drawSymbol@i_80+1)& (0+255),7,b
  1786  0002DA  D7CA               	goto	l1943
  1787  0002DC  0102               	movlb	2	; () banked
  1788  0002DE  51E0               	movf	(drawSymbol@i_80+1)& (0+255),w,b
  1789  0002E0  E159               	bnz	l85
  1790  0002E2  D7BF               	goto	L4
  1791  0002E4                     l1949:
  1792                           
  1793                           ; BSR set to: 2
  1794                           ;LED-API.c: 144: turnAllOff();
  1795  0002E4  EC16  F006         	call	_turnAllOff	;wreg free
  1796                           
  1797                           ;LED-API.c: 145: for(int i = 0; i < 34; i++)
  1798  0002E8  0E00               	movlw	0
  1799  0002EA  0102               	movlb	2	; () banked
  1800  0002EC  6FE2               	movwf	(drawSymbol@i_81+1)& (0+255),b
  1801  0002EE  0E00               	movlw	0
  1802  0002F0  6FE1               	movwf	drawSymbol@i_81& (0+255),b
  1803  0002F2                     l1953:
  1804                           
  1805                           ; BSR set to: 2
  1806  0002F2  0102               	movlb	2	; () banked
  1807  0002F4  BFE2               	btfsc	(drawSymbol@i_81+1)& (0+255),7,b
  1808  0002F6  D008               	goto	l1957
  1809  0002F8  0102               	movlb	2	; () banked
  1810  0002FA  51E2               	movf	(drawSymbol@i_81+1)& (0+255),w,b
  1811  0002FC  E14B               	bnz	l85
  1812  0002FE  0E22               	movlw	34
  1813  000300  0102               	movlb	2	; () banked
  1814  000302  5DE1               	subwf	drawSymbol@i_81& (0+255),w,b
  1815  000304  B0D8               	btfsc	status,0,c
  1816  000306  0012               	return	
  1817  000308                     l1957:
  1818                           
  1819                           ; BSR set to: 2
  1820                           ;LED-API.c: 146: {
  1821                           ;LED-API.c: 147: on(symbolGo[i + offSetX][0], symbolGo[i][1]);
  1822  000308  C2E1  F200         	movff	drawSymbol@i_81,??_drawSymbol
  1823  00030C  C2E2  F201         	movff	drawSymbol@i_81+1,??_drawSymbol+1
  1824  000310  90D8               	bcf	status,0,c
  1825  000312  0102               	movlb	2	; () banked
  1826  000314  3700               	rlcf	??_drawSymbol& (0+255),f,b
  1827  000316  3701               	rlcf	(??_drawSymbol+1)& (0+255),f,b
  1828  000318  0E01               	movlw	1
  1829  00031A  0102               	movlb	2	; () banked
  1830  00031C  2700               	addwf	??_drawSymbol& (0+255),f,b
  1831  00031E  0E00               	movlw	0
  1832  000320  2301               	addwfc	(??_drawSymbol+1)& (0+255),f,b
  1833  000322  0E48               	movlw	low drawSymbol@symbolGo
  1834  000324  0102               	movlb	2	; () banked
  1835  000326  2500               	addwf	??_drawSymbol& (0+255),w,b
  1836  000328  6ED9               	movwf	fsr2l,c
  1837  00032A  0E02               	movlw	high drawSymbol@symbolGo
  1838  00032C  0102               	movlb	2	; () banked
  1839  00032E  2101               	addwfc	(??_drawSymbol+1)& (0+255),w,b
  1840  000330  6EDA               	movwf	fsr2h,c
  1841  000332  50DF               	movf	indf2,w,c
  1842  000334  6E4E               	movwf	on@row,c
  1843  000336  5052               	movf	drawSymbol@offSetX,w,c
  1844  000338  0102               	movlb	2	; () banked
  1845  00033A  25E1               	addwf	drawSymbol@i_81& (0+255),w,b
  1846  00033C  0102               	movlb	2	; () banked
  1847  00033E  6F02               	movwf	(??_drawSymbol+2)& (0+255),b
  1848  000340  0E00               	movlw	0
  1849  000342  0102               	movlb	2	; () banked
  1850  000344  21E2               	addwfc	(drawSymbol@i_81+1)& (0+255),w,b
  1851  000346  0102               	movlb	2	; () banked
  1852  000348  6F03               	movwf	(??_drawSymbol+3)& (0+255),b
  1853  00034A  90D8               	bcf	status,0,c
  1854  00034C  0102               	movlb	2	; () banked
  1855  00034E  3702               	rlcf	(??_drawSymbol+2)& (0+255),f,b
  1856  000350  3703               	rlcf	(??_drawSymbol+3)& (0+255),f,b
  1857  000352  0E48               	movlw	low drawSymbol@symbolGo
  1858  000354  0102               	movlb	2	; () banked
  1859  000356  2502               	addwf	(??_drawSymbol+2)& (0+255),w,b
  1860  000358  6ED9               	movwf	fsr2l,c
  1861  00035A  0E02               	movlw	high drawSymbol@symbolGo
  1862  00035C  0102               	movlb	2	; () banked
  1863  00035E  2103               	addwfc	(??_drawSymbol+3)& (0+255),w,b
  1864  000360  6EDA               	movwf	fsr2h,c
  1865  000362  50DF               	movf	indf2,w,c
  1866  000364  ECC1  F006         	call	_on
  1867  000368  0102               	movlb	2	; () banked
  1868  00036A  4BE1               	infsnz	drawSymbol@i_81& (0+255),f,b
  1869  00036C  2BE2               	incf	(drawSymbol@i_81+1)& (0+255),f,b
  1870  00036E  D7C1               	goto	l1953
  1871  000370                     l1965:
  1872  000370  0102               	movlb	2	; () banked
  1873  000372  51D8               	movf	drawSymbol@chosenSymbol& (0+255),w,b
  1874                           
  1875                           ; Switch size 1, requested type "space"
  1876                           ; Number of cases is 5, Range of values is 1 to 5
  1877                           ; switch strategies available:
  1878                           ; Name         Instructions Cycles
  1879                           ; simple_byte           16     9 (average)
  1880                           ;	Chosen strategy is simple_byte
  1881  000374  0A01               	xorlw	1	; case 1
  1882  000376  B4D8               	btfsc	status,2,c
  1883  000378  D680               	goto	l1899
  1884  00037A  0A03               	xorlw	3	; case 2
  1885  00037C  B4D8               	btfsc	status,2,c
  1886  00037E  D6CA               	goto	l1911
  1887  000380  0A01               	xorlw	1	; case 3
  1888  000382  B4D8               	btfsc	status,2,c
  1889  000384  D714               	goto	l1923
  1890  000386  0A07               	xorlw	7	; case 4
  1891  000388  B4D8               	btfsc	status,2,c
  1892  00038A  D75E               	goto	l1935
  1893  00038C  0A01               	xorlw	1	; case 5
  1894  00038E  A4D8               	btfss	status,2,c
  1895  000390  0012               	return	
  1896  000392  D7A8               	goto	l1949
  1897  000394                     l85:
  1898                           
  1899                           ; BSR set to: 2
  1900  000394  0012               	return		;funcret
  1901  000396                     __end_of_drawSymbol:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           prodh	equ	0xFF4
  1908                           prodl	equ	0xFF3
  1909                           postinc0	equ	0xFEE
  1910                           wreg	equ	0xFE8
  1911                           postdec1	equ	0xFE5
  1912                           plusw1	equ	0xFE3
  1913                           fsr1l	equ	0xFE1
  1914                           indf2	equ	0xFDF
  1915                           postinc2	equ	0xFDE
  1916                           plusw2	equ	0xFDB
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _turnAllOff *****************
  1922 ;; Defined at:
  1923 ;;		line 153 in file "Source/LED-API.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  j               1   30[COMRAM] unsigned char 
  1928 ;;  i               1   29[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1938 ;;      Params:         0       0       0       0       0       0       0
  1939 ;;      Locals:         2       0       0       0       0       0       0
  1940 ;;      Temps:          2       0       0       0       0       0       0
  1941 ;;      Totals:         4       0       0       0       0       0       0
  1942 ;;Total ram usage:        4 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    5
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_drawSymbol
  1949 ;;		_initializePong
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text7
  1954  000C2C                     __ptext7:
  1955                           	opt stack 0
  1956  000C2C                     _turnAllOff:
  1957                           	opt stack 24
  1958                           
  1959                           ;LED-API.c: 156: for (unsigned char i = 0; i < 8; i++) {
  1960                           
  1961                           ; BSR set to: 2
  1962                           ;incstack = 0
  1963  000C2C  0E00               	movlw	0
  1964  000C2E  6E50               	movwf	turnAllOff@i,c
  1965  000C30                     l1495:
  1966  000C30  0E07               	movlw	7
  1967  000C32  6450               	cpfsgt	turnAllOff@i,c
  1968  000C34  D001               	goto	l1499
  1969  000C36  0012               	return	
  1970  000C38                     l1499:
  1971                           
  1972                           ;LED-API.c: 157: for (unsigned char j = 0; j < 16; j++) {
  1973  000C38  0E00               	movlw	0
  1974  000C3A  6E51               	movwf	turnAllOff@j,c
  1975  000C3C                     l1501:
  1976  000C3C  0E0F               	movlw	15
  1977  000C3E  6451               	cpfsgt	turnAllOff@j,c
  1978  000C40  D001               	goto	l1505
  1979  000C42  D016               	goto	l1511
  1980  000C44                     l1505:
  1981                           
  1982                           ;LED-API.c: 158: pixels[i][j] = 0;
  1983  000C44  5050               	movf	turnAllOff@i,w,c
  1984  000C46  0D10               	mullw	16
  1985  000C48  0E80               	movlw	low _pixels
  1986  000C4A  6E4E               	movwf	??_turnAllOff& (0+255),c
  1987  000C4C  0E00               	movlw	high _pixels
  1988  000C4E  6E4F               	movwf	(??_turnAllOff+1)& (0+255),c
  1989  000C50  50F3               	movf	prodl,w,c
  1990  000C52  264E               	addwf	??_turnAllOff,f,c
  1991  000C54  50F4               	movf	prodh,w,c
  1992  000C56  224F               	addwfc	??_turnAllOff+1,f,c
  1993  000C58  5051               	movf	turnAllOff@j,w,c
  1994  000C5A  0D01               	mullw	1
  1995  000C5C  50F3               	movf	prodl,w,c
  1996  000C5E  244E               	addwf	??_turnAllOff,w,c
  1997  000C60  6ED9               	movwf	fsr2l,c
  1998  000C62  50F4               	movf	prodh,w,c
  1999  000C64  204F               	addwfc	??_turnAllOff+1,w,c
  2000  000C66  6EDA               	movwf	fsr2h,c
  2001  000C68  0E00               	movlw	0
  2002  000C6A  6EDF               	movwf	indf2,c
  2003  000C6C  2A51               	incf	turnAllOff@j,f,c
  2004  000C6E  D7E6               	goto	l1501
  2005  000C70                     l1511:
  2006  000C70  2A50               	incf	turnAllOff@i,f,c
  2007  000C72  D7DE               	goto	l1495
  2008  000C74                     __end_of_turnAllOff:
  2009                           	opt stack 0
  2010                           tblptru	equ	0xFF8
  2011                           tblptrh	equ	0xFF7
  2012                           tblptrl	equ	0xFF6
  2013                           tablat	equ	0xFF5
  2014                           prodh	equ	0xFF4
  2015                           prodl	equ	0xFF3
  2016                           postinc0	equ	0xFEE
  2017                           wreg	equ	0xFE8
  2018                           postdec1	equ	0xFE5
  2019                           plusw1	equ	0xFE3
  2020                           fsr1l	equ	0xFE1
  2021                           indf2	equ	0xFDF
  2022                           postinc2	equ	0xFDE
  2023                           plusw2	equ	0xFDB
  2024                           fsr2h	equ	0xFDA
  2025                           fsr2l	equ	0xFD9
  2026                           status	equ	0xFD8
  2027                           
  2028 ;; *************** function _on *****************
  2029 ;; Defined at:
  2030 ;;		line 47 in file "Source/LED-API.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  column          1    wreg     unsigned char 
  2033 ;;  row             1   27[COMRAM] unsigned char 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  column          1   30[COMRAM] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2045 ;;      Params:         1       0       0       0       0       0       0
  2046 ;;      Locals:         1       0       0       0       0       0       0
  2047 ;;      Temps:          2       0       0       0       0       0       0
  2048 ;;      Totals:         4       0       0       0       0       0       0
  2049 ;;Total ram usage:        4 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    5
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_drawSymbol
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text8
  2060  000D82                     __ptext8:
  2061                           	opt stack 0
  2062  000D82                     _on:
  2063                           	opt stack 23
  2064                           
  2065                           ;incstack = 0
  2066                           ;on@column stored from wreg
  2067  000D82  6E51               	movwf	on@column,c
  2068                           
  2069                           ;LED-API.c: 49: if (row < 0 || row >= 16)
  2070  000D84  0E0F               	movlw	15
  2071  000D86  644E               	cpfsgt	on@row,c
  2072  000D88  D001               	goto	l1487
  2073  000D8A  0012               	return	
  2074  000D8C                     l1487:
  2075                           
  2076                           ;LED-API.c: 51: if (column < 0 || column >= 8)
  2077  000D8C  0E07               	movlw	7
  2078  000D8E  6451               	cpfsgt	on@column,c
  2079  000D90  D001               	goto	l1491
  2080  000D92  0012               	return	
  2081  000D94                     l1491:
  2082                           
  2083                           ;LED-API.c: 54: pixels[column][row] = 1;
  2084  000D94  5051               	movf	on@column,w,c
  2085  000D96  0D10               	mullw	16
  2086  000D98  0E80               	movlw	low _pixels
  2087  000D9A  6E4F               	movwf	??_on& (0+255),c
  2088  000D9C  0E00               	movlw	high _pixels
  2089  000D9E  6E50               	movwf	(??_on+1)& (0+255),c
  2090  000DA0  50F3               	movf	prodl,w,c
  2091  000DA2  264F               	addwf	??_on,f,c
  2092  000DA4  50F4               	movf	prodh,w,c
  2093  000DA6  2250               	addwfc	??_on+1,f,c
  2094  000DA8  504E               	movf	on@row,w,c
  2095  000DAA  0D01               	mullw	1
  2096  000DAC  50F3               	movf	prodl,w,c
  2097  000DAE  244F               	addwf	??_on,w,c
  2098  000DB0  6ED9               	movwf	fsr2l,c
  2099  000DB2  50F4               	movf	prodh,w,c
  2100  000DB4  2050               	addwfc	??_on+1,w,c
  2101  000DB6  6EDA               	movwf	fsr2h,c
  2102  000DB8  0E01               	movlw	1
  2103  000DBA  6EDF               	movwf	indf2,c
  2104  000DBC  0012               	return		;funcret
  2105  000DBE                     __end_of_on:
  2106                           	opt stack 0
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           prodh	equ	0xFF4
  2112                           prodl	equ	0xFF3
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           postdec1	equ	0xFE5
  2116                           plusw1	equ	0xFE3
  2117                           fsr1l	equ	0xFE1
  2118                           indf2	equ	0xFDF
  2119                           postinc2	equ	0xFDE
  2120                           plusw2	equ	0xFDB
  2121                           fsr2h	equ	0xFDA
  2122                           fsr2l	equ	0xFD9
  2123                           status	equ	0xFD8
  2124                           
  2125 ;; *************** function _initializeLED *****************
  2126 ;; Defined at:
  2127 ;;		line 31 in file "Source/LED-API.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  j               1   30[COMRAM] unsigned char 
  2132 ;;  i               1   29[COMRAM] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2142 ;;      Params:         0       0       0       0       0       0       0
  2143 ;;      Locals:         2       0       0       0       0       0       0
  2144 ;;      Temps:          2       0       0       0       0       0       0
  2145 ;;      Totals:         4       0       0       0       0       0       0
  2146 ;;Total ram usage:        4 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    5
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text9
  2157  000AC2                     __ptext9:
  2158                           	opt stack 0
  2159  000AC2                     _initializeLED:
  2160                           	opt stack 25
  2161                           
  2162                           ;LED-API.c: 32: TRISA = 0b00000000;
  2163                           
  2164                           ;incstack = 0
  2165  000AC2  0E00               	movlw	0
  2166  000AC4  6E92               	movwf	3986,c	;volatile
  2167                           
  2168                           ;LED-API.c: 33: TRISC = 0b00000000;
  2169  000AC6  0E00               	movlw	0
  2170  000AC8  6E94               	movwf	3988,c	;volatile
  2171                           
  2172                           ;LED-API.c: 34: TRISD = 0b00000000;
  2173  000ACA  0E00               	movlw	0
  2174  000ACC  6E95               	movwf	3989,c	;volatile
  2175                           
  2176                           ;LED-API.c: 35: LATA = 0b00000000;
  2177  000ACE  0E00               	movlw	0
  2178  000AD0  6E89               	movwf	3977,c	;volatile
  2179                           
  2180                           ;LED-API.c: 36: LATC = 0b00000000;
  2181  000AD2  0E00               	movlw	0
  2182  000AD4  6E8B               	movwf	3979,c	;volatile
  2183                           
  2184                           ;LED-API.c: 37: LATD = 0b00000000;
  2185  000AD6  0E00               	movlw	0
  2186  000AD8  6E8C               	movwf	3980,c	;volatile
  2187                           
  2188                           ;LED-API.c: 40: for (unsigned char i = 0; i < 8; i++) {
  2189  000ADA  0E00               	movlw	0
  2190  000ADC  6E50               	movwf	initializeLED@i,c
  2191  000ADE                     l1107:
  2192  000ADE  0E07               	movlw	7
  2193  000AE0  6450               	cpfsgt	initializeLED@i,c
  2194  000AE2  D001               	goto	l1111
  2195  000AE4  0012               	return	
  2196  000AE6                     l1111:
  2197                           
  2198                           ;LED-API.c: 41: for (unsigned char j = 0; j < 16; j++) {
  2199  000AE6  0E00               	movlw	0
  2200  000AE8  6E51               	movwf	initializeLED@j,c
  2201  000AEA                     l1113:
  2202  000AEA  0E0F               	movlw	15
  2203  000AEC  6451               	cpfsgt	initializeLED@j,c
  2204  000AEE  D001               	goto	l1117
  2205  000AF0  D016               	goto	l1123
  2206  000AF2                     l1117:
  2207                           
  2208                           ;LED-API.c: 42: pixels[i][j] = 0;
  2209  000AF2  5050               	movf	initializeLED@i,w,c
  2210  000AF4  0D10               	mullw	16
  2211  000AF6  0E80               	movlw	low _pixels
  2212  000AF8  6E4E               	movwf	??_initializeLED& (0+255),c
  2213  000AFA  0E00               	movlw	high _pixels
  2214  000AFC  6E4F               	movwf	(??_initializeLED+1)& (0+255),c
  2215  000AFE  50F3               	movf	prodl,w,c
  2216  000B00  264E               	addwf	??_initializeLED,f,c
  2217  000B02  50F4               	movf	prodh,w,c
  2218  000B04  224F               	addwfc	??_initializeLED+1,f,c
  2219  000B06  5051               	movf	initializeLED@j,w,c
  2220  000B08  0D01               	mullw	1
  2221  000B0A  50F3               	movf	prodl,w,c
  2222  000B0C  244E               	addwf	??_initializeLED,w,c
  2223  000B0E  6ED9               	movwf	fsr2l,c
  2224  000B10  50F4               	movf	prodh,w,c
  2225  000B12  204F               	addwfc	??_initializeLED+1,w,c
  2226  000B14  6EDA               	movwf	fsr2h,c
  2227  000B16  0E00               	movlw	0
  2228  000B18  6EDF               	movwf	indf2,c
  2229  000B1A  2A51               	incf	initializeLED@j,f,c
  2230  000B1C  D7E6               	goto	l1113
  2231  000B1E                     l1123:
  2232  000B1E  2A50               	incf	initializeLED@i,f,c
  2233  000B20  D7DE               	goto	l1107
  2234  000B22                     __end_of_initializeLED:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           postinc0	equ	0xFEE
  2243                           wreg	equ	0xFE8
  2244                           postdec1	equ	0xFE5
  2245                           plusw1	equ	0xFE3
  2246                           fsr1l	equ	0xFE1
  2247                           indf2	equ	0xFDF
  2248                           postinc2	equ	0xFDE
  2249                           plusw2	equ	0xFDB
  2250                           fsr2h	equ	0xFDA
  2251                           fsr2l	equ	0xFD9
  2252                           status	equ	0xFD8
  2253                           
  2254 ;; *************** function _initialize *****************
  2255 ;; Defined at:
  2256 ;;		line 68 in file "main.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2270 ;;      Params:         0       0       0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    5
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text10
  2285  000B80                     __ptext10:
  2286                           	opt stack 0
  2287  000B80                     _initialize:
  2288                           	opt stack 25
  2289                           
  2290                           ;main.c: 71: OSCTUNEbits.PLLEN = 1;
  2291                           
  2292                           ;incstack = 0
  2293  000B80  8C9B               	bsf	3995,6,c	;volatile
  2294                           
  2295                           ;main.c: 72: OSCTUNEbits.TUN = 011111;
  2296  000B82  809B               	bsf	3995,0,c	;volatile
  2297  000B84  929B               	bcf	3995,1,c	;volatile
  2298  000B86  949B               	bcf	3995,2,c	;volatile
  2299  000B88  869B               	bsf	3995,3,c	;volatile
  2300  000B8A  989B               	bcf	3995,4,c	;volatile
  2301                           
  2302                           ;main.c: 74: OSCCONbits.SCS = 00;
  2303  000B8C  0EFC               	movlw	-4
  2304  000B8E  16D3               	andwf	4051,f,c	;volatile
  2305                           
  2306                           ;main.c: 75: OSCCONbits.IRCF = 111;
  2307  000B90  88D3               	bsf	4051,4,c	;volatile
  2308  000B92  8AD3               	bsf	4051,5,c	;volatile
  2309  000B94  8CD3               	bsf	4051,6,c	;volatile
  2310                           
  2311                           ;main.c: 77: PLLEN = 1;
  2312  000B96  8C9B               	bsf	3995,6,c	;volatile
  2313                           
  2314                           ;main.c: 80: GIE = 1;
  2315  000B98  8EF2               	bsf	intcon,7,c	;volatile
  2316                           
  2317                           ;main.c: 81: PEIE=1;
  2318  000B9A  8CF2               	bsf	intcon,6,c	;volatile
  2319                           
  2320                           ;main.c: 84: TRISBbits.TRISB0 = 1;
  2321  000B9C  8093               	bsf	3987,0,c	;volatile
  2322                           
  2323                           ;main.c: 85: TRISBbits.TRISB1 = 1;
  2324  000B9E  8293               	bsf	3987,1,c	;volatile
  2325                           
  2326                           ;main.c: 86: ADCON2bits.ADFM = 1;
  2327  000BA0  8EC0               	bsf	4032,7,c	;volatile
  2328                           
  2329                           ;main.c: 87: ADCON2bits.ADCS = 010;
  2330  000BA2  90C0               	bcf	4032,0,c	;volatile
  2331  000BA4  92C0               	bcf	4032,1,c	;volatile
  2332  000BA6  94C0               	bcf	4032,2,c	;volatile
  2333                           
  2334                           ;main.c: 88: ADCON2bits.ACQT = 111;
  2335  000BA8  86C0               	bsf	4032,3,c	;volatile
  2336  000BAA  88C0               	bsf	4032,4,c	;volatile
  2337  000BAC  8AC0               	bsf	4032,5,c	;volatile
  2338                           
  2339                           ;main.c: 89: ADCON1bits.VCFG0 = 0;
  2340  000BAE  98C1               	bcf	4033,4,c	;volatile
  2341                           
  2342                           ;main.c: 90: ADCON1bits.VCFG1 = 0;
  2343  000BB0  9AC1               	bcf	4033,5,c	;volatile
  2344                           
  2345                           ;main.c: 91: ADCON1bits.PCFG = 0000;
  2346  000BB2  90C1               	bcf	4033,0,c	;volatile
  2347  000BB4  92C1               	bcf	4033,1,c	;volatile
  2348  000BB6  94C1               	bcf	4033,2,c	;volatile
  2349  000BB8  96C1               	bcf	4033,3,c	;volatile
  2350                           
  2351                           ;main.c: 92: ADCON0bits.CHS = 1100;
  2352  000BBA  50C2               	movf	4034,w,c	;volatile
  2353  000BBC  0BC3               	andlw	-61
  2354  000BBE  0930               	iorlw	48
  2355  000BC0  6EC2               	movwf	4034,c	;volatile
  2356                           
  2357                           ;main.c: 93: ADCON0bits.ADON = 1;
  2358  000BC2  80C2               	bsf	4034,0,c	;volatile
  2359                           
  2360                           ;main.c: 94: ADIE = 1;
  2361  000BC4  8C9D               	bsf	3997,6,c	;volatile
  2362                           
  2363                           ;main.c: 97: T0PS0 = 1;
  2364  000BC6  80D5               	bsf	4053,0,c	;volatile
  2365                           
  2366                           ;main.c: 98: T0PS1 = 0;
  2367  000BC8  92D5               	bcf	4053,1,c	;volatile
  2368                           
  2369                           ;main.c: 99: T0PS2 = 1;
  2370  000BCA  84D5               	bsf	4053,2,c	;volatile
  2371                           
  2372                           ;main.c: 100: PSA = 0;
  2373  000BCC  96D5               	bcf	4053,3,c	;volatile
  2374                           
  2375                           ;main.c: 101: T0CS = 0;
  2376  000BCE  9AD5               	bcf	4053,5,c	;volatile
  2377                           
  2378                           ;main.c: 102: T08BIT = 1;
  2379  000BD0  8CD5               	bsf	4053,6,c	;volatile
  2380                           
  2381                           ;main.c: 103: TMR0IE = 1;
  2382  000BD2  8AF2               	bsf	intcon,5,c	;volatile
  2383                           
  2384                           ;main.c: 104: TMR0IF = 0;
  2385  000BD4  94F2               	bcf	intcon,2,c	;volatile
  2386                           
  2387                           ;main.c: 106: TMR0ON = 1;
  2388  000BD6  8ED5               	bsf	4053,7,c	;volatile
  2389  000BD8  0012               	return		;funcret
  2390  000BDA                     __end_of_initialize:
  2391                           	opt stack 0
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           prodh	equ	0xFF4
  2397                           prodl	equ	0xFF3
  2398                           intcon	equ	0xFF2
  2399                           postinc0	equ	0xFEE
  2400                           wreg	equ	0xFE8
  2401                           postdec1	equ	0xFE5
  2402                           plusw1	equ	0xFE3
  2403                           fsr1l	equ	0xFE1
  2404                           indf2	equ	0xFDF
  2405                           postinc2	equ	0xFDE
  2406                           plusw2	equ	0xFDB
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           
  2411 ;; *************** function _ISR *****************
  2412 ;; Defined at:
  2413 ;;		line 275 in file "main.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;		None
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  ADvalue         2   24[COMRAM] unsigned short 
  2418 ;;  value           1   26[COMRAM] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2428 ;;      Params:         0       0       0       0       0       0       0
  2429 ;;      Locals:         3       0       0       0       0       0       0
  2430 ;;      Temps:         14       0       0       0       0       0       0
  2431 ;;      Totals:        17       0       0       0       0       0       0
  2432 ;;Total ram usage:       17 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    4
  2435 ;; This function calls:
  2436 ;;		___lwdiv
  2437 ;;		_checkNextPosition
  2438 ;;		_writePong
  2439 ;; This function is called by:
  2440 ;;		Interrupt level 2
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	intcode
  2445  000008                     __pintcode:
  2446                           	opt stack 0
  2447  000008                     _ISR:
  2448                           	opt stack 23
  2449                           
  2450                           ;incstack = 0
  2451  000008  8264               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2452  00000A  CFFA F03D          	movff	pclath,??_ISR
  2453  00000E  CFFB F03E          	movff	pclatu,??_ISR+1
  2454  000012  EDE8  F003         	call	int_func,f	;refresh shadow registers
  2455                           pclatu	equ	0xFFB
  2456                           pclath	equ	0xFFA
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           prodh	equ	0xFF4
  2462                           prodl	equ	0xFF3
  2463                           intcon	equ	0xFF2
  2464                           postinc0	equ	0xFEE
  2465                           wreg	equ	0xFE8
  2466                           postdec1	equ	0xFE5
  2467                           plusw1	equ	0xFE3
  2468                           fsr1l	equ	0xFE1
  2469                           indf2	equ	0xFDF
  2470                           postinc2	equ	0xFDE
  2471                           plusw2	equ	0xFDB
  2472                           fsr2h	equ	0xFDA
  2473                           fsr2l	equ	0xFD9
  2474                           status	equ	0xFD8
  2475                           
  2476                           	psect	intcode_body
  2477  0007D0                     __pintcode_body:
  2478                           	opt stack 23
  2479  0007D0                     int_func:
  2480                           	opt stack 23
  2481  0007D0  0006               	pop		; remove dummy address from shadow register refresh
  2482  0007D2  CFE9 F03F          	movff	fsr0l,??_ISR+2
  2483  0007D6  CFEA F040          	movff	fsr0h,??_ISR+3
  2484  0007DA  CFE1 F041          	movff	fsr1l,??_ISR+4
  2485  0007DE  CFE2 F042          	movff	fsr1h,??_ISR+5
  2486  0007E2  CFD9 F043          	movff	fsr2l,??_ISR+6
  2487  0007E6  CFDA F044          	movff	fsr2h,??_ISR+7
  2488  0007EA  CFF3 F045          	movff	prodl,??_ISR+8
  2489  0007EE  CFF4 F046          	movff	prodh,??_ISR+9
  2490  0007F2  CFF6 F047          	movff	tblptrl,??_ISR+10
  2491  0007F6  CFF7 F048          	movff	tblptrh,??_ISR+11
  2492  0007FA  CFF8 F049          	movff	tblptru,??_ISR+12
  2493  0007FE  CFF5 F04A          	movff	tablat,??_ISR+13
  2494                           
  2495                           ;main.c: 277: if(TMR0IE && TMR0IF)
  2496  000802  BAF2               	btfsc	intcon,5,c	;volatile
  2497  000804  A4F2               	btfss	intcon,2,c	;volatile
  2498  000806  D012               	goto	i2l1859
  2499                           
  2500                           ;main.c: 278: {
  2501                           ;main.c: 280: TMR0IF = 0;
  2502  000808  94F2               	bcf	intcon,2,c	;volatile
  2503                           
  2504                           ;main.c: 282: if(_timerCounter > _speed)
  2505  00080A  5062               	movf	__timerCounter,w,c
  2506  00080C  5C31               	subwf	__speed,w,c
  2507  00080E  5063               	movf	__timerCounter+1,w,c
  2508  000810  5832               	subwfb	__speed+1,w,c
  2509  000812  B0D8               	btfsc	status,0,c
  2510  000814  D006               	goto	i2l1853
  2511                           
  2512                           ;main.c: 283: {
  2513                           ;main.c: 284: checkNextPosition();
  2514  000816  EC5C  F003         	call	_checkNextPosition	;wreg free
  2515                           
  2516                           ;main.c: 285: _timerCounter = 0;
  2517  00081A  0E00               	movlw	0
  2518  00081C  6E63               	movwf	__timerCounter+1,c
  2519  00081E  0E00               	movlw	0
  2520  000820  6E62               	movwf	__timerCounter,c
  2521  000822                     i2l1853:
  2522                           
  2523                           ;main.c: 286: }
  2524                           ;main.c: 288: _timerCounter++;
  2525  000822  4A62               	infsnz	__timerCounter,f,c
  2526  000824  2A63               	incf	__timerCounter+1,f,c
  2527                           
  2528                           ;main.c: 289: writePong();
  2529  000826  EC2A  F005         	call	_writePong	;wreg free
  2530                           
  2531                           ;main.c: 292: ADCON0bits.GODONE = 1;
  2532  00082A  82C2               	bsf	4034,1,c	;volatile
  2533  00082C                     i2l1859:
  2534                           
  2535                           ;main.c: 294: }
  2536                           ;main.c: 296: if(ADIE && ADIF)
  2537  00082C  BC9D               	btfsc	3997,6,c	;volatile
  2538  00082E  AC9E               	btfss	3998,6,c	;volatile
  2539  000830  D030               	goto	i2l239
  2540                           
  2541                           ;main.c: 297: {
  2542                           ;main.c: 299: ADIF = 0;
  2543  000832  9C9E               	bcf	3998,6,c	;volatile
  2544                           
  2545                           ;main.c: 301: unsigned short ADvalue = ADRES;
  2546  000834  CFC3 F04B          	movff	4035,ISR@ADvalue	;volatile
  2547  000838  CFC4 F04C          	movff	4036,ISR@ADvalue+1	;volatile
  2548                           
  2549                           ;main.c: 302: unsigned char value = (ADvalue / 85);
  2550  00083C  C04B  F033         	movff	ISR@ADvalue,___lwdiv@dividend
  2551  000840  C04C  F034         	movff	ISR@ADvalue+1,___lwdiv@dividend+1
  2552  000844  0E00               	movlw	0
  2553  000846  6E36               	movwf	___lwdiv@divisor+1,c
  2554  000848  0E55               	movlw	85
  2555  00084A  6E35               	movwf	___lwdiv@divisor,c
  2556  00084C  ECED  F005         	call	___lwdiv	;wreg free
  2557  000850  5033               	movf	?___lwdiv,w,c
  2558  000852  6E4D               	movwf	ISR@value,c
  2559                           
  2560                           ;main.c: 305: if(ADCON0bits.CHS == 12)
  2561  000854  30C2               	rrcf	4034,w,c	;volatile
  2562  000856  32E8               	rrcf	wreg,f,c
  2563  000858  0B0F               	andlw	15
  2564  00085A  0A0C               	xorlw	12
  2565  00085C  A4D8               	btfss	status,2,c
  2566  00085E  D00D               	goto	i2l1879
  2567                           
  2568                           ;main.c: 306: {
  2569                           ;main.c: 307: ADCON0bits.CHS = 10;
  2570  000860  50C2               	movf	4034,w,c	;volatile
  2571  000862  0BC3               	andlw	-61
  2572  000864  0928               	iorlw	40
  2573  000866  6EC2               	movwf	4034,c	;volatile
  2574                           
  2575                           ;main.c: 310: _p1.paddlePosOld[0] = _p1.paddlePos[0];
  2576  000868  C055  F053         	movff	__p1+2,__p1
  2577                           
  2578                           ;main.c: 311: _p1.paddlePos[0] = value;
  2579  00086C  C04D  F055         	movff	ISR@value,__p1+2
  2580                           
  2581                           ;main.c: 313: _p1.paddlePosOld[1] = _p1.paddlePos[1];
  2582  000870  C056  F054         	movff	__p1+3,__p1+1
  2583                           
  2584                           ;main.c: 314: _p1.paddlePos[1] = value + 1;
  2585  000874  284D               	incf	ISR@value,w,c
  2586  000876  6E56               	movwf	__p1+3,c
  2587                           
  2588                           ;main.c: 315: }
  2589  000878  D00C               	goto	i2l239
  2590  00087A                     i2l1879:
  2591                           
  2592                           ;main.c: 316: else
  2593                           ;main.c: 317: {
  2594                           ;main.c: 318: ADCON0bits.CHS = 12;
  2595  00087A  50C2               	movf	4034,w,c	;volatile
  2596  00087C  0BC3               	andlw	-61
  2597  00087E  0930               	iorlw	48
  2598  000880  6EC2               	movwf	4034,c	;volatile
  2599                           
  2600                           ;main.c: 321: _p2.paddlePosOld[0] = _p2.paddlePos[0];
  2601  000882  C05A  F058         	movff	__p2+2,__p2
  2602                           
  2603                           ;main.c: 322: _p2.paddlePos[0] = value;
  2604  000886  C04D  F05A         	movff	ISR@value,__p2+2
  2605                           
  2606                           ;main.c: 324: _p2.paddlePosOld[1] = _p2.paddlePos[1];
  2607  00088A  C05B  F059         	movff	__p2+3,__p2+1
  2608                           
  2609                           ;main.c: 325: _p2.paddlePos[1] = value + 1;
  2610  00088E  284D               	incf	ISR@value,w,c
  2611  000890  6E5B               	movwf	__p2+3,c
  2612  000892                     i2l239:
  2613  000892  C04A  FFF5         	movff	??_ISR+13,tablat
  2614  000896  C049  FFF8         	movff	??_ISR+12,tblptru
  2615  00089A  C048  FFF7         	movff	??_ISR+11,tblptrh
  2616  00089E  C047  FFF6         	movff	??_ISR+10,tblptrl
  2617  0008A2  C046  FFF4         	movff	??_ISR+9,prodh
  2618  0008A6  C045  FFF3         	movff	??_ISR+8,prodl
  2619  0008AA  C044  FFDA         	movff	??_ISR+7,fsr2h
  2620  0008AE  C043  FFD9         	movff	??_ISR+6,fsr2l
  2621  0008B2  C042  FFE2         	movff	??_ISR+5,fsr1h
  2622  0008B6  C041  FFE1         	movff	??_ISR+4,fsr1l
  2623  0008BA  C040  FFEA         	movff	??_ISR+3,fsr0h
  2624  0008BE  C03F  FFE9         	movff	??_ISR+2,fsr0l
  2625  0008C2  C03E  FFFB         	movff	??_ISR+1,pclatu
  2626  0008C6  C03D  FFFA         	movff	??_ISR,pclath
  2627  0008CA  9264               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2628  0008CC  0011               	retfie		f
  2629  0008CE                     __end_of_ISR:
  2630                           	opt stack 0
  2631                           pclatu	equ	0xFFB
  2632                           pclath	equ	0xFFA
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           prodh	equ	0xFF4
  2638                           prodl	equ	0xFF3
  2639                           intcon	equ	0xFF2
  2640                           postinc0	equ	0xFEE
  2641                           fsr0h	equ	0xFEA
  2642                           fsr0l	equ	0xFE9
  2643                           wreg	equ	0xFE8
  2644                           postdec1	equ	0xFE5
  2645                           plusw1	equ	0xFE3
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           indf2	equ	0xFDF
  2649                           postinc2	equ	0xFDE
  2650                           plusw2	equ	0xFDB
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function _writePong *****************
  2656 ;; Defined at:
  2657 ;;		line 110 in file "main.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2671 ;;      Params:         0       0       0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0       0       0
  2674 ;;      Totals:         0       0       0       0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    1
  2678 ;; This function calls:
  2679 ;;		_off
  2680 ;;		i2_on
  2681 ;; This function is called by:
  2682 ;;		_ISR
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text12
  2687  000A54                     __ptext12:
  2688                           	opt stack 0
  2689  000A54                     _writePong:
  2690                           	opt stack 25
  2691                           
  2692                           ;main.c: 115: off(_ball.bPos[1], _ball.bPos[0]);
  2693                           
  2694                           ;incstack = 0
  2695  000A54  C05D  F033         	movff	__ball,off@row
  2696  000A58  505E               	movf	__ball+1,w,c
  2697  000A5A  ECDF  F006         	call	_off
  2698                           
  2699                           ;main.c: 116: _ball.bPos[0] = _nextPos[0];
  2700  000A5E  C060  F05D         	movff	__nextPos,__ball
  2701                           
  2702                           ;main.c: 117: _ball.bPos[1] = _nextPos[1];
  2703  000A62  C061  F05E         	movff	__nextPos+1,__ball+1
  2704                           
  2705                           ;main.c: 118: on(_ball.bPos[1], _ball.bPos[0]);
  2706  000A66  C05D  F033         	movff	__ball,i2on@row
  2707  000A6A  505E               	movf	__ball+1,w,c
  2708  000A6C  ECFD  F006         	call	i2_on
  2709                           
  2710                           ;main.c: 121: off(_p1.paddlePosOld[0], 0);
  2711  000A70  0E00               	movlw	0
  2712  000A72  6E33               	movwf	off@row,c
  2713  000A74  5053               	movf	__p1,w,c
  2714  000A76  ECDF  F006         	call	_off
  2715                           
  2716                           ;main.c: 122: off(_p1.paddlePosOld[1], 0);
  2717  000A7A  0E00               	movlw	0
  2718  000A7C  6E33               	movwf	off@row,c
  2719  000A7E  5054               	movf	__p1+1,w,c
  2720  000A80  ECDF  F006         	call	_off
  2721                           
  2722                           ;main.c: 124: off(_p2.paddlePosOld[0], 15);
  2723  000A84  0E0F               	movlw	15
  2724  000A86  6E33               	movwf	off@row,c
  2725  000A88  5058               	movf	__p2,w,c
  2726  000A8A  ECDF  F006         	call	_off
  2727                           
  2728                           ;main.c: 125: off(_p2.paddlePosOld[1], 15);
  2729  000A8E  0E0F               	movlw	15
  2730  000A90  6E33               	movwf	off@row,c
  2731  000A92  5059               	movf	__p2+1,w,c
  2732  000A94  ECDF  F006         	call	_off
  2733                           
  2734                           ;main.c: 127: on(_p1.paddlePos[0], 0);
  2735  000A98  0E00               	movlw	0
  2736  000A9A  6E33               	movwf	i2on@row,c
  2737  000A9C  5055               	movf	__p1+2,w,c
  2738  000A9E  ECFD  F006         	call	i2_on
  2739                           
  2740                           ;main.c: 128: on(_p1.paddlePos[1], 0);
  2741  000AA2  0E00               	movlw	0
  2742  000AA4  6E33               	movwf	i2on@row,c
  2743  000AA6  5056               	movf	__p1+3,w,c
  2744  000AA8  ECFD  F006         	call	i2_on
  2745                           
  2746                           ;main.c: 129: on(_p2.paddlePos[0], 15);
  2747  000AAC  0E0F               	movlw	15
  2748  000AAE  6E33               	movwf	i2on@row,c
  2749  000AB0  505A               	movf	__p2+2,w,c
  2750  000AB2  ECFD  F006         	call	i2_on
  2751                           
  2752                           ;main.c: 130: on(_p2.paddlePos[1], 15);
  2753  000AB6  0E0F               	movlw	15
  2754  000AB8  6E33               	movwf	i2on@row,c
  2755  000ABA  505B               	movf	__p2+3,w,c
  2756  000ABC  ECFD  F006         	call	i2_on
  2757  000AC0  0012               	return		;funcret
  2758  000AC2                     __end_of_writePong:
  2759                           	opt stack 0
  2760                           pclatu	equ	0xFFB
  2761                           pclath	equ	0xFFA
  2762                           tblptru	equ	0xFF8
  2763                           tblptrh	equ	0xFF7
  2764                           tblptrl	equ	0xFF6
  2765                           tablat	equ	0xFF5
  2766                           prodh	equ	0xFF4
  2767                           prodl	equ	0xFF3
  2768                           intcon	equ	0xFF2
  2769                           postinc0	equ	0xFEE
  2770                           fsr0h	equ	0xFEA
  2771                           fsr0l	equ	0xFE9
  2772                           wreg	equ	0xFE8
  2773                           postdec1	equ	0xFE5
  2774                           plusw1	equ	0xFE3
  2775                           fsr1h	equ	0xFE2
  2776                           fsr1l	equ	0xFE1
  2777                           indf2	equ	0xFDF
  2778                           postinc2	equ	0xFDE
  2779                           plusw2	equ	0xFDB
  2780                           fsr2h	equ	0xFDA
  2781                           fsr2l	equ	0xFD9
  2782                           status	equ	0xFD8
  2783                           
  2784 ;; *************** function _off *****************
  2785 ;; Defined at:
  2786 ;;		line 68 in file "Source/LED-API.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  column          1    wreg     unsigned char 
  2789 ;;  row             1    0[COMRAM] unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  column          1    3[COMRAM] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2801 ;;      Params:         1       0       0       0       0       0       0
  2802 ;;      Locals:         1       0       0       0       0       0       0
  2803 ;;      Temps:          2       0       0       0       0       0       0
  2804 ;;      Totals:         4       0       0       0       0       0       0
  2805 ;;Total ram usage:        4 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_writePong
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text13
  2815  000DBE                     __ptext13:
  2816                           	opt stack 0
  2817  000DBE                     _off:
  2818                           	opt stack 25
  2819                           
  2820                           ;incstack = 0
  2821                           ;off@column stored from wreg
  2822  000DBE  6E36               	movwf	off@column,c
  2823                           
  2824                           ;LED-API.c: 70: if (row < 0 || row > 16)
  2825  000DC0  0E10               	movlw	16
  2826  000DC2  6433               	cpfsgt	off@row,c
  2827  000DC4  D001               	goto	i2l1589
  2828  000DC6  0012               	return	
  2829  000DC8                     i2l1589:
  2830                           
  2831                           ;LED-API.c: 72: if (column < 0 || column > 8)
  2832  000DC8  0E08               	movlw	8
  2833  000DCA  6436               	cpfsgt	off@column,c
  2834  000DCC  D001               	goto	i2l1593
  2835  000DCE  0012               	return	
  2836  000DD0                     i2l1593:
  2837                           
  2838                           ;LED-API.c: 75: pixels[column][row] = 0;
  2839  000DD0  5036               	movf	off@column,w,c
  2840  000DD2  0D10               	mullw	16
  2841  000DD4  0E80               	movlw	low _pixels
  2842  000DD6  6E34               	movwf	??_off& (0+255),c
  2843  000DD8  0E00               	movlw	high _pixels
  2844  000DDA  6E35               	movwf	(??_off+1)& (0+255),c
  2845  000DDC  50F3               	movf	prodl,w,c
  2846  000DDE  2634               	addwf	??_off,f,c
  2847  000DE0  50F4               	movf	prodh,w,c
  2848  000DE2  2235               	addwfc	??_off+1,f,c
  2849  000DE4  5033               	movf	off@row,w,c
  2850  000DE6  0D01               	mullw	1
  2851  000DE8  50F3               	movf	prodl,w,c
  2852  000DEA  2434               	addwf	??_off,w,c
  2853  000DEC  6ED9               	movwf	fsr2l,c
  2854  000DEE  50F4               	movf	prodh,w,c
  2855  000DF0  2035               	addwfc	??_off+1,w,c
  2856  000DF2  6EDA               	movwf	fsr2h,c
  2857  000DF4  0E00               	movlw	0
  2858  000DF6  6EDF               	movwf	indf2,c
  2859  000DF8  0012               	return		;funcret
  2860  000DFA                     __end_of_off:
  2861                           	opt stack 0
  2862                           pclatu	equ	0xFFB
  2863                           pclath	equ	0xFFA
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           prodh	equ	0xFF4
  2869                           prodl	equ	0xFF3
  2870                           intcon	equ	0xFF2
  2871                           postinc0	equ	0xFEE
  2872                           fsr0h	equ	0xFEA
  2873                           fsr0l	equ	0xFE9
  2874                           wreg	equ	0xFE8
  2875                           postdec1	equ	0xFE5
  2876                           plusw1	equ	0xFE3
  2877                           fsr1h	equ	0xFE2
  2878                           fsr1l	equ	0xFE1
  2879                           indf2	equ	0xFDF
  2880                           postinc2	equ	0xFDE
  2881                           plusw2	equ	0xFDB
  2882                           fsr2h	equ	0xFDA
  2883                           fsr2l	equ	0xFD9
  2884                           status	equ	0xFD8
  2885                           
  2886 ;; *************** function _checkNextPosition *****************
  2887 ;; Defined at:
  2888 ;;		line 164 in file "main.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2902 ;;      Params:         0       0       0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    3
  2909 ;; This function calls:
  2910 ;;		_getNextPosition
  2911 ;;		i2_initializePong
  2912 ;; This function is called by:
  2913 ;;		_ISR
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text14
  2918  0006B8                     __ptext14:
  2919                           	opt stack 0
  2920  0006B8                     _checkNextPosition:
  2921                           	opt stack 23
  2922                           
  2923                           ;main.c: 166: getNextPosition();
  2924                           
  2925                           ;incstack = 0
  2926  0006B8  EC91  F005         	call	_getNextPosition	;wreg free
  2927                           
  2928                           ;main.c: 167: if(_nextPos[0] == 0)
  2929  0006BC  5060               	movf	__nextPos,w,c
  2930  0006BE  A4D8               	btfss	status,2,c
  2931  0006C0  D032               	goto	i2l1755
  2932                           
  2933                           ;main.c: 168: {
  2934                           ;main.c: 169: if(_p1.paddlePos[0] == _nextPos[1])
  2935  0006C2  5061               	movf	__nextPos+1,w,c
  2936  0006C4  1855               	xorwf	__p1+2,w,c
  2937  0006C6  B4D8               	btfsc	status,2,c
  2938  0006C8  D006               	goto	i2l1725
  2939  0006CA  D012               	goto	i2l1733
  2940  0006CC                     i2l1721:
  2941                           
  2942                           ;main.c: 179: _ball.bDirection = 1;
  2943  0006CC  0E01               	movlw	1
  2944  0006CE  D001               	goto	L6
  2945  0006D0                     i2l1723:
  2946                           
  2947                           ;main.c: 182: _ball.bDirection = 2;
  2948  0006D0  0E02               	movlw	2
  2949  0006D2                     L6:
  2950  0006D2  6E5F               	movwf	__ball+2,c
  2951                           
  2952                           ;main.c: 183: }
  2953  0006D4  D00A               	goto	i2l1727
  2954  0006D6                     i2l1725:
  2955  0006D6  505F               	movf	__ball+2,w,c
  2956                           
  2957                           ; Switch size 1, requested type "space"
  2958                           ; Number of cases is 3, Range of values is 4 to 6
  2959                           ; switch strategies available:
  2960                           ; Name         Instructions Cycles
  2961                           ; simple_byte           10     6 (average)
  2962                           ;	Chosen strategy is simple_byte
  2963  0006D8  0A04               	xorlw	4	; case 4
  2964  0006DA  B4D8               	btfsc	status,2,c
  2965  0006DC  D7F9               	goto	i2l1723
  2966  0006DE  0A01               	xorlw	1	; case 5
  2967  0006E0  B4D8               	btfsc	status,2,c
  2968  0006E2  D7F4               	goto	i2l1721
  2969  0006E4  0A03               	xorlw	3	; case 6
  2970  0006E6  B4D8               	btfsc	status,2,c
  2971  0006E8  D7F3               	goto	i2l1723
  2972  0006EA                     i2l1727:
  2973                           
  2974                           ;main.c: 184: getNextPosition();
  2975  0006EA  EC91  F005         	call	_getNextPosition	;wreg free
  2976                           
  2977                           ;main.c: 185: return;
  2978  0006EE  0012               	return	
  2979  0006F0                     i2l1733:
  2980                           
  2981                           ;main.c: 187: else if(_p1.paddlePos[1] == _nextPos[1])
  2982  0006F0  5061               	movf	__nextPos+1,w,c
  2983  0006F2  1856               	xorwf	__p1+3,w,c
  2984  0006F4  B4D8               	btfsc	status,2,c
  2985  0006F6  D006               	goto	i2l1745
  2986  0006F8  D012               	goto	i2l1751
  2987  0006FA                     i2l1737:
  2988                           
  2989                           ;main.c: 194: _ball.bDirection = 1;
  2990  0006FA  0E01               	movlw	1
  2991  0006FC                     L7:
  2992  0006FC  6E5F               	movwf	__ball+2,c
  2993                           
  2994                           ;main.c: 198: break;
  2995  0006FE  D00C               	goto	i2l1747
  2996  000700                     i2l1741:
  2997                           
  2998                           ;main.c: 200: _ball.bDirection = 3;
  2999  000700  0E03               	movlw	3
  3000  000702  D7FC               	goto	L7
  3001  000704                     i2l1745:
  3002  000704  505F               	movf	__ball+2,w,c
  3003                           
  3004                           ; Switch size 1, requested type "space"
  3005                           ; Number of cases is 3, Range of values is 4 to 6
  3006                           ; switch strategies available:
  3007                           ; Name         Instructions Cycles
  3008                           ; simple_byte           10     6 (average)
  3009                           ;	Chosen strategy is simple_byte
  3010  000706  0A04               	xorlw	4	; case 4
  3011  000708  B4D8               	btfsc	status,2,c
  3012  00070A  D7F7               	goto	i2l1737
  3013  00070C  0A01               	xorlw	1	; case 5
  3014  00070E  B4D8               	btfsc	status,2,c
  3015  000710  D7F7               	goto	i2l1741
  3016  000712  0A03               	xorlw	3	; case 6
  3017  000714  B4D8               	btfsc	status,2,c
  3018  000716  D7F4               	goto	i2l1741
  3019  000718                     i2l1747:
  3020                           
  3021                           ;main.c: 203: getNextPosition();
  3022  000718  EC91  F005         	call	_getNextPosition	;wreg free
  3023                           
  3024                           ;main.c: 204: return;
  3025  00071C  0012               	return	
  3026  00071E                     i2l1751:
  3027                           
  3028                           ;main.c: 205: }
  3029                           ;main.c: 207: _p1.lives--;
  3030  00071E  0657               	decf	__p1+4,f,c
  3031                           
  3032                           ;main.c: 208: initializePong();
  3033  000720  EC80  F006         	call	i2_initializePong	;wreg free
  3034                           
  3035                           ;main.c: 209: }
  3036  000724  0012               	return	
  3037  000726                     i2l1755:
  3038                           
  3039                           ;main.c: 210: else if(_nextPos[0] == 15)
  3040  000726  0E0F               	movlw	15
  3041  000728  1860               	xorwf	__nextPos,w,c
  3042  00072A  A4D8               	btfss	status,2,c
  3043  00072C  D034               	goto	i2l1799
  3044                           
  3045                           ;main.c: 211: {
  3046                           ;main.c: 212: if(_p2.paddlePos[0] == _nextPos[1])
  3047  00072E  5061               	movf	__nextPos+1,w,c
  3048  000730  185A               	xorwf	__p2+2,w,c
  3049  000732  B4D8               	btfsc	status,2,c
  3050  000734  D008               	goto	i2l1769
  3051  000736  D014               	goto	i2l1777
  3052  000738                     i2l1761:
  3053                           
  3054                           ;main.c: 218: _ball.bDirection = 4;
  3055  000738  0E04               	movlw	4
  3056  00073A  D003               	goto	L9
  3057  00073C                     i2l1763:
  3058                           
  3059                           ;main.c: 221: _ball.bDirection = 6;
  3060  00073C  0E06               	movlw	6
  3061  00073E  D001               	goto	L9
  3062  000740                     i2l1765:
  3063                           
  3064                           ;main.c: 224: _ball.bDirection = 5;
  3065  000740  0E05               	movlw	5
  3066  000742                     L9:
  3067  000742  6E5F               	movwf	__ball+2,c
  3068                           
  3069                           ;main.c: 226: }
  3070                           
  3071                           ;main.c: 225: break;
  3072  000744  D00A               	goto	i2l1771
  3073  000746                     i2l1769:
  3074  000746  505F               	movf	__ball+2,w,c
  3075                           
  3076                           ; Switch size 1, requested type "space"
  3077                           ; Number of cases is 3, Range of values is 1 to 3
  3078                           ; switch strategies available:
  3079                           ; Name         Instructions Cycles
  3080                           ; simple_byte           10     6 (average)
  3081                           ;	Chosen strategy is simple_byte
  3082  000748  0A01               	xorlw	1	; case 1
  3083  00074A  B4D8               	btfsc	status,2,c
  3084  00074C  D7F5               	goto	i2l1761
  3085  00074E  0A03               	xorlw	3	; case 2
  3086  000750  B4D8               	btfsc	status,2,c
  3087  000752  D7F4               	goto	i2l1763
  3088  000754  0A01               	xorlw	1	; case 3
  3089  000756  B4D8               	btfsc	status,2,c
  3090  000758  D7F3               	goto	i2l1765
  3091  00075A                     i2l1771:
  3092                           
  3093                           ;main.c: 227: getNextPosition();
  3094  00075A  EC91  F005         	call	_getNextPosition	;wreg free
  3095                           
  3096                           ;main.c: 228: return;
  3097  00075E  0012               	return	
  3098  000760                     i2l1777:
  3099                           
  3100                           ;main.c: 230: else if( _p2.paddlePos[1] == _nextPos[1])
  3101  000760  5061               	movf	__nextPos+1,w,c
  3102  000762  185B               	xorwf	__p2+3,w,c
  3103  000764  B4D8               	btfsc	status,2,c
  3104  000766  D006               	goto	i2l1789
  3105  000768  D012               	goto	i2l1795
  3106  00076A                     i2l1783:
  3107                           
  3108                           ;main.c: 239: _ball.bDirection = 4;
  3109  00076A  0E04               	movlw	4
  3110  00076C  D001               	goto	L10
  3111  00076E                     i2l1785:
  3112                           
  3113                           ;main.c: 242: _ball.bDirection = 6;
  3114  00076E  0E06               	movlw	6
  3115  000770                     L10:
  3116  000770  6E5F               	movwf	__ball+2,c
  3117                           
  3118                           ;main.c: 244: }
  3119                           
  3120                           ;main.c: 243: break;
  3121  000772  D00A               	goto	i2l1791
  3122  000774                     i2l1789:
  3123  000774  505F               	movf	__ball+2,w,c
  3124                           
  3125                           ; Switch size 1, requested type "space"
  3126                           ; Number of cases is 3, Range of values is 1 to 3
  3127                           ; switch strategies available:
  3128                           ; Name         Instructions Cycles
  3129                           ; simple_byte           10     6 (average)
  3130                           ;	Chosen strategy is simple_byte
  3131  000776  0A01               	xorlw	1	; case 1
  3132  000778  B4D8               	btfsc	status,2,c
  3133  00077A  D7F7               	goto	i2l1783
  3134  00077C  0A03               	xorlw	3	; case 2
  3135  00077E  B4D8               	btfsc	status,2,c
  3136  000780  D7F4               	goto	i2l1783
  3137  000782  0A01               	xorlw	1	; case 3
  3138  000784  B4D8               	btfsc	status,2,c
  3139  000786  D7F3               	goto	i2l1785
  3140  000788                     i2l1791:
  3141                           
  3142                           ;main.c: 245: getNextPosition();
  3143  000788  EC91  F005         	call	_getNextPosition	;wreg free
  3144                           
  3145                           ;main.c: 246: return;
  3146  00078C  0012               	return	
  3147  00078E                     i2l1795:
  3148                           
  3149                           ;main.c: 247: }
  3150                           ;main.c: 249: _p2.lives--;
  3151  00078E  065C               	decf	__p2+4,f,c
  3152                           
  3153                           ;main.c: 250: initializePong();
  3154  000790  EC80  F006         	call	i2_initializePong	;wreg free
  3155                           
  3156                           ;main.c: 251: }
  3157  000794  0012               	return	
  3158  000796                     i2l1799:
  3159                           
  3160                           ;main.c: 252: else if(_nextPos[1] < 0 || _nextPos[1] > 7)
  3161  000796  0E07               	movlw	7
  3162  000798  6461               	cpfsgt	__nextPos+1,c
  3163  00079A  0012               	return	
  3164  00079C  D009               	goto	i2l1813
  3165  00079E                     i2l1803:
  3166                           
  3167                           ;main.c: 257: _ball.bDirection = 3;
  3168  00079E  0E03               	movlw	3
  3169  0007A0  D005               	goto	L13
  3170  0007A2                     i2l1805:
  3171                           
  3172                           ;main.c: 260: _ball.bDirection = 1;
  3173  0007A2  0E01               	movlw	1
  3174  0007A4  D003               	goto	L13
  3175  0007A6                     i2l1807:
  3176                           
  3177                           ;main.c: 263: _ball.bDirection = 6;
  3178  0007A6  0E06               	movlw	6
  3179  0007A8  D001               	goto	L13
  3180  0007AA                     i2l1809:
  3181                           
  3182                           ;main.c: 266: _ball.bDirection = 4;
  3183  0007AA  0E04               	movlw	4
  3184  0007AC                     L13:
  3185  0007AC  6E5F               	movwf	__ball+2,c
  3186                           
  3187                           ;main.c: 268: }
  3188                           
  3189                           ;main.c: 267: break;
  3190  0007AE  D00D               	goto	i2l1815
  3191  0007B0                     i2l1813:
  3192  0007B0  505F               	movf	__ball+2,w,c
  3193                           
  3194                           ; Switch size 1, requested type "space"
  3195                           ; Number of cases is 4, Range of values is 1 to 6
  3196                           ; switch strategies available:
  3197                           ; Name         Instructions Cycles
  3198                           ; simple_byte           13     7 (average)
  3199                           ;	Chosen strategy is simple_byte
  3200  0007B2  0A01               	xorlw	1	; case 1
  3201  0007B4  B4D8               	btfsc	status,2,c
  3202  0007B6  D7F3               	goto	i2l1803
  3203  0007B8  0A02               	xorlw	2	; case 3
  3204  0007BA  B4D8               	btfsc	status,2,c
  3205  0007BC  D7F2               	goto	i2l1805
  3206  0007BE  0A07               	xorlw	7	; case 4
  3207  0007C0  B4D8               	btfsc	status,2,c
  3208  0007C2  D7F1               	goto	i2l1807
  3209  0007C4  0A02               	xorlw	2	; case 6
  3210  0007C6  B4D8               	btfsc	status,2,c
  3211  0007C8  D7F0               	goto	i2l1809
  3212  0007CA                     i2l1815:
  3213                           
  3214                           ;main.c: 269: getNextPosition();
  3215  0007CA  EC91  F005         	call	_getNextPosition	;wreg free
  3216                           
  3217                           ;main.c: 270: return;
  3218  0007CE  0012               	return	
  3219  0007D0                     __end_of_checkNextPosition:
  3220                           	opt stack 0
  3221                           pclatu	equ	0xFFB
  3222                           pclath	equ	0xFFA
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           prodh	equ	0xFF4
  3228                           prodl	equ	0xFF3
  3229                           intcon	equ	0xFF2
  3230                           postinc0	equ	0xFEE
  3231                           fsr0h	equ	0xFEA
  3232                           fsr0l	equ	0xFE9
  3233                           wreg	equ	0xFE8
  3234                           postdec1	equ	0xFE5
  3235                           plusw1	equ	0xFE3
  3236                           fsr1h	equ	0xFE2
  3237                           fsr1l	equ	0xFE1
  3238                           indf2	equ	0xFDF
  3239                           postinc2	equ	0xFDE
  3240                           plusw2	equ	0xFDB
  3241                           fsr2h	equ	0xFDA
  3242                           fsr2l	equ	0xFD9
  3243                           status	equ	0xFD8
  3244                           
  3245 ;; *************** function i2_initializePong *****************
  3246 ;; Defined at:
  3247 ;;		line 50 in file "main.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3261 ;;      Params:         0       0       0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0
  3263 ;;      Temps:          1       0       0       0       0       0       0
  3264 ;;      Totals:         1       0       0       0       0       0       0
  3265 ;;Total ram usage:        1 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    2
  3268 ;; This function calls:
  3269 ;;		i2_drawSymbol
  3270 ;;		i2_turnAllOff
  3271 ;; This function is called by:
  3272 ;;		_checkNextPosition
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text15
  3277  000D00                     __ptext15:
  3278                           	opt stack 0
  3279  000D00                     i2_initializePong:
  3280                           	opt stack 23
  3281                           
  3282                           ;main.c: 53: turnAllOff();
  3283                           
  3284                           ;incstack = 0
  3285  000D00  EC3A  F006         	call	i2_turnAllOff	;wreg free
  3286                           
  3287                           ;main.c: 54: drawSymbol(_p1.lives, 0);
  3288  000D04  0E00               	movlw	0
  3289  000D06  6E37               	movwf	i2drawSymbol@offSetX,c
  3290  000D08  5057               	movf	__p1+4,w,c
  3291  000D0A  ECCB  F001         	call	i2_drawSymbol
  3292                           
  3293                           ;main.c: 55: drawSymbol(_p2.lives, 8);
  3294  000D0E  0E08               	movlw	8
  3295  000D10  6E37               	movwf	i2drawSymbol@offSetX,c
  3296  000D12  505C               	movf	__p2+4,w,c
  3297  000D14  ECCB  F001         	call	i2_drawSymbol
  3298                           
  3299                           ;main.c: 56: _delay((unsigned long)((500)*(32000000/4000000.0)));
  3300  000D18  0E06               	movlw	6
  3301  000D1A  6E3C               	movwf	??i2_initializePong& (0+255),c
  3302  000D1C  0E30               	movlw	48
  3303  000D1E                     i2u162_47:
  3304  000D1E  2EE8               	decfsz	wreg,f,c
  3305  000D20  D7FE               	goto	i2u162_47
  3306  000D22  2E3C               	decfsz	??i2_initializePong& (0+255),f,c
  3307  000D24  D7FC               	goto	i2u162_47
  3308  000D26  D000               	nop2	
  3309                           
  3310                           ;main.c: 57: turnAllOff();
  3311  000D28  EC3A  F006         	call	i2_turnAllOff	;wreg free
  3312                           
  3313                           ;main.c: 60: _ball.bDirection = 3;
  3314  000D2C  0E03               	movlw	3
  3315  000D2E  6E5F               	movwf	__ball+2,c
  3316                           
  3317                           ;main.c: 61: _ball.bPos[0] = 2;
  3318  000D30  0E02               	movlw	2
  3319  000D32  6E5D               	movwf	__ball,c
  3320                           
  3321                           ;main.c: 62: _ball.bPos[1] = 4;
  3322  000D34  0E04               	movlw	4
  3323  000D36  6E5E               	movwf	__ball+1,c
  3324                           
  3325                           ;main.c: 64: _nextPos[0] = _ball.bPos[0];
  3326  000D38  C05D  F060         	movff	__ball,__nextPos
  3327                           
  3328                           ;main.c: 65: _nextPos[1] = _ball.bPos[1];
  3329  000D3C  C05E  F061         	movff	__ball+1,__nextPos+1
  3330  000D40  0012               	return		;funcret
  3331  000D42                     __end_ofi2_initializePong:
  3332                           	opt stack 0
  3333                           pclatu	equ	0xFFB
  3334                           pclath	equ	0xFFA
  3335                           tblptru	equ	0xFF8
  3336                           tblptrh	equ	0xFF7
  3337                           tblptrl	equ	0xFF6
  3338                           tablat	equ	0xFF5
  3339                           prodh	equ	0xFF4
  3340                           prodl	equ	0xFF3
  3341                           intcon	equ	0xFF2
  3342                           postinc0	equ	0xFEE
  3343                           fsr0h	equ	0xFEA
  3344                           fsr0l	equ	0xFE9
  3345                           wreg	equ	0xFE8
  3346                           postdec1	equ	0xFE5
  3347                           plusw1	equ	0xFE3
  3348                           fsr1h	equ	0xFE2
  3349                           fsr1l	equ	0xFE1
  3350                           indf2	equ	0xFDF
  3351                           postinc2	equ	0xFDE
  3352                           plusw2	equ	0xFDB
  3353                           fsr2h	equ	0xFDA
  3354                           fsr2l	equ	0xFD9
  3355                           status	equ	0xFD8
  3356                           
  3357 ;; *************** function i2_drawSymbol *****************
  3358 ;; Defined at:
  3359 ;;		line 89 in file "Source/LED-API.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  chosenSymbol    1    wreg     unsigned char 
  3362 ;;  offSetX         1    4[COMRAM] unsigned char 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  chosenSymbol    1  212[BANK1 ] unsigned char 
  3365 ;;  drawSymbol     68   68[BANK1 ] unsigned char [2][34]
  3366 ;;  drawSymbol     68    0[BANK1 ] unsigned char [2][34]
  3367 ;;  drawSymbol     28  136[BANK1 ] unsigned char [2][14]
  3368 ;;  drawSymbol     24  188[BANK1 ] unsigned char [2][12]
  3369 ;;  drawSymbol     24  164[BANK1 ] unsigned char [2][12]
  3370 ;;  drawSymbol      2  221[BANK1 ] int 
  3371 ;;  drawSymbol      2  219[BANK1 ] int 
  3372 ;;  drawSymbol      2  217[BANK1 ] int 
  3373 ;;  drawSymbol      2  215[BANK1 ] int 
  3374 ;;  drawSymbol      2  213[BANK1 ] int 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3384 ;;      Params:         1       0       0       0       0       0       0
  3385 ;;      Locals:         0       0     223       0       0       0       0
  3386 ;;      Temps:          4       0       0       0       0       0       0
  3387 ;;      Totals:         5       0     223       0       0       0       0
  3388 ;;Total ram usage:      228 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    1
  3391 ;; This function calls:
  3392 ;;		i2_on
  3393 ;;		i2_turnAllOff
  3394 ;; This function is called by:
  3395 ;;		i2_initializePong
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text16
  3400  000396                     __ptext16:
  3401                           	opt stack 0
  3402  000396                     i2_drawSymbol:
  3403                           	opt stack 23
  3404                           
  3405                           ;incstack = 0
  3406                           ;i2drawSymbol@chosenSymbol stored from wreg
  3407  000396  0101               	movlb	1	; () banked
  3408  000398  6FD4               	movwf	i2drawSymbol@chosenSymbol& (0+255),b
  3409                           
  3410                           ;LED-API.c: 91: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  3411  00039A  EE20  F001         	lfsr	2,drawSymbol@F3226
  3412  00039E  EE11  F0A4         	lfsr	1,i2drawSymbol@symbolOne
  3413  0003A2  0E17               	movlw	23
  3414  0003A4                     i2u92_41:
  3415  0003A4  CFDB FFE3          	movff	plusw2,plusw1
  3416  0003A8  06E8               	decf	wreg,f,c
  3417  0003AA  E2FC               	bc	i2u92_41
  3418                           
  3419                           ;LED-API.c: 92: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  3420  0003AC  EE22  F0E4         	lfsr	2,drawSymbol@F3229
  3421  0003B0  EE11  F088         	lfsr	1,i2drawSymbol@symbolTwo
  3422  0003B4  0E1B               	movlw	27
  3423  0003B6                     i2u93_41:
  3424  0003B6  CFDB FFE3          	movff	plusw2,plusw1
  3425  0003BA  06E8               	decf	wreg,f,c
  3426  0003BC  E2FC               	bc	i2u93_41
  3427                           
  3428                           ;LED-API.c: 93: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  3429  0003BE  EE20  F019         	lfsr	2,drawSymbol@F3232
  3430  0003C2  EE11  F0BC         	lfsr	1,i2drawSymbol@symbolThree
  3431  0003C6  0E17               	movlw	23
  3432  0003C8                     i2u94_41:
  3433  0003C8  CFDB FFE3          	movff	plusw2,plusw1
  3434  0003CC  06E8               	decf	wreg,f,c
  3435  0003CE  E2FC               	bc	i2u94_41
  3436                           
  3437                           ;LED-API.c: 95: char symbolPlay[34][2] = {
  3438                           ;LED-API.c: 96: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  3439                           ;LED-API.c: 97: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  3440                           ;LED-API.c: 98: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  3441                           ;LED-API.c: 99: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  3442  0003D0  EE23  F000         	lfsr	2,drawSymbol@F3235
  3443  0003D4  EE11  F000         	lfsr	1,i2drawSymbol@symbolPlay
  3444  0003D8  0E43               	movlw	67
  3445  0003DA                     i2u95_41:
  3446  0003DA  CFDB FFE3          	movff	plusw2,plusw1
  3447  0003DE  06E8               	decf	wreg,f,c
  3448  0003E0  E2FC               	bc	i2u95_41
  3449                           
  3450                           ;LED-API.c: 101: char symbolGo[34][2] = {
  3451                           ;LED-API.c: 102: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0}
      +                          ,{5,0},{6,1},{5,2},{4,2},
  3452                           ;LED-API.c: 103: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},
      +                          {13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  3453  0003E2  EE23  F044         	lfsr	2,drawSymbol@F3238
  3454  0003E6  EE11  F044         	lfsr	1,i2drawSymbol@symbolGo
  3455  0003EA  0E43               	movlw	67
  3456  0003EC                     i2u96_41:
  3457  0003EC  CFDB FFE3          	movff	plusw2,plusw1
  3458  0003F0  06E8               	decf	wreg,f,c
  3459  0003F2  E2FC               	bc	i2u96_41
  3460                           
  3461                           ;LED-API.c: 106: switch(chosenSymbol)
  3462  0003F4  D14E               	goto	i2l1583
  3463  0003F6                     i2l1517:
  3464                           
  3465                           ;LED-API.c: 111: for(int i = 0; i < 12; i++)
  3466  0003F6  0E00               	movlw	0
  3467  0003F8  0101               	movlb	1	; () banked
  3468  0003FA  6FD6               	movwf	(i2drawSymbol@i+1)& (0+255),b
  3469  0003FC  0E00               	movlw	0
  3470  0003FE  6FD5               	movwf	i2drawSymbol@i& (0+255),b
  3471                           
  3472                           ; BSR set to: 1
  3473  000400  0101               	movlb	1	; () banked
  3474  000402  BFD6               	btfsc	(i2drawSymbol@i+1)& (0+255),7,b
  3475  000404  D00A               	goto	i2l1523
  3476  000406  0101               	movlb	1	; () banked
  3477  000408  51D6               	movf	(i2drawSymbol@i+1)& (0+255),w,b
  3478  00040A  E106               	bnz	i2u97_40
  3479  00040C  0E0C               	movlw	12
  3480  00040E  0101               	movlb	1	; () banked
  3481  000410  5DD5               	subwf	i2drawSymbol@i& (0+255),w,b
  3482  000412  B0D8               	btfsc	status,0,c
  3483  000414  0012               	return	
  3484  000416  D001               	goto	i2l1523
  3485  000418                     i2u97_40:
  3486                           
  3487                           ; BSR set to: 1
  3488  000418  0012               	return	
  3489  00041A                     i2l1523:
  3490                           
  3491                           ; BSR set to: 1
  3492                           ;LED-API.c: 112: {
  3493                           ;LED-API.c: 113: on(symbolOne[i + offSetX][0], symbolOne[i][1]);
  3494  00041A  C1D5  F038         	movff	i2drawSymbol@i,??i2_drawSymbol
  3495  00041E  C1D6  F039         	movff	i2drawSymbol@i+1,??i2_drawSymbol+1
  3496  000422  90D8               	bcf	status,0,c
  3497  000424  3638               	rlcf	??i2_drawSymbol,f,c
  3498  000426  3639               	rlcf	??i2_drawSymbol+1,f,c
  3499  000428  0E01               	movlw	1
  3500  00042A  2638               	addwf	??i2_drawSymbol,f,c
  3501  00042C  0E00               	movlw	0
  3502  00042E  2239               	addwfc	??i2_drawSymbol+1,f,c
  3503  000430  0EA4               	movlw	low i2drawSymbol@symbolOne
  3504  000432  2438               	addwf	??i2_drawSymbol,w,c
  3505  000434  6ED9               	movwf	fsr2l,c
  3506  000436  0E01               	movlw	high i2drawSymbol@symbolOne
  3507  000438  2039               	addwfc	??i2_drawSymbol+1,w,c
  3508  00043A  6EDA               	movwf	fsr2h,c
  3509  00043C  50DF               	movf	indf2,w,c
  3510  00043E  6E33               	movwf	i2on@row,c
  3511  000440  5037               	movf	i2drawSymbol@offSetX,w,c
  3512  000442  0101               	movlb	1	; () banked
  3513  000444  25D5               	addwf	i2drawSymbol@i& (0+255),w,b
  3514  000446  6E3A               	movwf	(??i2_drawSymbol+2)& (0+255),c
  3515  000448  0E00               	movlw	0
  3516  00044A  0101               	movlb	1	; () banked
  3517  00044C  21D6               	addwfc	(i2drawSymbol@i+1)& (0+255),w,b
  3518  00044E  6E3B               	movwf	(??i2_drawSymbol+3)& (0+255),c
  3519  000450  90D8               	bcf	status,0,c
  3520  000452  363A               	rlcf	??i2_drawSymbol+2,f,c
  3521  000454  363B               	rlcf	??i2_drawSymbol+3,f,c
  3522  000456  0EA4               	movlw	low i2drawSymbol@symbolOne
  3523  000458  243A               	addwf	??i2_drawSymbol+2,w,c
  3524  00045A  6ED9               	movwf	fsr2l,c
  3525  00045C  0E01               	movlw	high i2drawSymbol@symbolOne
  3526  00045E  203B               	addwfc	??i2_drawSymbol+3,w,c
  3527  000460  6EDA               	movwf	fsr2h,c
  3528  000462  50DF               	movf	indf2,w,c
  3529  000464  ECFD  F006         	call	i2_on
  3530  000468  0101               	movlb	1	; () banked
  3531  00046A  4BD5               	infsnz	i2drawSymbol@i& (0+255),f,b
  3532  00046C  2BD6               	incf	(i2drawSymbol@i+1)& (0+255),f,b
  3533                           
  3534                           ; BSR set to: 1
  3535  00046E  0101               	movlb	1	; () banked
  3536  000470  BFD6               	btfsc	(i2drawSymbol@i+1)& (0+255),7,b
  3537  000472  D7D3               	goto	i2l1523
  3538  000474  0101               	movlb	1	; () banked
  3539  000476  51D6               	movf	(i2drawSymbol@i+1)& (0+255),w,b
  3540  000478  E101               	bnz	i2u98_40
  3541  00047A  D7C8               	goto	L14
  3542  00047C                     i2u98_40:
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;LED-API.c: 114: }
  3546                           ;LED-API.c: 115: break;
  3547  00047C  0012               	return	
  3548  00047E                     i2l1529:
  3549                           
  3550                           ; BSR set to: 1
  3551                           ;LED-API.c: 119: for(int i = 0; i < 14; i++)
  3552  00047E  0E00               	movlw	0
  3553  000480  0101               	movlb	1	; () banked
  3554  000482  6FD8               	movwf	(i2drawSymbol@i_78+1)& (0+255),b
  3555  000484  0E00               	movlw	0
  3556  000486  6FD7               	movwf	i2drawSymbol@i_78& (0+255),b
  3557                           
  3558                           ; BSR set to: 1
  3559  000488  0101               	movlb	1	; () banked
  3560  00048A  BFD8               	btfsc	(i2drawSymbol@i_78+1)& (0+255),7,b
  3561  00048C  D00A               	goto	i2l1535
  3562  00048E  0101               	movlb	1	; () banked
  3563  000490  51D8               	movf	(i2drawSymbol@i_78+1)& (0+255),w,b
  3564  000492  E106               	bnz	i2u99_40
  3565  000494  0E0E               	movlw	14
  3566  000496  0101               	movlb	1	; () banked
  3567  000498  5DD7               	subwf	i2drawSymbol@i_78& (0+255),w,b
  3568  00049A  B0D8               	btfsc	status,0,c
  3569  00049C  0012               	return	
  3570  00049E  D001               	goto	i2l1535
  3571  0004A0                     i2u99_40:
  3572                           
  3573                           ; BSR set to: 1
  3574  0004A0  0012               	return	
  3575  0004A2                     i2l1535:
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;LED-API.c: 120: {
  3579                           ;LED-API.c: 121: on(symbolTwo[i + offSetX][0], symbolTwo[i][1]);
  3580  0004A2  C1D7  F038         	movff	i2drawSymbol@i_78,??i2_drawSymbol
  3581  0004A6  C1D8  F039         	movff	i2drawSymbol@i_78+1,??i2_drawSymbol+1
  3582  0004AA  90D8               	bcf	status,0,c
  3583  0004AC  3638               	rlcf	??i2_drawSymbol,f,c
  3584  0004AE  3639               	rlcf	??i2_drawSymbol+1,f,c
  3585  0004B0  0E01               	movlw	1
  3586  0004B2  2638               	addwf	??i2_drawSymbol,f,c
  3587  0004B4  0E00               	movlw	0
  3588  0004B6  2239               	addwfc	??i2_drawSymbol+1,f,c
  3589  0004B8  0E88               	movlw	low i2drawSymbol@symbolTwo
  3590  0004BA  2438               	addwf	??i2_drawSymbol,w,c
  3591  0004BC  6ED9               	movwf	fsr2l,c
  3592  0004BE  0E01               	movlw	high i2drawSymbol@symbolTwo
  3593  0004C0  2039               	addwfc	??i2_drawSymbol+1,w,c
  3594  0004C2  6EDA               	movwf	fsr2h,c
  3595  0004C4  50DF               	movf	indf2,w,c
  3596  0004C6  6E33               	movwf	i2on@row,c
  3597  0004C8  5037               	movf	i2drawSymbol@offSetX,w,c
  3598  0004CA  0101               	movlb	1	; () banked
  3599  0004CC  25D7               	addwf	i2drawSymbol@i_78& (0+255),w,b
  3600  0004CE  6E3A               	movwf	(??i2_drawSymbol+2)& (0+255),c
  3601  0004D0  0E00               	movlw	0
  3602  0004D2  0101               	movlb	1	; () banked
  3603  0004D4  21D8               	addwfc	(i2drawSymbol@i_78+1)& (0+255),w,b
  3604  0004D6  6E3B               	movwf	(??i2_drawSymbol+3)& (0+255),c
  3605  0004D8  90D8               	bcf	status,0,c
  3606  0004DA  363A               	rlcf	??i2_drawSymbol+2,f,c
  3607  0004DC  363B               	rlcf	??i2_drawSymbol+3,f,c
  3608  0004DE  0E88               	movlw	low i2drawSymbol@symbolTwo
  3609  0004E0  243A               	addwf	??i2_drawSymbol+2,w,c
  3610  0004E2  6ED9               	movwf	fsr2l,c
  3611  0004E4  0E01               	movlw	high i2drawSymbol@symbolTwo
  3612  0004E6  203B               	addwfc	??i2_drawSymbol+3,w,c
  3613  0004E8  6EDA               	movwf	fsr2h,c
  3614  0004EA  50DF               	movf	indf2,w,c
  3615  0004EC  ECFD  F006         	call	i2_on
  3616  0004F0  0101               	movlb	1	; () banked
  3617  0004F2  4BD7               	infsnz	i2drawSymbol@i_78& (0+255),f,b
  3618  0004F4  2BD8               	incf	(i2drawSymbol@i_78+1)& (0+255),f,b
  3619                           
  3620                           ; BSR set to: 1
  3621  0004F6  0101               	movlb	1	; () banked
  3622  0004F8  BFD8               	btfsc	(i2drawSymbol@i_78+1)& (0+255),7,b
  3623  0004FA  D7D3               	goto	i2l1535
  3624  0004FC  0101               	movlb	1	; () banked
  3625  0004FE  51D8               	movf	(i2drawSymbol@i_78+1)& (0+255),w,b
  3626  000500  E101               	bnz	i2u100_40
  3627  000502  D7C8               	goto	L15
  3628  000504                     i2u100_40:
  3629                           
  3630                           ; BSR set to: 1
  3631                           ;LED-API.c: 122: }
  3632                           ;LED-API.c: 123: break;
  3633  000504  0012               	return	
  3634  000506                     i2l1541:
  3635                           
  3636                           ; BSR set to: 1
  3637                           ;LED-API.c: 127: for(int i = 0; i < 12; i++)
  3638  000506  0E00               	movlw	0
  3639  000508  0101               	movlb	1	; () banked
  3640  00050A  6FDA               	movwf	(i2drawSymbol@i_79+1)& (0+255),b
  3641  00050C  0E00               	movlw	0
  3642  00050E  6FD9               	movwf	i2drawSymbol@i_79& (0+255),b
  3643                           
  3644                           ; BSR set to: 1
  3645  000510  0101               	movlb	1	; () banked
  3646  000512  BFDA               	btfsc	(i2drawSymbol@i_79+1)& (0+255),7,b
  3647  000514  D00A               	goto	i2l1547
  3648  000516  0101               	movlb	1	; () banked
  3649  000518  51DA               	movf	(i2drawSymbol@i_79+1)& (0+255),w,b
  3650  00051A  E106               	bnz	i2u101_40
  3651  00051C  0E0C               	movlw	12
  3652  00051E  0101               	movlb	1	; () banked
  3653  000520  5DD9               	subwf	i2drawSymbol@i_79& (0+255),w,b
  3654  000522  B0D8               	btfsc	status,0,c
  3655  000524  0012               	return	
  3656  000526  D001               	goto	i2l1547
  3657  000528                     i2u101_40:
  3658                           
  3659                           ; BSR set to: 1
  3660  000528  0012               	return	
  3661  00052A                     i2l1547:
  3662                           
  3663                           ; BSR set to: 1
  3664                           ;LED-API.c: 128: {
  3665                           ;LED-API.c: 129: on(symbolThree[i + offSetX][0], symbolThree[i][1]);
  3666  00052A  C1D9  F038         	movff	i2drawSymbol@i_79,??i2_drawSymbol
  3667  00052E  C1DA  F039         	movff	i2drawSymbol@i_79+1,??i2_drawSymbol+1
  3668  000532  90D8               	bcf	status,0,c
  3669  000534  3638               	rlcf	??i2_drawSymbol,f,c
  3670  000536  3639               	rlcf	??i2_drawSymbol+1,f,c
  3671  000538  0E01               	movlw	1
  3672  00053A  2638               	addwf	??i2_drawSymbol,f,c
  3673  00053C  0E00               	movlw	0
  3674  00053E  2239               	addwfc	??i2_drawSymbol+1,f,c
  3675  000540  0EBC               	movlw	low i2drawSymbol@symbolThree
  3676  000542  2438               	addwf	??i2_drawSymbol,w,c
  3677  000544  6ED9               	movwf	fsr2l,c
  3678  000546  0E01               	movlw	high i2drawSymbol@symbolThree
  3679  000548  2039               	addwfc	??i2_drawSymbol+1,w,c
  3680  00054A  6EDA               	movwf	fsr2h,c
  3681  00054C  50DF               	movf	indf2,w,c
  3682  00054E  6E33               	movwf	i2on@row,c
  3683  000550  5037               	movf	i2drawSymbol@offSetX,w,c
  3684  000552  0101               	movlb	1	; () banked
  3685  000554  25D9               	addwf	i2drawSymbol@i_79& (0+255),w,b
  3686  000556  6E3A               	movwf	(??i2_drawSymbol+2)& (0+255),c
  3687  000558  0E00               	movlw	0
  3688  00055A  0101               	movlb	1	; () banked
  3689  00055C  21DA               	addwfc	(i2drawSymbol@i_79+1)& (0+255),w,b
  3690  00055E  6E3B               	movwf	(??i2_drawSymbol+3)& (0+255),c
  3691  000560  90D8               	bcf	status,0,c
  3692  000562  363A               	rlcf	??i2_drawSymbol+2,f,c
  3693  000564  363B               	rlcf	??i2_drawSymbol+3,f,c
  3694  000566  0EBC               	movlw	low i2drawSymbol@symbolThree
  3695  000568  243A               	addwf	??i2_drawSymbol+2,w,c
  3696  00056A  6ED9               	movwf	fsr2l,c
  3697  00056C  0E01               	movlw	high i2drawSymbol@symbolThree
  3698  00056E  203B               	addwfc	??i2_drawSymbol+3,w,c
  3699  000570  6EDA               	movwf	fsr2h,c
  3700  000572  50DF               	movf	indf2,w,c
  3701  000574  ECFD  F006         	call	i2_on
  3702  000578  0101               	movlb	1	; () banked
  3703  00057A  4BD9               	infsnz	i2drawSymbol@i_79& (0+255),f,b
  3704  00057C  2BDA               	incf	(i2drawSymbol@i_79+1)& (0+255),f,b
  3705                           
  3706                           ; BSR set to: 1
  3707  00057E  0101               	movlb	1	; () banked
  3708  000580  BFDA               	btfsc	(i2drawSymbol@i_79+1)& (0+255),7,b
  3709  000582  D7D3               	goto	i2l1547
  3710  000584  0101               	movlb	1	; () banked
  3711  000586  51DA               	movf	(i2drawSymbol@i_79+1)& (0+255),w,b
  3712  000588  E101               	bnz	i2u102_40
  3713  00058A  D7C8               	goto	L16
  3714  00058C                     i2u102_40:
  3715                           
  3716                           ; BSR set to: 1
  3717                           ;LED-API.c: 130: }
  3718                           ;LED-API.c: 131: break;
  3719  00058C  0012               	return	
  3720  00058E                     i2l1553:
  3721                           
  3722                           ; BSR set to: 1
  3723                           ;LED-API.c: 135: turnAllOff();
  3724  00058E  EC3A  F006         	call	i2_turnAllOff	;wreg free
  3725                           
  3726                           ;LED-API.c: 136: for(int i = 0; i < 34; i++)
  3727  000592  0E00               	movlw	0
  3728  000594  0101               	movlb	1	; () banked
  3729  000596  6FDC               	movwf	(i2drawSymbol@i_80+1)& (0+255),b
  3730  000598  0E00               	movlw	0
  3731  00059A  6FDB               	movwf	i2drawSymbol@i_80& (0+255),b
  3732                           
  3733                           ; BSR set to: 1
  3734  00059C  0101               	movlb	1	; () banked
  3735  00059E  BFDC               	btfsc	(i2drawSymbol@i_80+1)& (0+255),7,b
  3736  0005A0  D00A               	goto	i2l1561
  3737  0005A2  0101               	movlb	1	; () banked
  3738  0005A4  51DC               	movf	(i2drawSymbol@i_80+1)& (0+255),w,b
  3739  0005A6  E106               	bnz	i2u103_40
  3740  0005A8  0E22               	movlw	34
  3741  0005AA  0101               	movlb	1	; () banked
  3742  0005AC  5DDB               	subwf	i2drawSymbol@i_80& (0+255),w,b
  3743  0005AE  B0D8               	btfsc	status,0,c
  3744  0005B0  0012               	return	
  3745  0005B2  D001               	goto	i2l1561
  3746  0005B4                     i2u103_40:
  3747                           
  3748                           ; BSR set to: 1
  3749  0005B4  0012               	return	
  3750  0005B6                     i2l1561:
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;LED-API.c: 137: {
  3754                           ;LED-API.c: 138: on(symbolPlay[i + offSetX][0], symbolPlay[i][1]);
  3755  0005B6  C1DB  F038         	movff	i2drawSymbol@i_80,??i2_drawSymbol
  3756  0005BA  C1DC  F039         	movff	i2drawSymbol@i_80+1,??i2_drawSymbol+1
  3757  0005BE  90D8               	bcf	status,0,c
  3758  0005C0  3638               	rlcf	??i2_drawSymbol,f,c
  3759  0005C2  3639               	rlcf	??i2_drawSymbol+1,f,c
  3760  0005C4  0E01               	movlw	1
  3761  0005C6  2638               	addwf	??i2_drawSymbol,f,c
  3762  0005C8  0E00               	movlw	0
  3763  0005CA  2239               	addwfc	??i2_drawSymbol+1,f,c
  3764  0005CC  0E00               	movlw	low i2drawSymbol@symbolPlay
  3765  0005CE  2438               	addwf	??i2_drawSymbol,w,c
  3766  0005D0  6ED9               	movwf	fsr2l,c
  3767  0005D2  0E01               	movlw	high i2drawSymbol@symbolPlay
  3768  0005D4  2039               	addwfc	??i2_drawSymbol+1,w,c
  3769  0005D6  6EDA               	movwf	fsr2h,c
  3770  0005D8  50DF               	movf	indf2,w,c
  3771  0005DA  6E33               	movwf	i2on@row,c
  3772  0005DC  5037               	movf	i2drawSymbol@offSetX,w,c
  3773  0005DE  0101               	movlb	1	; () banked
  3774  0005E0  25DB               	addwf	i2drawSymbol@i_80& (0+255),w,b
  3775  0005E2  6E3A               	movwf	(??i2_drawSymbol+2)& (0+255),c
  3776  0005E4  0E00               	movlw	0
  3777  0005E6  0101               	movlb	1	; () banked
  3778  0005E8  21DC               	addwfc	(i2drawSymbol@i_80+1)& (0+255),w,b
  3779  0005EA  6E3B               	movwf	(??i2_drawSymbol+3)& (0+255),c
  3780  0005EC  90D8               	bcf	status,0,c
  3781  0005EE  363A               	rlcf	??i2_drawSymbol+2,f,c
  3782  0005F0  363B               	rlcf	??i2_drawSymbol+3,f,c
  3783  0005F2  0E00               	movlw	low i2drawSymbol@symbolPlay
  3784  0005F4  243A               	addwf	??i2_drawSymbol+2,w,c
  3785  0005F6  6ED9               	movwf	fsr2l,c
  3786  0005F8  0E01               	movlw	high i2drawSymbol@symbolPlay
  3787  0005FA  203B               	addwfc	??i2_drawSymbol+3,w,c
  3788  0005FC  6EDA               	movwf	fsr2h,c
  3789  0005FE  50DF               	movf	indf2,w,c
  3790  000600  ECFD  F006         	call	i2_on
  3791  000604  0101               	movlb	1	; () banked
  3792  000606  4BDB               	infsnz	i2drawSymbol@i_80& (0+255),f,b
  3793  000608  2BDC               	incf	(i2drawSymbol@i_80+1)& (0+255),f,b
  3794                           
  3795                           ; BSR set to: 1
  3796  00060A  0101               	movlb	1	; () banked
  3797  00060C  BFDC               	btfsc	(i2drawSymbol@i_80+1)& (0+255),7,b
  3798  00060E  D7D3               	goto	i2l1561
  3799  000610  0101               	movlb	1	; () banked
  3800  000612  51DC               	movf	(i2drawSymbol@i_80+1)& (0+255),w,b
  3801  000614  E150               	bnz	i2l85
  3802  000616  D7C8               	goto	L17
  3803  000618                     i2l1567:
  3804                           
  3805                           ; BSR set to: 1
  3806                           ;LED-API.c: 144: turnAllOff();
  3807  000618  EC3A  F006         	call	i2_turnAllOff	;wreg free
  3808                           
  3809                           ;LED-API.c: 145: for(int i = 0; i < 34; i++)
  3810  00061C  0E00               	movlw	0
  3811  00061E  0101               	movlb	1	; () banked
  3812  000620  6FDE               	movwf	(i2drawSymbol@i_81+1)& (0+255),b
  3813  000622  0E00               	movlw	0
  3814  000624  6FDD               	movwf	i2drawSymbol@i_81& (0+255),b
  3815  000626                     i2l1571:
  3816                           
  3817                           ; BSR set to: 1
  3818  000626  0101               	movlb	1	; () banked
  3819  000628  BFDE               	btfsc	(i2drawSymbol@i_81+1)& (0+255),7,b
  3820  00062A  D008               	goto	i2l1575
  3821  00062C  0101               	movlb	1	; () banked
  3822  00062E  51DE               	movf	(i2drawSymbol@i_81+1)& (0+255),w,b
  3823  000630  E142               	bnz	i2l85
  3824  000632  0E22               	movlw	34
  3825  000634  0101               	movlb	1	; () banked
  3826  000636  5DDD               	subwf	i2drawSymbol@i_81& (0+255),w,b
  3827  000638  B0D8               	btfsc	status,0,c
  3828  00063A  0012               	return	
  3829  00063C                     i2l1575:
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;LED-API.c: 146: {
  3833                           ;LED-API.c: 147: on(symbolGo[i + offSetX][0], symbolGo[i][1]);
  3834  00063C  C1DD  F038         	movff	i2drawSymbol@i_81,??i2_drawSymbol
  3835  000640  C1DE  F039         	movff	i2drawSymbol@i_81+1,??i2_drawSymbol+1
  3836  000644  90D8               	bcf	status,0,c
  3837  000646  3638               	rlcf	??i2_drawSymbol,f,c
  3838  000648  3639               	rlcf	??i2_drawSymbol+1,f,c
  3839  00064A  0E01               	movlw	1
  3840  00064C  2638               	addwf	??i2_drawSymbol,f,c
  3841  00064E  0E00               	movlw	0
  3842  000650  2239               	addwfc	??i2_drawSymbol+1,f,c
  3843  000652  0E44               	movlw	low i2drawSymbol@symbolGo
  3844  000654  2438               	addwf	??i2_drawSymbol,w,c
  3845  000656  6ED9               	movwf	fsr2l,c
  3846  000658  0E01               	movlw	high i2drawSymbol@symbolGo
  3847  00065A  2039               	addwfc	??i2_drawSymbol+1,w,c
  3848  00065C  6EDA               	movwf	fsr2h,c
  3849  00065E  50DF               	movf	indf2,w,c
  3850  000660  6E33               	movwf	i2on@row,c
  3851  000662  5037               	movf	i2drawSymbol@offSetX,w,c
  3852  000664  0101               	movlb	1	; () banked
  3853  000666  25DD               	addwf	i2drawSymbol@i_81& (0+255),w,b
  3854  000668  6E3A               	movwf	(??i2_drawSymbol+2)& (0+255),c
  3855  00066A  0E00               	movlw	0
  3856  00066C  0101               	movlb	1	; () banked
  3857  00066E  21DE               	addwfc	(i2drawSymbol@i_81+1)& (0+255),w,b
  3858  000670  6E3B               	movwf	(??i2_drawSymbol+3)& (0+255),c
  3859  000672  90D8               	bcf	status,0,c
  3860  000674  363A               	rlcf	??i2_drawSymbol+2,f,c
  3861  000676  363B               	rlcf	??i2_drawSymbol+3,f,c
  3862  000678  0E44               	movlw	low i2drawSymbol@symbolGo
  3863  00067A  243A               	addwf	??i2_drawSymbol+2,w,c
  3864  00067C  6ED9               	movwf	fsr2l,c
  3865  00067E  0E01               	movlw	high i2drawSymbol@symbolGo
  3866  000680  203B               	addwfc	??i2_drawSymbol+3,w,c
  3867  000682  6EDA               	movwf	fsr2h,c
  3868  000684  50DF               	movf	indf2,w,c
  3869  000686  ECFD  F006         	call	i2_on
  3870  00068A  0101               	movlb	1	; () banked
  3871  00068C  4BDD               	infsnz	i2drawSymbol@i_81& (0+255),f,b
  3872  00068E  2BDE               	incf	(i2drawSymbol@i_81+1)& (0+255),f,b
  3873  000690  D7CA               	goto	i2l1571
  3874  000692                     i2l1583:
  3875  000692  0101               	movlb	1	; () banked
  3876  000694  51D4               	movf	i2drawSymbol@chosenSymbol& (0+255),w,b
  3877                           
  3878                           ; Switch size 1, requested type "space"
  3879                           ; Number of cases is 5, Range of values is 1 to 5
  3880                           ; switch strategies available:
  3881                           ; Name         Instructions Cycles
  3882                           ; simple_byte           16     9 (average)
  3883                           ;	Chosen strategy is simple_byte
  3884  000696  0A01               	xorlw	1	; case 1
  3885  000698  B4D8               	btfsc	status,2,c
  3886  00069A  D6AD               	goto	i2l1517
  3887  00069C  0A03               	xorlw	3	; case 2
  3888  00069E  B4D8               	btfsc	status,2,c
  3889  0006A0  D6EE               	goto	i2l1529
  3890  0006A2  0A01               	xorlw	1	; case 3
  3891  0006A4  B4D8               	btfsc	status,2,c
  3892  0006A6  D72F               	goto	i2l1541
  3893  0006A8  0A07               	xorlw	7	; case 4
  3894  0006AA  B4D8               	btfsc	status,2,c
  3895  0006AC  D770               	goto	i2l1553
  3896  0006AE  0A01               	xorlw	1	; case 5
  3897  0006B0  A4D8               	btfss	status,2,c
  3898  0006B2  0012               	return	
  3899  0006B4  D7B1               	goto	i2l1567
  3900  0006B6                     i2l85:
  3901                           
  3902                           ; BSR set to: 1
  3903  0006B6  0012               	return		;funcret
  3904  0006B8                     __end_ofi2_drawSymbol:
  3905                           	opt stack 0
  3906                           pclatu	equ	0xFFB
  3907                           pclath	equ	0xFFA
  3908                           tblptru	equ	0xFF8
  3909                           tblptrh	equ	0xFF7
  3910                           tblptrl	equ	0xFF6
  3911                           tablat	equ	0xFF5
  3912                           prodh	equ	0xFF4
  3913                           prodl	equ	0xFF3
  3914                           intcon	equ	0xFF2
  3915                           postinc0	equ	0xFEE
  3916                           fsr0h	equ	0xFEA
  3917                           fsr0l	equ	0xFE9
  3918                           wreg	equ	0xFE8
  3919                           postdec1	equ	0xFE5
  3920                           plusw1	equ	0xFE3
  3921                           fsr1h	equ	0xFE2
  3922                           fsr1l	equ	0xFE1
  3923                           indf2	equ	0xFDF
  3924                           postinc2	equ	0xFDE
  3925                           plusw2	equ	0xFDB
  3926                           fsr2h	equ	0xFDA
  3927                           fsr2l	equ	0xFD9
  3928                           status	equ	0xFD8
  3929                           
  3930 ;; *************** function i2_turnAllOff *****************
  3931 ;; Defined at:
  3932 ;;		line 153 in file "Source/LED-API.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  turnAllOff      1    3[COMRAM] unsigned char 
  3937 ;;  turnAllOff      1    2[COMRAM] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3947 ;;      Params:         0       0       0       0       0       0       0
  3948 ;;      Locals:         2       0       0       0       0       0       0
  3949 ;;      Temps:          2       0       0       0       0       0       0
  3950 ;;      Totals:         4       0       0       0       0       0       0
  3951 ;;Total ram usage:        4 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		i2_drawSymbol
  3957 ;;		i2_initializePong
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text17
  3962  000C74                     __ptext17:
  3963                           	opt stack 0
  3964  000C74                     i2_turnAllOff:
  3965                           	opt stack 24
  3966                           
  3967                           ;LED-API.c: 156: for (unsigned char i = 0; i < 8; i++) {
  3968                           
  3969                           ; BSR set to: 1
  3970                           ;incstack = 0
  3971  000C74  0E00               	movlw	0
  3972  000C76  6E35               	movwf	i2turnAllOff@i,c
  3973  000C78                     i2l1463:
  3974  000C78  0E07               	movlw	7
  3975  000C7A  6435               	cpfsgt	i2turnAllOff@i,c
  3976  000C7C  D001               	goto	i2l1467
  3977  000C7E  0012               	return	
  3978  000C80                     i2l1467:
  3979                           
  3980                           ;LED-API.c: 157: for (unsigned char j = 0; j < 16; j++) {
  3981  000C80  0E00               	movlw	0
  3982  000C82  6E36               	movwf	i2turnAllOff@j,c
  3983  000C84                     i2l1469:
  3984  000C84  0E0F               	movlw	15
  3985  000C86  6436               	cpfsgt	i2turnAllOff@j,c
  3986  000C88  D001               	goto	i2l1473
  3987  000C8A  D016               	goto	i2l1479
  3988  000C8C                     i2l1473:
  3989                           
  3990                           ;LED-API.c: 158: pixels[i][j] = 0;
  3991  000C8C  5035               	movf	i2turnAllOff@i,w,c
  3992  000C8E  0D10               	mullw	16
  3993  000C90  0E80               	movlw	low _pixels
  3994  000C92  6E33               	movwf	??i2_turnAllOff& (0+255),c
  3995  000C94  0E00               	movlw	high _pixels
  3996  000C96  6E34               	movwf	(??i2_turnAllOff+1)& (0+255),c
  3997  000C98  50F3               	movf	prodl,w,c
  3998  000C9A  2633               	addwf	??i2_turnAllOff,f,c
  3999  000C9C  50F4               	movf	prodh,w,c
  4000  000C9E  2234               	addwfc	??i2_turnAllOff+1,f,c
  4001  000CA0  5036               	movf	i2turnAllOff@j,w,c
  4002  000CA2  0D01               	mullw	1
  4003  000CA4  50F3               	movf	prodl,w,c
  4004  000CA6  2433               	addwf	??i2_turnAllOff,w,c
  4005  000CA8  6ED9               	movwf	fsr2l,c
  4006  000CAA  50F4               	movf	prodh,w,c
  4007  000CAC  2034               	addwfc	??i2_turnAllOff+1,w,c
  4008  000CAE  6EDA               	movwf	fsr2h,c
  4009  000CB0  0E00               	movlw	0
  4010  000CB2  6EDF               	movwf	indf2,c
  4011  000CB4  2A36               	incf	i2turnAllOff@j,f,c
  4012  000CB6  D7E6               	goto	i2l1469
  4013  000CB8                     i2l1479:
  4014  000CB8  2A35               	incf	i2turnAllOff@i,f,c
  4015  000CBA  D7DE               	goto	i2l1463
  4016  000CBC                     __end_ofi2_turnAllOff:
  4017                           	opt stack 0
  4018                           pclatu	equ	0xFFB
  4019                           pclath	equ	0xFFA
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           prodh	equ	0xFF4
  4025                           prodl	equ	0xFF3
  4026                           intcon	equ	0xFF2
  4027                           postinc0	equ	0xFEE
  4028                           fsr0h	equ	0xFEA
  4029                           fsr0l	equ	0xFE9
  4030                           wreg	equ	0xFE8
  4031                           postdec1	equ	0xFE5
  4032                           plusw1	equ	0xFE3
  4033                           fsr1h	equ	0xFE2
  4034                           fsr1l	equ	0xFE1
  4035                           indf2	equ	0xFDF
  4036                           postinc2	equ	0xFDE
  4037                           plusw2	equ	0xFDB
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function i2_on *****************
  4043 ;; Defined at:
  4044 ;;		line 47 in file "Source/LED-API.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  column          1    wreg     unsigned char 
  4047 ;;  row             1    0[COMRAM] unsigned char 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  column          1    3[COMRAM] unsigned char 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4059 ;;      Params:         1       0       0       0       0       0       0
  4060 ;;      Locals:         1       0       0       0       0       0       0
  4061 ;;      Temps:          2       0       0       0       0       0       0
  4062 ;;      Totals:         4       0       0       0       0       0       0
  4063 ;;Total ram usage:        4 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_writePong
  4069 ;;		i2_drawSymbol
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text18
  4074  000DFA                     __ptext18:
  4075                           	opt stack 0
  4076  000DFA                     i2_on:
  4077                           	opt stack 25
  4078                           
  4079                           ;incstack = 0
  4080                           ;i2on@column stored from wreg
  4081  000DFA  6E36               	movwf	i2on@column,c
  4082                           
  4083                           ;LED-API.c: 49: if (row < 0 || row >= 16)
  4084  000DFC  0E0F               	movlw	15
  4085  000DFE  6433               	cpfsgt	i2on@row,c
  4086  000E00  D001               	goto	i2l1455
  4087  000E02  0012               	return	
  4088  000E04                     i2l1455:
  4089                           
  4090                           ;LED-API.c: 51: if (column < 0 || column >= 8)
  4091  000E04  0E07               	movlw	7
  4092  000E06  6436               	cpfsgt	i2on@column,c
  4093  000E08  D001               	goto	i2l1459
  4094  000E0A  0012               	return	
  4095  000E0C                     i2l1459:
  4096                           
  4097                           ;LED-API.c: 54: pixels[column][row] = 1;
  4098  000E0C  5036               	movf	i2on@column,w,c
  4099  000E0E  0D10               	mullw	16
  4100  000E10  0E80               	movlw	low _pixels
  4101  000E12  6E34               	movwf	??i2_on& (0+255),c
  4102  000E14  0E00               	movlw	high _pixels
  4103  000E16  6E35               	movwf	(??i2_on+1)& (0+255),c
  4104  000E18  50F3               	movf	prodl,w,c
  4105  000E1A  2634               	addwf	??i2_on,f,c
  4106  000E1C  50F4               	movf	prodh,w,c
  4107  000E1E  2235               	addwfc	??i2_on+1,f,c
  4108  000E20  5033               	movf	i2on@row,w,c
  4109  000E22  0D01               	mullw	1
  4110  000E24  50F3               	movf	prodl,w,c
  4111  000E26  2434               	addwf	??i2_on,w,c
  4112  000E28  6ED9               	movwf	fsr2l,c
  4113  000E2A  50F4               	movf	prodh,w,c
  4114  000E2C  2035               	addwfc	??i2_on+1,w,c
  4115  000E2E  6EDA               	movwf	fsr2h,c
  4116  000E30  0E01               	movlw	1
  4117  000E32  6EDF               	movwf	indf2,c
  4118  000E34  0012               	return		;funcret
  4119  000E36                     __end_ofi2_on:
  4120                           	opt stack 0
  4121                           pclatu	equ	0xFFB
  4122                           pclath	equ	0xFFA
  4123                           tblptru	equ	0xFF8
  4124                           tblptrh	equ	0xFF7
  4125                           tblptrl	equ	0xFF6
  4126                           tablat	equ	0xFF5
  4127                           prodh	equ	0xFF4
  4128                           prodl	equ	0xFF3
  4129                           intcon	equ	0xFF2
  4130                           postinc0	equ	0xFEE
  4131                           fsr0h	equ	0xFEA
  4132                           fsr0l	equ	0xFE9
  4133                           wreg	equ	0xFE8
  4134                           postdec1	equ	0xFE5
  4135                           plusw1	equ	0xFE3
  4136                           fsr1h	equ	0xFE2
  4137                           fsr1l	equ	0xFE1
  4138                           indf2	equ	0xFDF
  4139                           postinc2	equ	0xFDE
  4140                           plusw2	equ	0xFDB
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8
  4144                           
  4145 ;; *************** function _getNextPosition *****************
  4146 ;; Defined at:
  4147 ;;		line 135 in file "main.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4161 ;;      Params:         0       0       0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0
  4164 ;;      Totals:         0       0       0       0       0       0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_checkNextPosition
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text19
  4175  000B22                     __ptext19:
  4176                           	opt stack 0
  4177  000B22                     _getNextPosition:
  4178                           	opt stack 25
  4179                           
  4180                           ;main.c: 137: switch(_ball.bDirection)
  4181                           
  4182                           ;incstack = 0
  4183  000B22  D01A               	goto	i2l1083
  4184  000B24                     i2l1069:
  4185                           
  4186                           ;main.c: 140: _nextPos[0] = _ball.bPos[0] + 1;
  4187  000B24  285D               	incf	__ball,w,c
  4188  000B26  6E60               	movwf	__nextPos,c
  4189                           
  4190                           ;main.c: 141: _nextPos[1] = _ball.bPos[1] + 1;
  4191  000B28  285E               	incf	__ball+1,w,c
  4192  000B2A  6E61               	movwf	__nextPos+1,c
  4193                           
  4194                           ;main.c: 142: break;
  4195  000B2C  0012               	return	
  4196  000B2E                     i2l1071:
  4197                           
  4198                           ;main.c: 144: _nextPos[0] = _ball.bPos[0] + 1;
  4199  000B2E  285D               	incf	__ball,w,c
  4200  000B30  6E60               	movwf	__nextPos,c
  4201                           
  4202                           ;main.c: 145: break;
  4203  000B32  0012               	return	
  4204  000B34                     i2l1073:
  4205                           
  4206                           ;main.c: 147: _nextPos[0] = _ball.bPos[0] + 1;
  4207  000B34  285D               	incf	__ball,w,c
  4208  000B36  6E60               	movwf	__nextPos,c
  4209                           
  4210                           ;main.c: 148: _nextPos[1] = _ball.bPos[1] - 1;
  4211  000B38  045E               	decf	__ball+1,w,c
  4212  000B3A  6E61               	movwf	__nextPos+1,c
  4213                           
  4214                           ;main.c: 149: break;
  4215  000B3C  0012               	return	
  4216  000B3E                     i2l1075:
  4217                           
  4218                           ;main.c: 151: _nextPos[0] = _ball.bPos[0] - 1;
  4219  000B3E  045D               	decf	__ball,w,c
  4220  000B40  6E60               	movwf	__nextPos,c
  4221                           
  4222                           ;main.c: 152: _nextPos[1] = _ball.bPos[1] - 1;
  4223  000B42  045E               	decf	__ball+1,w,c
  4224  000B44  6E61               	movwf	__nextPos+1,c
  4225                           
  4226                           ;main.c: 153: break;
  4227  000B46  0012               	return	
  4228  000B48                     i2l1077:
  4229                           
  4230                           ;main.c: 155: _nextPos[0] = _ball.bPos[0] - 1;
  4231  000B48  045D               	decf	__ball,w,c
  4232  000B4A  6E60               	movwf	__nextPos,c
  4233                           
  4234                           ;main.c: 156: break;
  4235  000B4C  0012               	return	
  4236  000B4E                     i2l1079:
  4237                           
  4238                           ;main.c: 158: _nextPos[0] = _ball.bPos[0] - 1;
  4239  000B4E  045D               	decf	__ball,w,c
  4240  000B50  6E60               	movwf	__nextPos,c
  4241                           
  4242                           ;main.c: 159: _nextPos[1] = _ball.bPos[1] + 1;
  4243  000B52  285E               	incf	__ball+1,w,c
  4244  000B54  6E61               	movwf	__nextPos+1,c
  4245                           
  4246                           ;main.c: 161: }
  4247                           
  4248                           ;main.c: 160: break;
  4249  000B56  0012               	return	
  4250  000B58                     i2l1083:
  4251  000B58  505F               	movf	__ball+2,w,c
  4252                           
  4253                           ; Switch size 1, requested type "space"
  4254                           ; Number of cases is 6, Range of values is 1 to 6
  4255                           ; switch strategies available:
  4256                           ; Name         Instructions Cycles
  4257                           ; simple_byte           19    10 (average)
  4258                           ;	Chosen strategy is simple_byte
  4259  000B5A  0A01               	xorlw	1	; case 1
  4260  000B5C  B4D8               	btfsc	status,2,c
  4261  000B5E  D7E2               	goto	i2l1069
  4262  000B60  0A03               	xorlw	3	; case 2
  4263  000B62  B4D8               	btfsc	status,2,c
  4264  000B64  D7E4               	goto	i2l1071
  4265  000B66  0A01               	xorlw	1	; case 3
  4266  000B68  B4D8               	btfsc	status,2,c
  4267  000B6A  D7E4               	goto	i2l1073
  4268  000B6C  0A07               	xorlw	7	; case 4
  4269  000B6E  B4D8               	btfsc	status,2,c
  4270  000B70  D7E6               	goto	i2l1075
  4271  000B72  0A01               	xorlw	1	; case 5
  4272  000B74  B4D8               	btfsc	status,2,c
  4273  000B76  D7E8               	goto	i2l1077
  4274  000B78  0A03               	xorlw	3	; case 6
  4275  000B7A  A4D8               	btfss	status,2,c
  4276  000B7C  0012               	return	
  4277  000B7E  D7E7               	goto	i2l1079
  4278  000B80                     __end_of_getNextPosition:
  4279                           	opt stack 0
  4280                           pclatu	equ	0xFFB
  4281                           pclath	equ	0xFFA
  4282                           tblptru	equ	0xFF8
  4283                           tblptrh	equ	0xFF7
  4284                           tblptrl	equ	0xFF6
  4285                           tablat	equ	0xFF5
  4286                           prodh	equ	0xFF4
  4287                           prodl	equ	0xFF3
  4288                           intcon	equ	0xFF2
  4289                           postinc0	equ	0xFEE
  4290                           fsr0h	equ	0xFEA
  4291                           fsr0l	equ	0xFE9
  4292                           wreg	equ	0xFE8
  4293                           postdec1	equ	0xFE5
  4294                           plusw1	equ	0xFE3
  4295                           fsr1h	equ	0xFE2
  4296                           fsr1l	equ	0xFE1
  4297                           indf2	equ	0xFDF
  4298                           postinc2	equ	0xFDE
  4299                           plusw2	equ	0xFDB
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function ___lwdiv *****************
  4305 ;; Defined at:
  4306 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  dividend        2    0[COMRAM] unsigned int 
  4309 ;;  divisor         2    2[COMRAM] unsigned int 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  quotient        2    4[COMRAM] unsigned int 
  4312 ;;  counter         1    6[COMRAM] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  2    0[COMRAM] unsigned int 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4322 ;;      Params:         4       0       0       0       0       0       0
  4323 ;;      Locals:         3       0       0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0
  4325 ;;      Totals:         7       0       0       0       0       0       0
  4326 ;;Total ram usage:        7 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_ISR
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text20
  4336  000BDA                     __ptext20:
  4337                           	opt stack 0
  4338  000BDA                     ___lwdiv:
  4339                           	opt stack 26
  4340                           
  4341                           ;incstack = 0
  4342  000BDA  0E00               	movlw	0
  4343  000BDC  6E38               	movwf	___lwdiv@quotient+1,c
  4344  000BDE  0E00               	movlw	0
  4345  000BE0  6E37               	movwf	___lwdiv@quotient,c
  4346  000BE2  5035               	movf	___lwdiv@divisor,w,c
  4347  000BE4  1036               	iorwf	___lwdiv@divisor+1,w,c
  4348  000BE6  B4D8               	btfsc	status,2,c
  4349  000BE8  D01C               	goto	i2l648
  4350  000BEA  0E01               	movlw	1
  4351  000BEC  6E39               	movwf	___lwdiv@counter,c
  4352  000BEE  D004               	goto	i2l1827
  4353  000BF0                     i2l1825:
  4354  000BF0  90D8               	bcf	status,0,c
  4355  000BF2  3635               	rlcf	___lwdiv@divisor,f,c
  4356  000BF4  3636               	rlcf	___lwdiv@divisor+1,f,c
  4357  000BF6  2A39               	incf	___lwdiv@counter,f,c
  4358  000BF8                     i2l1827:
  4359  000BF8  AE36               	btfss	___lwdiv@divisor+1,7,c
  4360  000BFA  D7FA               	goto	i2l1825
  4361  000BFC                     i2l1829:
  4362  000BFC  90D8               	bcf	status,0,c
  4363  000BFE  3637               	rlcf	___lwdiv@quotient,f,c
  4364  000C00  3638               	rlcf	___lwdiv@quotient+1,f,c
  4365  000C02  5035               	movf	___lwdiv@divisor,w,c
  4366  000C04  5C33               	subwf	___lwdiv@dividend,w,c
  4367  000C06  5036               	movf	___lwdiv@divisor+1,w,c
  4368  000C08  5834               	subwfb	___lwdiv@dividend+1,w,c
  4369  000C0A  A0D8               	btfss	status,0,c
  4370  000C0C  D005               	goto	i2l1837
  4371  000C0E  5035               	movf	___lwdiv@divisor,w,c
  4372  000C10  5E33               	subwf	___lwdiv@dividend,f,c
  4373  000C12  5036               	movf	___lwdiv@divisor+1,w,c
  4374  000C14  5A34               	subwfb	___lwdiv@dividend+1,f,c
  4375  000C16  8037               	bsf	___lwdiv@quotient,0,c
  4376  000C18                     i2l1837:
  4377  000C18  90D8               	bcf	status,0,c
  4378  000C1A  3236               	rrcf	___lwdiv@divisor+1,f,c
  4379  000C1C  3235               	rrcf	___lwdiv@divisor,f,c
  4380  000C1E  2E39               	decfsz	___lwdiv@counter,f,c
  4381  000C20  D7ED               	goto	i2l1829
  4382  000C22                     i2l648:
  4383  000C22  C037  F033         	movff	___lwdiv@quotient,?___lwdiv
  4384  000C26  C038  F034         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4385  000C2A  0012               	return		;funcret
  4386  000C2C                     __end_of___lwdiv:
  4387                           	opt stack 0
  4388  0000                     pclatu	equ	0xFFB
  4389                           pclath	equ	0xFFA
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodh	equ	0xFF4
  4395                           prodl	equ	0xFF3
  4396                           intcon	equ	0xFF2
  4397                           postinc0	equ	0xFEE
  4398                           fsr0h	equ	0xFEA
  4399                           fsr0l	equ	0xFE9
  4400                           wreg	equ	0xFE8
  4401                           postdec1	equ	0xFE5
  4402                           plusw1	equ	0xFE3
  4403                           fsr1h	equ	0xFE2
  4404                           fsr1l	equ	0xFE1
  4405                           indf2	equ	0xFDF
  4406                           postinc2	equ	0xFDE
  4407                           plusw2	equ	0xFDB
  4408                           fsr2h	equ	0xFDA
  4409                           fsr2l	equ	0xFD9
  4410                           status	equ	0xFD8
  4411                           pclatu	equ	0xFFB
  4412                           pclath	equ	0xFFA
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodh	equ	0xFF4
  4418                           prodl	equ	0xFF3
  4419                           intcon	equ	0xFF2
  4420                           postinc0	equ	0xFEE
  4421                           fsr0h	equ	0xFEA
  4422                           fsr0l	equ	0xFE9
  4423                           wreg	equ	0xFE8
  4424                           postdec1	equ	0xFE5
  4425                           plusw1	equ	0xFE3
  4426                           fsr1h	equ	0xFE2
  4427                           fsr1l	equ	0xFE1
  4428                           indf2	equ	0xFDF
  4429                           postinc2	equ	0xFDE
  4430                           plusw2	equ	0xFDB
  4431                           fsr2h	equ	0xFDA
  4432                           fsr2l	equ	0xFD9
  4433                           status	equ	0xFD8
  4434                           
  4435                           	psect	rparam
  4436  0000                     pclatu	equ	0xFFB
  4437                           pclath	equ	0xFFA
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           prodh	equ	0xFF4
  4443                           prodl	equ	0xFF3
  4444                           intcon	equ	0xFF2
  4445                           postinc0	equ	0xFEE
  4446                           fsr0h	equ	0xFEA
  4447                           fsr0l	equ	0xFE9
  4448                           wreg	equ	0xFE8
  4449                           postdec1	equ	0xFE5
  4450                           plusw1	equ	0xFE3
  4451                           fsr1h	equ	0xFE2
  4452                           fsr1l	equ	0xFE1
  4453                           indf2	equ	0xFDF
  4454                           postinc2	equ	0xFDE
  4455                           plusw2	equ	0xFDB
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           status	equ	0xFD8
  4459                           
  4460                           	psect	temp
  4461  000064                     btemp:
  4462                           	opt stack 0
  4463  000064                     	ds	1
  4464  0000                     int$flags	set	btemp
  4465                           pclatu	equ	0xFFB
  4466                           pclath	equ	0xFFA
  4467                           tblptru	equ	0xFF8
  4468                           tblptrh	equ	0xFF7
  4469                           tblptrl	equ	0xFF6
  4470                           tablat	equ	0xFF5
  4471                           prodh	equ	0xFF4
  4472                           prodl	equ	0xFF3
  4473                           intcon	equ	0xFF2
  4474                           postinc0	equ	0xFEE
  4475                           fsr0h	equ	0xFEA
  4476                           fsr0l	equ	0xFE9
  4477                           wreg	equ	0xFE8
  4478                           postdec1	equ	0xFE5
  4479                           plusw1	equ	0xFE3
  4480                           fsr1h	equ	0xFE2
  4481                           fsr1l	equ	0xFE1
  4482                           indf2	equ	0xFDF
  4483                           postinc2	equ	0xFDE
  4484                           plusw2	equ	0xFDB
  4485                           fsr2h	equ	0xFDA
  4486                           fsr2l	equ	0xFD9
  4487                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        214
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     32      99
    BANK0           128      0     128
    BANK1           256    223     223
    BANK2           256    228     256
    BANK3           256      0     136
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_refresh
    _refresh->_setColHigh
    _refresh->_setRowHigh
    _initializePong->_drawSymbol
    _drawSymbol->_on
    _drawSymbol->_turnAllOff

Critical Paths under _ISR in COMRAM

    _writePong->_off
    _writePong->i2_on
    _checkNextPosition->i2_initializePong
    i2_initializePong->i2_drawSymbol
    i2_drawSymbol->i2_on
    i2_drawSymbol->i2_turnAllOff

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    i2_initializePong->i2_drawSymbol

Critical Paths under _main in BANK2

    _main->_initializePong
    _initializePong->_drawSymbol

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2319
                         _initialize
                      _initializeLED
                     _initializePong
                            _refresh
 ---------------------------------------------------------------------------------
 (1) _refresh                                              5     5      0     240
                                             30 COMRAM     2     2      0
                                              0 BANK2      3     3      0
                             _allOff
                         _setColHigh
                         _setRowHigh
 ---------------------------------------------------------------------------------
 (2) _setRowHigh                                           3     3      0      45
                                             27 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _setColHigh                                           3     3      0      15
                                             27 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _allOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initializePong                                       1     1      0    1989
                                            227 BANK2      1     1      0
                         _drawSymbol
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (2) _drawSymbol                                         228   227      1    1853
                                             31 COMRAM     1     0      1
                                              0 BANK2    227   227      0
                                 _on
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (2) _turnAllOff                                           4     4      0     136
                                             27 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _on                                                   4     3      1     388
                                             27 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initializeLED                                        4     4      0      90
                                             27 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 17    17      0    2490
                                             10 COMRAM    17    17      0
                            ___lwdiv
                  _checkNextPosition
                          _writePong
 ---------------------------------------------------------------------------------
 (5) _writePong                                            0     0      0     651
                                _off
                               i2_on
 ---------------------------------------------------------------------------------
 (6) _off                                                  4     3      1     303
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _checkNextPosition                                    0     0      0    1479
                    _getNextPosition
                   i2_initializePong
 ---------------------------------------------------------------------------------
 (6) i2_initializePong                                     1     1      0    1479
                                              9 COMRAM     1     1      0
                       i2_drawSymbol
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_drawSymbol                                       228   227      1    1343
                                              4 COMRAM     5     4      1
                                              0 BANK1    223   223      0
                               i2_on
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_turnAllOff                                         4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (6) i2_on                                                 4     3      1     348
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _getNextPosition                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _initializeLED
   _initializePong
     _drawSymbol
       _on
       _turnAllOff
     _turnAllOff
   _refresh
     _allOff
     _setColHigh
     _setRowHigh

 _ISR (ROOT)
   ___lwdiv
   _checkNextPosition
     _getNextPosition
     i2_initializePong
       i2_drawSymbol
         i2_on
         i2_turnAllOff
       i2_turnAllOff
   _writePong
     _off
     i2_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      88      11       53.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     E4     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     DF      DF       7       87.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     20      63       1       78.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     34A      15        0.0%
DATA                 0      0     34A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Mar 29 16:21:19 2016

        drawSymbol@symbolGo 0248                          l85 0394           ?i2_initializePong 0033  
                        _on 0D82                 __CFG_BORV$3 000000                __CFG_CP0$OFF 000000  
              __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000  
        ??i2_initializePong 003C         drawSymbol@symbolOne 02A8                         ?_on 004E  
       drawSymbol@symbolTwo 028C                         l983 0D64                         _GIE 007F97  
              __CFG_CPB$OFF 000000                         u304 0D5A                         u305 0D56  
                       u314 0D78                         u315 0D74                __CFG_CPD$OFF 000000  
                       u284 0E96                         _ISR 0008                         u285 0E92  
                       _PSA 007EAB                         __p1 0053                         __p2 0058  
                       _off 0DBE                         wreg 000FE8                        ??_on 004F  
              __CFG_LVP$OFF 000000                        ?_ISR 0033                __CFG_WDT$OFF 000000  
                      l1111 0AE6        drawSymbol@symbolPlay 0204                        l1113 0AEA  
                      l1123 0B1E                        l1107 0ADE                        l1117 0AF2  
                      l2023 0EAC                        l1501 0C3C                        l1511 0C70  
                      l1505 0C44                        l1491 0D94                        l1487 0D8C  
                      l1495 0C30                        l1911 0114                        l1905 009E  
                      l1499 0C38                        l1923 01AE                        l1917 0138  
                      l1943 0270                        l1935 0248                        l1953 02F2  
                      l1929 01D2                        l1957 0308                        l1949 02E4  
                      l1965 0370                        l1973 09E8                        l1983 0A30  
                      l1975 09EC                        l1969 09E0                        l1899 007A  
                      l1987 0A34                        l1979 09F4                        ?_off 0033  
                      _ADIE 007CEE                        _ADIF 007CF6                        _T0CS 007EAD  
                      u1401 0028                        u1411 003A                        u1500 0246  
                      u1421 004C                        _LATA 000F89                        u1510 026E  
                      u1431 005E                        _LATC 000F8B                        _LATD 000F8C  
                      u1441 0070                        u1450 009C                        u1460 0112  
                      u1470 0136                        u1607 0A42                        u1480 01AC  
                      u1617 0CDC                        u1490 01D0                        _PEIE 007F96  
                      i2l85 06B6                        i2_on 0DFA            ??_initializePong 02E3  
                      _main 0EA0                 drawSymbol@i 02D9                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      btemp 0064                        pclat 000FFA                        prodh 000FF4  
                      prodl 000FF3                        start 0016               __CFG_IESO$OFF 000000  
             __CFG_MCLRE$ON 000000                ___param_bank 000010                       ??_ISR 003D  
                     ??_off 0034                       ?i2_on 0033                  i2on@column 0036  
     drawSymbol@symbolThree 02C0                       ?_main 0033                       _ADRES 000FC3  
                     _T0PS0 007EA8                       _T0PS1 007EA9                       _T0PS2 007EAA  
           __end_of___lwdiv 0C2C                       i2l239 0892                       i2l648 0C22  
                     _PLLEN 007CDE                       _TRISA 000F92                       _TRISC 000F94  
                     _TRISD 000F95               __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
      __end_ofi2_turnAllOff 0CBC              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000                       __ball 005D  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000             __end_of_refresh 0A54  
                     on@row 004E              __CFG_BOREN$OFF 000000                       tablat 000FF5  
                     plusw1 000FE3                       plusw2 000FDB                       status 000FD8  
     __size_ofi2_drawSymbol 0322                __end_ofi2_on 0E36             __initialization 0956  
              __end_of_main 0EB2                      ??i2_on 0034             _getNextPosition 0B22  
                    ??_main 0053               __activetblptr 000002                i2_drawSymbol 0396  
                    _T08BIT 007EAE                      i2l1071 0B2E                      i2l1073 0B34  
                    i2l1075 0B3E                      i2l1083 0B58                      i2l1077 0B48  
                    i2l1069 0B24                      i2l1079 0B4E                      i2l1523 041A  
                    i2l1541 0506                      i2l1517 03F6                      i2l1455 0E04  
                    i2l1463 0C78                      i2l1535 04A2                      i2l1473 0C8C  
                    i2l1561 05B6                      i2l1553 058E                      i2l1529 047E  
                    i2l1721 06CC                      i2l1459 0E0C                      i2l1467 0C80  
                    i2l1571 0626                      i2l1547 052A                      i2l1803 079E  
                    i2l1723 06D0                      i2l1469 0C84                      i2l1805 07A2  
                    i2l1813 07B0                      i2l1741 0700                      i2l1725 06D6  
                    i2l1733 06F0                      i2l1479 0CB8                      i2l1575 063C  
                    i2l1567 0618                      i2l1583 0692                      i2l1807 07A6  
                    i2l1815 07CA                      i2l1751 071E                      i2l1727 06EA  
                    i2l1825 0BF0                      i2l1809 07AA                      i2l1761 0738  
                    i2l1737 06FA                      i2l1745 0704                      i2l1593 0DD0  
                    i2l1827 0BF8                      i2l1763 073C                      i2l1771 075A  
                    i2l1747 0718                      i2l1755 0726                      i2l1837 0C18  
                    i2l1829 0BFC                      i2l1765 0740                      i2l1589 0DC8  
                    i2l1853 0822                      i2l1783 076A                      i2l1791 0788  
                    i2l1785 076E                      i2l1769 0746                      i2l1777 0760  
                    i2l1795 078E                      i2l1859 082C                      i2l1789 0774  
                    i2l1799 0796                      i2l1879 087A                      _TMR0IE 007F95  
                    _TMR0IF 007F92                      _TMR0ON 007EAF         i2drawSymbol@offSetX 0037  
            __CFG_XINST$OFF 000000                      _allOff 0EB2              __CFG_STVREN$ON 000000  
                    __speed 0031                   ??___lwdiv 0037                      clear_0 095C  
                    clear_1 0968                      _pixels 0080                      off@row 0033  
              __pdataCOMRAM 0001                   ??_refresh 0200                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8      __size_of_initializeLED 0060  
                __accesstop 0080     __end_of__initialization 09CE             __CFG_PBADEN$OFF 000000  
             ___rparam_used 000001     __end_of_getNextPosition 0B80              __pcstackCOMRAM 0033  
          i2drawSymbol@i_80 01DB            i2drawSymbol@i_81 01DD            i2drawSymbol@i_78 01D7  
          i2drawSymbol@i_79 01D9                __pidataBANK2 0E68                __pidataBANK3 08CE  
   i2drawSymbol@symbolThree 01BC                  __end_of_on 0DBE       __size_ofi2_turnAllOff 0048  
             i2turnAllOff@i 0035               i2turnAllOff@j 0036   __size_ofi2_initializePong 0042  
                __pbssBANK0 0080               _initializeLED 0AC2                i2_turnAllOff 0C74  
                   ?_allOff 0033                     i2u92_41 03A4                     i2u93_41 03B6  
                   i2u94_41 03C8                     i2u95_41 03DA                     i2u96_41 03EC  
                   i2u97_40 0418                     i2u98_40 047C                     i2u99_40 04A0  
                _drawSymbol 001A                     i2on@row 0033          __size_of_writePong 006E  
            ?_initializeLED 0033                     __Hparam 0000                     __Lparam 0000  
          ?_getNextPosition 0033               refresh@theCol 0051               refresh@theRow 0052  
           __size_of_allOff 000E        i2drawSymbol@symbolGo 0144                     ___lwdiv 0BDA  
                   __pcinit 0956      drawSymbol@chosenSymbol 02D8                     __ramtop 0600  
                _initialize 0B80                     __ptext0 0EA0                     __ptext1 09DC  
                   __ptext2 0D42                     __ptext3 0E84                     __ptext4 0EB2  
                   __ptext5 0CBC                     __ptext6 001A                     __ptext7 0C2C  
                   __ptext8 0D82                     __ptext9 0AC2                __size_of_ISR 08C6  
              __size_of_off 003C                     _refresh 09DC              drawSymbol@i_80 02DF  
            drawSymbol@i_81 02E1              drawSymbol@i_78 02DB              drawSymbol@i_79 02DD  
                _setColHigh 0E84              __pintcode_body 07D0        end_of_initialization 09CE  
             __Lmediumconst 0000                     int_func 07D0                  _setRowHigh 0D42  
                   postdec1 000FE5                     postinc0 000FEE                     postinc2 000FDE  
   __size_of_initializePong 0044           drawSymbol@offSetX 0052           __end_of_writePong 0AC2  
                 _TRISBbits 000F93                 ?_drawSymbol 0052            i2_initializePong 0D00  
           ??_initializeLED 004E                  _turnAllOff 0C2C               setRowHigh@row 0050  
            __end_of_allOff 0EC0               __pidataCOMRAM 0E36                 ?_initialize 0033  
       start_initialization 0956                 __end_of_ISR 08CE                 ?_setColHigh 0033  
               __end_of_off 0DFA                  ISR@ADvalue 004B                 ?_setRowHigh 0033  
          __CFG_OSC$INTIO67 000000                    ??_allOff 004E         __size_of_drawSymbol 037C  
               __pdataBANK2 02E4                 __pdataBANK3 0300            __CFG_LPT1OSC$OFF 000000  
               __pbssCOMRAM 0053               __pcstackBANK1 0100               __pcstackBANK2 0200  
    i2drawSymbol@symbolPlay 0100         __size_of_initialize 005A               i2drawSymbol@i 01D5  
                  ISR@value 004D            ___lwdiv@dividend 0033                 ?_turnAllOff 0033  
         __CFG_CCP2MX$PORTC 000000                   __pintcode 0008              _initializePong 0CBC  
       __size_of_setColHigh 001C                    ?___lwdiv 0033         __size_of_setRowHigh 0040  
               turnAllOff@i 0050                 turnAllOff@j 0051           _checkNextPosition 06B8  
                  ?_refresh 0033          ?_checkNextPosition 0033            ___lwdiv@quotient 0037  
             ?i2_drawSymbol 0037                 __size_of_on 003C         ??_checkNextPosition 003D  
    __end_of_initializePong 0D00                    i2u100_40 0504                    i2u101_40 0528  
                  i2u102_40 058C                    i2u103_40 05B4                    i2u162_47 0D1E  
          __CFG_WDTPS$32768 000000    __end_ofi2_initializePong 0D42                  _ADCON0bits 000FC2  
                _ADCON1bits 000FC1                  _ADCON2bits 000FC0   __end_of_checkNextPosition 07D0  
  __size_of_getNextPosition 005E                   off@column 0036              ??i2_drawSymbol 0038  
       __size_of_turnAllOff 0048                ??_drawSymbol 0200                   _writePong 0A54  
                 copy_data0 0982                   copy_data1 09A2                   copy_data2 09C2  
             __timerCounter 0062                    __Hrparam 0000             ?_initializePong 0033  
                  __Lrparam 0000    i2drawSymbol@chosenSymbol 01D4          __end_of_drawSymbol 0396  
          __size_of___lwdiv 0052                ??_initialize 004E       i2drawSymbol@symbolOne 01A4  
     i2drawSymbol@symbolTwo 0188                    __nextPos 0060             ___lwdiv@divisor 0035  
              ??_setColHigh 004E            __size_of_refresh 0078             ___lwdiv@counter 0039  
                  __ptext10 0B80                    __ptext20 0BDA                    __ptext12 0A54  
                  __ptext13 0DBE                    __ptext14 06B8                    __ptext15 0D00  
                  __ptext16 0396                    __ptext17 0C74                    __ptext18 0DFA  
                  __ptext19 0B22                  ?_writePong 0033               __size_ofi2_on 003C  
           drawSymbol@F3232 0019             drawSymbol@F3226 0001             drawSymbol@F3235 0300  
           drawSymbol@F3229 02E4             drawSymbol@F3238 0344                ??_setRowHigh 004E  
             __size_of_main 0012          __end_of_initialize 0BDA       __end_of_initializeLED 0B22  
             ?i2_turnAllOff 0033              initializeLED@i 0050              initializeLED@j 0051  
                  int$flags 0064          __end_of_setColHigh 0EA0                    on@column 0051  
__size_of_checkNextPosition 0118                 _OSCTUNEbits 000F9B          __end_of_setRowHigh 0D82  
          setColHigh@column 0050           ??_getNextPosition 0033                    intlevel2 0000  
            ??i2_turnAllOff 0033                  _OSCCONbits 000FD3                ??_turnAllOff 004E  
      __end_ofi2_drawSymbol 06B8                 ??_writePong 0037          __end_of_turnAllOff 0C74  
