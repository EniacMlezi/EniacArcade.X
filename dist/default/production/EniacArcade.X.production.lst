

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Apr 05 10:53:37 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	idataBANK3,global,class=CODE,delta=1
     9                           	psect	idataBANK4,global,class=CODE,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           	psect	idataCOMRAM
    59  00116A                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for __speed
    63  00116A  00C8               	dw	200
    64                           
    65                           	psect	idataBANK1
    66  0010EE                     __pidataBANK1:
    67                           	opt stack 0
    68                           
    69                           ;initializer for drawSymbol@F3224
    70  0010EE  02                 	db	2
    71  0010EF  05                 	db	5
    72  0010F0  03                 	db	3
    73  0010F1  06                 	db	6
    74  0010F2  04                 	db	4
    75  0010F3  07                 	db	7
    76  0010F4  04                 	db	4
    77  0010F5  06                 	db	6
    78  0010F6  04                 	db	4
    79  0010F7  05                 	db	5
    80  0010F8  04                 	db	4
    81  0010F9  04                 	db	4
    82  0010FA  04                 	db	4
    83  0010FB  03                 	db	3
    84  0010FC  04                 	db	4
    85  0010FD  02                 	db	2
    86  0010FE  04                 	db	4
    87  0010FF  01                 	db	1
    88  001100  04                 	db	4
    89  001101  00                 	db	0
    90  001102  03                 	db	3
    91  001103  00                 	db	0
    92  001104  05                 	db	5
    93  001105  00                 	db	0
    94                           
    95                           	psect	idataBANK2
    96  000B66                     __pidataBANK2:
    97                           	opt stack 0
    98                           
    99                           ;initializer for drawSymbol@F3239
   100  000B66  00                 	db	0
   101  000B67  03                 	db	3
   102  000B68  01                 	db	1
   103  000B69  03                 	db	3
   104  000B6A  02                 	db	2
   105  000B6B  03                 	db	3
   106  000B6C  03                 	db	3
   107  000B6D  03                 	db	3
   108  000B6E  04                 	db	4
   109  000B6F  03                 	db	3
   110  000B70  05                 	db	5
   111  000B71  03                 	db	3
   112  000B72  06                 	db	6
   113  000B73  03                 	db	3
   114  000B74  07                 	db	7
   115  000B75  03                 	db	3
   116  000B76  08                 	db	8
   117  000B77  03                 	db	3
   118  000B78  07                 	db	7
   119  000B79  04                 	db	4
   120  000B7A  06                 	db	6
   121  000B7B  05                 	db	5
   122  000B7C  05                 	db	5
   123  000B7D  07                 	db	7
   124  000B7E  06                 	db	6
   125  000B7F  02                 	db	2
   126  000B80  05                 	db	5
   127  000B81  01                 	db	1
   128  000B82  04                 	db	4
   129  000B83  00                 	db	0
   130                           
   131                           ;initializer for drawSymbol@F3242
   132  000B84  00                 	db	0
   133  000B85  03                 	db	3
   134  000B86  01                 	db	1
   135  000B87  03                 	db	3
   136  000B88  02                 	db	2
   137  000B89  03                 	db	3
   138  000B8A  03                 	db	3
   139  000B8B  03                 	db	3
   140  000B8C  04                 	db	4
   141  000B8D  03                 	db	3
   142  000B8E  05                 	db	5
   143  000B8F  03                 	db	3
   144  000B90  06                 	db	6
   145  000B91  03                 	db	3
   146  000B92  07                 	db	7
   147  000B93  03                 	db	3
   148  000B94  08                 	db	8
   149  000B95  03                 	db	3
   150  000B96  01                 	db	1
   151  000B97  04                 	db	4
   152  000B98  02                 	db	2
   153  000B99  05                 	db	5
   154  000B9A  03                 	db	3
   155  000B9B  06                 	db	6
   156  000B9C  01                 	db	1
   157  000B9D  02                 	db	2
   158  000B9E  02                 	db	2
   159  000B9F  01                 	db	1
   160  000BA0  03                 	db	3
   161  000BA1  00                 	db	0
   162                           
   163                           ;initializer for drawSymbol@F3227
   164  000BA2  02                 	db	2
   165  000BA3  05                 	db	5
   166  000BA4  03                 	db	3
   167  000BA5  06                 	db	6
   168  000BA6  04                 	db	4
   169  000BA7  06                 	db	6
   170  000BA8  05                 	db	5
   171  000BA9  06                 	db	6
   172  000BAA  06                 	db	6
   173  000BAB  05                 	db	5
   174  000BAC  06                 	db	6
   175  000BAD  04                 	db	4
   176  000BAE  05                 	db	5
   177  000BAF  03                 	db	3
   178  000BB0  04                 	db	4
   179  000BB1  02                 	db	2
   180  000BB2  03                 	db	3
   181  000BB3  01                 	db	1
   182  000BB4  02                 	db	2
   183  000BB5  00                 	db	0
   184  000BB6  03                 	db	3
   185  000BB7  00                 	db	0
   186  000BB8  04                 	db	4
   187  000BB9  00                 	db	0
   188  000BBA  05                 	db	5
   189  000BBB  00                 	db	0
   190  000BBC  06                 	db	6
   191  000BBD  00                 	db	0
   192                           
   193                           ;initializer for drawSymbol@F3230
   194  000BBE  02                 	db	2
   195  000BBF  06                 	db	6
   196  000BC0  03                 	db	3
   197  000BC1  07                 	db	7
   198  000BC2  04                 	db	4
   199  000BC3  07                 	db	7
   200  000BC4  05                 	db	5
   201  000BC5  06                 	db	6
   202  000BC6  05                 	db	5
   203  000BC7  05                 	db	5
   204  000BC8  04                 	db	4
   205  000BC9  04                 	db	4
   206  000BCA  05                 	db	5
   207  000BCB  03                 	db	3
   208  000BCC  05                 	db	5
   209  000BCD  02                 	db	2
   210  000BCE  05                 	db	5
   211  000BCF  01                 	db	1
   212  000BD0  04                 	db	4
   213  000BD1  00                 	db	0
   214  000BD2  03                 	db	3
   215  000BD3  00                 	db	0
   216  000BD4  02                 	db	2
   217  000BD5  01                 	db	1
   218                           
   219                           	psect	idataBANK3
   220  000F14                     __pidataBANK3:
   221                           	opt stack 0
   222                           
   223                           ;initializer for drawSymbol@F3233
   224  000F14  01                 	db	1
   225  000F15  01                 	db	1
   226  000F16  01                 	db	1
   227  000F17  02                 	db	2
   228  000F18  01                 	db	1
   229  000F19  03                 	db	3
   230  000F1A  01                 	db	1
   231  000F1B  04                 	db	4
   232  000F1C  01                 	db	1
   233  000F1D  05                 	db	5
   234  000F1E  01                 	db	1
   235  000F1F  06                 	db	6
   236  000F20  02                 	db	2
   237  000F21  06                 	db	6
   238  000F22  03                 	db	3
   239  000F23  06                 	db	6
   240  000F24  03                 	db	3
   241  000F25  05                 	db	5
   242  000F26  03                 	db	3
   243  000F27  04                 	db	4
   244  000F28  02                 	db	2
   245  000F29  04                 	db	4
   246  000F2A  05                 	db	5
   247  000F2B  06                 	db	6
   248  000F2C  05                 	db	5
   249  000F2D  05                 	db	5
   250  000F2E  05                 	db	5
   251  000F2F  04                 	db	4
   252  000F30  05                 	db	5
   253  000F31  03                 	db	3
   254  000F32  05                 	db	5
   255  000F33  02                 	db	2
   256  000F34  05                 	db	5
   257  000F35  01                 	db	1
   258  000F36  06                 	db	6
   259  000F37  01                 	db	1
   260  000F38  08                 	db	8
   261  000F39  01                 	db	1
   262  000F3A  08                 	db	8
   263  000F3B  02                 	db	2
   264  000F3C  08                 	db	8
   265  000F3D  03                 	db	3
   266  000F3E  09                 	db	9
   267  000F3F  04                 	db	4
   268  000F40  0A                 	db	10
   269  000F41  04                 	db	4
   270  000F42  0B                 	db	11
   271  000F43  03                 	db	3
   272  000F44  0B                 	db	11
   273  000F45  02                 	db	2
   274  000F46  0B                 	db	11
   275  000F47  01                 	db	1
   276  000F48  0D                 	db	13
   277  000F49  01                 	db	1
   278  000F4A  0D                 	db	13
   279  000F4B  02                 	db	2
   280  000F4C  0D                 	db	13
   281  000F4D  03                 	db	3
   282  000F4E  0D                 	db	13
   283  000F4F  04                 	db	4
   284  000F50  0C                 	db	12
   285  000F51  05                 	db	5
   286  000F52  0B                 	db	11
   287  000F53  06                 	db	6
   288  000F54  0E                 	db	14
   289  000F55  05                 	db	5
   290  000F56  0E                 	db	14
   291  000F57  06                 	db	6
   292                           
   293                           	psect	idataBANK4
   294  000F58                     __pidataBANK4:
   295                           	opt stack 0
   296                           
   297                           ;initializer for drawSymbol@F3236
   298  000F58  06                 	db	6
   299  000F59  06                 	db	6
   300  000F5A  05                 	db	5
   301  000F5B  07                 	db	7
   302  000F5C  04                 	db	4
   303  000F5D  07                 	db	7
   304  000F5E  03                 	db	3
   305  000F5F  07                 	db	7
   306  000F60  02                 	db	2
   307  000F61  06                 	db	6
   308  000F62  02                 	db	2
   309  000F63  05                 	db	5
   310  000F64  02                 	db	2
   311  000F65  04                 	db	4
   312  000F66  02                 	db	2
   313  000F67  03                 	db	3
   314  000F68  02                 	db	2
   315  000F69  02                 	db	2
   316  000F6A  02                 	db	2
   317  000F6B  01                 	db	1
   318  000F6C  03                 	db	3
   319  000F6D  00                 	db	0
   320  000F6E  04                 	db	4
   321  000F6F  00                 	db	0
   322  000F70  05                 	db	5
   323  000F71  00                 	db	0
   324  000F72  06                 	db	6
   325  000F73  01                 	db	1
   326  000F74  05                 	db	5
   327  000F75  02                 	db	2
   328  000F76  04                 	db	4
   329  000F77  02                 	db	2
   330  000F78  09                 	db	9
   331  000F79  06                 	db	6
   332  000F7A  09                 	db	9
   333  000F7B  05                 	db	5
   334  000F7C  09                 	db	9
   335  000F7D  04                 	db	4
   336  000F7E  09                 	db	9
   337  000F7F  03                 	db	3
   338  000F80  09                 	db	9
   339  000F81  02                 	db	2
   340  000F82  09                 	db	9
   341  000F83  01                 	db	1
   342  000F84  0A                 	db	10
   343  000F85  00                 	db	0
   344  000F86  0B                 	db	11
   345  000F87  00                 	db	0
   346  000F88  0C                 	db	12
   347  000F89  00                 	db	0
   348  000F8A  0D                 	db	13
   349  000F8B  01                 	db	1
   350  000F8C  0D                 	db	13
   351  000F8D  02                 	db	2
   352  000F8E  0D                 	db	13
   353  000F8F  04                 	db	4
   354  000F90  0D                 	db	13
   355  000F91  05                 	db	5
   356  000F92  0D                 	db	13
   357  000F93  06                 	db	6
   358  000F94  0C                 	db	12
   359  000F95  07                 	db	7
   360  000F96  0B                 	db	11
   361  000F97  07                 	db	7
   362  000F98  0A                 	db	10
   363  000F99  07                 	db	7
   364  000F9A  00                 	db	0
   365  000F9B  00                 	db	0
   366  0000                     _ADRES	set	4035
   367  0000                     _ADCON0bits	set	4034
   368  0000                     _ADCON1bits	set	4033
   369  0000                     _ADCON2bits	set	4032
   370  0000                     _LATA	set	3977
   371  0000                     _LATC	set	3979
   372  0000                     _LATD	set	3980
   373  0000                     _OSCCONbits	set	4051
   374  0000                     _OSCTUNEbits	set	3995
   375  0000                     _TRISA	set	3986
   376  0000                     _TRISBbits	set	3987
   377  0000                     _TRISC	set	3988
   378  0000                     _TRISD	set	3989
   379  0000                     _ADIE	set	31982
   380  0000                     _ADIF	set	31990
   381  0000                     _GIE	set	32663
   382  0000                     _PEIE	set	32662
   383  0000                     _PLLEN	set	31966
   384  0000                     _PSA	set	32427
   385  0000                     _T08BIT	set	32430
   386  0000                     _T0CS	set	32429
   387  0000                     _T0PS0	set	32424
   388  0000                     _T0PS1	set	32425
   389  0000                     _T0PS2	set	32426
   390  0000                     _TMR0IE	set	32661
   391  0000                     _TMR0IF	set	32658
   392  0000                     _TMR0ON	set	32431
   393                           
   394                           ; #config settings
   395  0000                     
   396                           	psect	cinit
   397  000912                     __pcinit:
   398                           	opt stack 0
   399  000912                     start_initialization:
   400                           	opt stack 0
   401  000912                     __initialization:
   402                           	opt stack 0
   403                           
   404                           ; Clear objects allocated to BANK3 (128 bytes)
   405  000912  EE03  F000         	lfsr	0,__pbssBANK3
   406  000916  0E80               	movlw	128
   407  000918                     clear_0:
   408  000918  6AEE               	clrf	postinc0,c
   409  00091A  06E8               	decf	wreg,f,c
   410  00091C  E1FD               	bnz	clear_0
   411                           
   412                           ; Clear objects allocated to BANK1 (17 bytes)
   413  00091E  EE01  F0B7         	lfsr	0,__pbssBANK1
   414  000922  0E11               	movlw	17
   415  000924                     clear_1:
   416  000924  6AEE               	clrf	postinc0,c
   417  000926  06E8               	decf	wreg,f,c
   418  000928  E1FD               	bnz	clear_1
   419                           
   420                           ; Initialize objects allocated to BANK4 (68 bytes)
   421                           ; load TBLPTR registers with __pidataBANK4
   422  00092A  0E58               	movlw	low __pidataBANK4
   423  00092C  6EF6               	movwf	tblptrl,c
   424  00092E  0E0F               	movlw	high __pidataBANK4
   425  000930  6EF7               	movwf	tblptrh,c
   426  000932  0E00               	movlw	low (__pidataBANK4 shr (0+16))
   427  000934  6EF8               	movwf	tblptru,c
   428  000936  EE04  F000         	lfsr	0,__pdataBANK4
   429  00093A  EE10 F044          	lfsr	1,68
   430  00093E                     copy_data0:
   431  00093E  0009               	tblrd		*+
   432  000940  CFF5 FFEE          	movff	tablat,postinc0
   433  000944  50E5               	movf	postdec1,w,c
   434  000946  50E1               	movf	fsr1l,w,c
   435  000948  E1FA               	bnz	copy_data0
   436                           
   437                           ; Initialize objects allocated to BANK3 (68 bytes)
   438                           ; load TBLPTR registers with __pidataBANK3
   439  00094A  0E14               	movlw	low __pidataBANK3
   440  00094C  6EF6               	movwf	tblptrl,c
   441  00094E  0E0F               	movlw	high __pidataBANK3
   442  000950  6EF7               	movwf	tblptrh,c
   443  000952  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   444  000954  6EF8               	movwf	tblptru,c
   445  000956  EE03  F080         	lfsr	0,__pdataBANK3
   446  00095A  EE10 F044          	lfsr	1,68
   447  00095E                     copy_data1:
   448  00095E  0009               	tblrd		*+
   449  000960  CFF5 FFEE          	movff	tablat,postinc0
   450  000964  50E5               	movf	postdec1,w,c
   451  000966  50E1               	movf	fsr1l,w,c
   452  000968  E1FA               	bnz	copy_data1
   453                           
   454                           ; Initialize objects allocated to BANK2 (112 bytes)
   455                           ; load TBLPTR registers with __pidataBANK2
   456  00096A  0E66               	movlw	low __pidataBANK2
   457  00096C  6EF6               	movwf	tblptrl,c
   458  00096E  0E0B               	movlw	high __pidataBANK2
   459  000970  6EF7               	movwf	tblptrh,c
   460  000972  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   461  000974  6EF8               	movwf	tblptru,c
   462  000976  EE02  F088         	lfsr	0,__pdataBANK2
   463  00097A  EE10 F070          	lfsr	1,112
   464  00097E                     copy_data2:
   465  00097E  0009               	tblrd		*+
   466  000980  CFF5 FFEE          	movff	tablat,postinc0
   467  000984  50E5               	movf	postdec1,w,c
   468  000986  50E1               	movf	fsr1l,w,c
   469  000988  E1FA               	bnz	copy_data2
   470                           
   471                           ; Initialize objects allocated to BANK1 (24 bytes)
   472                           ; load TBLPTR registers with __pidataBANK1
   473  00098A  0EEE               	movlw	low __pidataBANK1
   474  00098C  6EF6               	movwf	tblptrl,c
   475  00098E  0E10               	movlw	high __pidataBANK1
   476  000990  6EF7               	movwf	tblptrh,c
   477  000992  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   478  000994  6EF8               	movwf	tblptru,c
   479  000996  EE01  F09F         	lfsr	0,__pdataBANK1
   480  00099A  EE10 F018          	lfsr	1,24
   481  00099E                     copy_data3:
   482  00099E  0009               	tblrd		*+
   483  0009A0  CFF5 FFEE          	movff	tablat,postinc0
   484  0009A4  50E5               	movf	postdec1,w,c
   485  0009A6  50E1               	movf	fsr1l,w,c
   486  0009A8  E1FA               	bnz	copy_data3
   487                           
   488                           ; Initialize objects allocated to COMRAM (2 bytes)
   489                           ; load TBLPTR registers with __pidataCOMRAM
   490  0009AA  0E6A               	movlw	low __pidataCOMRAM
   491  0009AC  6EF6               	movwf	tblptrl,c
   492  0009AE  0E11               	movlw	high __pidataCOMRAM
   493  0009B0  6EF7               	movwf	tblptrh,c
   494  0009B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   495  0009B4  6EF8               	movwf	tblptru,c
   496  0009B6  0009               	tblrd		*+	;fetch initializer
   497  0009B8  CFF5 F07D          	movff	tablat,__pdataCOMRAM
   498  0009BC  0009               	tblrd		*+	;fetch initializer
   499  0009BE  CFF5 F07E          	movff	tablat,__pdataCOMRAM+1
   500  0009C2                     end_of_initialization:
   501                           	opt stack 0
   502  0009C2                     __end_of__initialization:
   503                           	opt stack 0
   504  0009C2  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   505  0009C4  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   506  0009C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   507  0009C8  6EF8               	movwf	tblptru,c
   508  0009CA  0100               	movlb	0
   509  0009CC  EF97  F008         	goto	_main	;jump to C main() function
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           postdec1	equ	0xFE5
   517                           fsr1l	equ	0xFE1
   518                           
   519                           	psect	dataCOMRAM
   520  00007D                     __pdataCOMRAM:
   521                           	opt stack 0
   522  00007D                     __speed:
   523                           	opt stack 0
   524  00007D                     	ds	2
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           postdec1	equ	0xFE5
   532                           fsr1l	equ	0xFE1
   533                           
   534                           	psect	bssBANK1
   535  0001B7                     __pbssBANK1:
   536                           	opt stack 0
   537  0001B7                     __p1:
   538                           	opt stack 0
   539  0001B7                     	ds	5
   540  0001BC                     __p2:
   541                           	opt stack 0
   542  0001BC                     	ds	5
   543  0001C1                     __ball:
   544                           	opt stack 0
   545  0001C1                     	ds	3
   546  0001C4                     __nextPos:
   547                           	opt stack 0
   548  0001C4                     	ds	2
   549  0001C6                     __timerCounter:
   550                           	opt stack 0
   551  0001C6                     	ds	2
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           postinc0	equ	0xFEE
   557                           wreg	equ	0xFE8
   558                           postdec1	equ	0xFE5
   559                           fsr1l	equ	0xFE1
   560                           
   561                           	psect	dataBANK1
   562  00019F                     __pdataBANK1:
   563                           	opt stack 0
   564  00019F                     drawSymbol@F3224:
   565                           	opt stack 0
   566  00019F                     	ds	24
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           
   576                           	psect	dataBANK2
   577  000288                     __pdataBANK2:
   578                           	opt stack 0
   579  000288                     drawSymbol@F3239:
   580                           	opt stack 0
   581  000288                     	ds	30
   582  0002A6                     drawSymbol@F3242:
   583                           	opt stack 0
   584  0002A6                     	ds	30
   585  0002C4                     drawSymbol@F3227:
   586                           	opt stack 0
   587  0002C4                     	ds	28
   588  0002E0                     drawSymbol@F3230:
   589                           	opt stack 0
   590  0002E0                     	ds	24
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           postdec1	equ	0xFE5
   598                           fsr1l	equ	0xFE1
   599                           
   600                           	psect	bssBANK3
   601  000300                     __pbssBANK3:
   602                           	opt stack 0
   603  000300                     _pixels:
   604                           	opt stack 0
   605  000300                     	ds	128
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           postdec1	equ	0xFE5
   613                           fsr1l	equ	0xFE1
   614                           
   615                           	psect	dataBANK3
   616  000380                     __pdataBANK3:
   617                           	opt stack 0
   618  000380                     drawSymbol@F3233:
   619                           	opt stack 0
   620  000380                     	ds	68
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1l	equ	0xFE1
   629                           
   630                           	psect	dataBANK4
   631  000400                     __pdataBANK4:
   632                           	opt stack 0
   633  000400                     drawSymbol@F3236:
   634                           	opt stack 0
   635  000400                     	ds	68
   636                           tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           tblptrl	equ	0xFF6
   639                           tablat	equ	0xFF5
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           postdec1	equ	0xFE5
   643                           fsr1l	equ	0xFE1
   644                           
   645                           	psect	cstackBANK3
   646  0003C4                     __pcstackBANK3:
   647                           	opt stack 0
   648  0003C4                     drawSymbol@symbolOne:
   649                           	opt stack 0
   650                           
   651                           ; 24 bytes @ 0x0
   652  0003C4                     	ds	24
   653  0003DC                     drawSymbol@symbolThree:
   654                           	opt stack 0
   655                           
   656                           ; 24 bytes @ 0x18
   657  0003DC                     	ds	24
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667                           	psect	cstackBANK2
   668  000200                     __pcstackBANK2:
   669                           	opt stack 0
   670  000200                     drawSymbol@symbolArrowLeft:
   671                           	opt stack 0
   672                           
   673                           ; 30 bytes @ 0x0
   674  000200                     	ds	30
   675  00021E                     drawSymbol@symbolGo:
   676                           	opt stack 0
   677                           
   678                           ; 68 bytes @ 0x1E
   679  00021E                     	ds	68
   680  000262                     drawSymbol@symbolTwo:
   681                           	opt stack 0
   682                           
   683                           ; 28 bytes @ 0x62
   684  000262                     	ds	28
   685  00027E                     drawSymbol@chosenSymbol:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x7E
   689  00027E                     	ds	1
   690  00027F                     drawSymbol@i:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x7F
   694  00027F                     	ds	1
   695  000280                     drawSymbol@i_82:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x80
   699  000280                     	ds	1
   700  000281                     drawSymbol@i_83:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x81
   704  000281                     	ds	1
   705  000282                     drawSymbol@i_84:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x82
   709  000282                     	ds	1
   710  000283                     drawSymbol@i_85:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x83
   714  000283                     	ds	1
   715  000284                     drawSymbol@i_86:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x84
   719  000284                     	ds	1
   720  000285                     drawSymbol@i_87:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x85
   724  000285                     	ds	1
   725  000286                     startPong@counter:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x86
   729  000286                     	ds	2
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           postinc0	equ	0xFEE
   735                           wreg	equ	0xFE8
   736                           postdec1	equ	0xFE5
   737                           fsr1l	equ	0xFE1
   738                           
   739                           	psect	cstackBANK1
   740  000100                     __pcstackBANK1:
   741                           	opt stack 0
   742  000100                     i2drawSymbol@symbolOne:
   743                           	opt stack 0
   744                           
   745                           ; 24 bytes @ 0x0
   746  000100                     	ds	24
   747  000118                     i2drawSymbol@symbolThree:
   748                           	opt stack 0
   749                           
   750                           ; 24 bytes @ 0x18
   751  000118                     	ds	24
   752  000130                     i2drawSymbol@i_83:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x30
   756  000130                     	ds	1
   757  000131                     i2drawSymbol@i_84:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x31
   761  000131                     	ds	1
   762  000132                     i2drawSymbol@i_85:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0x32
   766  000132                     	ds	1
   767  000133                     i2drawSymbol@i_86:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x33
   771  000133                     	ds	1
   772  000134                     i2drawSymbol@i_87:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x34
   776  000134                     	ds	1
   777  000135                     ISR@ADvalue:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x35
   781  000135                     	ds	2
   782  000137                     ISR@value:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x37
   786  000137                     	ds	1
   787  000138                     ??_turnAllOff:
   788  000138                     ??_setColHigh:
   789  000138                     ??_setRowHigh:
   790  000138                     on@row:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x38
   794  000138                     	ds	1
   795  000139                     ??_on:
   796                           
   797                           ; 1 bytes @ 0x39
   798  000139                     	ds	1
   799  00013A                     setColHigh@column:
   800                           	opt stack 0
   801  00013A                     setRowHigh@row:
   802                           	opt stack 0
   803  00013A                     turnAllOff@i:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x3A
   807  00013A                     	ds	1
   808  00013B                     ??_refresh:
   809  00013B                     on@column:
   810                           	opt stack 0
   811  00013B                     turnAllOff@j:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x3B
   815  00013B                     	ds	1
   816  00013C                     drawSymbol@offSetX:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x3C
   820  00013C                     	ds	1
   821  00013D                     drawSymbol@symbolPlay:
   822                           	opt stack 0
   823                           
   824                           ; 68 bytes @ 0x3D
   825  00013D                     	ds	1
   826  00013E                     refresh@theCol:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x3E
   830  00013E                     	ds	1
   831  00013F                     refresh@theRow:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0x3F
   835  00013F                     	ds	66
   836  000181                     drawSymbol@symbolArrowRight:
   837                           	opt stack 0
   838                           
   839                           ; 30 bytes @ 0x81
   840  000181                     	ds	30
   841  00019F                     tblptru	equ	0xFF8
   842                           tblptrh	equ	0xFF7
   843                           tblptrl	equ	0xFF6
   844                           tablat	equ	0xFF5
   845                           postinc0	equ	0xFEE
   846                           wreg	equ	0xFE8
   847                           postdec1	equ	0xFE5
   848                           fsr1l	equ	0xFE1
   849                           
   850                           ; 1 bytes @ 0x9F
   851                           
   852                           	psect	cstackBANK0
   853  000080                     __pcstackBANK0:
   854                           	opt stack 0
   855  000080                     i2drawSymbol@symbolArrowLeft:
   856                           	opt stack 0
   857                           
   858                           ; 30 bytes @ 0x0
   859  000080                     	ds	30
   860  00009E                     i2drawSymbol@symbolGo:
   861                           	opt stack 0
   862                           
   863                           ; 68 bytes @ 0x1E
   864  00009E                     	ds	68
   865  0000E2                     i2drawSymbol@symbolTwo:
   866                           	opt stack 0
   867                           
   868                           ; 28 bytes @ 0x62
   869  0000E2                     	ds	28
   870  0000FE                     i2drawSymbol@i:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x7E
   874  0000FE                     	ds	1
   875  0000FF                     i2drawSymbol@i_82:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x7F
   879  0000FF                     	ds	1
   880                           tblptru	equ	0xFF8
   881                           tblptrh	equ	0xFF7
   882                           tblptrl	equ	0xFF6
   883                           tablat	equ	0xFF5
   884                           postinc0	equ	0xFEE
   885                           wreg	equ	0xFE8
   886                           postdec1	equ	0xFE5
   887                           fsr1l	equ	0xFE1
   888                           
   889                           	psect	cstackCOMRAM
   890  000001                     __pcstackCOMRAM:
   891                           	opt stack 0
   892  000001                     ??i2_setColHigh:
   893  000001                     ??i2_setRowHigh:
   894  000001                     ??i2_turnAllOff:
   895  000001                     ?___lwdiv:
   896                           	opt stack 0
   897  000001                     off@row:
   898                           	opt stack 0
   899  000001                     i2on@row:
   900                           	opt stack 0
   901  000001                     ___lwdiv@dividend:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x0
   905  000001                     	ds	1
   906  000002                     ??_off:
   907  000002                     ??i2_on:
   908                           
   909                           ; 1 bytes @ 0x1
   910  000002                     	ds	1
   911  000003                     i2setColHigh@column:
   912                           	opt stack 0
   913  000003                     i2setRowHigh@row:
   914                           	opt stack 0
   915  000003                     i2turnAllOff@i:
   916                           	opt stack 0
   917  000003                     ___lwdiv@divisor:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x2
   921  000003                     	ds	1
   922  000004                     ??i2_refresh:
   923  000004                     off@column:
   924                           	opt stack 0
   925  000004                     i2on@column:
   926                           	opt stack 0
   927  000004                     i2turnAllOff@j:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x3
   931  000004                     	ds	1
   932  000005                     i2drawSymbol@offSetX:
   933                           	opt stack 0
   934  000005                     ___lwdiv@quotient:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0x4
   938  000005                     	ds	1
   939  000006                     i2drawSymbol@symbolPlay:
   940                           	opt stack 0
   941                           
   942                           ; 68 bytes @ 0x5
   943  000006                     	ds	1
   944  000007                     ___lwdiv@counter:
   945                           	opt stack 0
   946  000007                     i2refresh@theCol:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x6
   950  000007                     	ds	1
   951  000008                     i2refresh@theRow:
   952                           	opt stack 0
   953                           
   954                           ; 1 bytes @ 0x7
   955  000008                     	ds	66
   956  00004A                     i2drawSymbol@symbolArrowRight:
   957                           	opt stack 0
   958                           
   959                           ; 30 bytes @ 0x49
   960  00004A                     	ds	30
   961  000068                     i2drawSymbol@chosenSymbol:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x67
   965  000068                     	ds	1
   966  000069                     i2startPong@counter:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x68
   970  000069                     	ds	2
   971  00006B                     checkNextPosition@counter:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x6A
   975  00006B                     	ds	2
   976  00006D                     checkNextPosition@counter_439:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x6C
   980  00006D                     	ds	2
   981  00006F                     ??_ISR:
   982                           
   983                           ; 1 bytes @ 0x6E
   984  00006F                     	ds	14
   985                           tblptru	equ	0xFF8
   986                           tblptrh	equ	0xFF7
   987                           tblptrl	equ	0xFF6
   988                           tablat	equ	0xFF5
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           postdec1	equ	0xFE5
   992                           fsr1l	equ	0xFE1
   993                           
   994 ;;
   995 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   996 ;;
   997 ;; *************** function _main *****************
   998 ;; Defined at:
   999 ;;		line 419 in file "main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1013 ;;      Params:         0       0       0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0
  1016 ;;      Totals:         0       0       0       0       0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels required when called:   10
  1019 ;; This function calls:
  1020 ;;		_initialize
  1021 ;;		_initializeLED
  1022 ;;		_initializePong
  1023 ;;		_refresh
  1024 ;; This function is called by:
  1025 ;;		Startup code after reset
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text0
  1030  00112E                     __ptext0:
  1031                           	opt stack 0
  1032  00112E                     _main:
  1033                           	opt stack 21
  1034                           
  1035                           ;main.c: 420: initialize();
  1036                           
  1037                           ;incstack = 0
  1038  00112E  ECE7  F006         	call	_initialize	;wreg free
  1039                           
  1040                           ;main.c: 421: initializeLED();
  1041  001132  EC5A  F008         	call	_initializeLED	;wreg free
  1042                           
  1043                           ;main.c: 422: initializePong();
  1044  001136  EC83  F008         	call	_initializePong	;wreg free
  1045  00113A                     l3054:
  1046                           
  1047                           ;main.c: 427: refresh();
  1048  00113A  ECE8  F004         	call	_refresh	;wreg free
  1049  00113E  D7FD               	goto	l3054
  1050  001140                     __end_of_main:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           postdec1	equ	0xFE5
  1059                           fsr1l	equ	0xFE1
  1060                           
  1061 ;; *************** function _initializePong *****************
  1062 ;; Defined at:
  1063 ;;		line 84 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1077 ;;      Params:         0       0       0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    9
  1084 ;; This function calls:
  1085 ;;		_startPong
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text1
  1092  001106                     __ptext1:
  1093                           	opt stack 0
  1094  001106                     _initializePong:
  1095                           	opt stack 21
  1096                           
  1097                           ;main.c: 88: _p1.lives = 3;
  1098                           
  1099                           ;incstack = 0
  1100  001106  0E03               	movlw	3
  1101  001108  0101               	movlb	1	; () banked
  1102  00110A  6FBB               	movwf	(__p1+4)& (0+255),b
  1103                           
  1104                           ;main.c: 89: _p2.lives = 3;
  1105  00110C  0E03               	movlw	3
  1106  00110E  0101               	movlb	1	; () banked
  1107  001110  6FC0               	movwf	(__p2+4)& (0+255),b
  1108                           
  1109                           ; BSR set to: 1
  1110                           ;main.c: 91: startPong();
  1111  001112  ECEB  F005         	call	_startPong	;wreg free
  1112                           
  1113                           ;main.c: 94: TMR0ON = 1;
  1114  001116  8ED5               	bsf	4053,7,c	;volatile
  1115  001118  0012               	return		;funcret
  1116  00111A                     __end_of_initializePong:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           postdec1	equ	0xFE5
  1125                           fsr1l	equ	0xFE1
  1126                           
  1127 ;; *************** function _startPong *****************
  1128 ;; Defined at:
  1129 ;;		line 58 in file "main.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  counter         2  134[BANK2 ] unsigned int 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         0       0       0       0       0       0       0
  1144 ;;      Locals:         0       0       0       2       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0
  1146 ;;      Totals:         0       0       0       2       0       0       0
  1147 ;;Total ram usage:        2 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    8
  1150 ;; This function calls:
  1151 ;;		_drawSymbol
  1152 ;;		_refresh
  1153 ;;		_turnAllOff
  1154 ;; This function is called by:
  1155 ;;		_initializePong
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text2
  1160  000BD6                     __ptext2:
  1161                           	opt stack 0
  1162  000BD6                     _startPong:
  1163                           	opt stack 21
  1164                           
  1165                           ;main.c: 59: _speed = 200;
  1166                           
  1167                           ;incstack = 0
  1168  000BD6  0E00               	movlw	0
  1169  000BD8  6E7E               	movwf	__speed+1,c
  1170  000BDA  0EC8               	movlw	200
  1171  000BDC  6E7D               	movwf	__speed,c
  1172                           
  1173                           ;main.c: 62: turnAllOff();
  1174  000BDE  EC57  F006         	call	_turnAllOff	;wreg free
  1175                           
  1176                           ;main.c: 63: drawSymbol(_p1.lives, 0);
  1177  000BE2  0E00               	movlw	0
  1178  000BE4  0101               	movlb	1	; () banked
  1179  000BE6  6F3C               	movwf	drawSymbol@offSetX& (0+255),b
  1180  000BE8  0101               	movlb	1	; () banked
  1181  000BEA  51BB               	movf	(__p1+4)& (0+255),w,b
  1182  000BEC  EC0D  F000         	call	_drawSymbol
  1183                           
  1184                           ;main.c: 64: drawSymbol(_p2.lives, 8);
  1185  000BF0  0E08               	movlw	8
  1186  000BF2  0101               	movlb	1	; () banked
  1187  000BF4  6F3C               	movwf	drawSymbol@offSetX& (0+255),b
  1188  000BF6  0101               	movlb	1	; () banked
  1189  000BF8  51C0               	movf	(__p2+4)& (0+255),w,b
  1190  000BFA  EC0D  F000         	call	_drawSymbol
  1191                           
  1192                           ;main.c: 65: for (unsigned int counter = 0; counter < 800; counter++) {
  1193  000BFE  0E00               	movlw	0
  1194  000C00  0102               	movlb	2	; () banked
  1195  000C02  6F87               	movwf	(startPong@counter+1)& (0+255),b
  1196  000C04  0E00               	movlw	0
  1197  000C06  6F86               	movwf	startPong@counter& (0+255),b
  1198  000C08                     l2796:
  1199                           
  1200                           ; BSR set to: 2
  1201  000C08  0E20               	movlw	32
  1202  000C0A  0102               	movlb	2	; () banked
  1203  000C0C  5D86               	subwf	startPong@counter& (0+255),w,b
  1204  000C0E  0E03               	movlw	3
  1205  000C10  0102               	movlb	2	; () banked
  1206  000C12  5987               	subwfb	(startPong@counter+1)& (0+255),w,b
  1207  000C14  B0D8               	btfsc	status,0,c
  1208  000C16  D006               	goto	l2806
  1209                           
  1210                           ; BSR set to: 2
  1211                           ;main.c: 66: refresh();
  1212                           
  1213                           ; BSR set to: 2
  1214                           
  1215                           ; BSR set to: 2
  1216  000C18  ECE8  F004         	call	_refresh	;wreg free
  1217  000C1C  0102               	movlb	2	; () banked
  1218  000C1E  4B86               	infsnz	startPong@counter& (0+255),f,b
  1219  000C20  2B87               	incf	(startPong@counter+1)& (0+255),f,b
  1220  000C22  D7F2               	goto	l2796
  1221  000C24                     l2806:
  1222                           
  1223                           ; BSR set to: 2
  1224                           ;main.c: 67: }
  1225                           ;main.c: 68: turnAllOff();
  1226  000C24  EC57  F006         	call	_turnAllOff	;wreg free
  1227                           
  1228                           ;main.c: 73: _ball.bDirection = 3;
  1229  000C28  0E03               	movlw	3
  1230  000C2A  0101               	movlb	1	; () banked
  1231  000C2C  6FC3               	movwf	(__ball+2)& (0+255),b
  1232                           
  1233                           ; BSR set to: 1
  1234                           ;main.c: 75: _ball.bPos[0] = 2;
  1235  000C2E  0E02               	movlw	2
  1236  000C30  0101               	movlb	1	; () banked
  1237  000C32  6FC1               	movwf	__ball& (0+255),b
  1238                           
  1239                           ; BSR set to: 1
  1240                           ;main.c: 77: _ball.bPos[1] = 4;
  1241  000C34  0E04               	movlw	4
  1242  000C36  0101               	movlb	1	; () banked
  1243  000C38  6FC2               	movwf	(__ball+1)& (0+255),b
  1244                           
  1245                           ; BSR set to: 1
  1246                           ;main.c: 80: _nextPos[0] = _ball.bPos[0];
  1247  000C3A  C1C1  F1C4         	movff	__ball,__nextPos
  1248                           
  1249                           ; BSR set to: 1
  1250                           ;main.c: 81: _nextPos[1] = _ball.bPos[1];
  1251  000C3E  C1C2  F1C5         	movff	__ball+1,__nextPos+1
  1252                           
  1253                           ; BSR set to: 1
  1254  000C42  0012               	return		;funcret
  1255  000C44                     __end_of_startPong:
  1256                           	opt stack 0
  1257                           tblptru	equ	0xFF8
  1258                           tblptrh	equ	0xFF7
  1259                           tblptrl	equ	0xFF6
  1260                           tablat	equ	0xFF5
  1261                           postinc0	equ	0xFEE
  1262                           wreg	equ	0xFE8
  1263                           postdec1	equ	0xFE5
  1264                           fsr1l	equ	0xFE1
  1265                           status	equ	0xFD8
  1266                           
  1267 ;; *************** function _refresh *****************
  1268 ;; Defined at:
  1269 ;;		line 177 in file "Source/LED-API.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  theRow          1   63[BANK1 ] unsigned char 
  1274 ;;  theCol          1   62[BANK1 ] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1284 ;;      Params:         0       0       0       0       0       0       0
  1285 ;;      Locals:         0       0       2       0       0       0       0
  1286 ;;      Temps:          0       0       3       0       0       0       0
  1287 ;;      Totals:         0       0       5       0       0       0       0
  1288 ;;Total ram usage:        5 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    7
  1291 ;; This function calls:
  1292 ;;		_allOff
  1293 ;;		_setColHigh
  1294 ;;		_setRowHigh
  1295 ;; This function is called by:
  1296 ;;		_startPong
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text3
  1302  0009D0                     __ptext3:
  1303                           	opt stack 0
  1304  0009D0                     _refresh:
  1305                           	opt stack 23
  1306                           
  1307                           ;LED-API.c: 179: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  1308                           
  1309                           ; BSR set to: 1
  1310                           ;incstack = 0
  1311  0009D0  0E00               	movlw	0
  1312  0009D2  0101               	movlb	1	; () banked
  1313  0009D4  6F3E               	movwf	refresh@theCol& (0+255),b
  1314  0009D6                     l2726:
  1315                           
  1316                           ; BSR set to: 1
  1317  0009D6  0E07               	movlw	7
  1318  0009D8  0101               	movlb	1	; () banked
  1319  0009DA  653E               	cpfsgt	refresh@theCol& (0+255),b
  1320  0009DC  D001               	goto	l2730
  1321  0009DE  0012               	return	
  1322  0009E0                     l2730:
  1323                           
  1324                           ; BSR set to: 1
  1325                           ;LED-API.c: 181: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  1326  0009E0  0E00               	movlw	0
  1327  0009E2  0101               	movlb	1	; () banked
  1328  0009E4  6F3F               	movwf	refresh@theRow& (0+255),b
  1329  0009E6                     l2732:
  1330                           
  1331                           ; BSR set to: 1
  1332  0009E6  0E0F               	movlw	15
  1333  0009E8  0101               	movlb	1	; () banked
  1334  0009EA  653F               	cpfsgt	refresh@theRow& (0+255),b
  1335  0009EC  D001               	goto	l2736
  1336  0009EE  D024               	goto	l2744
  1337  0009F0                     l2736:
  1338                           
  1339                           ; BSR set to: 1
  1340                           ;LED-API.c: 183: if (pixels[theCol][theRow] == 1)
  1341  0009F0  0101               	movlb	1	; () banked
  1342  0009F2  513E               	movf	refresh@theCol& (0+255),w,b
  1343  0009F4  0D10               	mullw	16
  1344  0009F6  0E00               	movlw	low _pixels
  1345  0009F8  0101               	movlb	1	; () banked
  1346  0009FA  6F3B               	movwf	??_refresh& (0+255),b
  1347  0009FC  0E03               	movlw	high _pixels
  1348  0009FE  0101               	movlb	1	; () banked
  1349  000A00  6F3C               	movwf	(??_refresh+1)& (0+255),b
  1350  000A02  50F3               	movf	prodl,w,c
  1351  000A04  0101               	movlb	1	; () banked
  1352  000A06  273B               	addwf	??_refresh& (0+255),f,b
  1353  000A08  50F4               	movf	prodh,w,c
  1354  000A0A  0101               	movlb	1	; () banked
  1355  000A0C  233C               	addwfc	(??_refresh+1)& (0+255),f,b
  1356  000A0E  0101               	movlb	1	; () banked
  1357  000A10  513F               	movf	refresh@theRow& (0+255),w,b
  1358  000A12  0D01               	mullw	1
  1359  000A14  50F3               	movf	prodl,w,c
  1360  000A16  0101               	movlb	1	; () banked
  1361  000A18  253B               	addwf	??_refresh& (0+255),w,b
  1362  000A1A  6ED9               	movwf	fsr2l,c
  1363  000A1C  50F4               	movf	prodh,w,c
  1364  000A1E  0101               	movlb	1	; () banked
  1365  000A20  213C               	addwfc	(??_refresh+1)& (0+255),w,b
  1366  000A22  6EDA               	movwf	fsr2h,c
  1367  000A24  04DE               	decf	postinc2,w,c
  1368  000A26  A4D8               	btfss	status,2,c
  1369  000A28  D004               	goto	l2740
  1370                           
  1371                           ; BSR set to: 1
  1372                           ;LED-API.c: 184: setRowHigh(theRow);
  1373  000A2A  0101               	movlb	1	; () banked
  1374  000A2C  513F               	movf	refresh@theRow& (0+255),w,b
  1375  000A2E  ECBA  F006         	call	_setRowHigh
  1376  000A32                     l2740:
  1377  000A32  0101               	movlb	1	; () banked
  1378  000A34  2B3F               	incf	refresh@theRow& (0+255),f,b
  1379  000A36  D7D7               	goto	l2732
  1380  000A38                     l2744:
  1381                           
  1382                           ; BSR set to: 1
  1383                           ;LED-API.c: 185: }
  1384                           ;LED-API.c: 189: setColHigh(theCol);
  1385  000A38  0101               	movlb	1	; () banked
  1386  000A3A  513E               	movf	refresh@theCol& (0+255),w,b
  1387  000A3C  EC46  F008         	call	_setColHigh
  1388                           
  1389                           ;LED-API.c: 190: _delay((unsigned long)((500)*(32000000/4000000.0)));
  1390  000A40  0E06               	movlw	6
  1391  000A42  0101               	movlb	1	; () banked
  1392  000A44  6F3B               	movwf	??_refresh& (0+255),b
  1393  000A46  0E30               	movlw	48
  1394  000A48                     u3107:
  1395  000A48  2EE8               	decfsz	wreg,f,c
  1396  000A4A  D7FE               	goto	u3107
  1397  000A4C  2F3B               	decfsz	??_refresh& (0+255),f,b
  1398  000A4E  D7FC               	goto	u3107
  1399  000A50  D000               	nop2	
  1400                           
  1401                           ;LED-API.c: 191: allOff();
  1402  000A52  ECA0  F008         	call	_allOff	;wreg free
  1403  000A56  0101               	movlb	1	; () banked
  1404  000A58  2B3E               	incf	refresh@theCol& (0+255),f,b
  1405  000A5A  D7BD               	goto	l2726
  1406  000A5C                     __end_of_refresh:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           prodh	equ	0xFF4
  1413                           prodl	equ	0xFF3
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           fsr1l	equ	0xFE1
  1418                           postinc2	equ	0xFDE
  1419                           fsr2h	equ	0xFDA
  1420                           fsr2l	equ	0xFD9
  1421                           status	equ	0xFD8
  1422                           
  1423 ;; *************** function _setRowHigh *****************
  1424 ;; Defined at:
  1425 ;;		line 24 in file "Source/LED-API.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  row             1    wreg     unsigned char 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  row             1   58[BANK1 ] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1439 ;;      Params:         0       0       0       0       0       0       0
  1440 ;;      Locals:         0       0       1       0       0       0       0
  1441 ;;      Temps:          0       0       2       0       0       0       0
  1442 ;;      Totals:         0       0       3       0       0       0       0
  1443 ;;Total ram usage:        3 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    6
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_refresh
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text4
  1454  000D74                     __ptext4:
  1455                           	opt stack 0
  1456  000D74                     _setRowHigh:
  1457                           	opt stack 23
  1458                           
  1459                           ; BSR set to: 1
  1460                           ;incstack = 0
  1461                           ;setRowHigh@row stored from wreg
  1462  000D74  0101               	movlb	1	; () banked
  1463  000D76  6F3A               	movwf	setRowHigh@row& (0+255),b
  1464                           
  1465                           ;LED-API.c: 25: if(row < 8)
  1466  000D78  0E08               	movlw	8
  1467  000D7A  0101               	movlb	1	; () banked
  1468  000D7C  613A               	cpfslt	setRowHigh@row& (0+255),b
  1469  000D7E  D012               	goto	l2508
  1470                           
  1471                           ; BSR set to: 1
  1472                           ;LED-API.c: 26: LATC |= (1 << row);
  1473  000D80  C13A  F138         	movff	setRowHigh@row,??_setRowHigh
  1474  000D84  0E01               	movlw	1
  1475  000D86  0101               	movlb	1	; () banked
  1476  000D88  6F39               	movwf	(??_setRowHigh+1)& (0+255),b
  1477  000D8A  0101               	movlb	1	; () banked
  1478  000D8C  2B38               	incf	??_setRowHigh& (0+255),f,b
  1479  000D8E  D003               	goto	u2284
  1480  000D90                     u2285:
  1481  000D90  0101               	movlb	1	; () banked
  1482  000D92  90D8               	bcf	status,0,c
  1483  000D94  3739               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1484  000D96                     u2284:
  1485  000D96  0101               	movlb	1	; () banked
  1486  000D98  2F38               	decfsz	??_setRowHigh& (0+255),f,b
  1487  000D9A  D7FA               	goto	u2285
  1488  000D9C  0101               	movlb	1	; () banked
  1489  000D9E  5139               	movf	(??_setRowHigh+1)& (0+255),w,b
  1490  000DA0  128B               	iorwf	3979,f,c	;volatile
  1491  000DA2  0012               	return	
  1492  000DA4                     l2508:
  1493                           
  1494                           ; BSR set to: 1
  1495                           ;LED-API.c: 27: else
  1496                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  1497  000DA4  C13A  F138         	movff	setRowHigh@row,??_setRowHigh
  1498  000DA8  0EF8               	movlw	-8
  1499  000DAA  0101               	movlb	1	; () banked
  1500  000DAC  2738               	addwf	??_setRowHigh& (0+255),f,b
  1501  000DAE  0E01               	movlw	1
  1502  000DB0  0101               	movlb	1	; () banked
  1503  000DB2  6F39               	movwf	(??_setRowHigh+1)& (0+255),b
  1504  000DB4  0101               	movlb	1	; () banked
  1505  000DB6  2B38               	incf	??_setRowHigh& (0+255),f,b
  1506  000DB8  D003               	goto	u2294
  1507  000DBA                     u2295:
  1508  000DBA  0101               	movlb	1	; () banked
  1509  000DBC  90D8               	bcf	status,0,c
  1510  000DBE  3739               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1511  000DC0                     u2294:
  1512  000DC0  0101               	movlb	1	; () banked
  1513  000DC2  2F38               	decfsz	??_setRowHigh& (0+255),f,b
  1514  000DC4  D7FA               	goto	u2295
  1515  000DC6  0101               	movlb	1	; () banked
  1516  000DC8  5139               	movf	(??_setRowHigh+1)& (0+255),w,b
  1517  000DCA  128C               	iorwf	3980,f,c	;volatile
  1518  000DCC  0012               	return	
  1519  000DCE                     __end_of_setRowHigh:
  1520                           	opt stack 0
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           prodh	equ	0xFF4
  1526                           prodl	equ	0xFF3
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           postdec1	equ	0xFE5
  1530                           fsr1l	equ	0xFE1
  1531                           postinc2	equ	0xFDE
  1532                           fsr2h	equ	0xFDA
  1533                           fsr2l	equ	0xFD9
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _setColHigh *****************
  1537 ;; Defined at:
  1538 ;;		line 20 in file "Source/LED-API.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  column          1    wreg     unsigned char 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  column          1   58[BANK1 ] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1552 ;;      Params:         0       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       1       0       0       0       0
  1554 ;;      Temps:          0       0       2       0       0       0       0
  1555 ;;      Totals:         0       0       3       0       0       0       0
  1556 ;;Total ram usage:        3 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    6
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_refresh
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text5
  1567  00108C                     __ptext5:
  1568                           	opt stack 0
  1569  00108C                     _setColHigh:
  1570                           	opt stack 23
  1571                           
  1572                           ; BSR set to: 1
  1573                           ;incstack = 0
  1574                           ;setColHigh@column stored from wreg
  1575  00108C  0101               	movlb	1	; () banked
  1576  00108E  6F3A               	movwf	setColHigh@column& (0+255),b
  1577                           
  1578                           ;LED-API.c: 21: LATA |= (1 << column);
  1579  001090  C13A  F138         	movff	setColHigh@column,??_setColHigh
  1580  001094  0E01               	movlw	1
  1581  001096  0101               	movlb	1	; () banked
  1582  001098  6F39               	movwf	(??_setColHigh+1)& (0+255),b
  1583  00109A  0101               	movlb	1	; () banked
  1584  00109C  2B38               	incf	??_setColHigh& (0+255),f,b
  1585  00109E  D003               	goto	u2264
  1586  0010A0                     u2265:
  1587  0010A0  0101               	movlb	1	; () banked
  1588  0010A2  90D8               	bcf	status,0,c
  1589  0010A4  3739               	rlcf	(??_setColHigh+1)& (0+255),f,b
  1590  0010A6                     u2264:
  1591  0010A6  0101               	movlb	1	; () banked
  1592  0010A8  2F38               	decfsz	??_setColHigh& (0+255),f,b
  1593  0010AA  D7FA               	goto	u2265
  1594  0010AC  0101               	movlb	1	; () banked
  1595  0010AE  5139               	movf	(??_setColHigh+1)& (0+255),w,b
  1596  0010B0  1289               	iorwf	3977,f,c	;volatile
  1597                           
  1598                           ; BSR set to: 1
  1599  0010B2  0012               	return		;funcret
  1600  0010B4                     __end_of_setColHigh:
  1601                           	opt stack 0
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           prodh	equ	0xFF4
  1607                           prodl	equ	0xFF3
  1608                           postinc0	equ	0xFEE
  1609                           wreg	equ	0xFE8
  1610                           postdec1	equ	0xFE5
  1611                           fsr1l	equ	0xFE1
  1612                           postinc2	equ	0xFDE
  1613                           fsr2h	equ	0xFDA
  1614                           fsr2l	equ	0xFD9
  1615                           status	equ	0xFD8
  1616                           
  1617 ;; *************** function _allOff *****************
  1618 ;; Defined at:
  1619 ;;		line 171 in file "Source/LED-API.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1633 ;;      Params:         0       0       0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0
  1636 ;;      Totals:         0       0       0       0       0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    6
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_refresh
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text6
  1648  001140                     __ptext6:
  1649                           	opt stack 0
  1650  001140                     _allOff:
  1651                           	opt stack 23
  1652                           
  1653                           ;LED-API.c: 172: LATA = 0;
  1654                           
  1655                           ; BSR set to: 1
  1656                           ;incstack = 0
  1657  001140  0E00               	movlw	0
  1658  001142  6E89               	movwf	3977,c	;volatile
  1659                           
  1660                           ;LED-API.c: 173: LATC = 0;
  1661  001144  0E00               	movlw	0
  1662  001146  6E8B               	movwf	3979,c	;volatile
  1663                           
  1664                           ;LED-API.c: 174: LATD = 0;
  1665  001148  0E00               	movlw	0
  1666  00114A  6E8C               	movwf	3980,c	;volatile
  1667  00114C  0012               	return		;funcret
  1668  00114E                     __end_of_allOff:
  1669                           	opt stack 0
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           prodh	equ	0xFF4
  1675                           prodl	equ	0xFF3
  1676                           postinc0	equ	0xFEE
  1677                           wreg	equ	0xFE8
  1678                           postdec1	equ	0xFE5
  1679                           fsr1l	equ	0xFE1
  1680                           postinc2	equ	0xFDE
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _drawSymbol *****************
  1686 ;; Defined at:
  1687 ;;		line 85 in file "Source/LED-API.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  chosenSymbol    1    wreg     unsigned char 
  1690 ;;  offSetX         1   60[BANK1 ] unsigned char 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  chosenSymbol    1  126[BANK2 ] unsigned char 
  1693 ;;  i               1  133[BANK2 ] unsigned char 
  1694 ;;  i               1  132[BANK2 ] unsigned char 
  1695 ;;  i               1  131[BANK2 ] unsigned char 
  1696 ;;  i               1  130[BANK2 ] unsigned char 
  1697 ;;  i               1  129[BANK2 ] unsigned char 
  1698 ;;  i               1  128[BANK2 ] unsigned char 
  1699 ;;  i               1  127[BANK2 ] unsigned char 
  1700 ;;  symbolGo       68   30[BANK2 ] unsigned char [2][34]
  1701 ;;  symbolPlay     68   61[BANK1 ] unsigned char [2][34]
  1702 ;;  symbolArrowL   30    0[BANK2 ] unsigned char [2][15]
  1703 ;;  symbolArrowR   30  129[BANK1 ] unsigned char [2][15]
  1704 ;;  symbolTwo      28   98[BANK2 ] unsigned char [2][14]
  1705 ;;  symbolThree    24   24[BANK3 ] unsigned char [2][12]
  1706 ;;  symbolOne      24    0[BANK3 ] unsigned char [2][12]
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1716 ;;      Params:         0       0       1       0       0       0       0
  1717 ;;      Locals:         0       0      98     134      48       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0
  1719 ;;      Totals:         0       0      99     134      48       0       0
  1720 ;;Total ram usage:      281 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    7
  1723 ;; This function calls:
  1724 ;;		_on
  1725 ;; This function is called by:
  1726 ;;		_startPong
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text7
  1731  00001A                     __ptext7:
  1732                           	opt stack 0
  1733  00001A                     _drawSymbol:
  1734                           	opt stack 21
  1735                           
  1736                           ;incstack = 0
  1737                           ;drawSymbol@chosenSymbol stored from wreg
  1738  00001A  0102               	movlb	2	; () banked
  1739  00001C  6F7E               	movwf	drawSymbol@chosenSymbol& (0+255),b
  1740                           
  1741                           ;LED-API.c: 87: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  1742  00001E  EE21  F09F         	lfsr	2,drawSymbol@F3224
  1743  000022  EE13  F0C4         	lfsr	1,drawSymbol@symbolOne
  1744  000026  0E17               	movlw	23
  1745  000028                     u2571:
  1746  000028  CFDB FFE3          	movff	plusw2,plusw1
  1747  00002C  06E8               	decf	wreg,f,c
  1748  00002E  E2FC               	bc	u2571
  1749                           
  1750                           ;LED-API.c: 88: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  1751  000030  EE22  F0C4         	lfsr	2,drawSymbol@F3227
  1752  000034  EE12  F062         	lfsr	1,drawSymbol@symbolTwo
  1753  000038  0E1B               	movlw	27
  1754  00003A                     u2581:
  1755  00003A  CFDB FFE3          	movff	plusw2,plusw1
  1756  00003E  06E8               	decf	wreg,f,c
  1757  000040  E2FC               	bc	u2581
  1758                           
  1759                           ;LED-API.c: 89: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  1760  000042  EE22  F0E0         	lfsr	2,drawSymbol@F3230
  1761  000046  EE13  F0DC         	lfsr	1,drawSymbol@symbolThree
  1762  00004A  0E17               	movlw	23
  1763  00004C                     u2591:
  1764  00004C  CFDB FFE3          	movff	plusw2,plusw1
  1765  000050  06E8               	decf	wreg,f,c
  1766  000052  E2FC               	bc	u2591
  1767                           
  1768                           ;LED-API.c: 91: char symbolPlay[34][2] = {
  1769                           ;LED-API.c: 92: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  1770                           ;LED-API.c: 93: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  1771                           ;LED-API.c: 94: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  1772                           ;LED-API.c: 95: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  1773  000054  EE23  F080         	lfsr	2,drawSymbol@F3233
  1774  000058  EE11  F03D         	lfsr	1,drawSymbol@symbolPlay
  1775  00005C  0E43               	movlw	67
  1776  00005E                     u2601:
  1777  00005E  CFDB FFE3          	movff	plusw2,plusw1
  1778  000062  06E8               	decf	wreg,f,c
  1779  000064  E2FC               	bc	u2601
  1780                           
  1781                           ;LED-API.c: 97: char symbolGo[34][2] = {
  1782                           ;LED-API.c: 98: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0},
      +                          {5,0},{6,1},{5,2},{4,2},
  1783                           ;LED-API.c: 99: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},{
      +                          13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  1784  000066  EE24  F000         	lfsr	2,drawSymbol@F3236
  1785  00006A  EE12  F01E         	lfsr	1,drawSymbol@symbolGo
  1786  00006E  0E43               	movlw	67
  1787  000070                     u2611:
  1788  000070  CFDB FFE3          	movff	plusw2,plusw1
  1789  000074  06E8               	decf	wreg,f,c
  1790  000076  E2FC               	bc	u2611
  1791                           
  1792                           ;LED-API.c: 101: char symbolArrowRight[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3},{6,
      +                          3},{7,3},{8,3},{7,4},{6,5},{5,7},{6,2},{5,1},{4,0}};
  1793  000078  EE22  F088         	lfsr	2,drawSymbol@F3239
  1794  00007C  EE11  F081         	lfsr	1,drawSymbol@symbolArrowRight
  1795  000080  0E1D               	movlw	29
  1796  000082                     u2621:
  1797  000082  CFDB FFE3          	movff	plusw2,plusw1
  1798  000086  06E8               	decf	wreg,f,c
  1799  000088  E2FC               	bc	u2621
  1800                           
  1801                           ;LED-API.c: 102: char symbolArrowLeft[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3}, {6,
      +                          3},{7,3},{8,3}, {1,4},{2,5},{3,6},{1,2},{2,1},{3,0}};
  1802  00008A  EE22  F0A6         	lfsr	2,drawSymbol@F3242
  1803  00008E  EE12  F000         	lfsr	1,drawSymbol@symbolArrowLeft
  1804  000092  0E1D               	movlw	29
  1805  000094                     u2631:
  1806  000094  CFDB FFE3          	movff	plusw2,plusw1
  1807  000098  06E8               	decf	wreg,f,c
  1808  00009A  E2FC               	bc	u2631
  1809                           
  1810                           ;LED-API.c: 104: switch(chosenSymbol)
  1811  00009C  D11D               	goto	l2722
  1812  00009E                     l2636:
  1813                           
  1814                           ;LED-API.c: 109: for(unsigned char i = 0; i < 12; i++)
  1815  00009E  0E00               	movlw	0
  1816  0000A0  0102               	movlb	2	; () banked
  1817  0000A2  6F7F               	movwf	drawSymbol@i& (0+255),b
  1818  0000A4                     l2638:
  1819                           
  1820                           ; BSR set to: 2
  1821  0000A4  0E0B               	movlw	11
  1822  0000A6  0102               	movlb	2	; () banked
  1823  0000A8  657F               	cpfsgt	drawSymbol@i& (0+255),b
  1824  0000AA  D001               	goto	l2642
  1825  0000AC  0012               	return	
  1826  0000AE                     l2642:
  1827                           
  1828                           ; BSR set to: 2
  1829                           ;LED-API.c: 110: {
  1830                           ;LED-API.c: 111: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  1831  0000AE  0102               	movlb	2	; () banked
  1832  0000B0  517F               	movf	drawSymbol@i& (0+255),w,b
  1833  0000B2  0D02               	mullw	2
  1834  0000B4  0EC4               	movlw	low drawSymbol@symbolOne
  1835  0000B6  24F3               	addwf	prodl,w,c
  1836  0000B8  6ED9               	movwf	fsr2l,c
  1837  0000BA  0E03               	movlw	high drawSymbol@symbolOne
  1838  0000BC  20F4               	addwfc	prodh,w,c
  1839  0000BE  6EDA               	movwf	fsr2h,c
  1840  0000C0  50DF               	movf	indf2,w,c
  1841  0000C2  0101               	movlb	1	; () banked
  1842  0000C4  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  1843  0000C6  0101               	movlb	1	; () banked
  1844  0000C8  6F38               	movwf	on@row& (0+255),b
  1845  0000CA  0102               	movlb	2	; () banked
  1846  0000CC  517F               	movf	drawSymbol@i& (0+255),w,b
  1847  0000CE  0D02               	mullw	2
  1848  0000D0  0E01               	movlw	1
  1849  0000D2  26F3               	addwf	prodl,f,c
  1850  0000D4  0E00               	movlw	0
  1851  0000D6  22F4               	addwfc	prodh,f,c
  1852  0000D8  0EC4               	movlw	low drawSymbol@symbolOne
  1853  0000DA  24F3               	addwf	prodl,w,c
  1854  0000DC  6ED9               	movwf	fsr2l,c
  1855  0000DE  0E03               	movlw	high drawSymbol@symbolOne
  1856  0000E0  20F4               	addwfc	prodh,w,c
  1857  0000E2  6EDA               	movwf	fsr2h,c
  1858  0000E4  50DF               	movf	indf2,w,c
  1859  0000E6  EC14  F007         	call	_on
  1860  0000EA  0102               	movlb	2	; () banked
  1861  0000EC  2B7F               	incf	drawSymbol@i& (0+255),f,b
  1862  0000EE  D7DA               	goto	l2638
  1863  0000F0                     l2648:
  1864                           
  1865                           ; BSR set to: 2
  1866                           ;LED-API.c: 117: for(unsigned char i = 0; i < 14; i++)
  1867  0000F0  0E00               	movlw	0
  1868  0000F2  0102               	movlb	2	; () banked
  1869  0000F4  6F80               	movwf	drawSymbol@i_82& (0+255),b
  1870  0000F6                     l2650:
  1871                           
  1872                           ; BSR set to: 2
  1873  0000F6  0E0D               	movlw	13
  1874  0000F8  0102               	movlb	2	; () banked
  1875  0000FA  6580               	cpfsgt	drawSymbol@i_82& (0+255),b
  1876  0000FC  D001               	goto	l2654
  1877  0000FE  0012               	return	
  1878  000100                     l2654:
  1879                           
  1880                           ; BSR set to: 2
  1881                           ;LED-API.c: 118: {
  1882                           ;LED-API.c: 119: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  1883  000100  0102               	movlb	2	; () banked
  1884  000102  5180               	movf	drawSymbol@i_82& (0+255),w,b
  1885  000104  0D02               	mullw	2
  1886  000106  0E62               	movlw	low drawSymbol@symbolTwo
  1887  000108  24F3               	addwf	prodl,w,c
  1888  00010A  6ED9               	movwf	fsr2l,c
  1889  00010C  0E02               	movlw	high drawSymbol@symbolTwo
  1890  00010E  20F4               	addwfc	prodh,w,c
  1891  000110  6EDA               	movwf	fsr2h,c
  1892  000112  50DF               	movf	indf2,w,c
  1893  000114  0101               	movlb	1	; () banked
  1894  000116  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  1895  000118  0101               	movlb	1	; () banked
  1896  00011A  6F38               	movwf	on@row& (0+255),b
  1897  00011C  0102               	movlb	2	; () banked
  1898  00011E  5180               	movf	drawSymbol@i_82& (0+255),w,b
  1899  000120  0D02               	mullw	2
  1900  000122  0E01               	movlw	1
  1901  000124  26F3               	addwf	prodl,f,c
  1902  000126  0E00               	movlw	0
  1903  000128  22F4               	addwfc	prodh,f,c
  1904  00012A  0E62               	movlw	low drawSymbol@symbolTwo
  1905  00012C  24F3               	addwf	prodl,w,c
  1906  00012E  6ED9               	movwf	fsr2l,c
  1907  000130  0E02               	movlw	high drawSymbol@symbolTwo
  1908  000132  20F4               	addwfc	prodh,w,c
  1909  000134  6EDA               	movwf	fsr2h,c
  1910  000136  50DF               	movf	indf2,w,c
  1911  000138  EC14  F007         	call	_on
  1912  00013C  0102               	movlb	2	; () banked
  1913  00013E  2B80               	incf	drawSymbol@i_82& (0+255),f,b
  1914  000140  D7DA               	goto	l2650
  1915  000142                     l2660:
  1916                           
  1917                           ; BSR set to: 2
  1918                           ;LED-API.c: 125: for(unsigned char i = 0; i < 12; i++)
  1919  000142  0E00               	movlw	0
  1920  000144  0102               	movlb	2	; () banked
  1921  000146  6F81               	movwf	drawSymbol@i_83& (0+255),b
  1922  000148                     l2662:
  1923                           
  1924                           ; BSR set to: 2
  1925  000148  0E0B               	movlw	11
  1926  00014A  0102               	movlb	2	; () banked
  1927  00014C  6581               	cpfsgt	drawSymbol@i_83& (0+255),b
  1928  00014E  D001               	goto	l2666
  1929  000150  0012               	return	
  1930  000152                     l2666:
  1931                           
  1932                           ; BSR set to: 2
  1933                           ;LED-API.c: 126: {
  1934                           ;LED-API.c: 127: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  1935  000152  0102               	movlb	2	; () banked
  1936  000154  5181               	movf	drawSymbol@i_83& (0+255),w,b
  1937  000156  0D02               	mullw	2
  1938  000158  0EDC               	movlw	low drawSymbol@symbolThree
  1939  00015A  24F3               	addwf	prodl,w,c
  1940  00015C  6ED9               	movwf	fsr2l,c
  1941  00015E  0E03               	movlw	high drawSymbol@symbolThree
  1942  000160  20F4               	addwfc	prodh,w,c
  1943  000162  6EDA               	movwf	fsr2h,c
  1944  000164  50DF               	movf	indf2,w,c
  1945  000166  0101               	movlb	1	; () banked
  1946  000168  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  1947  00016A  0101               	movlb	1	; () banked
  1948  00016C  6F38               	movwf	on@row& (0+255),b
  1949  00016E  0102               	movlb	2	; () banked
  1950  000170  5181               	movf	drawSymbol@i_83& (0+255),w,b
  1951  000172  0D02               	mullw	2
  1952  000174  0E01               	movlw	1
  1953  000176  26F3               	addwf	prodl,f,c
  1954  000178  0E00               	movlw	0
  1955  00017A  22F4               	addwfc	prodh,f,c
  1956  00017C  0EDC               	movlw	low drawSymbol@symbolThree
  1957  00017E  24F3               	addwf	prodl,w,c
  1958  000180  6ED9               	movwf	fsr2l,c
  1959  000182  0E03               	movlw	high drawSymbol@symbolThree
  1960  000184  20F4               	addwfc	prodh,w,c
  1961  000186  6EDA               	movwf	fsr2h,c
  1962  000188  50DF               	movf	indf2,w,c
  1963  00018A  EC14  F007         	call	_on
  1964  00018E  0102               	movlb	2	; () banked
  1965  000190  2B81               	incf	drawSymbol@i_83& (0+255),f,b
  1966  000192  D7DA               	goto	l2662
  1967  000194                     l2672:
  1968                           
  1969                           ; BSR set to: 2
  1970                           ;LED-API.c: 133: for(unsigned char i = 0; i < 34; i++)
  1971  000194  0E00               	movlw	0
  1972  000196  0102               	movlb	2	; () banked
  1973  000198  6F82               	movwf	drawSymbol@i_84& (0+255),b
  1974  00019A                     l2674:
  1975                           
  1976                           ; BSR set to: 2
  1977  00019A  0E21               	movlw	33
  1978  00019C  0102               	movlb	2	; () banked
  1979  00019E  6582               	cpfsgt	drawSymbol@i_84& (0+255),b
  1980  0001A0  D001               	goto	l2678
  1981  0001A2  0012               	return	
  1982  0001A4                     l2678:
  1983                           
  1984                           ; BSR set to: 2
  1985                           ;LED-API.c: 134: {
  1986                           ;LED-API.c: 135: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  1987  0001A4  0102               	movlb	2	; () banked
  1988  0001A6  5182               	movf	drawSymbol@i_84& (0+255),w,b
  1989  0001A8  0D02               	mullw	2
  1990  0001AA  0E3D               	movlw	low drawSymbol@symbolPlay
  1991  0001AC  24F3               	addwf	prodl,w,c
  1992  0001AE  6ED9               	movwf	fsr2l,c
  1993  0001B0  0E01               	movlw	high drawSymbol@symbolPlay
  1994  0001B2  20F4               	addwfc	prodh,w,c
  1995  0001B4  6EDA               	movwf	fsr2h,c
  1996  0001B6  50DF               	movf	indf2,w,c
  1997  0001B8  0101               	movlb	1	; () banked
  1998  0001BA  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  1999  0001BC  0101               	movlb	1	; () banked
  2000  0001BE  6F38               	movwf	on@row& (0+255),b
  2001  0001C0  0102               	movlb	2	; () banked
  2002  0001C2  5182               	movf	drawSymbol@i_84& (0+255),w,b
  2003  0001C4  0D02               	mullw	2
  2004  0001C6  0E01               	movlw	1
  2005  0001C8  26F3               	addwf	prodl,f,c
  2006  0001CA  0E00               	movlw	0
  2007  0001CC  22F4               	addwfc	prodh,f,c
  2008  0001CE  0E3D               	movlw	low drawSymbol@symbolPlay
  2009  0001D0  24F3               	addwf	prodl,w,c
  2010  0001D2  6ED9               	movwf	fsr2l,c
  2011  0001D4  0E01               	movlw	high drawSymbol@symbolPlay
  2012  0001D6  20F4               	addwfc	prodh,w,c
  2013  0001D8  6EDA               	movwf	fsr2h,c
  2014  0001DA  50DF               	movf	indf2,w,c
  2015  0001DC  EC14  F007         	call	_on
  2016  0001E0  0102               	movlb	2	; () banked
  2017  0001E2  2B82               	incf	drawSymbol@i_84& (0+255),f,b
  2018  0001E4  D7DA               	goto	l2674
  2019  0001E6                     l2684:
  2020                           
  2021                           ; BSR set to: 2
  2022                           ;LED-API.c: 141: for(unsigned char i = 0; i < 34; i++)
  2023  0001E6  0E00               	movlw	0
  2024  0001E8  0102               	movlb	2	; () banked
  2025  0001EA  6F83               	movwf	drawSymbol@i_85& (0+255),b
  2026  0001EC                     l2686:
  2027                           
  2028                           ; BSR set to: 2
  2029  0001EC  0E21               	movlw	33
  2030  0001EE  0102               	movlb	2	; () banked
  2031  0001F0  6583               	cpfsgt	drawSymbol@i_85& (0+255),b
  2032  0001F2  D001               	goto	l2690
  2033  0001F4  0012               	return	
  2034  0001F6                     l2690:
  2035                           
  2036                           ; BSR set to: 2
  2037                           ;LED-API.c: 142: {
  2038                           ;LED-API.c: 143: on(symbolGo[i][1], symbolGo[i][0]);
  2039  0001F6  0102               	movlb	2	; () banked
  2040  0001F8  5183               	movf	drawSymbol@i_85& (0+255),w,b
  2041  0001FA  0D02               	mullw	2
  2042  0001FC  0E1E               	movlw	low drawSymbol@symbolGo
  2043  0001FE  24F3               	addwf	prodl,w,c
  2044  000200  6ED9               	movwf	fsr2l,c
  2045  000202  0E02               	movlw	high drawSymbol@symbolGo
  2046  000204  20F4               	addwfc	prodh,w,c
  2047  000206  6EDA               	movwf	fsr2h,c
  2048  000208  50DF               	movf	indf2,w,c
  2049  00020A  0101               	movlb	1	; () banked
  2050  00020C  6F38               	movwf	on@row& (0+255),b
  2051  00020E  0102               	movlb	2	; () banked
  2052  000210  5183               	movf	drawSymbol@i_85& (0+255),w,b
  2053  000212  0D02               	mullw	2
  2054  000214  0E01               	movlw	1
  2055  000216  26F3               	addwf	prodl,f,c
  2056  000218  0E00               	movlw	0
  2057  00021A  22F4               	addwfc	prodh,f,c
  2058  00021C  0E1E               	movlw	low drawSymbol@symbolGo
  2059  00021E  24F3               	addwf	prodl,w,c
  2060  000220  6ED9               	movwf	fsr2l,c
  2061  000222  0E02               	movlw	high drawSymbol@symbolGo
  2062  000224  20F4               	addwfc	prodh,w,c
  2063  000226  6EDA               	movwf	fsr2h,c
  2064  000228  50DF               	movf	indf2,w,c
  2065  00022A  EC14  F007         	call	_on
  2066  00022E  0102               	movlb	2	; () banked
  2067  000230  2B83               	incf	drawSymbol@i_85& (0+255),f,b
  2068  000232  D7DC               	goto	l2686
  2069  000234                     l2696:
  2070                           
  2071                           ; BSR set to: 2
  2072                           ;LED-API.c: 147: for(unsigned char i = 0; i < 15; i++)
  2073  000234  0E00               	movlw	0
  2074  000236  0102               	movlb	2	; () banked
  2075  000238  6F84               	movwf	drawSymbol@i_86& (0+255),b
  2076  00023A                     l2698:
  2077                           
  2078                           ; BSR set to: 2
  2079  00023A  0E0E               	movlw	14
  2080  00023C  0102               	movlb	2	; () banked
  2081  00023E  6584               	cpfsgt	drawSymbol@i_86& (0+255),b
  2082  000240  D001               	goto	l2702
  2083  000242  0012               	return	
  2084  000244                     l2702:
  2085                           
  2086                           ; BSR set to: 2
  2087                           ;LED-API.c: 148: {
  2088                           ;LED-API.c: 149: on(symbolArrowLeft[i][1], symbolGo[i][0] + offSetX);
  2089  000244  0102               	movlb	2	; () banked
  2090  000246  5184               	movf	drawSymbol@i_86& (0+255),w,b
  2091  000248  0D02               	mullw	2
  2092  00024A  0E1E               	movlw	low drawSymbol@symbolGo
  2093  00024C  24F3               	addwf	prodl,w,c
  2094  00024E  6ED9               	movwf	fsr2l,c
  2095  000250  0E02               	movlw	high drawSymbol@symbolGo
  2096  000252  20F4               	addwfc	prodh,w,c
  2097  000254  6EDA               	movwf	fsr2h,c
  2098  000256  50DF               	movf	indf2,w,c
  2099  000258  0101               	movlb	1	; () banked
  2100  00025A  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  2101  00025C  0101               	movlb	1	; () banked
  2102  00025E  6F38               	movwf	on@row& (0+255),b
  2103  000260  0102               	movlb	2	; () banked
  2104  000262  5184               	movf	drawSymbol@i_86& (0+255),w,b
  2105  000264  0D02               	mullw	2
  2106  000266  0E01               	movlw	1
  2107  000268  26F3               	addwf	prodl,f,c
  2108  00026A  0E00               	movlw	0
  2109  00026C  22F4               	addwfc	prodh,f,c
  2110  00026E  0E00               	movlw	low drawSymbol@symbolArrowLeft
  2111  000270  24F3               	addwf	prodl,w,c
  2112  000272  6ED9               	movwf	fsr2l,c
  2113  000274  0E02               	movlw	high drawSymbol@symbolArrowLeft
  2114  000276  20F4               	addwfc	prodh,w,c
  2115  000278  6EDA               	movwf	fsr2h,c
  2116  00027A  50DF               	movf	indf2,w,c
  2117  00027C  EC14  F007         	call	_on
  2118  000280  0102               	movlb	2	; () banked
  2119  000282  2B84               	incf	drawSymbol@i_86& (0+255),f,b
  2120  000284  D7DA               	goto	l2698
  2121  000286                     l2708:
  2122                           
  2123                           ; BSR set to: 2
  2124                           ;LED-API.c: 153: for(unsigned char i = 0; i < 15; i++)
  2125  000286  0E00               	movlw	0
  2126  000288  0102               	movlb	2	; () banked
  2127  00028A  6F85               	movwf	drawSymbol@i_87& (0+255),b
  2128  00028C                     l2710:
  2129                           
  2130                           ; BSR set to: 2
  2131  00028C  0E0E               	movlw	14
  2132  00028E  0102               	movlb	2	; () banked
  2133  000290  6585               	cpfsgt	drawSymbol@i_87& (0+255),b
  2134  000292  D001               	goto	l2714
  2135  000294  0012               	return	
  2136  000296                     l2714:
  2137                           
  2138                           ; BSR set to: 2
  2139                           ;LED-API.c: 154: {
  2140                           ;LED-API.c: 155: on(symbolArrowRight[i][1], symbolGo[i][0]+ offSetX);
  2141  000296  0102               	movlb	2	; () banked
  2142  000298  5185               	movf	drawSymbol@i_87& (0+255),w,b
  2143  00029A  0D02               	mullw	2
  2144  00029C  0E1E               	movlw	low drawSymbol@symbolGo
  2145  00029E  24F3               	addwf	prodl,w,c
  2146  0002A0  6ED9               	movwf	fsr2l,c
  2147  0002A2  0E02               	movlw	high drawSymbol@symbolGo
  2148  0002A4  20F4               	addwfc	prodh,w,c
  2149  0002A6  6EDA               	movwf	fsr2h,c
  2150  0002A8  50DF               	movf	indf2,w,c
  2151  0002AA  0101               	movlb	1	; () banked
  2152  0002AC  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  2153  0002AE  0101               	movlb	1	; () banked
  2154  0002B0  6F38               	movwf	on@row& (0+255),b
  2155  0002B2  0102               	movlb	2	; () banked
  2156  0002B4  5185               	movf	drawSymbol@i_87& (0+255),w,b
  2157  0002B6  0D02               	mullw	2
  2158  0002B8  0E01               	movlw	1
  2159  0002BA  26F3               	addwf	prodl,f,c
  2160  0002BC  0E00               	movlw	0
  2161  0002BE  22F4               	addwfc	prodh,f,c
  2162  0002C0  0E81               	movlw	low drawSymbol@symbolArrowRight
  2163  0002C2  24F3               	addwf	prodl,w,c
  2164  0002C4  6ED9               	movwf	fsr2l,c
  2165  0002C6  0E01               	movlw	high drawSymbol@symbolArrowRight
  2166  0002C8  20F4               	addwfc	prodh,w,c
  2167  0002CA  6EDA               	movwf	fsr2h,c
  2168  0002CC  50DF               	movf	indf2,w,c
  2169  0002CE  EC14  F007         	call	_on
  2170  0002D2  0102               	movlb	2	; () banked
  2171  0002D4  2B85               	incf	drawSymbol@i_87& (0+255),f,b
  2172  0002D6  D7DA               	goto	l2710
  2173  0002D8                     l2722:
  2174  0002D8  0102               	movlb	2	; () banked
  2175  0002DA  517E               	movf	drawSymbol@chosenSymbol& (0+255),w,b
  2176                           
  2177                           ; Switch size 1, requested type "space"
  2178                           ; Number of cases is 7, Range of values is 1 to 7
  2179                           ; switch strategies available:
  2180                           ; Name         Instructions Cycles
  2181                           ; simple_byte           22    12 (average)
  2182                           ;	Chosen strategy is simple_byte
  2183  0002DC  0A01               	xorlw	1	; case 1
  2184  0002DE  B4D8               	btfsc	status,2,c
  2185  0002E0  D6DE               	goto	l2636
  2186  0002E2  0A03               	xorlw	3	; case 2
  2187  0002E4  B4D8               	btfsc	status,2,c
  2188  0002E6  D704               	goto	l2648
  2189  0002E8  0A01               	xorlw	1	; case 3
  2190  0002EA  B4D8               	btfsc	status,2,c
  2191  0002EC  D72A               	goto	l2660
  2192  0002EE  0A07               	xorlw	7	; case 4
  2193  0002F0  B4D8               	btfsc	status,2,c
  2194  0002F2  D750               	goto	l2672
  2195  0002F4  0A01               	xorlw	1	; case 5
  2196  0002F6  B4D8               	btfsc	status,2,c
  2197  0002F8  D776               	goto	l2684
  2198  0002FA  0A03               	xorlw	3	; case 6
  2199  0002FC  B4D8               	btfsc	status,2,c
  2200  0002FE  D79A               	goto	l2696
  2201  000300  0A01               	xorlw	1	; case 7
  2202  000302  A4D8               	btfss	status,2,c
  2203  000304  0012               	return	
  2204  000306  D7BF               	goto	l2708
  2205  000308                     __end_of_drawSymbol:
  2206                           	opt stack 0
  2207                           tblptru	equ	0xFF8
  2208                           tblptrh	equ	0xFF7
  2209                           tblptrl	equ	0xFF6
  2210                           tablat	equ	0xFF5
  2211                           prodh	equ	0xFF4
  2212                           prodl	equ	0xFF3
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           plusw1	equ	0xFE3
  2217                           fsr1l	equ	0xFE1
  2218                           indf2	equ	0xFDF
  2219                           postinc2	equ	0xFDE
  2220                           plusw2	equ	0xFDB
  2221                           fsr2h	equ	0xFDA
  2222                           fsr2l	equ	0xFD9
  2223                           status	equ	0xFD8
  2224                           
  2225 ;; *************** function _on *****************
  2226 ;; Defined at:
  2227 ;;		line 43 in file "Source/LED-API.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  column          1    wreg     unsigned char 
  2230 ;;  row             1   56[BANK1 ] unsigned char 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  column          1   59[BANK1 ] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2242 ;;      Params:         0       0       1       0       0       0       0
  2243 ;;      Locals:         0       0       1       0       0       0       0
  2244 ;;      Temps:          0       0       2       0       0       0       0
  2245 ;;      Totals:         0       0       4       0       0       0       0
  2246 ;;Total ram usage:        4 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    6
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_drawSymbol
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text8
  2257  000E28                     __ptext8:
  2258                           	opt stack 0
  2259  000E28                     _on:
  2260                           	opt stack 21
  2261                           
  2262                           ; BSR set to: 2
  2263                           ;incstack = 0
  2264                           ;on@column stored from wreg
  2265  000E28  0101               	movlb	1	; () banked
  2266  000E2A  6F3B               	movwf	on@column& (0+255),b
  2267                           
  2268                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  2269  000E2C  0E0F               	movlw	15
  2270  000E2E  0101               	movlb	1	; () banked
  2271  000E30  6538               	cpfsgt	on@row& (0+255),b
  2272  000E32  D001               	goto	l2514
  2273  000E34  0012               	return	
  2274  000E36                     l2514:
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  2278  000E36  0E07               	movlw	7
  2279  000E38  0101               	movlb	1	; () banked
  2280  000E3A  653B               	cpfsgt	on@column& (0+255),b
  2281  000E3C  D001               	goto	l2518
  2282  000E3E  0012               	return	
  2283  000E40                     l2518:
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;LED-API.c: 50: pixels[column][row] = 1;
  2287  000E40  0101               	movlb	1	; () banked
  2288  000E42  513B               	movf	on@column& (0+255),w,b
  2289  000E44  0D10               	mullw	16
  2290  000E46  0E00               	movlw	low _pixels
  2291  000E48  0101               	movlb	1	; () banked
  2292  000E4A  6F39               	movwf	??_on& (0+255),b
  2293  000E4C  0E03               	movlw	high _pixels
  2294  000E4E  0101               	movlb	1	; () banked
  2295  000E50  6F3A               	movwf	(??_on+1)& (0+255),b
  2296  000E52  50F3               	movf	prodl,w,c
  2297  000E54  0101               	movlb	1	; () banked
  2298  000E56  2739               	addwf	??_on& (0+255),f,b
  2299  000E58  50F4               	movf	prodh,w,c
  2300  000E5A  0101               	movlb	1	; () banked
  2301  000E5C  233A               	addwfc	(??_on+1)& (0+255),f,b
  2302  000E5E  0101               	movlb	1	; () banked
  2303  000E60  5138               	movf	on@row& (0+255),w,b
  2304  000E62  0D01               	mullw	1
  2305  000E64  50F3               	movf	prodl,w,c
  2306  000E66  0101               	movlb	1	; () banked
  2307  000E68  2539               	addwf	??_on& (0+255),w,b
  2308  000E6A  6ED9               	movwf	fsr2l,c
  2309  000E6C  50F4               	movf	prodh,w,c
  2310  000E6E  0101               	movlb	1	; () banked
  2311  000E70  213A               	addwfc	(??_on+1)& (0+255),w,b
  2312  000E72  6EDA               	movwf	fsr2h,c
  2313  000E74  0E01               	movlw	1
  2314  000E76  6EDF               	movwf	indf2,c
  2315                           
  2316                           ; BSR set to: 1
  2317  000E78  0012               	return		;funcret
  2318  000E7A                     __end_of_on:
  2319                           	opt stack 0
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           prodh	equ	0xFF4
  2325                           prodl	equ	0xFF3
  2326                           postinc0	equ	0xFEE
  2327                           wreg	equ	0xFE8
  2328                           postdec1	equ	0xFE5
  2329                           plusw1	equ	0xFE3
  2330                           fsr1l	equ	0xFE1
  2331                           indf2	equ	0xFDF
  2332                           postinc2	equ	0xFDE
  2333                           plusw2	equ	0xFDB
  2334                           fsr2h	equ	0xFDA
  2335                           fsr2l	equ	0xFD9
  2336                           status	equ	0xFD8
  2337                           
  2338 ;; *************** function _initializeLED *****************
  2339 ;; Defined at:
  2340 ;;		line 31 in file "Source/LED-API.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2354 ;;      Params:         0       0       0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0
  2357 ;;      Totals:         0       0       0       0       0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    7
  2361 ;; This function calls:
  2362 ;;		_turnAllOff
  2363 ;; This function is called by:
  2364 ;;		_main
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text9
  2369  0010B4                     __ptext9:
  2370                           	opt stack 0
  2371  0010B4                     _initializeLED:
  2372                           	opt stack 23
  2373                           
  2374                           ;LED-API.c: 32: TRISA = 0b00000000;
  2375                           
  2376                           ; BSR set to: 1
  2377                           ;incstack = 0
  2378  0010B4  0E00               	movlw	0
  2379  0010B6  6E92               	movwf	3986,c	;volatile
  2380                           
  2381                           ;LED-API.c: 33: TRISC = 0b00000000;
  2382  0010B8  0E00               	movlw	0
  2383  0010BA  6E94               	movwf	3988,c	;volatile
  2384                           
  2385                           ;LED-API.c: 34: TRISD = 0b00000000;
  2386  0010BC  0E00               	movlw	0
  2387  0010BE  6E95               	movwf	3989,c	;volatile
  2388                           
  2389                           ;LED-API.c: 35: LATA = 0b00000000;
  2390  0010C0  0E00               	movlw	0
  2391  0010C2  6E89               	movwf	3977,c	;volatile
  2392                           
  2393                           ;LED-API.c: 36: LATC = 0b00000000;
  2394  0010C4  0E00               	movlw	0
  2395  0010C6  6E8B               	movwf	3979,c	;volatile
  2396                           
  2397                           ;LED-API.c: 37: LATD = 0b00000000;
  2398  0010C8  0E00               	movlw	0
  2399  0010CA  6E8C               	movwf	3980,c	;volatile
  2400                           
  2401                           ;LED-API.c: 40: turnAllOff();
  2402  0010CC  EC57  F006         	call	_turnAllOff	;wreg free
  2403  0010D0  0012               	return		;funcret
  2404  0010D2                     __end_of_initializeLED:
  2405                           	opt stack 0
  2406                           tblptru	equ	0xFF8
  2407                           tblptrh	equ	0xFF7
  2408                           tblptrl	equ	0xFF6
  2409                           tablat	equ	0xFF5
  2410                           prodh	equ	0xFF4
  2411                           prodl	equ	0xFF3
  2412                           postinc0	equ	0xFEE
  2413                           wreg	equ	0xFE8
  2414                           postdec1	equ	0xFE5
  2415                           plusw1	equ	0xFE3
  2416                           fsr1l	equ	0xFE1
  2417                           indf2	equ	0xFDF
  2418                           postinc2	equ	0xFDE
  2419                           plusw2	equ	0xFDB
  2420                           fsr2h	equ	0xFDA
  2421                           fsr2l	equ	0xFD9
  2422                           status	equ	0xFD8
  2423                           
  2424 ;; *************** function _turnAllOff *****************
  2425 ;; Defined at:
  2426 ;;		line 161 in file "Source/LED-API.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  j               1   59[BANK1 ] unsigned char 
  2431 ;;  i               1   58[BANK1 ] unsigned char 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2441 ;;      Params:         0       0       0       0       0       0       0
  2442 ;;      Locals:         0       0       2       0       0       0       0
  2443 ;;      Temps:          0       0       2       0       0       0       0
  2444 ;;      Totals:         0       0       4       0       0       0       0
  2445 ;;Total ram usage:        4 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    6
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_initializeLED
  2452 ;;		_startPong
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text10
  2457  000CAE                     __ptext10:
  2458                           	opt stack 0
  2459  000CAE                     _turnAllOff:
  2460                           	opt stack 22
  2461                           
  2462                           ;LED-API.c: 164: for (unsigned char i = 0; i < 8; i++) {
  2463                           
  2464                           ;incstack = 0
  2465  000CAE  0E00               	movlw	0
  2466  000CB0  0101               	movlb	1	; () banked
  2467  000CB2  6F3A               	movwf	turnAllOff@i& (0+255),b
  2468  000CB4                     l2614:
  2469                           
  2470                           ; BSR set to: 1
  2471  000CB4  0E07               	movlw	7
  2472  000CB6  0101               	movlb	1	; () banked
  2473  000CB8  653A               	cpfsgt	turnAllOff@i& (0+255),b
  2474  000CBA  D001               	goto	l2618
  2475  000CBC  0012               	return	
  2476  000CBE                     l2618:
  2477                           
  2478                           ; BSR set to: 1
  2479                           ;LED-API.c: 165: for (unsigned char j = 0; j < 16; j++) {
  2480  000CBE  0E00               	movlw	0
  2481  000CC0  0101               	movlb	1	; () banked
  2482  000CC2  6F3B               	movwf	turnAllOff@j& (0+255),b
  2483  000CC4                     l2620:
  2484                           
  2485                           ; BSR set to: 1
  2486  000CC4  0E0F               	movlw	15
  2487  000CC6  0101               	movlb	1	; () banked
  2488  000CC8  653B               	cpfsgt	turnAllOff@j& (0+255),b
  2489  000CCA  D001               	goto	l2624
  2490  000CCC  D01F               	goto	l2630
  2491  000CCE                     l2624:
  2492                           
  2493                           ; BSR set to: 1
  2494                           ;LED-API.c: 166: pixels[i][j] = 0;
  2495  000CCE  0101               	movlb	1	; () banked
  2496  000CD0  513A               	movf	turnAllOff@i& (0+255),w,b
  2497  000CD2  0D10               	mullw	16
  2498  000CD4  0E00               	movlw	low _pixels
  2499  000CD6  0101               	movlb	1	; () banked
  2500  000CD8  6F38               	movwf	??_turnAllOff& (0+255),b
  2501  000CDA  0E03               	movlw	high _pixels
  2502  000CDC  0101               	movlb	1	; () banked
  2503  000CDE  6F39               	movwf	(??_turnAllOff+1)& (0+255),b
  2504  000CE0  50F3               	movf	prodl,w,c
  2505  000CE2  0101               	movlb	1	; () banked
  2506  000CE4  2738               	addwf	??_turnAllOff& (0+255),f,b
  2507  000CE6  50F4               	movf	prodh,w,c
  2508  000CE8  0101               	movlb	1	; () banked
  2509  000CEA  2339               	addwfc	(??_turnAllOff+1)& (0+255),f,b
  2510  000CEC  0101               	movlb	1	; () banked
  2511  000CEE  513B               	movf	turnAllOff@j& (0+255),w,b
  2512  000CF0  0D01               	mullw	1
  2513  000CF2  50F3               	movf	prodl,w,c
  2514  000CF4  0101               	movlb	1	; () banked
  2515  000CF6  2538               	addwf	??_turnAllOff& (0+255),w,b
  2516  000CF8  6ED9               	movwf	fsr2l,c
  2517  000CFA  50F4               	movf	prodh,w,c
  2518  000CFC  0101               	movlb	1	; () banked
  2519  000CFE  2139               	addwfc	(??_turnAllOff+1)& (0+255),w,b
  2520  000D00  6EDA               	movwf	fsr2h,c
  2521  000D02  0E00               	movlw	0
  2522  000D04  6EDF               	movwf	indf2,c
  2523                           
  2524                           ; BSR set to: 1
  2525  000D06  0101               	movlb	1	; () banked
  2526  000D08  2B3B               	incf	turnAllOff@j& (0+255),f,b
  2527  000D0A  D7DC               	goto	l2620
  2528  000D0C                     l2630:
  2529                           
  2530                           ; BSR set to: 1
  2531  000D0C  0101               	movlb	1	; () banked
  2532  000D0E  2B3A               	incf	turnAllOff@i& (0+255),f,b
  2533  000D10  D7D1               	goto	l2614
  2534  000D12                     __end_of_turnAllOff:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           prodh	equ	0xFF4
  2541                           prodl	equ	0xFF3
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           postdec1	equ	0xFE5
  2545                           plusw1	equ	0xFE3
  2546                           fsr1l	equ	0xFE1
  2547                           indf2	equ	0xFDF
  2548                           postinc2	equ	0xFDE
  2549                           plusw2	equ	0xFDB
  2550                           fsr2h	equ	0xFDA
  2551                           fsr2l	equ	0xFD9
  2552                           status	equ	0xFD8
  2553                           
  2554 ;; *************** function _initialize *****************
  2555 ;; Defined at:
  2556 ;;		line 97 in file "main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2570 ;;      Params:         0       0       0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0
  2573 ;;      Totals:         0       0       0       0       0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    6
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text11
  2585  000DCE                     __ptext11:
  2586                           	opt stack 0
  2587  000DCE                     _initialize:
  2588                           	opt stack 24
  2589                           
  2590                           ;main.c: 99: OSCTUNEbits.PLLEN = 1;
  2591                           
  2592                           ; BSR set to: 1
  2593                           ;incstack = 0
  2594  000DCE  8C9B               	bsf	3995,6,c	;volatile
  2595                           
  2596                           ;main.c: 100: OSCTUNEbits.TUN = 011111;
  2597  000DD0  809B               	bsf	3995,0,c	;volatile
  2598  000DD2  929B               	bcf	3995,1,c	;volatile
  2599  000DD4  949B               	bcf	3995,2,c	;volatile
  2600  000DD6  869B               	bsf	3995,3,c	;volatile
  2601  000DD8  989B               	bcf	3995,4,c	;volatile
  2602                           
  2603                           ;main.c: 102: OSCCONbits.SCS = 00;
  2604  000DDA  0EFC               	movlw	-4
  2605  000DDC  16D3               	andwf	4051,f,c	;volatile
  2606                           
  2607                           ;main.c: 103: OSCCONbits.IRCF = 111;
  2608  000DDE  88D3               	bsf	4051,4,c	;volatile
  2609  000DE0  8AD3               	bsf	4051,5,c	;volatile
  2610  000DE2  8CD3               	bsf	4051,6,c	;volatile
  2611                           
  2612                           ;main.c: 105: PLLEN = 1;
  2613  000DE4  8C9B               	bsf	3995,6,c	;volatile
  2614                           
  2615                           ;main.c: 108: GIE = 1;
  2616  000DE6  8EF2               	bsf	intcon,7,c	;volatile
  2617                           
  2618                           ;main.c: 109: PEIE = 1;
  2619  000DE8  8CF2               	bsf	intcon,6,c	;volatile
  2620                           
  2621                           ;main.c: 112: TRISBbits.TRISB0 = 1;
  2622  000DEA  8093               	bsf	3987,0,c	;volatile
  2623                           
  2624                           ;main.c: 113: TRISBbits.TRISB1 = 1;
  2625  000DEC  8293               	bsf	3987,1,c	;volatile
  2626                           
  2627                           ;main.c: 114: ADCON2bits.ADFM = 1;
  2628  000DEE  8EC0               	bsf	4032,7,c	;volatile
  2629                           
  2630                           ;main.c: 115: ADCON2bits.ADCS = 010;
  2631  000DF0  90C0               	bcf	4032,0,c	;volatile
  2632  000DF2  92C0               	bcf	4032,1,c	;volatile
  2633  000DF4  94C0               	bcf	4032,2,c	;volatile
  2634                           
  2635                           ;main.c: 116: ADCON2bits.ACQT = 111;
  2636  000DF6  86C0               	bsf	4032,3,c	;volatile
  2637  000DF8  88C0               	bsf	4032,4,c	;volatile
  2638  000DFA  8AC0               	bsf	4032,5,c	;volatile
  2639                           
  2640                           ;main.c: 117: ADCON1bits.VCFG0 = 0;
  2641  000DFC  98C1               	bcf	4033,4,c	;volatile
  2642                           
  2643                           ;main.c: 118: ADCON1bits.VCFG1 = 0;
  2644  000DFE  9AC1               	bcf	4033,5,c	;volatile
  2645                           
  2646                           ;main.c: 119: ADCON1bits.PCFG = 0000;
  2647  000E00  90C1               	bcf	4033,0,c	;volatile
  2648  000E02  92C1               	bcf	4033,1,c	;volatile
  2649  000E04  94C1               	bcf	4033,2,c	;volatile
  2650  000E06  96C1               	bcf	4033,3,c	;volatile
  2651                           
  2652                           ;main.c: 120: ADCON0bits.CHS = 1100;
  2653  000E08  50C2               	movf	4034,w,c	;volatile
  2654  000E0A  0BC3               	andlw	-61
  2655  000E0C  0930               	iorlw	48
  2656  000E0E  6EC2               	movwf	4034,c	;volatile
  2657                           
  2658                           ;main.c: 121: ADCON0bits.ADON = 1;
  2659  000E10  80C2               	bsf	4034,0,c	;volatile
  2660                           
  2661                           ;main.c: 122: ADIE = 1;
  2662  000E12  8C9D               	bsf	3997,6,c	;volatile
  2663                           
  2664                           ;main.c: 125: T0PS0 = 1;
  2665  000E14  80D5               	bsf	4053,0,c	;volatile
  2666                           
  2667                           ;main.c: 126: T0PS1 = 0;
  2668  000E16  92D5               	bcf	4053,1,c	;volatile
  2669                           
  2670                           ;main.c: 127: T0PS2 = 1;
  2671  000E18  84D5               	bsf	4053,2,c	;volatile
  2672                           
  2673                           ;main.c: 128: PSA = 0;
  2674  000E1A  96D5               	bcf	4053,3,c	;volatile
  2675                           
  2676                           ;main.c: 129: T0CS = 0;
  2677  000E1C  9AD5               	bcf	4053,5,c	;volatile
  2678                           
  2679                           ;main.c: 130: T08BIT = 1;
  2680  000E1E  8CD5               	bsf	4053,6,c	;volatile
  2681                           
  2682                           ;main.c: 131: TMR0IE = 1;
  2683  000E20  8AF2               	bsf	intcon,5,c	;volatile
  2684                           
  2685                           ;main.c: 132: TMR0IF = 0;
  2686  000E22  94F2               	bcf	intcon,2,c	;volatile
  2687                           
  2688                           ;main.c: 134: TMR0ON = 0;
  2689  000E24  9ED5               	bcf	4053,7,c	;volatile
  2690  000E26  0012               	return		;funcret
  2691  000E28                     __end_of_initialize:
  2692                           	opt stack 0
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           intcon	equ	0xFF2
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           postdec1	equ	0xFE5
  2703                           plusw1	equ	0xFE3
  2704                           fsr1l	equ	0xFE1
  2705                           indf2	equ	0xFDF
  2706                           postinc2	equ	0xFDE
  2707                           plusw2	equ	0xFDB
  2708                           fsr2h	equ	0xFDA
  2709                           fsr2l	equ	0xFD9
  2710                           status	equ	0xFD8
  2711                           
  2712 ;; *************** function _ISR *****************
  2713 ;; Defined at:
  2714 ;;		line 371 in file "main.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  ADvalue         2   53[BANK1 ] unsigned short 
  2719 ;;  value           1   55[BANK1 ] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2729 ;;      Params:         0       0       0       0       0       0       0
  2730 ;;      Locals:         0       0       3       0       0       0       0
  2731 ;;      Temps:         14       0       0       0       0       0       0
  2732 ;;      Totals:        14       0       3       0       0       0       0
  2733 ;;Total ram usage:       17 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    5
  2736 ;; This function calls:
  2737 ;;		___lwdiv
  2738 ;;		_checkNextPosition
  2739 ;;		_writePong
  2740 ;; This function is called by:
  2741 ;;		Interrupt level 2
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	intcode
  2746  000008                     __pintcode:
  2747                           	opt stack 0
  2748  000008                     _ISR:
  2749                           	opt stack 21
  2750                           
  2751                           ;incstack = 0
  2752  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2753  00000A  CFFA F06F          	movff	pclath,??_ISR
  2754  00000E  CFFB F070          	movff	pclatu,??_ISR+1
  2755  000012  ED01  F004         	call	int_func,f	;refresh shadow registers
  2756                           pclatu	equ	0xFFB
  2757                           pclath	equ	0xFFA
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           postdec1	equ	0xFE5
  2768                           plusw1	equ	0xFE3
  2769                           fsr1l	equ	0xFE1
  2770                           indf2	equ	0xFDF
  2771                           postinc2	equ	0xFDE
  2772                           plusw2	equ	0xFDB
  2773                           fsr2h	equ	0xFDA
  2774                           fsr2l	equ	0xFD9
  2775                           status	equ	0xFD8
  2776                           
  2777                           	psect	intcode_body
  2778  000802                     __pintcode_body:
  2779                           	opt stack 21
  2780  000802                     int_func:
  2781                           	opt stack 21
  2782  000802  0006               	pop		; remove dummy address from shadow register refresh
  2783  000804  CFE9 F071          	movff	fsr0l,??_ISR+2
  2784  000808  CFEA F072          	movff	fsr0h,??_ISR+3
  2785  00080C  CFE1 F073          	movff	fsr1l,??_ISR+4
  2786  000810  CFE2 F074          	movff	fsr1h,??_ISR+5
  2787  000814  CFD9 F075          	movff	fsr2l,??_ISR+6
  2788  000818  CFDA F076          	movff	fsr2h,??_ISR+7
  2789  00081C  CFF3 F077          	movff	prodl,??_ISR+8
  2790  000820  CFF4 F078          	movff	prodh,??_ISR+9
  2791  000824  CFF6 F079          	movff	tblptrl,??_ISR+10
  2792  000828  CFF7 F07A          	movff	tblptrh,??_ISR+11
  2793  00082C  CFF8 F07B          	movff	tblptru,??_ISR+12
  2794  000830  CFF5 F07C          	movff	tablat,??_ISR+13
  2795                           
  2796                           ;main.c: 372: if (TMR0IE && TMR0IF) {
  2797  000834  BAF2               	btfsc	intcon,5,c	;volatile
  2798  000836  A4F2               	btfss	intcon,2,c	;volatile
  2799  000838  D016               	goto	i2l3018
  2800                           
  2801                           ;main.c: 374: TMR0IF = 0;
  2802  00083A  94F2               	bcf	intcon,2,c	;volatile
  2803                           
  2804                           ;main.c: 376: if (_timerCounter > _speed) {
  2805  00083C  0101               	movlb	1	; () banked
  2806  00083E  51C6               	movf	__timerCounter& (0+255),w,b
  2807  000840  5C7D               	subwf	__speed,w,c
  2808  000842  0101               	movlb	1	; () banked
  2809  000844  51C7               	movf	(__timerCounter+1)& (0+255),w,b
  2810  000846  587E               	subwfb	__speed+1,w,c
  2811  000848  B0D8               	btfsc	status,0,c
  2812  00084A  D007               	goto	i2l3012
  2813                           
  2814                           ; BSR set to: 1
  2815                           ;main.c: 377: checkNextPosition();
  2816  00084C  ECEC  F002         	call	_checkNextPosition	;wreg free
  2817                           
  2818                           ;main.c: 378: _timerCounter = 0;
  2819  000850  0E00               	movlw	0
  2820  000852  0101               	movlb	1	; () banked
  2821  000854  6FC7               	movwf	(__timerCounter+1)& (0+255),b
  2822  000856  0E00               	movlw	0
  2823  000858  6FC6               	movwf	__timerCounter& (0+255),b
  2824  00085A                     i2l3012:
  2825                           
  2826                           ; BSR set to: 1
  2827                           ;main.c: 379: }
  2828                           ;main.c: 381: _timerCounter++;
  2829  00085A  0101               	movlb	1	; () banked
  2830  00085C  4BC6               	infsnz	__timerCounter& (0+255),f,b
  2831  00085E  2BC7               	incf	(__timerCounter+1)& (0+255),f,b
  2832                           
  2833                           ; BSR set to: 1
  2834                           ;main.c: 382: writePong();
  2835  000860  EC72  F005         	call	_writePong	;wreg free
  2836                           
  2837                           ;main.c: 385: ADCON0bits.GODONE = 1;
  2838  000864  82C2               	bsf	4034,1,c	;volatile
  2839  000866                     i2l3018:
  2840                           
  2841                           ;main.c: 387: }
  2842                           ;main.c: 389: if (ADIE && ADIF) {
  2843  000866  BC9D               	btfsc	3997,6,c	;volatile
  2844  000868  AC9E               	btfss	3998,6,c	;volatile
  2845  00086A  D035               	goto	i2l296
  2846                           
  2847                           ;main.c: 391: ADIF = 0;
  2848  00086C  9C9E               	bcf	3998,6,c	;volatile
  2849                           
  2850                           ;main.c: 393: unsigned short ADvalue = ADRES;
  2851  00086E  CFC3 F135          	movff	4035,ISR@ADvalue	;volatile
  2852  000872  CFC4 F136          	movff	4036,ISR@ADvalue+1	;volatile
  2853                           
  2854                           ;main.c: 394: unsigned char value = (ADvalue / 85);
  2855  000876  C135  F001         	movff	ISR@ADvalue,___lwdiv@dividend
  2856  00087A  C136  F002         	movff	ISR@ADvalue+1,___lwdiv@dividend+1
  2857  00087E  0E00               	movlw	0
  2858  000880  6E04               	movwf	___lwdiv@divisor+1,c
  2859  000882  0E55               	movlw	85
  2860  000884  6E03               	movwf	___lwdiv@divisor,c
  2861  000886  EC3D  F007         	call	___lwdiv	;wreg free
  2862  00088A  5001               	movf	?___lwdiv,w,c
  2863  00088C  0101               	movlb	1	; () banked
  2864  00088E  6F37               	movwf	ISR@value& (0+255),b
  2865                           
  2866                           ; BSR set to: 1
  2867                           ;main.c: 397: if (ADCON0bits.CHS == 12) {
  2868  000890  30C2               	rrcf	4034,w,c	;volatile
  2869  000892  32E8               	rrcf	wreg,f,c
  2870  000894  0B0F               	andlw	15
  2871  000896  0A0C               	xorlw	12
  2872  000898  A4D8               	btfss	status,2,c
  2873  00089A  D00F               	goto	i2l3038
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;main.c: 398: ADCON0bits.CHS = 10;
  2877  00089C  50C2               	movf	4034,w,c	;volatile
  2878  00089E  0BC3               	andlw	-61
  2879  0008A0  0928               	iorlw	40
  2880  0008A2  6EC2               	movwf	4034,c	;volatile
  2881                           
  2882                           ; BSR set to: 1
  2883                           ;main.c: 401: _p2.paddlePosOld[0] = _p2.paddlePos[0];
  2884  0008A4  C1BE  F1BC         	movff	__p2+2,__p2
  2885                           
  2886                           ; BSR set to: 1
  2887                           ;main.c: 402: _p2.paddlePos[0] = value;
  2888  0008A8  C137  F1BE         	movff	ISR@value,__p2+2
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;main.c: 404: _p2.paddlePosOld[1] = _p2.paddlePos[1];
  2892  0008AC  C1BF  F1BD         	movff	__p2+3,__p2+1
  2893                           
  2894                           ; BSR set to: 1
  2895                           ;main.c: 405: _p2.paddlePos[1] = value + 1;
  2896  0008B0  0101               	movlb	1	; () banked
  2897  0008B2  2937               	incf	ISR@value& (0+255),w,b
  2898  0008B4  0101               	movlb	1	; () banked
  2899  0008B6  6FBF               	movwf	(__p2+3)& (0+255),b
  2900                           
  2901                           ;main.c: 406: } else {
  2902  0008B8  D00E               	goto	i2l296
  2903  0008BA                     i2l3038:
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;main.c: 407: ADCON0bits.CHS = 12;
  2907  0008BA  50C2               	movf	4034,w,c	;volatile
  2908  0008BC  0BC3               	andlw	-61
  2909  0008BE  0930               	iorlw	48
  2910  0008C0  6EC2               	movwf	4034,c	;volatile
  2911                           
  2912                           ; BSR set to: 1
  2913                           ;main.c: 410: _p1.paddlePosOld[0] = _p1.paddlePos[0];
  2914  0008C2  C1B9  F1B7         	movff	__p1+2,__p1
  2915                           
  2916                           ; BSR set to: 1
  2917                           ;main.c: 411: _p1.paddlePos[0] = value;
  2918  0008C6  C137  F1B9         	movff	ISR@value,__p1+2
  2919                           
  2920                           ; BSR set to: 1
  2921                           ;main.c: 413: _p1.paddlePosOld[1] = _p1.paddlePos[1];
  2922  0008CA  C1BA  F1B8         	movff	__p1+3,__p1+1
  2923                           
  2924                           ; BSR set to: 1
  2925                           ;main.c: 414: _p1.paddlePos[1] = value + 1;
  2926  0008CE  0101               	movlb	1	; () banked
  2927  0008D0  2937               	incf	ISR@value& (0+255),w,b
  2928  0008D2  0101               	movlb	1	; () banked
  2929  0008D4  6FBA               	movwf	(__p1+3)& (0+255),b
  2930  0008D6                     i2l296:
  2931  0008D6  C07C  FFF5         	movff	??_ISR+13,tablat
  2932  0008DA  C07B  FFF8         	movff	??_ISR+12,tblptru
  2933  0008DE  C07A  FFF7         	movff	??_ISR+11,tblptrh
  2934  0008E2  C079  FFF6         	movff	??_ISR+10,tblptrl
  2935  0008E6  C078  FFF4         	movff	??_ISR+9,prodh
  2936  0008EA  C077  FFF3         	movff	??_ISR+8,prodl
  2937  0008EE  C076  FFDA         	movff	??_ISR+7,fsr2h
  2938  0008F2  C075  FFD9         	movff	??_ISR+6,fsr2l
  2939  0008F6  C074  FFE2         	movff	??_ISR+5,fsr1h
  2940  0008FA  C073  FFE1         	movff	??_ISR+4,fsr1l
  2941  0008FE  C072  FFEA         	movff	??_ISR+3,fsr0h
  2942  000902  C071  FFE9         	movff	??_ISR+2,fsr0l
  2943  000906  C070  FFFB         	movff	??_ISR+1,pclatu
  2944  00090A  C06F  FFFA         	movff	??_ISR,pclath
  2945  00090E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2946  000910  0011               	retfie		f
  2947  000912                     __end_of_ISR:
  2948                           	opt stack 0
  2949                           pclatu	equ	0xFFB
  2950                           pclath	equ	0xFFA
  2951                           tblptru	equ	0xFF8
  2952                           tblptrh	equ	0xFF7
  2953                           tblptrl	equ	0xFF6
  2954                           tablat	equ	0xFF5
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           intcon	equ	0xFF2
  2958                           postinc0	equ	0xFEE
  2959                           fsr0h	equ	0xFEA
  2960                           fsr0l	equ	0xFE9
  2961                           wreg	equ	0xFE8
  2962                           postdec1	equ	0xFE5
  2963                           plusw1	equ	0xFE3
  2964                           fsr1h	equ	0xFE2
  2965                           fsr1l	equ	0xFE1
  2966                           indf2	equ	0xFDF
  2967                           postinc2	equ	0xFDE
  2968                           plusw2	equ	0xFDB
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _writePong *****************
  2974 ;; Defined at:
  2975 ;;		line 139 in file "main.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2989 ;;      Params:         0       0       0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    1
  2996 ;; This function calls:
  2997 ;;		_off
  2998 ;;		i2_on
  2999 ;; This function is called by:
  3000 ;;		_ISR
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text13
  3005  000AE4                     __ptext13:
  3006                           	opt stack 0
  3007  000AE4                     _writePong:
  3008                           	opt stack 24
  3009                           
  3010                           ;main.c: 143: off(_ball.bPos[1], _ball.bPos[0]);
  3011                           
  3012                           ;incstack = 0
  3013  000AE4  C1C1  F001         	movff	__ball,off@row
  3014  000AE8  0101               	movlb	1	; () banked
  3015  000AEA  51C2               	movf	(__ball+1)& (0+255),w,b
  3016  000AEC  ECEE  F007         	call	_off
  3017                           
  3018                           ;main.c: 144: _ball.bPos[0] = _nextPos[0];
  3019  000AF0  C1C4  F1C1         	movff	__nextPos,__ball
  3020                           
  3021                           ;main.c: 145: _ball.bPos[1] = _nextPos[1];
  3022  000AF4  C1C5  F1C2         	movff	__nextPos+1,__ball+1
  3023                           
  3024                           ;main.c: 146: on(_ball.bPos[1], _ball.bPos[0]);
  3025  000AF8  C1C1  F001         	movff	__ball,i2on@row
  3026  000AFC  0101               	movlb	1	; () banked
  3027  000AFE  51C2               	movf	(__ball+1)& (0+255),w,b
  3028  000B00  EC0C  F008         	call	i2_on
  3029                           
  3030                           ;main.c: 149: off(_p1.paddlePosOld[0], 0);
  3031  000B04  0E00               	movlw	0
  3032  000B06  6E01               	movwf	off@row,c
  3033  000B08  0101               	movlb	1	; () banked
  3034  000B0A  51B7               	movf	__p1& (0+255),w,b
  3035  000B0C  ECEE  F007         	call	_off
  3036                           
  3037                           ;main.c: 150: off(_p1.paddlePosOld[1], 0);
  3038  000B10  0E00               	movlw	0
  3039  000B12  6E01               	movwf	off@row,c
  3040  000B14  0101               	movlb	1	; () banked
  3041  000B16  51B8               	movf	(__p1+1)& (0+255),w,b
  3042  000B18  ECEE  F007         	call	_off
  3043                           
  3044                           ;main.c: 152: off(_p2.paddlePosOld[0], 15);
  3045  000B1C  0E0F               	movlw	15
  3046  000B1E  6E01               	movwf	off@row,c
  3047  000B20  0101               	movlb	1	; () banked
  3048  000B22  51BC               	movf	__p2& (0+255),w,b
  3049  000B24  ECEE  F007         	call	_off
  3050                           
  3051                           ;main.c: 153: off(_p2.paddlePosOld[1], 15);
  3052  000B28  0E0F               	movlw	15
  3053  000B2A  6E01               	movwf	off@row,c
  3054  000B2C  0101               	movlb	1	; () banked
  3055  000B2E  51BD               	movf	(__p2+1)& (0+255),w,b
  3056  000B30  ECEE  F007         	call	_off
  3057                           
  3058                           ;main.c: 155: on(_p1.paddlePos[0], 0);
  3059  000B34  0E00               	movlw	0
  3060  000B36  6E01               	movwf	i2on@row,c
  3061  000B38  0101               	movlb	1	; () banked
  3062  000B3A  51B9               	movf	(__p1+2)& (0+255),w,b
  3063  000B3C  EC0C  F008         	call	i2_on
  3064                           
  3065                           ;main.c: 156: on(_p1.paddlePos[1], 0);
  3066  000B40  0E00               	movlw	0
  3067  000B42  6E01               	movwf	i2on@row,c
  3068  000B44  0101               	movlb	1	; () banked
  3069  000B46  51BA               	movf	(__p1+3)& (0+255),w,b
  3070  000B48  EC0C  F008         	call	i2_on
  3071                           
  3072                           ;main.c: 157: on(_p2.paddlePos[0], 15);
  3073  000B4C  0E0F               	movlw	15
  3074  000B4E  6E01               	movwf	i2on@row,c
  3075  000B50  0101               	movlb	1	; () banked
  3076  000B52  51BE               	movf	(__p2+2)& (0+255),w,b
  3077  000B54  EC0C  F008         	call	i2_on
  3078                           
  3079                           ;main.c: 158: on(_p2.paddlePos[1], 15);
  3080  000B58  0E0F               	movlw	15
  3081  000B5A  6E01               	movwf	i2on@row,c
  3082  000B5C  0101               	movlb	1	; () banked
  3083  000B5E  51BF               	movf	(__p2+3)& (0+255),w,b
  3084  000B60  EC0C  F008         	call	i2_on
  3085  000B64  0012               	return		;funcret
  3086  000B66                     __end_of_writePong:
  3087                           	opt stack 0
  3088                           pclatu	equ	0xFFB
  3089                           pclath	equ	0xFFA
  3090                           tblptru	equ	0xFF8
  3091                           tblptrh	equ	0xFF7
  3092                           tblptrl	equ	0xFF6
  3093                           tablat	equ	0xFF5
  3094                           prodh	equ	0xFF4
  3095                           prodl	equ	0xFF3
  3096                           intcon	equ	0xFF2
  3097                           postinc0	equ	0xFEE
  3098                           fsr0h	equ	0xFEA
  3099                           fsr0l	equ	0xFE9
  3100                           wreg	equ	0xFE8
  3101                           postdec1	equ	0xFE5
  3102                           plusw1	equ	0xFE3
  3103                           fsr1h	equ	0xFE2
  3104                           fsr1l	equ	0xFE1
  3105                           indf2	equ	0xFDF
  3106                           postinc2	equ	0xFDE
  3107                           plusw2	equ	0xFDB
  3108                           fsr2h	equ	0xFDA
  3109                           fsr2l	equ	0xFD9
  3110                           status	equ	0xFD8
  3111                           
  3112 ;; *************** function _off *****************
  3113 ;; Defined at:
  3114 ;;		line 64 in file "Source/LED-API.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  column          1    wreg     unsigned char 
  3117 ;;  row             1    0[COMRAM] unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  column          1    3[COMRAM] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3129 ;;      Params:         1       0       0       0       0       0       0
  3130 ;;      Locals:         1       0       0       0       0       0       0
  3131 ;;      Temps:          2       0       0       0       0       0       0
  3132 ;;      Totals:         4       0       0       0       0       0       0
  3133 ;;Total ram usage:        4 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_writePong
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text14
  3143  000FDC                     __ptext14:
  3144                           	opt stack 0
  3145  000FDC                     _off:
  3146                           	opt stack 24
  3147                           
  3148                           ;incstack = 0
  3149                           ;off@column stored from wreg
  3150  000FDC  6E04               	movwf	off@column,c
  3151                           
  3152                           ;LED-API.c: 66: if (row < 0 || row > 16)
  3153  000FDE  0E10               	movlw	16
  3154  000FE0  6401               	cpfsgt	off@row,c
  3155  000FE2  D001               	goto	i2l2094
  3156  000FE4  0012               	return	
  3157  000FE6                     i2l2094:
  3158                           
  3159                           ;LED-API.c: 68: if (column < 0 || column > 8)
  3160  000FE6  0E08               	movlw	8
  3161  000FE8  6404               	cpfsgt	off@column,c
  3162  000FEA  D001               	goto	i2l2098
  3163  000FEC  0012               	return	
  3164  000FEE                     i2l2098:
  3165                           
  3166                           ;LED-API.c: 71: pixels[column][row] = 0;
  3167  000FEE  5004               	movf	off@column,w,c
  3168  000FF0  0D10               	mullw	16
  3169  000FF2  0E00               	movlw	low _pixels
  3170  000FF4  6E02               	movwf	??_off& (0+255),c
  3171  000FF6  0E03               	movlw	high _pixels
  3172  000FF8  6E03               	movwf	(??_off+1)& (0+255),c
  3173  000FFA  50F3               	movf	prodl,w,c
  3174  000FFC  2602               	addwf	??_off,f,c
  3175  000FFE  50F4               	movf	prodh,w,c
  3176  001000  2203               	addwfc	??_off+1,f,c
  3177  001002  5001               	movf	off@row,w,c
  3178  001004  0D01               	mullw	1
  3179  001006  50F3               	movf	prodl,w,c
  3180  001008  2402               	addwf	??_off,w,c
  3181  00100A  6ED9               	movwf	fsr2l,c
  3182  00100C  50F4               	movf	prodh,w,c
  3183  00100E  2003               	addwfc	??_off+1,w,c
  3184  001010  6EDA               	movwf	fsr2h,c
  3185  001012  0E00               	movlw	0
  3186  001014  6EDF               	movwf	indf2,c
  3187  001016  0012               	return		;funcret
  3188  001018                     __end_of_off:
  3189                           	opt stack 0
  3190                           pclatu	equ	0xFFB
  3191                           pclath	equ	0xFFA
  3192                           tblptru	equ	0xFF8
  3193                           tblptrh	equ	0xFF7
  3194                           tblptrl	equ	0xFF6
  3195                           tablat	equ	0xFF5
  3196                           prodh	equ	0xFF4
  3197                           prodl	equ	0xFF3
  3198                           intcon	equ	0xFF2
  3199                           postinc0	equ	0xFEE
  3200                           fsr0h	equ	0xFEA
  3201                           fsr0l	equ	0xFE9
  3202                           wreg	equ	0xFE8
  3203                           postdec1	equ	0xFE5
  3204                           plusw1	equ	0xFE3
  3205                           fsr1h	equ	0xFE2
  3206                           fsr1l	equ	0xFE1
  3207                           indf2	equ	0xFDF
  3208                           postinc2	equ	0xFDE
  3209                           plusw2	equ	0xFDB
  3210                           fsr2h	equ	0xFDA
  3211                           fsr2l	equ	0xFD9
  3212                           status	equ	0xFD8
  3213                           
  3214 ;; *************** function _checkNextPosition *****************
  3215 ;; Defined at:
  3216 ;;		line 237 in file "main.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  counter         2  108[COMRAM] unsigned int 
  3221 ;;  counter         2  106[COMRAM] unsigned int 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3231 ;;      Params:         0       0       0       0       0       0       0
  3232 ;;      Locals:         4       0       0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0
  3234 ;;      Totals:         4       0       0       0       0       0       0
  3235 ;;Total ram usage:        4 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    4
  3238 ;; This function calls:
  3239 ;;		_checkPaddleCollision
  3240 ;;		_checkWallCollision
  3241 ;;		_getNextPosition
  3242 ;;		i2_drawSymbol
  3243 ;;		i2_initializePong
  3244 ;;		i2_refresh
  3245 ;;		i2_startPong
  3246 ;;		i2_turnAllOff
  3247 ;; This function is called by:
  3248 ;;		_ISR
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text15
  3253  0005D8                     __ptext15:
  3254                           	opt stack 0
  3255  0005D8                     _checkNextPosition:
  3256                           	opt stack 21
  3257                           
  3258                           ;main.c: 238: getNextPosition();
  3259                           
  3260                           ;incstack = 0
  3261  0005D8  EC2E  F005         	call	_getNextPosition	;wreg free
  3262                           
  3263                           ;main.c: 239: checkPaddleCollision();
  3264  0005DC  ECB6  F008         	call	_checkPaddleCollision	;wreg free
  3265                           
  3266                           ;main.c: 240: checkWallCollision();
  3267  0005E0  ECAE  F008         	call	_checkWallCollision	;wreg free
  3268                           
  3269                           ;main.c: 242: if (_nextPos[0] == 0) {
  3270  0005E4  0101               	movlb	1	; () banked
  3271  0005E6  51C4               	movf	__nextPos& (0+255),w,b
  3272  0005E8  A4D8               	btfss	status,2,c
  3273  0005EA  D072               	goto	i2l2910
  3274                           
  3275                           ; BSR set to: 1
  3276                           ;main.c: 243: if (_p1.paddlePos[0] == _nextPos[1]) {
  3277  0005EC  0101               	movlb	1	; () banked
  3278  0005EE  51C5               	movf	(__nextPos+1)& (0+255),w,b
  3279  0005F0  0101               	movlb	1	; () banked
  3280  0005F2  19B9               	xorwf	(__p1+2)& (0+255),w,b
  3281  0005F4  A4D8               	btfss	status,2,c
  3282  0005F6  D021               	goto	i2l2864
  3283                           
  3284                           ; BSR set to: 1
  3285                           ;main.c: 245: if (_speed > 50)
  3286  0005F8  507E               	movf	__speed+1,w,c
  3287  0005FA  E104               	bnz	i2u289_40
  3288  0005FC  0E33               	movlw	51
  3289  0005FE  5C7D               	subwf	__speed,w,c
  3290  000600  A0D8               	btfss	status,0,c
  3291  000602  D00D               	goto	i2l2856
  3292  000604                     i2u289_40:
  3293                           
  3294                           ; BSR set to: 1
  3295                           ;main.c: 246: _speed = _speed - 3;
  3296  000604  0EFD               	movlw	253
  3297  000606  247D               	addwf	__speed,w,c
  3298  000608  6E7D               	movwf	__speed,c
  3299  00060A  0EFF               	movlw	255
  3300  00060C  207E               	addwfc	__speed+1,w,c
  3301  00060E  6E7E               	movwf	__speed+1,c
  3302                           
  3303                           ; BSR set to: 1
  3304                           ;main.c: 247: switch (_ball.bDirection) {
  3305  000610  D006               	goto	i2l2856
  3306  000612                     i2l2852:
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;main.c: 253: _ball.bDirection = 1;
  3310  000612  0E01               	movlw	1
  3311  000614  D001               	goto	L2
  3312  000616                     i2l2854:
  3313                           
  3314                           ; BSR set to: 1
  3315                           ;main.c: 256: _ball.bDirection = 2;
  3316  000616  0E02               	movlw	2
  3317  000618                     L2:
  3318  000618  0101               	movlb	1	; () banked
  3319  00061A  6FC3               	movwf	(__ball+2)& (0+255),b
  3320                           
  3321                           ;main.c: 257: }
  3322  00061C  D00B               	goto	i2l2858
  3323  00061E                     i2l2856:
  3324                           
  3325                           ; BSR set to: 1
  3326  00061E  0101               	movlb	1	; () banked
  3327  000620  51C3               	movf	(__ball+2)& (0+255),w,b
  3328                           
  3329                           ; Switch size 1, requested type "space"
  3330                           ; Number of cases is 3, Range of values is 4 to 6
  3331                           ; switch strategies available:
  3332                           ; Name         Instructions Cycles
  3333                           ; simple_byte           10     6 (average)
  3334                           ;	Chosen strategy is simple_byte
  3335  000622  0A04               	xorlw	4	; case 4
  3336  000624  B4D8               	btfsc	status,2,c
  3337  000626  D7F7               	goto	i2l2854
  3338  000628  0A01               	xorlw	1	; case 5
  3339  00062A  B4D8               	btfsc	status,2,c
  3340  00062C  D7F2               	goto	i2l2852
  3341  00062E  0A03               	xorlw	3	; case 6
  3342  000630  B4D8               	btfsc	status,2,c
  3343  000632  D7F1               	goto	i2l2854
  3344  000634                     i2l2858:
  3345                           
  3346                           ; BSR set to: 1
  3347                           ;main.c: 258: getNextPosition();
  3348  000634  EC2E  F005         	call	_getNextPosition	;wreg free
  3349                           
  3350                           ;main.c: 259: return;
  3351  000638  0012               	return	
  3352  00063A                     i2l2864:
  3353  00063A  0101               	movlb	1	; () banked
  3354  00063C  51C5               	movf	(__nextPos+1)& (0+255),w,b
  3355  00063E  0101               	movlb	1	; () banked
  3356  000640  19BA               	xorwf	(__p1+3)& (0+255),w,b
  3357  000642  A4D8               	btfss	status,2,c
  3358  000644  D021               	goto	i2l2884
  3359                           
  3360                           ; BSR set to: 1
  3361                           ;main.c: 263: if (_speed > 50)
  3362  000646  507E               	movf	__speed+1,w,c
  3363  000648  E104               	bnz	i2u291_40
  3364  00064A  0E33               	movlw	51
  3365  00064C  5C7D               	subwf	__speed,w,c
  3366  00064E  A0D8               	btfss	status,0,c
  3367  000650  D00D               	goto	i2l2878
  3368  000652                     i2u291_40:
  3369                           
  3370                           ; BSR set to: 1
  3371                           ;main.c: 264: _speed = _speed - 3;
  3372  000652  0EFD               	movlw	253
  3373  000654  247D               	addwf	__speed,w,c
  3374  000656  6E7D               	movwf	__speed,c
  3375  000658  0EFF               	movlw	255
  3376  00065A  207E               	addwfc	__speed+1,w,c
  3377  00065C  6E7E               	movwf	__speed+1,c
  3378                           
  3379                           ; BSR set to: 1
  3380                           ;main.c: 265: switch (_ball.bDirection) {
  3381  00065E  D006               	goto	i2l2878
  3382  000660                     i2l2870:
  3383                           
  3384                           ; BSR set to: 1
  3385                           ;main.c: 268: _ball.bDirection = 1;
  3386  000660  0E01               	movlw	1
  3387  000662                     L3:
  3388  000662  0101               	movlb	1	; () banked
  3389  000664  6FC3               	movwf	(__ball+2)& (0+255),b
  3390                           
  3391                           ;main.c: 272: break;
  3392  000666  D00D               	goto	i2l2880
  3393  000668                     i2l2874:
  3394                           
  3395                           ; BSR set to: 1
  3396                           ;main.c: 274: _ball.bDirection = 3;
  3397  000668  0E03               	movlw	3
  3398  00066A  D7FB               	goto	L3
  3399  00066C                     i2l2878:
  3400                           
  3401                           ; BSR set to: 1
  3402  00066C  0101               	movlb	1	; () banked
  3403  00066E  51C3               	movf	(__ball+2)& (0+255),w,b
  3404                           
  3405                           ; Switch size 1, requested type "space"
  3406                           ; Number of cases is 3, Range of values is 4 to 6
  3407                           ; switch strategies available:
  3408                           ; Name         Instructions Cycles
  3409                           ; simple_byte           10     6 (average)
  3410                           ;	Chosen strategy is simple_byte
  3411  000670  0A04               	xorlw	4	; case 4
  3412  000672  B4D8               	btfsc	status,2,c
  3413  000674  D7F5               	goto	i2l2870
  3414  000676  0A01               	xorlw	1	; case 5
  3415  000678  B4D8               	btfsc	status,2,c
  3416  00067A  D7F6               	goto	i2l2874
  3417  00067C  0A03               	xorlw	3	; case 6
  3418  00067E  B4D8               	btfsc	status,2,c
  3419  000680  D7F3               	goto	i2l2874
  3420  000682                     i2l2880:
  3421                           
  3422                           ; BSR set to: 1
  3423                           ;main.c: 277: getNextPosition();
  3424  000682  EC2E  F005         	call	_getNextPosition	;wreg free
  3425                           
  3426                           ;main.c: 278: return;
  3427  000686  0012               	return	
  3428  000688                     i2l2884:
  3429                           
  3430                           ;main.c: 279: }
  3431                           ;main.c: 282: _p1.lives--;
  3432  000688  0101               	movlb	1	; () banked
  3433  00068A  07BB               	decf	(__p1+4)& (0+255),f,b
  3434                           
  3435                           ; BSR set to: 1
  3436                           ;main.c: 283: if (_p1.lives == 0) {
  3437  00068C  0101               	movlb	1	; () banked
  3438  00068E  51BB               	movf	(__p1+4)& (0+255),w,b
  3439  000690  A4D8               	btfss	status,2,c
  3440  000692  D01B               	goto	i2l2908
  3441                           
  3442                           ; BSR set to: 1
  3443                           ;main.c: 285: turnAllOff();
  3444  000694  EC66  F007         	call	i2_turnAllOff	;wreg free
  3445                           
  3446                           ;main.c: 286: drawSymbol(7, 8);
  3447  000698  0E08               	movlw	8
  3448  00069A  6E05               	movwf	i2drawSymbol@offSetX,c
  3449  00069C  0E07               	movlw	7
  3450  00069E  EC84  F001         	call	i2_drawSymbol
  3451                           
  3452                           ;main.c: 287: for (unsigned int counter = 0; counter < 800; counter++) {
  3453  0006A2  0E00               	movlw	0
  3454  0006A4  6E6C               	movwf	checkNextPosition@counter+1,c
  3455  0006A6  0E00               	movlw	0
  3456  0006A8  6E6B               	movwf	checkNextPosition@counter,c
  3457  0006AA                     i2l2894:
  3458  0006AA  0E20               	movlw	32
  3459  0006AC  5C6B               	subwf	checkNextPosition@counter,w,c
  3460  0006AE  0E03               	movlw	3
  3461  0006B0  586C               	subwfb	checkNextPosition@counter+1,w,c
  3462  0006B2  B0D8               	btfsc	status,0,c
  3463  0006B4  D005               	goto	i2l2904
  3464                           
  3465                           ;main.c: 288: refresh();
  3466  0006B6  EC22  F006         	call	i2_refresh	;wreg free
  3467  0006BA  4A6B               	infsnz	checkNextPosition@counter,f,c
  3468  0006BC  2A6C               	incf	checkNextPosition@counter+1,f,c
  3469  0006BE  D7F5               	goto	i2l2894
  3470  0006C0                     i2l2904:
  3471                           
  3472                           ;main.c: 289: }
  3473                           ;main.c: 290: turnAllOff();
  3474  0006C0  EC66  F007         	call	i2_turnAllOff	;wreg free
  3475                           
  3476                           ;main.c: 293: initializePong();
  3477  0006C4  EC8D  F008         	call	i2_initializePong	;wreg free
  3478                           
  3479                           ;main.c: 294: } else {
  3480  0006C8  0012               	return	
  3481  0006CA                     i2l2908:
  3482                           
  3483                           ;main.c: 295: startPong();
  3484  0006CA  EC89  F006         	call	i2_startPong	;wreg free
  3485                           
  3486                           ;main.c: 296: }
  3487                           ;main.c: 297: } else if (_nextPos[0] == 15) {
  3488  0006CE  0012               	return	
  3489  0006D0                     i2l2910:
  3490  0006D0  0E0F               	movlw	15
  3491  0006D2  0101               	movlb	1	; () banked
  3492  0006D4  19C4               	xorwf	__nextPos& (0+255),w,b
  3493  0006D6  A4D8               	btfss	status,2,c
  3494  0006D8  D074               	goto	i2l2980
  3495                           
  3496                           ; BSR set to: 1
  3497                           ;main.c: 298: if (_p2.paddlePos[0] == _nextPos[1]) {
  3498  0006DA  0101               	movlb	1	; () banked
  3499  0006DC  51C5               	movf	(__nextPos+1)& (0+255),w,b
  3500  0006DE  0101               	movlb	1	; () banked
  3501  0006E0  19BE               	xorwf	(__p2+2)& (0+255),w,b
  3502  0006E2  A4D8               	btfss	status,2,c
  3503  0006E4  D023               	goto	i2l2934
  3504                           
  3505                           ; BSR set to: 1
  3506                           ;main.c: 299: if (_speed > 50)
  3507  0006E6  507E               	movf	__speed+1,w,c
  3508  0006E8  E104               	bnz	i2u297_40
  3509  0006EA  0E33               	movlw	51
  3510  0006EC  5C7D               	subwf	__speed,w,c
  3511  0006EE  A0D8               	btfss	status,0,c
  3512  0006F0  D00F               	goto	i2l2926
  3513  0006F2                     i2u297_40:
  3514                           
  3515                           ; BSR set to: 1
  3516                           ;main.c: 300: _speed = _speed - 3;
  3517  0006F2  0EFD               	movlw	253
  3518  0006F4  247D               	addwf	__speed,w,c
  3519  0006F6  6E7D               	movwf	__speed,c
  3520  0006F8  0EFF               	movlw	255
  3521  0006FA  207E               	addwfc	__speed+1,w,c
  3522  0006FC  6E7E               	movwf	__speed+1,c
  3523                           
  3524                           ; BSR set to: 1
  3525                           ;main.c: 301: switch (_ball.bDirection) {
  3526  0006FE  D008               	goto	i2l2926
  3527  000700                     i2l2918:
  3528                           
  3529                           ; BSR set to: 1
  3530                           ;main.c: 304: _ball.bDirection = 4;
  3531  000700  0E04               	movlw	4
  3532  000702  D003               	goto	L5
  3533  000704                     i2l2920:
  3534                           
  3535                           ; BSR set to: 1
  3536                           ;main.c: 307: _ball.bDirection = 6;
  3537  000704  0E06               	movlw	6
  3538  000706  D001               	goto	L5
  3539  000708                     i2l2922:
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;main.c: 310: _ball.bDirection = 5;
  3543  000708  0E05               	movlw	5
  3544  00070A                     L5:
  3545  00070A  0101               	movlb	1	; () banked
  3546  00070C  6FC3               	movwf	(__ball+2)& (0+255),b
  3547                           
  3548                           ; BSR set to: 1
  3549                           ;main.c: 312: }
  3550                           
  3551                           ;main.c: 311: break;
  3552  00070E  D00B               	goto	i2l2928
  3553  000710                     i2l2926:
  3554                           
  3555                           ; BSR set to: 1
  3556  000710  0101               	movlb	1	; () banked
  3557  000712  51C3               	movf	(__ball+2)& (0+255),w,b
  3558                           
  3559                           ; Switch size 1, requested type "space"
  3560                           ; Number of cases is 3, Range of values is 1 to 3
  3561                           ; switch strategies available:
  3562                           ; Name         Instructions Cycles
  3563                           ; simple_byte           10     6 (average)
  3564                           ;	Chosen strategy is simple_byte
  3565  000714  0A01               	xorlw	1	; case 1
  3566  000716  B4D8               	btfsc	status,2,c
  3567  000718  D7F3               	goto	i2l2918
  3568  00071A  0A03               	xorlw	3	; case 2
  3569  00071C  B4D8               	btfsc	status,2,c
  3570  00071E  D7F2               	goto	i2l2920
  3571  000720  0A01               	xorlw	1	; case 3
  3572  000722  B4D8               	btfsc	status,2,c
  3573  000724  D7F1               	goto	i2l2922
  3574  000726                     i2l2928:
  3575                           
  3576                           ; BSR set to: 1
  3577                           ;main.c: 313: getNextPosition();
  3578  000726  EC2E  F005         	call	_getNextPosition	;wreg free
  3579                           
  3580                           ;main.c: 314: return;
  3581  00072A  0012               	return	
  3582  00072C                     i2l2934:
  3583  00072C  0101               	movlb	1	; () banked
  3584  00072E  51C5               	movf	(__nextPos+1)& (0+255),w,b
  3585  000730  0101               	movlb	1	; () banked
  3586  000732  19BF               	xorwf	(__p2+3)& (0+255),w,b
  3587  000734  A4D8               	btfss	status,2,c
  3588  000736  D021               	goto	i2l2954
  3589                           
  3590                           ; BSR set to: 1
  3591                           ;main.c: 317: if (_speed > 50)
  3592  000738  507E               	movf	__speed+1,w,c
  3593  00073A  E104               	bnz	i2u299_40
  3594  00073C  0E33               	movlw	51
  3595  00073E  5C7D               	subwf	__speed,w,c
  3596  000740  A0D8               	btfss	status,0,c
  3597  000742  D00D               	goto	i2l2948
  3598  000744                     i2u299_40:
  3599                           
  3600                           ; BSR set to: 1
  3601                           ;main.c: 318: _speed = _speed - 3;
  3602  000744  0EFD               	movlw	253
  3603  000746  247D               	addwf	__speed,w,c
  3604  000748  6E7D               	movwf	__speed,c
  3605  00074A  0EFF               	movlw	255
  3606  00074C  207E               	addwfc	__speed+1,w,c
  3607  00074E  6E7E               	movwf	__speed+1,c
  3608                           
  3609                           ; BSR set to: 1
  3610                           ;main.c: 319: switch (_ball.bDirection) {
  3611  000750  D006               	goto	i2l2948
  3612  000752                     i2l2942:
  3613                           
  3614                           ; BSR set to: 1
  3615                           ;main.c: 324: _ball.bDirection = 4;
  3616  000752  0E04               	movlw	4
  3617  000754  D001               	goto	L6
  3618  000756                     i2l2944:
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;main.c: 327: _ball.bDirection = 6;
  3622  000756  0E06               	movlw	6
  3623  000758                     L6:
  3624  000758  0101               	movlb	1	; () banked
  3625  00075A  6FC3               	movwf	(__ball+2)& (0+255),b
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;main.c: 329: }
  3629                           
  3630                           ;main.c: 328: break;
  3631  00075C  D00B               	goto	i2l2950
  3632  00075E                     i2l2948:
  3633                           
  3634                           ; BSR set to: 1
  3635  00075E  0101               	movlb	1	; () banked
  3636  000760  51C3               	movf	(__ball+2)& (0+255),w,b
  3637                           
  3638                           ; Switch size 1, requested type "space"
  3639                           ; Number of cases is 3, Range of values is 1 to 3
  3640                           ; switch strategies available:
  3641                           ; Name         Instructions Cycles
  3642                           ; simple_byte           10     6 (average)
  3643                           ;	Chosen strategy is simple_byte
  3644  000762  0A01               	xorlw	1	; case 1
  3645  000764  B4D8               	btfsc	status,2,c
  3646  000766  D7F5               	goto	i2l2942
  3647  000768  0A03               	xorlw	3	; case 2
  3648  00076A  B4D8               	btfsc	status,2,c
  3649  00076C  D7F2               	goto	i2l2942
  3650  00076E  0A01               	xorlw	1	; case 3
  3651  000770  B4D8               	btfsc	status,2,c
  3652  000772  D7F1               	goto	i2l2944
  3653  000774                     i2l2950:
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;main.c: 330: getNextPosition();
  3657  000774  EC2E  F005         	call	_getNextPosition	;wreg free
  3658                           
  3659                           ;main.c: 331: return;
  3660  000778  0012               	return	
  3661  00077A                     i2l2954:
  3662                           
  3663                           ;main.c: 332: }
  3664                           ;main.c: 334: _p2.lives--;
  3665  00077A  0101               	movlb	1	; () banked
  3666  00077C  07C0               	decf	(__p2+4)& (0+255),f,b
  3667                           
  3668                           ; BSR set to: 1
  3669                           ;main.c: 335: if (_p2.lives == 0) {
  3670  00077E  0101               	movlb	1	; () banked
  3671  000780  51C0               	movf	(__p2+4)& (0+255),w,b
  3672  000782  A4D8               	btfss	status,2,c
  3673  000784  D01B               	goto	i2l2978
  3674                           
  3675                           ; BSR set to: 1
  3676                           ;main.c: 337: turnAllOff();
  3677  000786  EC66  F007         	call	i2_turnAllOff	;wreg free
  3678                           
  3679                           ;main.c: 338: drawSymbol(6, 0);
  3680  00078A  0E00               	movlw	0
  3681  00078C  6E05               	movwf	i2drawSymbol@offSetX,c
  3682  00078E  0E06               	movlw	6
  3683  000790  EC84  F001         	call	i2_drawSymbol
  3684                           
  3685                           ;main.c: 339: for (unsigned int counter = 0; counter < 800; counter++) {
  3686  000794  0E00               	movlw	0
  3687  000796  6E6E               	movwf	checkNextPosition@counter_439+1,c
  3688  000798  0E00               	movlw	0
  3689  00079A  6E6D               	movwf	checkNextPosition@counter_439,c
  3690  00079C                     i2l2964:
  3691  00079C  0E20               	movlw	32
  3692  00079E  5C6D               	subwf	checkNextPosition@counter_439,w,c
  3693  0007A0  0E03               	movlw	3
  3694  0007A2  586E               	subwfb	checkNextPosition@counter_439+1,w,c
  3695  0007A4  B0D8               	btfsc	status,0,c
  3696  0007A6  D005               	goto	i2l2974
  3697                           
  3698                           ;main.c: 340: refresh();
  3699  0007A8  EC22  F006         	call	i2_refresh	;wreg free
  3700  0007AC  4A6D               	infsnz	checkNextPosition@counter_439,f,c
  3701  0007AE  2A6E               	incf	checkNextPosition@counter_439+1,f,c
  3702  0007B0  D7F5               	goto	i2l2964
  3703  0007B2                     i2l2974:
  3704                           
  3705                           ;main.c: 341: }
  3706                           ;main.c: 342: turnAllOff();
  3707  0007B2  EC66  F007         	call	i2_turnAllOff	;wreg free
  3708                           
  3709                           ;main.c: 345: initializePong();
  3710  0007B6  EC8D  F008         	call	i2_initializePong	;wreg free
  3711                           
  3712                           ;main.c: 346: } else {
  3713  0007BA  0012               	return	
  3714  0007BC                     i2l2978:
  3715                           
  3716                           ;main.c: 347: startPong();
  3717  0007BC  EC89  F006         	call	i2_startPong	;wreg free
  3718                           
  3719                           ;main.c: 348: }
  3720                           ;main.c: 349: } else if (_nextPos[1] < 0 || _nextPos[1] > 7) {
  3721  0007C0  0012               	return	
  3722  0007C2                     i2l2980:
  3723  0007C2  0E07               	movlw	7
  3724  0007C4  0101               	movlb	1	; () banked
  3725  0007C6  65C5               	cpfsgt	(__nextPos+1)& (0+255),b
  3726  0007C8  0012               	return	
  3727  0007CA  D00A               	goto	i2l2994
  3728  0007CC                     i2l2984:
  3729                           
  3730                           ; BSR set to: 1
  3731                           ;main.c: 352: _ball.bDirection = 3;
  3732  0007CC  0E03               	movlw	3
  3733  0007CE  D005               	goto	L9
  3734  0007D0                     i2l2986:
  3735                           
  3736                           ; BSR set to: 1
  3737                           ;main.c: 355: _ball.bDirection = 1;
  3738  0007D0  0E01               	movlw	1
  3739  0007D2  D003               	goto	L9
  3740  0007D4                     i2l2988:
  3741                           
  3742                           ; BSR set to: 1
  3743                           ;main.c: 358: _ball.bDirection = 6;
  3744  0007D4  0E06               	movlw	6
  3745  0007D6  D001               	goto	L9
  3746  0007D8                     i2l2990:
  3747                           
  3748                           ; BSR set to: 1
  3749                           ;main.c: 361: _ball.bDirection = 4;
  3750  0007D8  0E04               	movlw	4
  3751  0007DA                     L9:
  3752  0007DA  0101               	movlb	1	; () banked
  3753  0007DC  6FC3               	movwf	(__ball+2)& (0+255),b
  3754                           
  3755                           ; BSR set to: 1
  3756                           ;main.c: 363: }
  3757                           
  3758                           ;main.c: 362: break;
  3759  0007DE  D00E               	goto	i2l2996
  3760  0007E0                     i2l2994:
  3761                           
  3762                           ; BSR set to: 1
  3763  0007E0  0101               	movlb	1	; () banked
  3764  0007E2  51C3               	movf	(__ball+2)& (0+255),w,b
  3765                           
  3766                           ; Switch size 1, requested type "space"
  3767                           ; Number of cases is 4, Range of values is 1 to 6
  3768                           ; switch strategies available:
  3769                           ; Name         Instructions Cycles
  3770                           ; simple_byte           13     7 (average)
  3771                           ;	Chosen strategy is simple_byte
  3772  0007E4  0A01               	xorlw	1	; case 1
  3773  0007E6  B4D8               	btfsc	status,2,c
  3774  0007E8  D7F1               	goto	i2l2984
  3775  0007EA  0A02               	xorlw	2	; case 3
  3776  0007EC  B4D8               	btfsc	status,2,c
  3777  0007EE  D7F0               	goto	i2l2986
  3778  0007F0  0A07               	xorlw	7	; case 4
  3779  0007F2  B4D8               	btfsc	status,2,c
  3780  0007F4  D7EF               	goto	i2l2988
  3781  0007F6  0A02               	xorlw	2	; case 6
  3782  0007F8  B4D8               	btfsc	status,2,c
  3783  0007FA  D7EE               	goto	i2l2990
  3784  0007FC                     i2l2996:
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;main.c: 364: getNextPosition();
  3788  0007FC  EC2E  F005         	call	_getNextPosition	;wreg free
  3789                           
  3790                           ;main.c: 365: return;
  3791  000800  0012               	return	
  3792  000802                     __end_of_checkNextPosition:
  3793                           	opt stack 0
  3794                           pclatu	equ	0xFFB
  3795                           pclath	equ	0xFFA
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           postinc0	equ	0xFEE
  3804                           fsr0h	equ	0xFEA
  3805                           fsr0l	equ	0xFE9
  3806                           wreg	equ	0xFE8
  3807                           postdec1	equ	0xFE5
  3808                           plusw1	equ	0xFE3
  3809                           fsr1h	equ	0xFE2
  3810                           fsr1l	equ	0xFE1
  3811                           indf2	equ	0xFDF
  3812                           postinc2	equ	0xFDE
  3813                           plusw2	equ	0xFDB
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function i2_initializePong *****************
  3819 ;; Defined at:
  3820 ;;		line 84 in file "main.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3834 ;;      Params:         0       0       0       0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0
  3837 ;;      Totals:         0       0       0       0       0       0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    3
  3841 ;; This function calls:
  3842 ;;		i2_startPong
  3843 ;; This function is called by:
  3844 ;;		_checkNextPosition
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text16
  3849  00111A                     __ptext16:
  3850                           	opt stack 0
  3851  00111A                     i2_initializePong:
  3852                           	opt stack 21
  3853                           
  3854                           ;main.c: 88: _p1.lives = 3;
  3855                           
  3856                           ;incstack = 0
  3857  00111A  0E03               	movlw	3
  3858  00111C  0101               	movlb	1	; () banked
  3859  00111E  6FBB               	movwf	(__p1+4)& (0+255),b
  3860                           
  3861                           ;main.c: 89: _p2.lives = 3;
  3862  001120  0E03               	movlw	3
  3863  001122  0101               	movlb	1	; () banked
  3864  001124  6FC0               	movwf	(__p2+4)& (0+255),b
  3865                           
  3866                           ; BSR set to: 1
  3867                           ;main.c: 91: startPong();
  3868  001126  EC89  F006         	call	i2_startPong	;wreg free
  3869                           
  3870                           ;main.c: 94: TMR0ON = 1;
  3871  00112A  8ED5               	bsf	4053,7,c	;volatile
  3872  00112C  0012               	return		;funcret
  3873  00112E                     __end_ofi2_initializePong:
  3874                           	opt stack 0
  3875                           pclatu	equ	0xFFB
  3876                           pclath	equ	0xFFA
  3877                           tblptru	equ	0xFF8
  3878                           tblptrh	equ	0xFF7
  3879                           tblptrl	equ	0xFF6
  3880                           tablat	equ	0xFF5
  3881                           prodh	equ	0xFF4
  3882                           prodl	equ	0xFF3
  3883                           intcon	equ	0xFF2
  3884                           postinc0	equ	0xFEE
  3885                           fsr0h	equ	0xFEA
  3886                           fsr0l	equ	0xFE9
  3887                           wreg	equ	0xFE8
  3888                           postdec1	equ	0xFE5
  3889                           plusw1	equ	0xFE3
  3890                           fsr1h	equ	0xFE2
  3891                           fsr1l	equ	0xFE1
  3892                           indf2	equ	0xFDF
  3893                           postinc2	equ	0xFDE
  3894                           plusw2	equ	0xFDB
  3895                           fsr2h	equ	0xFDA
  3896                           fsr2l	equ	0xFD9
  3897                           status	equ	0xFD8
  3898                           
  3899 ;; *************** function i2_startPong *****************
  3900 ;; Defined at:
  3901 ;;		line 58 in file "main.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  startPong       2  104[COMRAM] unsigned int 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3915 ;;      Params:         0       0       0       0       0       0       0
  3916 ;;      Locals:         2       0       0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0
  3918 ;;      Totals:         2       0       0       0       0       0       0
  3919 ;;Total ram usage:        2 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    2
  3922 ;; This function calls:
  3923 ;;		i2_drawSymbol
  3924 ;;		i2_refresh
  3925 ;;		i2_turnAllOff
  3926 ;; This function is called by:
  3927 ;;		_checkNextPosition
  3928 ;;		i2_initializePong
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text17
  3933  000D12                     __ptext17:
  3934                           	opt stack 0
  3935  000D12                     i2_startPong:
  3936                           	opt stack 22
  3937                           
  3938                           ;main.c: 59: _speed = 200;
  3939                           
  3940                           ;incstack = 0
  3941  000D12  0E00               	movlw	0
  3942  000D14  6E7E               	movwf	__speed+1,c
  3943  000D16  0EC8               	movlw	200
  3944  000D18  6E7D               	movwf	__speed,c
  3945                           
  3946                           ;main.c: 62: turnAllOff();
  3947  000D1A  EC66  F007         	call	i2_turnAllOff	;wreg free
  3948                           
  3949                           ;main.c: 63: drawSymbol(_p1.lives, 0);
  3950  000D1E  0E00               	movlw	0
  3951  000D20  6E05               	movwf	i2drawSymbol@offSetX,c
  3952  000D22  0101               	movlb	1	; () banked
  3953  000D24  51BB               	movf	(__p1+4)& (0+255),w,b
  3954  000D26  EC84  F001         	call	i2_drawSymbol
  3955                           
  3956                           ;main.c: 64: drawSymbol(_p2.lives, 8);
  3957  000D2A  0E08               	movlw	8
  3958  000D2C  6E05               	movwf	i2drawSymbol@offSetX,c
  3959  000D2E  0101               	movlb	1	; () banked
  3960  000D30  51C0               	movf	(__p2+4)& (0+255),w,b
  3961  000D32  EC84  F001         	call	i2_drawSymbol
  3962                           
  3963                           ;main.c: 65: for (unsigned int counter = 0; counter < 800; counter++) {
  3964  000D36  0E00               	movlw	0
  3965  000D38  6E6A               	movwf	i2startPong@counter+1,c
  3966  000D3A  0E00               	movlw	0
  3967  000D3C  6E69               	movwf	i2startPong@counter,c
  3968  000D3E                     i2l2764:
  3969  000D3E  0E20               	movlw	32
  3970  000D40  5C69               	subwf	i2startPong@counter,w,c
  3971  000D42  0E03               	movlw	3
  3972  000D44  586A               	subwfb	i2startPong@counter+1,w,c
  3973  000D46  B0D8               	btfsc	status,0,c
  3974  000D48  D005               	goto	i2l2774
  3975                           
  3976                           ;main.c: 66: refresh();
  3977  000D4A  EC22  F006         	call	i2_refresh	;wreg free
  3978  000D4E  4A69               	infsnz	i2startPong@counter,f,c
  3979  000D50  2A6A               	incf	i2startPong@counter+1,f,c
  3980  000D52  D7F5               	goto	i2l2764
  3981  000D54                     i2l2774:
  3982                           
  3983                           ;main.c: 67: }
  3984                           ;main.c: 68: turnAllOff();
  3985  000D54  EC66  F007         	call	i2_turnAllOff	;wreg free
  3986                           
  3987                           ;main.c: 73: _ball.bDirection = 3;
  3988  000D58  0E03               	movlw	3
  3989  000D5A  0101               	movlb	1	; () banked
  3990  000D5C  6FC3               	movwf	(__ball+2)& (0+255),b
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;main.c: 75: _ball.bPos[0] = 2;
  3994  000D5E  0E02               	movlw	2
  3995  000D60  0101               	movlb	1	; () banked
  3996  000D62  6FC1               	movwf	__ball& (0+255),b
  3997                           
  3998                           ; BSR set to: 1
  3999                           ;main.c: 77: _ball.bPos[1] = 4;
  4000  000D64  0E04               	movlw	4
  4001  000D66  0101               	movlb	1	; () banked
  4002  000D68  6FC2               	movwf	(__ball+1)& (0+255),b
  4003                           
  4004                           ; BSR set to: 1
  4005                           ;main.c: 80: _nextPos[0] = _ball.bPos[0];
  4006  000D6A  C1C1  F1C4         	movff	__ball,__nextPos
  4007                           
  4008                           ; BSR set to: 1
  4009                           ;main.c: 81: _nextPos[1] = _ball.bPos[1];
  4010  000D6E  C1C2  F1C5         	movff	__ball+1,__nextPos+1
  4011                           
  4012                           ; BSR set to: 1
  4013  000D72  0012               	return		;funcret
  4014  000D74                     __end_ofi2_startPong:
  4015                           	opt stack 0
  4016                           pclatu	equ	0xFFB
  4017                           pclath	equ	0xFFA
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           prodh	equ	0xFF4
  4023                           prodl	equ	0xFF3
  4024                           intcon	equ	0xFF2
  4025                           postinc0	equ	0xFEE
  4026                           fsr0h	equ	0xFEA
  4027                           fsr0l	equ	0xFE9
  4028                           wreg	equ	0xFE8
  4029                           postdec1	equ	0xFE5
  4030                           plusw1	equ	0xFE3
  4031                           fsr1h	equ	0xFE2
  4032                           fsr1l	equ	0xFE1
  4033                           indf2	equ	0xFDF
  4034                           postinc2	equ	0xFDE
  4035                           plusw2	equ	0xFDB
  4036                           fsr2h	equ	0xFDA
  4037                           fsr2l	equ	0xFD9
  4038                           status	equ	0xFD8
  4039                           
  4040 ;; *************** function i2_turnAllOff *****************
  4041 ;; Defined at:
  4042 ;;		line 161 in file "Source/LED-API.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;  turnAllOff      1    3[COMRAM] unsigned char 
  4047 ;;  turnAllOff      1    2[COMRAM] unsigned char 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4057 ;;      Params:         0       0       0       0       0       0       0
  4058 ;;      Locals:         2       0       0       0       0       0       0
  4059 ;;      Temps:          2       0       0       0       0       0       0
  4060 ;;      Totals:         4       0       0       0       0       0       0
  4061 ;;Total ram usage:        4 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_checkNextPosition
  4067 ;;		i2_startPong
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text18
  4072  000ECC                     __ptext18:
  4073                           	opt stack 0
  4074  000ECC                     i2_turnAllOff:
  4075                           	opt stack 24
  4076                           
  4077                           ;LED-API.c: 164: for (unsigned char i = 0; i < 8; i++) {
  4078                           
  4079                           ; BSR set to: 1
  4080                           ;incstack = 0
  4081  000ECC  0E00               	movlw	0
  4082  000ECE  6E03               	movwf	i2turnAllOff@i,c
  4083  000ED0                     i2l1850:
  4084  000ED0  0E07               	movlw	7
  4085  000ED2  6403               	cpfsgt	i2turnAllOff@i,c
  4086  000ED4  D001               	goto	i2l1854
  4087  000ED6  0012               	return	
  4088  000ED8                     i2l1854:
  4089                           
  4090                           ;LED-API.c: 165: for (unsigned char j = 0; j < 16; j++) {
  4091  000ED8  0E00               	movlw	0
  4092  000EDA  6E04               	movwf	i2turnAllOff@j,c
  4093  000EDC                     i2l1856:
  4094  000EDC  0E0F               	movlw	15
  4095  000EDE  6404               	cpfsgt	i2turnAllOff@j,c
  4096  000EE0  D001               	goto	i2l1860
  4097  000EE2  D016               	goto	i2l1866
  4098  000EE4                     i2l1860:
  4099                           
  4100                           ;LED-API.c: 166: pixels[i][j] = 0;
  4101  000EE4  5003               	movf	i2turnAllOff@i,w,c
  4102  000EE6  0D10               	mullw	16
  4103  000EE8  0E00               	movlw	low _pixels
  4104  000EEA  6E01               	movwf	??i2_turnAllOff& (0+255),c
  4105  000EEC  0E03               	movlw	high _pixels
  4106  000EEE  6E02               	movwf	(??i2_turnAllOff+1)& (0+255),c
  4107  000EF0  50F3               	movf	prodl,w,c
  4108  000EF2  2601               	addwf	??i2_turnAllOff,f,c
  4109  000EF4  50F4               	movf	prodh,w,c
  4110  000EF6  2202               	addwfc	??i2_turnAllOff+1,f,c
  4111  000EF8  5004               	movf	i2turnAllOff@j,w,c
  4112  000EFA  0D01               	mullw	1
  4113  000EFC  50F3               	movf	prodl,w,c
  4114  000EFE  2401               	addwf	??i2_turnAllOff,w,c
  4115  000F00  6ED9               	movwf	fsr2l,c
  4116  000F02  50F4               	movf	prodh,w,c
  4117  000F04  2002               	addwfc	??i2_turnAllOff+1,w,c
  4118  000F06  6EDA               	movwf	fsr2h,c
  4119  000F08  0E00               	movlw	0
  4120  000F0A  6EDF               	movwf	indf2,c
  4121  000F0C  2A04               	incf	i2turnAllOff@j,f,c
  4122  000F0E  D7E6               	goto	i2l1856
  4123  000F10                     i2l1866:
  4124  000F10  2A03               	incf	i2turnAllOff@i,f,c
  4125  000F12  D7DE               	goto	i2l1850
  4126  000F14                     __end_ofi2_turnAllOff:
  4127                           	opt stack 0
  4128                           pclatu	equ	0xFFB
  4129                           pclath	equ	0xFFA
  4130                           tblptru	equ	0xFF8
  4131                           tblptrh	equ	0xFF7
  4132                           tblptrl	equ	0xFF6
  4133                           tablat	equ	0xFF5
  4134                           prodh	equ	0xFF4
  4135                           prodl	equ	0xFF3
  4136                           intcon	equ	0xFF2
  4137                           postinc0	equ	0xFEE
  4138                           fsr0h	equ	0xFEA
  4139                           fsr0l	equ	0xFE9
  4140                           wreg	equ	0xFE8
  4141                           postdec1	equ	0xFE5
  4142                           plusw1	equ	0xFE3
  4143                           fsr1h	equ	0xFE2
  4144                           fsr1l	equ	0xFE1
  4145                           indf2	equ	0xFDF
  4146                           postinc2	equ	0xFDE
  4147                           plusw2	equ	0xFDB
  4148                           fsr2h	equ	0xFDA
  4149                           fsr2l	equ	0xFD9
  4150                           status	equ	0xFD8
  4151                           
  4152 ;; *************** function i2_refresh *****************
  4153 ;; Defined at:
  4154 ;;		line 177 in file "Source/LED-API.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  refresh         1    7[COMRAM] unsigned char 
  4159 ;;  refresh         1    6[COMRAM] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4169 ;;      Params:         0       0       0       0       0       0       0
  4170 ;;      Locals:         2       0       0       0       0       0       0
  4171 ;;      Temps:          3       0       0       0       0       0       0
  4172 ;;      Totals:         5       0       0       0       0       0       0
  4173 ;;Total ram usage:        5 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    1
  4176 ;; This function calls:
  4177 ;;		i2_allOff
  4178 ;;		i2_setColHigh
  4179 ;;		i2_setRowHigh
  4180 ;; This function is called by:
  4181 ;;		_checkNextPosition
  4182 ;;		i2_startPong
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text19
  4187  000C44                     __ptext19:
  4188                           	opt stack 0
  4189  000C44                     i2_refresh:
  4190                           	opt stack 22
  4191                           
  4192                           ;LED-API.c: 179: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  4193                           
  4194                           ;incstack = 0
  4195  000C44  0E00               	movlw	0
  4196  000C46  6E07               	movwf	i2refresh@theCol,c
  4197  000C48                     i2l1872:
  4198  000C48  0E07               	movlw	7
  4199  000C4A  6407               	cpfsgt	i2refresh@theCol,c
  4200  000C4C  D001               	goto	i2l1876
  4201  000C4E  0012               	return	
  4202  000C50                     i2l1876:
  4203                           
  4204                           ;LED-API.c: 181: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  4205  000C50  0E00               	movlw	0
  4206  000C52  6E08               	movwf	i2refresh@theRow,c
  4207  000C54                     i2l1878:
  4208  000C54  0E0F               	movlw	15
  4209  000C56  6408               	cpfsgt	i2refresh@theRow,c
  4210  000C58  D001               	goto	i2l1882
  4211  000C5A  D01A               	goto	i2l1890
  4212  000C5C                     i2l1882:
  4213                           
  4214                           ;LED-API.c: 183: if (pixels[theCol][theRow] == 1)
  4215  000C5C  5007               	movf	i2refresh@theCol,w,c
  4216  000C5E  0D10               	mullw	16
  4217  000C60  0E00               	movlw	low _pixels
  4218  000C62  6E04               	movwf	??i2_refresh& (0+255),c
  4219  000C64  0E03               	movlw	high _pixels
  4220  000C66  6E05               	movwf	(??i2_refresh+1)& (0+255),c
  4221  000C68  50F3               	movf	prodl,w,c
  4222  000C6A  2604               	addwf	??i2_refresh,f,c
  4223  000C6C  50F4               	movf	prodh,w,c
  4224  000C6E  2205               	addwfc	??i2_refresh+1,f,c
  4225  000C70  5008               	movf	i2refresh@theRow,w,c
  4226  000C72  0D01               	mullw	1
  4227  000C74  50F3               	movf	prodl,w,c
  4228  000C76  2404               	addwf	??i2_refresh,w,c
  4229  000C78  6ED9               	movwf	fsr2l,c
  4230  000C7A  50F4               	movf	prodh,w,c
  4231  000C7C  2005               	addwfc	??i2_refresh+1,w,c
  4232  000C7E  6EDA               	movwf	fsr2h,c
  4233  000C80  04DE               	decf	postinc2,w,c
  4234  000C82  A4D8               	btfss	status,2,c
  4235  000C84  D003               	goto	i2l1886
  4236                           
  4237                           ;LED-API.c: 184: setRowHigh(theRow);
  4238  000C86  5008               	movf	i2refresh@theRow,w,c
  4239  000C88  ECCE  F007         	call	i2_setRowHigh
  4240  000C8C                     i2l1886:
  4241  000C8C  2A08               	incf	i2refresh@theRow,f,c
  4242  000C8E  D7E2               	goto	i2l1878
  4243  000C90                     i2l1890:
  4244                           
  4245                           ;LED-API.c: 185: }
  4246                           ;LED-API.c: 189: setColHigh(theCol);
  4247  000C90  5007               	movf	i2refresh@theCol,w,c
  4248  000C92  EC69  F008         	call	i2_setColHigh
  4249                           
  4250                           ;LED-API.c: 190: _delay((unsigned long)((500)*(32000000/4000000.0)));
  4251  000C96  0E06               	movlw	6
  4252  000C98  6E04               	movwf	??i2_refresh& (0+255),c
  4253  000C9A  0E30               	movlw	48
  4254  000C9C                     i2u311_47:
  4255  000C9C  2EE8               	decfsz	wreg,f,c
  4256  000C9E  D7FE               	goto	i2u311_47
  4257  000CA0  2E04               	decfsz	??i2_refresh& (0+255),f,c
  4258  000CA2  D7FC               	goto	i2u311_47
  4259  000CA4  D000               	nop2	
  4260                           
  4261                           ;LED-API.c: 191: allOff();
  4262  000CA6  ECA7  F008         	call	i2_allOff	;wreg free
  4263  000CAA  2A07               	incf	i2refresh@theCol,f,c
  4264  000CAC  D7CD               	goto	i2l1872
  4265  000CAE                     __end_ofi2_refresh:
  4266                           	opt stack 0
  4267                           pclatu	equ	0xFFB
  4268                           pclath	equ	0xFFA
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           prodh	equ	0xFF4
  4274                           prodl	equ	0xFF3
  4275                           intcon	equ	0xFF2
  4276                           postinc0	equ	0xFEE
  4277                           fsr0h	equ	0xFEA
  4278                           fsr0l	equ	0xFE9
  4279                           wreg	equ	0xFE8
  4280                           postdec1	equ	0xFE5
  4281                           plusw1	equ	0xFE3
  4282                           fsr1h	equ	0xFE2
  4283                           fsr1l	equ	0xFE1
  4284                           indf2	equ	0xFDF
  4285                           postinc2	equ	0xFDE
  4286                           plusw2	equ	0xFDB
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function i2_setRowHigh *****************
  4292 ;; Defined at:
  4293 ;;		line 24 in file "Source/LED-API.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  row             1    wreg     unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  row             1    2[COMRAM] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4307 ;;      Params:         0       0       0       0       0       0       0
  4308 ;;      Locals:         1       0       0       0       0       0       0
  4309 ;;      Temps:          2       0       0       0       0       0       0
  4310 ;;      Totals:         3       0       0       0       0       0       0
  4311 ;;Total ram usage:        3 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		i2_refresh
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text20
  4321  000F9C                     __ptext20:
  4322                           	opt stack 0
  4323  000F9C                     i2_setRowHigh:
  4324                           	opt stack 22
  4325                           
  4326                           ;incstack = 0
  4327                           ;i2setRowHigh@row stored from wreg
  4328  000F9C  6E03               	movwf	i2setRowHigh@row,c
  4329                           
  4330                           ;LED-API.c: 25: if(row < 8)
  4331  000F9E  0E08               	movlw	8
  4332  000FA0  6003               	cpfslt	i2setRowHigh@row,c
  4333  000FA2  D00D               	goto	i2l1706
  4334                           
  4335                           ;LED-API.c: 26: LATC |= (1 << row);
  4336  000FA4  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4337  000FA8  0E01               	movlw	1
  4338  000FAA  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4339  000FAC  2A01               	incf	??i2_setRowHigh,f,c
  4340  000FAE  D002               	goto	i2u115_44
  4341  000FB0                     i2u115_45:
  4342  000FB0  90D8               	bcf	status,0,c
  4343  000FB2  3602               	rlcf	??i2_setRowHigh+1,f,c
  4344  000FB4                     i2u115_44:
  4345  000FB4  2E01               	decfsz	??i2_setRowHigh,f,c
  4346  000FB6  D7FC               	goto	i2u115_45
  4347  000FB8  5002               	movf	??i2_setRowHigh+1,w,c
  4348  000FBA  128B               	iorwf	3979,f,c	;volatile
  4349  000FBC  0012               	return	
  4350  000FBE                     i2l1706:
  4351                           
  4352                           ;LED-API.c: 27: else
  4353                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  4354  000FBE  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4355  000FC2  0EF8               	movlw	-8
  4356  000FC4  2601               	addwf	??i2_setRowHigh,f,c
  4357  000FC6  0E01               	movlw	1
  4358  000FC8  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4359  000FCA  2A01               	incf	??i2_setRowHigh,f,c
  4360  000FCC  D002               	goto	i2u116_44
  4361  000FCE                     i2u116_45:
  4362  000FCE  90D8               	bcf	status,0,c
  4363  000FD0  3602               	rlcf	??i2_setRowHigh+1,f,c
  4364  000FD2                     i2u116_44:
  4365  000FD2  2E01               	decfsz	??i2_setRowHigh,f,c
  4366  000FD4  D7FC               	goto	i2u116_45
  4367  000FD6  5002               	movf	??i2_setRowHigh+1,w,c
  4368  000FD8  128C               	iorwf	3980,f,c	;volatile
  4369  000FDA  0012               	return	
  4370  000FDC                     __end_ofi2_setRowHigh:
  4371                           	opt stack 0
  4372                           pclatu	equ	0xFFB
  4373                           pclath	equ	0xFFA
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodh	equ	0xFF4
  4379                           prodl	equ	0xFF3
  4380                           intcon	equ	0xFF2
  4381                           postinc0	equ	0xFEE
  4382                           fsr0h	equ	0xFEA
  4383                           fsr0l	equ	0xFE9
  4384                           wreg	equ	0xFE8
  4385                           postdec1	equ	0xFE5
  4386                           plusw1	equ	0xFE3
  4387                           fsr1h	equ	0xFE2
  4388                           fsr1l	equ	0xFE1
  4389                           indf2	equ	0xFDF
  4390                           postinc2	equ	0xFDE
  4391                           plusw2	equ	0xFDB
  4392                           fsr2h	equ	0xFDA
  4393                           fsr2l	equ	0xFD9
  4394                           status	equ	0xFD8
  4395                           
  4396 ;; *************** function i2_setColHigh *****************
  4397 ;; Defined at:
  4398 ;;		line 20 in file "Source/LED-API.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  column          1    wreg     unsigned char 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  column          1    2[COMRAM] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4412 ;;      Params:         0       0       0       0       0       0       0
  4413 ;;      Locals:         1       0       0       0       0       0       0
  4414 ;;      Temps:          2       0       0       0       0       0       0
  4415 ;;      Totals:         3       0       0       0       0       0       0
  4416 ;;Total ram usage:        3 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		i2_refresh
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text21
  4426  0010D2                     __ptext21:
  4427                           	opt stack 0
  4428  0010D2                     i2_setColHigh:
  4429                           	opt stack 22
  4430                           
  4431                           ;incstack = 0
  4432                           ;i2setColHigh@column stored from wreg
  4433  0010D2  6E03               	movwf	i2setColHigh@column,c
  4434                           
  4435                           ;LED-API.c: 21: LATA |= (1 << column);
  4436  0010D4  C003  F001         	movff	i2setColHigh@column,??i2_setColHigh
  4437  0010D8  0E01               	movlw	1
  4438  0010DA  6E02               	movwf	(??i2_setColHigh+1)& (0+255),c
  4439  0010DC  2A01               	incf	??i2_setColHigh,f,c
  4440  0010DE  D002               	goto	i2u113_44
  4441  0010E0                     i2u113_45:
  4442  0010E0  90D8               	bcf	status,0,c
  4443  0010E2  3602               	rlcf	??i2_setColHigh+1,f,c
  4444  0010E4                     i2u113_44:
  4445  0010E4  2E01               	decfsz	??i2_setColHigh,f,c
  4446  0010E6  D7FC               	goto	i2u113_45
  4447  0010E8  5002               	movf	??i2_setColHigh+1,w,c
  4448  0010EA  1289               	iorwf	3977,f,c	;volatile
  4449  0010EC  0012               	return		;funcret
  4450  0010EE                     __end_ofi2_setColHigh:
  4451                           	opt stack 0
  4452                           pclatu	equ	0xFFB
  4453                           pclath	equ	0xFFA
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           prodh	equ	0xFF4
  4459                           prodl	equ	0xFF3
  4460                           intcon	equ	0xFF2
  4461                           postinc0	equ	0xFEE
  4462                           fsr0h	equ	0xFEA
  4463                           fsr0l	equ	0xFE9
  4464                           wreg	equ	0xFE8
  4465                           postdec1	equ	0xFE5
  4466                           plusw1	equ	0xFE3
  4467                           fsr1h	equ	0xFE2
  4468                           fsr1l	equ	0xFE1
  4469                           indf2	equ	0xFDF
  4470                           postinc2	equ	0xFDE
  4471                           plusw2	equ	0xFDB
  4472                           fsr2h	equ	0xFDA
  4473                           fsr2l	equ	0xFD9
  4474                           status	equ	0xFD8
  4475                           
  4476 ;; *************** function i2_allOff *****************
  4477 ;; Defined at:
  4478 ;;		line 171 in file "Source/LED-API.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4492 ;;      Params:         0       0       0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		i2_refresh
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text22
  4506  00114E                     __ptext22:
  4507                           	opt stack 0
  4508  00114E                     i2_allOff:
  4509                           	opt stack 22
  4510                           
  4511                           ;LED-API.c: 172: LATA = 0;
  4512                           
  4513                           ;incstack = 0
  4514  00114E  0E00               	movlw	0
  4515  001150  6E89               	movwf	3977,c	;volatile
  4516                           
  4517                           ;LED-API.c: 173: LATC = 0;
  4518  001152  0E00               	movlw	0
  4519  001154  6E8B               	movwf	3979,c	;volatile
  4520                           
  4521                           ;LED-API.c: 174: LATD = 0;
  4522  001156  0E00               	movlw	0
  4523  001158  6E8C               	movwf	3980,c	;volatile
  4524  00115A  0012               	return		;funcret
  4525  00115C                     __end_ofi2_allOff:
  4526                           	opt stack 0
  4527                           pclatu	equ	0xFFB
  4528                           pclath	equ	0xFFA
  4529                           tblptru	equ	0xFF8
  4530                           tblptrh	equ	0xFF7
  4531                           tblptrl	equ	0xFF6
  4532                           tablat	equ	0xFF5
  4533                           prodh	equ	0xFF4
  4534                           prodl	equ	0xFF3
  4535                           intcon	equ	0xFF2
  4536                           postinc0	equ	0xFEE
  4537                           fsr0h	equ	0xFEA
  4538                           fsr0l	equ	0xFE9
  4539                           wreg	equ	0xFE8
  4540                           postdec1	equ	0xFE5
  4541                           plusw1	equ	0xFE3
  4542                           fsr1h	equ	0xFE2
  4543                           fsr1l	equ	0xFE1
  4544                           indf2	equ	0xFDF
  4545                           postinc2	equ	0xFDE
  4546                           plusw2	equ	0xFDB
  4547                           fsr2h	equ	0xFDA
  4548                           fsr2l	equ	0xFD9
  4549                           status	equ	0xFD8
  4550                           
  4551 ;; *************** function i2_drawSymbol *****************
  4552 ;; Defined at:
  4553 ;;		line 85 in file "Source/LED-API.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  chosenSymbol    1    wreg     unsigned char 
  4556 ;;  offSetX         1    4[COMRAM] unsigned char 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  chosenSymbol    1  103[COMRAM] unsigned char 
  4559 ;;  drawSymbol     68   30[BANK0 ] unsigned char [2][34]
  4560 ;;  drawSymbol     68    5[COMRAM] unsigned char [2][34]
  4561 ;;  drawSymbol     30    0[BANK0 ] unsigned char [2][15]
  4562 ;;  drawSymbol     30   73[COMRAM] unsigned char [2][15]
  4563 ;;  drawSymbol     28   98[BANK0 ] unsigned char [2][14]
  4564 ;;  drawSymbol     24   24[BANK1 ] unsigned char [2][12]
  4565 ;;  drawSymbol     24    0[BANK1 ] unsigned char [2][12]
  4566 ;;  drawSymbol      1   52[BANK1 ] unsigned char 
  4567 ;;  drawSymbol      1   51[BANK1 ] unsigned char 
  4568 ;;  drawSymbol      1   50[BANK1 ] unsigned char 
  4569 ;;  drawSymbol      1   49[BANK1 ] unsigned char 
  4570 ;;  drawSymbol      1   48[BANK1 ] unsigned char 
  4571 ;;  drawSymbol      1  127[BANK0 ] unsigned char 
  4572 ;;  drawSymbol      1  126[BANK0 ] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4582 ;;      Params:         1       0       0       0       0       0       0
  4583 ;;      Locals:        99     128      53       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0
  4585 ;;      Totals:       100     128      53       0       0       0       0
  4586 ;;Total ram usage:      281 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    1
  4589 ;; This function calls:
  4590 ;;		i2_on
  4591 ;; This function is called by:
  4592 ;;		_checkNextPosition
  4593 ;;		i2_startPong
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text23
  4598  000308                     __ptext23:
  4599                           	opt stack 0
  4600  000308                     i2_drawSymbol:
  4601                           	opt stack 22
  4602                           
  4603                           ;incstack = 0
  4604                           ;i2drawSymbol@chosenSymbol stored from wreg
  4605  000308  6E68               	movwf	i2drawSymbol@chosenSymbol,c
  4606                           
  4607                           ;LED-API.c: 87: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  4608  00030A  EE21  F09F         	lfsr	2,drawSymbol@F3224
  4609  00030E  EE11  F000         	lfsr	1,i2drawSymbol@symbolOne
  4610  000312  0E17               	movlw	23
  4611  000314                     i2u232_41:
  4612  000314  CFDB FFE3          	movff	plusw2,plusw1
  4613  000318  06E8               	decf	wreg,f,c
  4614  00031A  E2FC               	bc	i2u232_41
  4615                           
  4616                           ;LED-API.c: 88: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  4617  00031C  EE22  F0C4         	lfsr	2,drawSymbol@F3227
  4618  000320  EE10  F0E2         	lfsr	1,i2drawSymbol@symbolTwo
  4619  000324  0E1B               	movlw	27
  4620  000326                     i2u233_41:
  4621  000326  CFDB FFE3          	movff	plusw2,plusw1
  4622  00032A  06E8               	decf	wreg,f,c
  4623  00032C  E2FC               	bc	i2u233_41
  4624                           
  4625                           ;LED-API.c: 89: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  4626  00032E  EE22  F0E0         	lfsr	2,drawSymbol@F3230
  4627  000332  EE11  F018         	lfsr	1,i2drawSymbol@symbolThree
  4628  000336  0E17               	movlw	23
  4629  000338                     i2u234_41:
  4630  000338  CFDB FFE3          	movff	plusw2,plusw1
  4631  00033C  06E8               	decf	wreg,f,c
  4632  00033E  E2FC               	bc	i2u234_41
  4633                           
  4634                           ;LED-API.c: 91: char symbolPlay[34][2] = {
  4635                           ;LED-API.c: 92: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  4636                           ;LED-API.c: 93: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  4637                           ;LED-API.c: 94: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  4638                           ;LED-API.c: 95: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  4639  000340  EE23  F080         	lfsr	2,drawSymbol@F3233
  4640  000344  EE10  F006         	lfsr	1,i2drawSymbol@symbolPlay
  4641  000348  0E43               	movlw	67
  4642  00034A                     i2u235_41:
  4643  00034A  CFDB FFE3          	movff	plusw2,plusw1
  4644  00034E  06E8               	decf	wreg,f,c
  4645  000350  E2FC               	bc	i2u235_41
  4646                           
  4647                           ;LED-API.c: 97: char symbolGo[34][2] = {
  4648                           ;LED-API.c: 98: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0},
      +                          {5,0},{6,1},{5,2},{4,2},
  4649                           ;LED-API.c: 99: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},{
      +                          13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  4650  000352  EE24  F000         	lfsr	2,drawSymbol@F3236
  4651  000356  EE10  F09E         	lfsr	1,i2drawSymbol@symbolGo
  4652  00035A  0E43               	movlw	67
  4653  00035C                     i2u236_41:
  4654  00035C  CFDB FFE3          	movff	plusw2,plusw1
  4655  000360  06E8               	decf	wreg,f,c
  4656  000362  E2FC               	bc	i2u236_41
  4657                           
  4658                           ;LED-API.c: 101: char symbolArrowRight[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3},{6,
      +                          3},{7,3},{8,3},{7,4},{6,5},{5,7},{6,2},{5,1},{4,0}};
  4659  000364  EE22  F088         	lfsr	2,drawSymbol@F3239
  4660  000368  EE10  F04A         	lfsr	1,i2drawSymbol@symbolArrowRight
  4661  00036C  0E1D               	movlw	29
  4662  00036E                     i2u237_41:
  4663  00036E  CFDB FFE3          	movff	plusw2,plusw1
  4664  000372  06E8               	decf	wreg,f,c
  4665  000374  E2FC               	bc	i2u237_41
  4666                           
  4667                           ;LED-API.c: 102: char symbolArrowLeft[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3}, {6,
      +                          3},{7,3},{8,3}, {1,4},{2,5},{3,6},{1,2},{2,1},{3,0}};
  4668  000376  EE22  F0A6         	lfsr	2,drawSymbol@F3242
  4669  00037A  EE10  F080         	lfsr	1,i2drawSymbol@symbolArrowLeft
  4670  00037E  0E1D               	movlw	29
  4671  000380                     i2u238_41:
  4672  000380  CFDB FFE3          	movff	plusw2,plusw1
  4673  000384  06E8               	decf	wreg,f,c
  4674  000386  E2FC               	bc	i2u238_41
  4675                           
  4676                           ;LED-API.c: 104: switch(chosenSymbol)
  4677  000388  D110               	goto	i2l2610
  4678  00038A                     i2l2524:
  4679                           
  4680                           ;LED-API.c: 109: for(unsigned char i = 0; i < 12; i++)
  4681  00038A  0E00               	movlw	0
  4682  00038C  0100               	movlb	0	; () banked
  4683  00038E  6FFE               	movwf	i2drawSymbol@i& (0+255),b
  4684  000390                     i2l2526:
  4685                           
  4686                           ; BSR set to: 0
  4687  000390  0E0B               	movlw	11
  4688  000392  0100               	movlb	0	; () banked
  4689  000394  65FE               	cpfsgt	i2drawSymbol@i& (0+255),b
  4690  000396  D001               	goto	i2l2530
  4691  000398  0012               	return	
  4692  00039A                     i2l2530:
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;LED-API.c: 110: {
  4696                           ;LED-API.c: 111: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  4697  00039A  0100               	movlb	0	; () banked
  4698  00039C  51FE               	movf	i2drawSymbol@i& (0+255),w,b
  4699  00039E  0D02               	mullw	2
  4700  0003A0  0E00               	movlw	low i2drawSymbol@symbolOne
  4701  0003A2  24F3               	addwf	prodl,w,c
  4702  0003A4  6ED9               	movwf	fsr2l,c
  4703  0003A6  0E01               	movlw	high i2drawSymbol@symbolOne
  4704  0003A8  20F4               	addwfc	prodh,w,c
  4705  0003AA  6EDA               	movwf	fsr2h,c
  4706  0003AC  50DF               	movf	indf2,w,c
  4707  0003AE  2405               	addwf	i2drawSymbol@offSetX,w,c
  4708  0003B0  6E01               	movwf	i2on@row,c
  4709  0003B2  0100               	movlb	0	; () banked
  4710  0003B4  51FE               	movf	i2drawSymbol@i& (0+255),w,b
  4711  0003B6  0D02               	mullw	2
  4712  0003B8  0E01               	movlw	1
  4713  0003BA  26F3               	addwf	prodl,f,c
  4714  0003BC  0E00               	movlw	0
  4715  0003BE  22F4               	addwfc	prodh,f,c
  4716  0003C0  0E00               	movlw	low i2drawSymbol@symbolOne
  4717  0003C2  24F3               	addwf	prodl,w,c
  4718  0003C4  6ED9               	movwf	fsr2l,c
  4719  0003C6  0E01               	movlw	high i2drawSymbol@symbolOne
  4720  0003C8  20F4               	addwfc	prodh,w,c
  4721  0003CA  6EDA               	movwf	fsr2h,c
  4722  0003CC  50DF               	movf	indf2,w,c
  4723  0003CE  EC0C  F008         	call	i2_on
  4724  0003D2  0100               	movlb	0	; () banked
  4725  0003D4  2BFE               	incf	i2drawSymbol@i& (0+255),f,b
  4726  0003D6  D7DC               	goto	i2l2526
  4727  0003D8                     i2l2536:
  4728                           
  4729                           ;LED-API.c: 117: for(unsigned char i = 0; i < 14; i++)
  4730  0003D8  0E00               	movlw	0
  4731  0003DA  0100               	movlb	0	; () banked
  4732  0003DC  6FFF               	movwf	i2drawSymbol@i_82& (0+255),b
  4733  0003DE                     i2l2538:
  4734                           
  4735                           ; BSR set to: 0
  4736  0003DE  0E0D               	movlw	13
  4737  0003E0  0100               	movlb	0	; () banked
  4738  0003E2  65FF               	cpfsgt	i2drawSymbol@i_82& (0+255),b
  4739  0003E4  D001               	goto	i2l2542
  4740  0003E6  0012               	return	
  4741  0003E8                     i2l2542:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;LED-API.c: 118: {
  4745                           ;LED-API.c: 119: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  4746  0003E8  0100               	movlb	0	; () banked
  4747  0003EA  51FF               	movf	i2drawSymbol@i_82& (0+255),w,b
  4748  0003EC  0D02               	mullw	2
  4749  0003EE  0EE2               	movlw	low i2drawSymbol@symbolTwo
  4750  0003F0  24F3               	addwf	prodl,w,c
  4751  0003F2  6ED9               	movwf	fsr2l,c
  4752  0003F4  0E00               	movlw	high i2drawSymbol@symbolTwo
  4753  0003F6  20F4               	addwfc	prodh,w,c
  4754  0003F8  6EDA               	movwf	fsr2h,c
  4755  0003FA  50DF               	movf	indf2,w,c
  4756  0003FC  2405               	addwf	i2drawSymbol@offSetX,w,c
  4757  0003FE  6E01               	movwf	i2on@row,c
  4758  000400  0100               	movlb	0	; () banked
  4759  000402  51FF               	movf	i2drawSymbol@i_82& (0+255),w,b
  4760  000404  0D02               	mullw	2
  4761  000406  0E01               	movlw	1
  4762  000408  26F3               	addwf	prodl,f,c
  4763  00040A  0E00               	movlw	0
  4764  00040C  22F4               	addwfc	prodh,f,c
  4765  00040E  0EE2               	movlw	low i2drawSymbol@symbolTwo
  4766  000410  24F3               	addwf	prodl,w,c
  4767  000412  6ED9               	movwf	fsr2l,c
  4768  000414  0E00               	movlw	high i2drawSymbol@symbolTwo
  4769  000416  20F4               	addwfc	prodh,w,c
  4770  000418  6EDA               	movwf	fsr2h,c
  4771  00041A  50DF               	movf	indf2,w,c
  4772  00041C  EC0C  F008         	call	i2_on
  4773  000420  0100               	movlb	0	; () banked
  4774  000422  2BFF               	incf	i2drawSymbol@i_82& (0+255),f,b
  4775  000424  D7DC               	goto	i2l2538
  4776  000426                     i2l2548:
  4777                           
  4778                           ;LED-API.c: 125: for(unsigned char i = 0; i < 12; i++)
  4779  000426  0E00               	movlw	0
  4780  000428  0101               	movlb	1	; () banked
  4781  00042A  6F30               	movwf	i2drawSymbol@i_83& (0+255),b
  4782  00042C                     i2l2550:
  4783                           
  4784                           ; BSR set to: 1
  4785  00042C  0E0B               	movlw	11
  4786  00042E  0101               	movlb	1	; () banked
  4787  000430  6530               	cpfsgt	i2drawSymbol@i_83& (0+255),b
  4788  000432  D001               	goto	i2l2554
  4789  000434  0012               	return	
  4790  000436                     i2l2554:
  4791                           
  4792                           ; BSR set to: 1
  4793                           ;LED-API.c: 126: {
  4794                           ;LED-API.c: 127: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  4795  000436  0101               	movlb	1	; () banked
  4796  000438  5130               	movf	i2drawSymbol@i_83& (0+255),w,b
  4797  00043A  0D02               	mullw	2
  4798  00043C  0E18               	movlw	low i2drawSymbol@symbolThree
  4799  00043E  24F3               	addwf	prodl,w,c
  4800  000440  6ED9               	movwf	fsr2l,c
  4801  000442  0E01               	movlw	high i2drawSymbol@symbolThree
  4802  000444  20F4               	addwfc	prodh,w,c
  4803  000446  6EDA               	movwf	fsr2h,c
  4804  000448  50DF               	movf	indf2,w,c
  4805  00044A  2405               	addwf	i2drawSymbol@offSetX,w,c
  4806  00044C  6E01               	movwf	i2on@row,c
  4807  00044E  0101               	movlb	1	; () banked
  4808  000450  5130               	movf	i2drawSymbol@i_83& (0+255),w,b
  4809  000452  0D02               	mullw	2
  4810  000454  0E01               	movlw	1
  4811  000456  26F3               	addwf	prodl,f,c
  4812  000458  0E00               	movlw	0
  4813  00045A  22F4               	addwfc	prodh,f,c
  4814  00045C  0E18               	movlw	low i2drawSymbol@symbolThree
  4815  00045E  24F3               	addwf	prodl,w,c
  4816  000460  6ED9               	movwf	fsr2l,c
  4817  000462  0E01               	movlw	high i2drawSymbol@symbolThree
  4818  000464  20F4               	addwfc	prodh,w,c
  4819  000466  6EDA               	movwf	fsr2h,c
  4820  000468  50DF               	movf	indf2,w,c
  4821  00046A  EC0C  F008         	call	i2_on
  4822  00046E  0101               	movlb	1	; () banked
  4823  000470  2B30               	incf	i2drawSymbol@i_83& (0+255),f,b
  4824  000472  D7DC               	goto	i2l2550
  4825  000474                     i2l2560:
  4826                           
  4827                           ;LED-API.c: 133: for(unsigned char i = 0; i < 34; i++)
  4828  000474  0E00               	movlw	0
  4829  000476  0101               	movlb	1	; () banked
  4830  000478  6F31               	movwf	i2drawSymbol@i_84& (0+255),b
  4831  00047A                     i2l2562:
  4832                           
  4833                           ; BSR set to: 1
  4834  00047A  0E21               	movlw	33
  4835  00047C  0101               	movlb	1	; () banked
  4836  00047E  6531               	cpfsgt	i2drawSymbol@i_84& (0+255),b
  4837  000480  D001               	goto	i2l2566
  4838  000482  0012               	return	
  4839  000484                     i2l2566:
  4840                           
  4841                           ; BSR set to: 1
  4842                           ;LED-API.c: 134: {
  4843                           ;LED-API.c: 135: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  4844  000484  0101               	movlb	1	; () banked
  4845  000486  5131               	movf	i2drawSymbol@i_84& (0+255),w,b
  4846  000488  0D02               	mullw	2
  4847  00048A  0E06               	movlw	low i2drawSymbol@symbolPlay
  4848  00048C  24F3               	addwf	prodl,w,c
  4849  00048E  6ED9               	movwf	fsr2l,c
  4850  000490  0E00               	movlw	high i2drawSymbol@symbolPlay
  4851  000492  20F4               	addwfc	prodh,w,c
  4852  000494  6EDA               	movwf	fsr2h,c
  4853  000496  50DF               	movf	indf2,w,c
  4854  000498  2405               	addwf	i2drawSymbol@offSetX,w,c
  4855  00049A  6E01               	movwf	i2on@row,c
  4856  00049C  0101               	movlb	1	; () banked
  4857  00049E  5131               	movf	i2drawSymbol@i_84& (0+255),w,b
  4858  0004A0  0D02               	mullw	2
  4859  0004A2  0E01               	movlw	1
  4860  0004A4  26F3               	addwf	prodl,f,c
  4861  0004A6  0E00               	movlw	0
  4862  0004A8  22F4               	addwfc	prodh,f,c
  4863  0004AA  0E06               	movlw	low i2drawSymbol@symbolPlay
  4864  0004AC  24F3               	addwf	prodl,w,c
  4865  0004AE  6ED9               	movwf	fsr2l,c
  4866  0004B0  0E00               	movlw	high i2drawSymbol@symbolPlay
  4867  0004B2  20F4               	addwfc	prodh,w,c
  4868  0004B4  6EDA               	movwf	fsr2h,c
  4869  0004B6  50DF               	movf	indf2,w,c
  4870  0004B8  EC0C  F008         	call	i2_on
  4871  0004BC  0101               	movlb	1	; () banked
  4872  0004BE  2B31               	incf	i2drawSymbol@i_84& (0+255),f,b
  4873  0004C0  D7DC               	goto	i2l2562
  4874  0004C2                     i2l2572:
  4875                           
  4876                           ;LED-API.c: 141: for(unsigned char i = 0; i < 34; i++)
  4877  0004C2  0E00               	movlw	0
  4878  0004C4  0101               	movlb	1	; () banked
  4879  0004C6  6F32               	movwf	i2drawSymbol@i_85& (0+255),b
  4880  0004C8                     i2l2574:
  4881                           
  4882                           ; BSR set to: 1
  4883  0004C8  0E21               	movlw	33
  4884  0004CA  0101               	movlb	1	; () banked
  4885  0004CC  6532               	cpfsgt	i2drawSymbol@i_85& (0+255),b
  4886  0004CE  D001               	goto	i2l2578
  4887  0004D0  0012               	return	
  4888  0004D2                     i2l2578:
  4889                           
  4890                           ; BSR set to: 1
  4891                           ;LED-API.c: 142: {
  4892                           ;LED-API.c: 143: on(symbolGo[i][1], symbolGo[i][0]);
  4893  0004D2  0101               	movlb	1	; () banked
  4894  0004D4  5132               	movf	i2drawSymbol@i_85& (0+255),w,b
  4895  0004D6  0D02               	mullw	2
  4896  0004D8  0E9E               	movlw	low i2drawSymbol@symbolGo
  4897  0004DA  24F3               	addwf	prodl,w,c
  4898  0004DC  6ED9               	movwf	fsr2l,c
  4899  0004DE  0E00               	movlw	high i2drawSymbol@symbolGo
  4900  0004E0  20F4               	addwfc	prodh,w,c
  4901  0004E2  6EDA               	movwf	fsr2h,c
  4902  0004E4  50DF               	movf	indf2,w,c
  4903  0004E6  6E01               	movwf	i2on@row,c
  4904  0004E8  0101               	movlb	1	; () banked
  4905  0004EA  5132               	movf	i2drawSymbol@i_85& (0+255),w,b
  4906  0004EC  0D02               	mullw	2
  4907  0004EE  0E01               	movlw	1
  4908  0004F0  26F3               	addwf	prodl,f,c
  4909  0004F2  0E00               	movlw	0
  4910  0004F4  22F4               	addwfc	prodh,f,c
  4911  0004F6  0E9E               	movlw	low i2drawSymbol@symbolGo
  4912  0004F8  24F3               	addwf	prodl,w,c
  4913  0004FA  6ED9               	movwf	fsr2l,c
  4914  0004FC  0E00               	movlw	high i2drawSymbol@symbolGo
  4915  0004FE  20F4               	addwfc	prodh,w,c
  4916  000500  6EDA               	movwf	fsr2h,c
  4917  000502  50DF               	movf	indf2,w,c
  4918  000504  EC0C  F008         	call	i2_on
  4919  000508  0101               	movlb	1	; () banked
  4920  00050A  2B32               	incf	i2drawSymbol@i_85& (0+255),f,b
  4921  00050C  D7DD               	goto	i2l2574
  4922  00050E                     i2l2584:
  4923                           
  4924                           ;LED-API.c: 147: for(unsigned char i = 0; i < 15; i++)
  4925  00050E  0E00               	movlw	0
  4926  000510  0101               	movlb	1	; () banked
  4927  000512  6F33               	movwf	i2drawSymbol@i_86& (0+255),b
  4928  000514                     i2l2586:
  4929                           
  4930                           ; BSR set to: 1
  4931  000514  0E0E               	movlw	14
  4932  000516  0101               	movlb	1	; () banked
  4933  000518  6533               	cpfsgt	i2drawSymbol@i_86& (0+255),b
  4934  00051A  D001               	goto	i2l2590
  4935  00051C  0012               	return	
  4936  00051E                     i2l2590:
  4937                           
  4938                           ; BSR set to: 1
  4939                           ;LED-API.c: 148: {
  4940                           ;LED-API.c: 149: on(symbolArrowLeft[i][1], symbolGo[i][0] + offSetX);
  4941  00051E  0101               	movlb	1	; () banked
  4942  000520  5133               	movf	i2drawSymbol@i_86& (0+255),w,b
  4943  000522  0D02               	mullw	2
  4944  000524  0E9E               	movlw	low i2drawSymbol@symbolGo
  4945  000526  24F3               	addwf	prodl,w,c
  4946  000528  6ED9               	movwf	fsr2l,c
  4947  00052A  0E00               	movlw	high i2drawSymbol@symbolGo
  4948  00052C  20F4               	addwfc	prodh,w,c
  4949  00052E  6EDA               	movwf	fsr2h,c
  4950  000530  50DF               	movf	indf2,w,c
  4951  000532  2405               	addwf	i2drawSymbol@offSetX,w,c
  4952  000534  6E01               	movwf	i2on@row,c
  4953  000536  0101               	movlb	1	; () banked
  4954  000538  5133               	movf	i2drawSymbol@i_86& (0+255),w,b
  4955  00053A  0D02               	mullw	2
  4956  00053C  0E01               	movlw	1
  4957  00053E  26F3               	addwf	prodl,f,c
  4958  000540  0E00               	movlw	0
  4959  000542  22F4               	addwfc	prodh,f,c
  4960  000544  0E80               	movlw	low i2drawSymbol@symbolArrowLeft
  4961  000546  24F3               	addwf	prodl,w,c
  4962  000548  6ED9               	movwf	fsr2l,c
  4963  00054A  0E00               	movlw	high i2drawSymbol@symbolArrowLeft
  4964  00054C  20F4               	addwfc	prodh,w,c
  4965  00054E  6EDA               	movwf	fsr2h,c
  4966  000550  50DF               	movf	indf2,w,c
  4967  000552  EC0C  F008         	call	i2_on
  4968  000556  0101               	movlb	1	; () banked
  4969  000558  2B33               	incf	i2drawSymbol@i_86& (0+255),f,b
  4970  00055A  D7DC               	goto	i2l2586
  4971  00055C                     i2l2596:
  4972                           
  4973                           ;LED-API.c: 153: for(unsigned char i = 0; i < 15; i++)
  4974  00055C  0E00               	movlw	0
  4975  00055E  0101               	movlb	1	; () banked
  4976  000560  6F34               	movwf	i2drawSymbol@i_87& (0+255),b
  4977  000562                     i2l2598:
  4978                           
  4979                           ; BSR set to: 1
  4980  000562  0E0E               	movlw	14
  4981  000564  0101               	movlb	1	; () banked
  4982  000566  6534               	cpfsgt	i2drawSymbol@i_87& (0+255),b
  4983  000568  D001               	goto	i2l2602
  4984  00056A  0012               	return	
  4985  00056C                     i2l2602:
  4986                           
  4987                           ; BSR set to: 1
  4988                           ;LED-API.c: 154: {
  4989                           ;LED-API.c: 155: on(symbolArrowRight[i][1], symbolGo[i][0]+ offSetX);
  4990  00056C  0101               	movlb	1	; () banked
  4991  00056E  5134               	movf	i2drawSymbol@i_87& (0+255),w,b
  4992  000570  0D02               	mullw	2
  4993  000572  0E9E               	movlw	low i2drawSymbol@symbolGo
  4994  000574  24F3               	addwf	prodl,w,c
  4995  000576  6ED9               	movwf	fsr2l,c
  4996  000578  0E00               	movlw	high i2drawSymbol@symbolGo
  4997  00057A  20F4               	addwfc	prodh,w,c
  4998  00057C  6EDA               	movwf	fsr2h,c
  4999  00057E  50DF               	movf	indf2,w,c
  5000  000580  2405               	addwf	i2drawSymbol@offSetX,w,c
  5001  000582  6E01               	movwf	i2on@row,c
  5002  000584  0101               	movlb	1	; () banked
  5003  000586  5134               	movf	i2drawSymbol@i_87& (0+255),w,b
  5004  000588  0D02               	mullw	2
  5005  00058A  0E01               	movlw	1
  5006  00058C  26F3               	addwf	prodl,f,c
  5007  00058E  0E00               	movlw	0
  5008  000590  22F4               	addwfc	prodh,f,c
  5009  000592  0E4A               	movlw	low i2drawSymbol@symbolArrowRight
  5010  000594  24F3               	addwf	prodl,w,c
  5011  000596  6ED9               	movwf	fsr2l,c
  5012  000598  0E00               	movlw	high i2drawSymbol@symbolArrowRight
  5013  00059A  20F4               	addwfc	prodh,w,c
  5014  00059C  6EDA               	movwf	fsr2h,c
  5015  00059E  50DF               	movf	indf2,w,c
  5016  0005A0  EC0C  F008         	call	i2_on
  5017  0005A4  0101               	movlb	1	; () banked
  5018  0005A6  2B34               	incf	i2drawSymbol@i_87& (0+255),f,b
  5019  0005A8  D7DC               	goto	i2l2598
  5020  0005AA                     i2l2610:
  5021  0005AA  5068               	movf	i2drawSymbol@chosenSymbol,w,c
  5022                           
  5023                           ; Switch size 1, requested type "space"
  5024                           ; Number of cases is 7, Range of values is 1 to 7
  5025                           ; switch strategies available:
  5026                           ; Name         Instructions Cycles
  5027                           ; simple_byte           22    12 (average)
  5028                           ;	Chosen strategy is simple_byte
  5029  0005AC  0A01               	xorlw	1	; case 1
  5030  0005AE  B4D8               	btfsc	status,2,c
  5031  0005B0  D6EC               	goto	i2l2524
  5032  0005B2  0A03               	xorlw	3	; case 2
  5033  0005B4  B4D8               	btfsc	status,2,c
  5034  0005B6  D710               	goto	i2l2536
  5035  0005B8  0A01               	xorlw	1	; case 3
  5036  0005BA  B4D8               	btfsc	status,2,c
  5037  0005BC  D734               	goto	i2l2548
  5038  0005BE  0A07               	xorlw	7	; case 4
  5039  0005C0  B4D8               	btfsc	status,2,c
  5040  0005C2  D758               	goto	i2l2560
  5041  0005C4  0A01               	xorlw	1	; case 5
  5042  0005C6  B4D8               	btfsc	status,2,c
  5043  0005C8  D77C               	goto	i2l2572
  5044  0005CA  0A03               	xorlw	3	; case 6
  5045  0005CC  B4D8               	btfsc	status,2,c
  5046  0005CE  D79F               	goto	i2l2584
  5047  0005D0  0A01               	xorlw	1	; case 7
  5048  0005D2  A4D8               	btfss	status,2,c
  5049  0005D4  0012               	return	
  5050  0005D6  D7C2               	goto	i2l2596
  5051  0005D8                     __end_ofi2_drawSymbol:
  5052                           	opt stack 0
  5053                           pclatu	equ	0xFFB
  5054                           pclath	equ	0xFFA
  5055                           tblptru	equ	0xFF8
  5056                           tblptrh	equ	0xFF7
  5057                           tblptrl	equ	0xFF6
  5058                           tablat	equ	0xFF5
  5059                           prodh	equ	0xFF4
  5060                           prodl	equ	0xFF3
  5061                           intcon	equ	0xFF2
  5062                           postinc0	equ	0xFEE
  5063                           fsr0h	equ	0xFEA
  5064                           fsr0l	equ	0xFE9
  5065                           wreg	equ	0xFE8
  5066                           postdec1	equ	0xFE5
  5067                           plusw1	equ	0xFE3
  5068                           fsr1h	equ	0xFE2
  5069                           fsr1l	equ	0xFE1
  5070                           indf2	equ	0xFDF
  5071                           postinc2	equ	0xFDE
  5072                           plusw2	equ	0xFDB
  5073                           fsr2h	equ	0xFDA
  5074                           fsr2l	equ	0xFD9
  5075                           status	equ	0xFD8
  5076                           
  5077 ;; *************** function i2_on *****************
  5078 ;; Defined at:
  5079 ;;		line 43 in file "Source/LED-API.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  column          1    wreg     unsigned char 
  5082 ;;  row             1    0[COMRAM] unsigned char 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  column          1    3[COMRAM] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5094 ;;      Params:         1       0       0       0       0       0       0
  5095 ;;      Locals:         1       0       0       0       0       0       0
  5096 ;;      Temps:          2       0       0       0       0       0       0
  5097 ;;      Totals:         4       0       0       0       0       0       0
  5098 ;;Total ram usage:        4 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_writePong
  5104 ;;		i2_drawSymbol
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text24
  5109  001018                     __ptext24:
  5110                           	opt stack 0
  5111  001018                     i2_on:
  5112                           	opt stack 24
  5113                           
  5114                           ;incstack = 0
  5115                           ;i2on@column stored from wreg
  5116  001018  6E04               	movwf	i2on@column,c
  5117                           
  5118                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  5119  00101A  0E0F               	movlw	15
  5120  00101C  6401               	cpfsgt	i2on@row,c
  5121  00101E  D001               	goto	i2l2496
  5122  001020  0012               	return	
  5123  001022                     i2l2496:
  5124                           
  5125                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  5126  001022  0E07               	movlw	7
  5127  001024  6404               	cpfsgt	i2on@column,c
  5128  001026  D001               	goto	i2l2500
  5129  001028  0012               	return	
  5130  00102A                     i2l2500:
  5131                           
  5132                           ;LED-API.c: 50: pixels[column][row] = 1;
  5133  00102A  5004               	movf	i2on@column,w,c
  5134  00102C  0D10               	mullw	16
  5135  00102E  0E00               	movlw	low _pixels
  5136  001030  6E02               	movwf	??i2_on& (0+255),c
  5137  001032  0E03               	movlw	high _pixels
  5138  001034  6E03               	movwf	(??i2_on+1)& (0+255),c
  5139  001036  50F3               	movf	prodl,w,c
  5140  001038  2602               	addwf	??i2_on,f,c
  5141  00103A  50F4               	movf	prodh,w,c
  5142  00103C  2203               	addwfc	??i2_on+1,f,c
  5143  00103E  5001               	movf	i2on@row,w,c
  5144  001040  0D01               	mullw	1
  5145  001042  50F3               	movf	prodl,w,c
  5146  001044  2402               	addwf	??i2_on,w,c
  5147  001046  6ED9               	movwf	fsr2l,c
  5148  001048  50F4               	movf	prodh,w,c
  5149  00104A  2003               	addwfc	??i2_on+1,w,c
  5150  00104C  6EDA               	movwf	fsr2h,c
  5151  00104E  0E01               	movlw	1
  5152  001050  6EDF               	movwf	indf2,c
  5153  001052  0012               	return		;funcret
  5154  001054                     __end_ofi2_on:
  5155                           	opt stack 0
  5156                           pclatu	equ	0xFFB
  5157                           pclath	equ	0xFFA
  5158                           tblptru	equ	0xFF8
  5159                           tblptrh	equ	0xFF7
  5160                           tblptrl	equ	0xFF6
  5161                           tablat	equ	0xFF5
  5162                           prodh	equ	0xFF4
  5163                           prodl	equ	0xFF3
  5164                           intcon	equ	0xFF2
  5165                           postinc0	equ	0xFEE
  5166                           fsr0h	equ	0xFEA
  5167                           fsr0l	equ	0xFE9
  5168                           wreg	equ	0xFE8
  5169                           postdec1	equ	0xFE5
  5170                           plusw1	equ	0xFE3
  5171                           fsr1h	equ	0xFE2
  5172                           fsr1l	equ	0xFE1
  5173                           indf2	equ	0xFDF
  5174                           postinc2	equ	0xFDE
  5175                           plusw2	equ	0xFDB
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _checkWallCollision *****************
  5181 ;; Defined at:
  5182 ;;		line 208 in file "main.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;		None
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5196 ;;      Params:         0       0       0       0       0       0       0
  5197 ;;      Locals:         0       0       0       0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0
  5199 ;;      Totals:         0       0       0       0       0       0       0
  5200 ;;Total ram usage:        0 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    2
  5203 ;; This function calls:
  5204 ;;		_handleWallCollision
  5205 ;; This function is called by:
  5206 ;;		_checkNextPosition
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text25
  5211  00115C                     __ptext25:
  5212                           	opt stack 0
  5213  00115C                     _checkWallCollision:
  5214                           	opt stack 22
  5215                           
  5216                           ;main.c: 209: if (_nextPos[1] < 0 || _nextPos[1] > 7) {
  5217                           
  5218                           ;incstack = 0
  5219  00115C  0E07               	movlw	7
  5220  00115E  0101               	movlb	1	; () banked
  5221  001160  65C5               	cpfsgt	(__nextPos+1)& (0+255),b
  5222  001162  0012               	return	
  5223                           
  5224                           ; BSR set to: 1
  5225                           ;main.c: 210: handleWallCollision();
  5226  001164  EC2A  F008         	call	_handleWallCollision	;wreg free
  5227  001168  0012               	return	
  5228  00116A                     __end_of_checkWallCollision:
  5229                           	opt stack 0
  5230                           pclatu	equ	0xFFB
  5231                           pclath	equ	0xFFA
  5232                           tblptru	equ	0xFF8
  5233                           tblptrh	equ	0xFF7
  5234                           tblptrl	equ	0xFF6
  5235                           tablat	equ	0xFF5
  5236                           prodh	equ	0xFF4
  5237                           prodl	equ	0xFF3
  5238                           intcon	equ	0xFF2
  5239                           postinc0	equ	0xFEE
  5240                           fsr0h	equ	0xFEA
  5241                           fsr0l	equ	0xFE9
  5242                           wreg	equ	0xFE8
  5243                           postdec1	equ	0xFE5
  5244                           plusw1	equ	0xFE3
  5245                           fsr1h	equ	0xFE2
  5246                           fsr1l	equ	0xFE1
  5247                           indf2	equ	0xFDF
  5248                           postinc2	equ	0xFDE
  5249                           plusw2	equ	0xFDB
  5250                           fsr2h	equ	0xFDA
  5251                           fsr2l	equ	0xFD9
  5252                           status	equ	0xFD8
  5253                           
  5254 ;; *************** function _handleWallCollision *****************
  5255 ;; Defined at:
  5256 ;;		line 190 in file "main.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5270 ;;      Params:         0       0       0       0       0       0       0
  5271 ;;      Locals:         0       0       0       0       0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0
  5273 ;;      Totals:         0       0       0       0       0       0       0
  5274 ;;Total ram usage:        0 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    1
  5277 ;; This function calls:
  5278 ;;		_getNextPosition
  5279 ;; This function is called by:
  5280 ;;		_checkWallCollision
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text26
  5285  001054                     __ptext26:
  5286                           	opt stack 0
  5287  001054                     _handleWallCollision:
  5288                           	opt stack 22
  5289                           
  5290                           ;main.c: 191: switch (_ball.bDirection) {
  5291                           
  5292                           ;incstack = 0
  5293  001054  D00A               	goto	i2l2054
  5294  001056                     i2l2044:
  5295                           
  5296                           ;main.c: 193: _ball.bDirection = 3;
  5297  001056  0E03               	movlw	3
  5298  001058  D005               	goto	L12
  5299  00105A                     i2l2046:
  5300                           
  5301                           ; BSR set to: 1
  5302                           ;main.c: 196: _ball.bDirection = 1;
  5303  00105A  0E01               	movlw	1
  5304  00105C  D003               	goto	L12
  5305  00105E                     i2l2048:
  5306                           
  5307                           ; BSR set to: 1
  5308                           ;main.c: 199: _ball.bDirection = 6;
  5309  00105E  0E06               	movlw	6
  5310  001060  D001               	goto	L12
  5311  001062                     i2l2050:
  5312                           
  5313                           ; BSR set to: 1
  5314                           ;main.c: 202: _ball.bDirection = 4;
  5315  001062  0E04               	movlw	4
  5316  001064                     L12:
  5317  001064  0101               	movlb	1	; () banked
  5318  001066  6FC3               	movwf	(__ball+2)& (0+255),b
  5319                           
  5320                           ; BSR set to: 1
  5321                           ;main.c: 204: }
  5322                           
  5323                           ;main.c: 203: break;
  5324  001068  D00E               	goto	i2l2056
  5325  00106A                     i2l2054:
  5326  00106A  0101               	movlb	1	; () banked
  5327  00106C  51C3               	movf	(__ball+2)& (0+255),w,b
  5328                           
  5329                           ; Switch size 1, requested type "space"
  5330                           ; Number of cases is 4, Range of values is 1 to 6
  5331                           ; switch strategies available:
  5332                           ; Name         Instructions Cycles
  5333                           ; simple_byte           13     7 (average)
  5334                           ;	Chosen strategy is simple_byte
  5335  00106E  0A01               	xorlw	1	; case 1
  5336  001070  B4D8               	btfsc	status,2,c
  5337  001072  D7F1               	goto	i2l2044
  5338  001074  0A02               	xorlw	2	; case 3
  5339  001076  B4D8               	btfsc	status,2,c
  5340  001078  D7F0               	goto	i2l2046
  5341  00107A  0A07               	xorlw	7	; case 4
  5342  00107C  B4D8               	btfsc	status,2,c
  5343  00107E  D7EF               	goto	i2l2048
  5344  001080  0A02               	xorlw	2	; case 6
  5345  001082  B4D8               	btfsc	status,2,c
  5346  001084  D7EE               	goto	i2l2050
  5347  001086                     i2l2056:
  5348                           
  5349                           ; BSR set to: 1
  5350                           ;main.c: 205: getNextPosition();
  5351  001086  EC2E  F005         	call	_getNextPosition	;wreg free
  5352  00108A  0012               	return		;funcret
  5353  00108C                     __end_of_handleWallCollision:
  5354                           	opt stack 0
  5355                           pclatu	equ	0xFFB
  5356                           pclath	equ	0xFFA
  5357                           tblptru	equ	0xFF8
  5358                           tblptrh	equ	0xFF7
  5359                           tblptrl	equ	0xFF6
  5360                           tablat	equ	0xFF5
  5361                           prodh	equ	0xFF4
  5362                           prodl	equ	0xFF3
  5363                           intcon	equ	0xFF2
  5364                           postinc0	equ	0xFEE
  5365                           fsr0h	equ	0xFEA
  5366                           fsr0l	equ	0xFE9
  5367                           wreg	equ	0xFE8
  5368                           postdec1	equ	0xFE5
  5369                           plusw1	equ	0xFE3
  5370                           fsr1h	equ	0xFE2
  5371                           fsr1l	equ	0xFE1
  5372                           indf2	equ	0xFDF
  5373                           postinc2	equ	0xFDE
  5374                           plusw2	equ	0xFDB
  5375                           fsr2h	equ	0xFDA
  5376                           fsr2l	equ	0xFD9
  5377                           status	equ	0xFD8
  5378                           
  5379 ;; *************** function _getNextPosition *****************
  5380 ;; Defined at:
  5381 ;;		line 163 in file "main.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;		None
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;		None
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2, status,0
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5395 ;;      Params:         0       0       0       0       0       0       0
  5396 ;;      Locals:         0       0       0       0       0       0       0
  5397 ;;      Temps:          0       0       0       0       0       0       0
  5398 ;;      Totals:         0       0       0       0       0       0       0
  5399 ;;Total ram usage:        0 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_handleWallCollision
  5405 ;;		_checkNextPosition
  5406 ;;		_handlePaddleCollision
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text27
  5411  000A5C                     __ptext27:
  5412                           	opt stack 0
  5413  000A5C                     _getNextPosition:
  5414                           	opt stack 24
  5415                           
  5416                           ;main.c: 164: switch (_ball.bDirection) {
  5417                           
  5418                           ;incstack = 0
  5419  000A5C  D02E               	goto	i2l1756
  5420  000A5E                     i2l1742:
  5421                           
  5422                           ;main.c: 166: _nextPos[0] = _ball.bPos[0] + 1;
  5423  000A5E  0101               	movlb	1	; () banked
  5424  000A60  29C1               	incf	__ball& (0+255),w,b
  5425  000A62  0101               	movlb	1	; () banked
  5426  000A64  6FC4               	movwf	__nextPos& (0+255),b
  5427                           
  5428                           ;main.c: 167: _nextPos[1] = _ball.bPos[1] + 1;
  5429  000A66  0101               	movlb	1	; () banked
  5430  000A68  29C2               	incf	(__ball+1)& (0+255),w,b
  5431  000A6A  0101               	movlb	1	; () banked
  5432  000A6C  6FC5               	movwf	(__nextPos+1)& (0+255),b
  5433                           
  5434                           ;main.c: 168: break;
  5435  000A6E  0012               	return	
  5436  000A70                     i2l1744:
  5437                           
  5438                           ; BSR set to: 1
  5439                           ;main.c: 170: _nextPos[0] = _ball.bPos[0] + 1;
  5440  000A70  0101               	movlb	1	; () banked
  5441  000A72  29C1               	incf	__ball& (0+255),w,b
  5442  000A74  0101               	movlb	1	; () banked
  5443  000A76  6FC4               	movwf	__nextPos& (0+255),b
  5444                           
  5445                           ;main.c: 171: break;
  5446  000A78  0012               	return	
  5447  000A7A                     i2l1746:
  5448                           
  5449                           ; BSR set to: 1
  5450                           ;main.c: 173: _nextPos[0] = _ball.bPos[0] + 1;
  5451  000A7A  0101               	movlb	1	; () banked
  5452  000A7C  29C1               	incf	__ball& (0+255),w,b
  5453  000A7E  0101               	movlb	1	; () banked
  5454  000A80  6FC4               	movwf	__nextPos& (0+255),b
  5455                           
  5456                           ;main.c: 174: _nextPos[1] = _ball.bPos[1] - 1;
  5457  000A82  0101               	movlb	1	; () banked
  5458  000A84  05C2               	decf	(__ball+1)& (0+255),w,b
  5459  000A86  0101               	movlb	1	; () banked
  5460  000A88  6FC5               	movwf	(__nextPos+1)& (0+255),b
  5461                           
  5462                           ;main.c: 175: break;
  5463  000A8A  0012               	return	
  5464  000A8C                     i2l1748:
  5465                           
  5466                           ; BSR set to: 1
  5467                           ;main.c: 177: _nextPos[0] = _ball.bPos[0] - 1;
  5468  000A8C  0101               	movlb	1	; () banked
  5469  000A8E  05C1               	decf	__ball& (0+255),w,b
  5470  000A90  0101               	movlb	1	; () banked
  5471  000A92  6FC4               	movwf	__nextPos& (0+255),b
  5472                           
  5473                           ;main.c: 178: _nextPos[1] = _ball.bPos[1] - 1;
  5474  000A94  0101               	movlb	1	; () banked
  5475  000A96  05C2               	decf	(__ball+1)& (0+255),w,b
  5476  000A98  0101               	movlb	1	; () banked
  5477  000A9A  6FC5               	movwf	(__nextPos+1)& (0+255),b
  5478                           
  5479                           ;main.c: 179: break;
  5480  000A9C  0012               	return	
  5481  000A9E                     i2l1750:
  5482                           
  5483                           ; BSR set to: 1
  5484                           ;main.c: 181: _nextPos[0] = _ball.bPos[0] - 1;
  5485  000A9E  0101               	movlb	1	; () banked
  5486  000AA0  05C1               	decf	__ball& (0+255),w,b
  5487  000AA2  0101               	movlb	1	; () banked
  5488  000AA4  6FC4               	movwf	__nextPos& (0+255),b
  5489                           
  5490                           ;main.c: 182: break;
  5491  000AA6  0012               	return	
  5492  000AA8                     i2l1752:
  5493                           
  5494                           ; BSR set to: 1
  5495                           ;main.c: 184: _nextPos[0] = _ball.bPos[0] - 1;
  5496  000AA8  0101               	movlb	1	; () banked
  5497  000AAA  05C1               	decf	__ball& (0+255),w,b
  5498  000AAC  0101               	movlb	1	; () banked
  5499  000AAE  6FC4               	movwf	__nextPos& (0+255),b
  5500                           
  5501                           ;main.c: 185: _nextPos[1] = _ball.bPos[1] + 1;
  5502  000AB0  0101               	movlb	1	; () banked
  5503  000AB2  29C2               	incf	(__ball+1)& (0+255),w,b
  5504  000AB4  0101               	movlb	1	; () banked
  5505  000AB6  6FC5               	movwf	(__nextPos+1)& (0+255),b
  5506                           
  5507                           ; BSR set to: 1
  5508                           ;main.c: 187: }
  5509                           
  5510                           ;main.c: 186: break;
  5511  000AB8  0012               	return	
  5512  000ABA                     i2l1756:
  5513  000ABA  0101               	movlb	1	; () banked
  5514  000ABC  51C3               	movf	(__ball+2)& (0+255),w,b
  5515                           
  5516                           ; Switch size 1, requested type "space"
  5517                           ; Number of cases is 6, Range of values is 1 to 6
  5518                           ; switch strategies available:
  5519                           ; Name         Instructions Cycles
  5520                           ; simple_byte           19    10 (average)
  5521                           ;	Chosen strategy is simple_byte
  5522  000ABE  0A01               	xorlw	1	; case 1
  5523  000AC0  B4D8               	btfsc	status,2,c
  5524  000AC2  D7CD               	goto	i2l1742
  5525  000AC4  0A03               	xorlw	3	; case 2
  5526  000AC6  B4D8               	btfsc	status,2,c
  5527  000AC8  D7D3               	goto	i2l1744
  5528  000ACA  0A01               	xorlw	1	; case 3
  5529  000ACC  B4D8               	btfsc	status,2,c
  5530  000ACE  D7D5               	goto	i2l1746
  5531  000AD0  0A07               	xorlw	7	; case 4
  5532  000AD2  B4D8               	btfsc	status,2,c
  5533  000AD4  D7DB               	goto	i2l1748
  5534  000AD6  0A01               	xorlw	1	; case 5
  5535  000AD8  B4D8               	btfsc	status,2,c
  5536  000ADA  D7E1               	goto	i2l1750
  5537  000ADC  0A03               	xorlw	3	; case 6
  5538  000ADE  A4D8               	btfss	status,2,c
  5539  000AE0  0012               	return	
  5540  000AE2  D7E2               	goto	i2l1752
  5541  000AE4                     __end_of_getNextPosition:
  5542                           	opt stack 0
  5543                           pclatu	equ	0xFFB
  5544                           pclath	equ	0xFFA
  5545                           tblptru	equ	0xFF8
  5546                           tblptrh	equ	0xFF7
  5547                           tblptrl	equ	0xFF6
  5548                           tablat	equ	0xFF5
  5549                           prodh	equ	0xFF4
  5550                           prodl	equ	0xFF3
  5551                           intcon	equ	0xFF2
  5552                           postinc0	equ	0xFEE
  5553                           fsr0h	equ	0xFEA
  5554                           fsr0l	equ	0xFE9
  5555                           wreg	equ	0xFE8
  5556                           postdec1	equ	0xFE5
  5557                           plusw1	equ	0xFE3
  5558                           fsr1h	equ	0xFE2
  5559                           fsr1l	equ	0xFE1
  5560                           indf2	equ	0xFDF
  5561                           postinc2	equ	0xFDE
  5562                           plusw2	equ	0xFDB
  5563                           fsr2h	equ	0xFDA
  5564                           fsr2l	equ	0xFD9
  5565                           status	equ	0xFD8
  5566                           
  5567 ;; *************** function _checkPaddleCollision *****************
  5568 ;; Defined at:
  5569 ;;		line 220 in file "main.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5583 ;;      Params:         0       0       0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0
  5586 ;;      Totals:         0       0       0       0       0       0       0
  5587 ;;Total ram usage:        0 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; This function calls:
  5590 ;;		Nothing
  5591 ;; This function is called by:
  5592 ;;		_checkNextPosition
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text28
  5597  00116C                     __ptext28:
  5598                           	opt stack 0
  5599  00116C                     _checkPaddleCollision:
  5600                           	opt stack 24
  5601                           
  5602                           ;main.c: 226: }
  5603                           ;main.c: 227: }
  5604                           
  5605                           ; BSR set to: 1
  5606                           ;incstack = 0
  5607  00116C  0012               	return	
  5608  00116E                     __end_of_checkPaddleCollision:
  5609                           	opt stack 0
  5610                           pclatu	equ	0xFFB
  5611                           pclath	equ	0xFFA
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           intcon	equ	0xFF2
  5619                           postinc0	equ	0xFEE
  5620                           fsr0h	equ	0xFEA
  5621                           fsr0l	equ	0xFE9
  5622                           wreg	equ	0xFE8
  5623                           postdec1	equ	0xFE5
  5624                           plusw1	equ	0xFE3
  5625                           fsr1h	equ	0xFE2
  5626                           fsr1l	equ	0xFE1
  5627                           indf2	equ	0xFDF
  5628                           postinc2	equ	0xFDE
  5629                           plusw2	equ	0xFDB
  5630                           fsr2h	equ	0xFDA
  5631                           fsr2l	equ	0xFD9
  5632                           status	equ	0xFD8
  5633                           
  5634 ;; *************** function ___lwdiv *****************
  5635 ;; Defined at:
  5636 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  dividend        2    0[COMRAM] unsigned int 
  5639 ;;  divisor         2    2[COMRAM] unsigned int 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  quotient        2    4[COMRAM] unsigned int 
  5642 ;;  counter         1    6[COMRAM] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  2    0[COMRAM] unsigned int 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5652 ;;      Params:         4       0       0       0       0       0       0
  5653 ;;      Locals:         3       0       0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0
  5655 ;;      Totals:         7       0       0       0       0       0       0
  5656 ;;Total ram usage:        7 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; This function calls:
  5659 ;;		Nothing
  5660 ;; This function is called by:
  5661 ;;		_ISR
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text29
  5666  000E7A                     __ptext29:
  5667                           	opt stack 0
  5668  000E7A                     ___lwdiv:
  5669                           	opt stack 25
  5670                           
  5671                           ;incstack = 0
  5672  000E7A  0E00               	movlw	0
  5673  000E7C  6E06               	movwf	___lwdiv@quotient+1,c
  5674  000E7E  0E00               	movlw	0
  5675  000E80  6E05               	movwf	___lwdiv@quotient,c
  5676  000E82  5003               	movf	___lwdiv@divisor,w,c
  5677  000E84  1004               	iorwf	___lwdiv@divisor+1,w,c
  5678  000E86  B4D8               	btfsc	status,2,c
  5679  000E88  D01C               	goto	i2l705
  5680  000E8A  0E01               	movlw	1
  5681  000E8C  6E07               	movwf	___lwdiv@counter,c
  5682  000E8E  D004               	goto	i2l2388
  5683  000E90                     i2l2386:
  5684  000E90  90D8               	bcf	status,0,c
  5685  000E92  3603               	rlcf	___lwdiv@divisor,f,c
  5686  000E94  3604               	rlcf	___lwdiv@divisor+1,f,c
  5687  000E96  2A07               	incf	___lwdiv@counter,f,c
  5688  000E98                     i2l2388:
  5689  000E98  AE04               	btfss	___lwdiv@divisor+1,7,c
  5690  000E9A  D7FA               	goto	i2l2386
  5691  000E9C                     i2l2390:
  5692  000E9C  90D8               	bcf	status,0,c
  5693  000E9E  3605               	rlcf	___lwdiv@quotient,f,c
  5694  000EA0  3606               	rlcf	___lwdiv@quotient+1,f,c
  5695  000EA2  5003               	movf	___lwdiv@divisor,w,c
  5696  000EA4  5C01               	subwf	___lwdiv@dividend,w,c
  5697  000EA6  5004               	movf	___lwdiv@divisor+1,w,c
  5698  000EA8  5802               	subwfb	___lwdiv@dividend+1,w,c
  5699  000EAA  A0D8               	btfss	status,0,c
  5700  000EAC  D005               	goto	i2l2398
  5701  000EAE  5003               	movf	___lwdiv@divisor,w,c
  5702  000EB0  5E01               	subwf	___lwdiv@dividend,f,c
  5703  000EB2  5004               	movf	___lwdiv@divisor+1,w,c
  5704  000EB4  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5705  000EB6  8005               	bsf	___lwdiv@quotient,0,c
  5706  000EB8                     i2l2398:
  5707  000EB8  90D8               	bcf	status,0,c
  5708  000EBA  3204               	rrcf	___lwdiv@divisor+1,f,c
  5709  000EBC  3203               	rrcf	___lwdiv@divisor,f,c
  5710  000EBE  2E07               	decfsz	___lwdiv@counter,f,c
  5711  000EC0  D7ED               	goto	i2l2390
  5712  000EC2                     i2l705:
  5713  000EC2  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5714  000EC6  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5715  000ECA  0012               	return		;funcret
  5716  000ECC                     __end_of___lwdiv:
  5717                           	opt stack 0
  5718  0000                     pclatu	equ	0xFFB
  5719                           pclath	equ	0xFFA
  5720                           tblptru	equ	0xFF8
  5721                           tblptrh	equ	0xFF7
  5722                           tblptrl	equ	0xFF6
  5723                           tablat	equ	0xFF5
  5724                           prodh	equ	0xFF4
  5725                           prodl	equ	0xFF3
  5726                           intcon	equ	0xFF2
  5727                           postinc0	equ	0xFEE
  5728                           fsr0h	equ	0xFEA
  5729                           fsr0l	equ	0xFE9
  5730                           wreg	equ	0xFE8
  5731                           postdec1	equ	0xFE5
  5732                           plusw1	equ	0xFE3
  5733                           fsr1h	equ	0xFE2
  5734                           fsr1l	equ	0xFE1
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           plusw2	equ	0xFDB
  5738                           fsr2h	equ	0xFDA
  5739                           fsr2l	equ	0xFD9
  5740                           status	equ	0xFD8
  5741                           pclatu	equ	0xFFB
  5742                           pclath	equ	0xFFA
  5743                           tblptru	equ	0xFF8
  5744                           tblptrh	equ	0xFF7
  5745                           tblptrl	equ	0xFF6
  5746                           tablat	equ	0xFF5
  5747                           prodh	equ	0xFF4
  5748                           prodl	equ	0xFF3
  5749                           intcon	equ	0xFF2
  5750                           postinc0	equ	0xFEE
  5751                           fsr0h	equ	0xFEA
  5752                           fsr0l	equ	0xFE9
  5753                           wreg	equ	0xFE8
  5754                           postdec1	equ	0xFE5
  5755                           plusw1	equ	0xFE3
  5756                           fsr1h	equ	0xFE2
  5757                           fsr1l	equ	0xFE1
  5758                           indf2	equ	0xFDF
  5759                           postinc2	equ	0xFDE
  5760                           plusw2	equ	0xFDB
  5761                           fsr2h	equ	0xFDA
  5762                           fsr2l	equ	0xFD9
  5763                           status	equ	0xFD8
  5764                           
  5765                           	psect	rparam
  5766  0000                     pclatu	equ	0xFFB
  5767                           pclath	equ	0xFFA
  5768                           tblptru	equ	0xFF8
  5769                           tblptrh	equ	0xFF7
  5770                           tblptrl	equ	0xFF6
  5771                           tablat	equ	0xFF5
  5772                           prodh	equ	0xFF4
  5773                           prodl	equ	0xFF3
  5774                           intcon	equ	0xFF2
  5775                           postinc0	equ	0xFEE
  5776                           fsr0h	equ	0xFEA
  5777                           fsr0l	equ	0xFE9
  5778                           wreg	equ	0xFE8
  5779                           postdec1	equ	0xFE5
  5780                           plusw1	equ	0xFE3
  5781                           fsr1h	equ	0xFE2
  5782                           fsr1l	equ	0xFE1
  5783                           indf2	equ	0xFDF
  5784                           postinc2	equ	0xFDE
  5785                           plusw2	equ	0xFDB
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8
  5789                           
  5790                           	psect	temp
  5791  00007F                     btemp:
  5792                           	opt stack 0
  5793  00007F                     	ds	1
  5794  0000                     int$flags	set	btemp
  5795                           pclatu	equ	0xFFB
  5796                           pclath	equ	0xFFA
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           intcon	equ	0xFF2
  5804                           postinc0	equ	0xFEE
  5805                           fsr0h	equ	0xFEA
  5806                           fsr0l	equ	0xFE9
  5807                           wreg	equ	0xFE8
  5808                           postdec1	equ	0xFE5
  5809                           plusw1	equ	0xFE3
  5810                           fsr1h	equ	0xFE2
  5811                           fsr1l	equ	0xFE1
  5812                           indf2	equ	0xFDF
  5813                           postinc2	equ	0xFDE
  5814                           plusw2	equ	0xFDB
  5815                           fsr2h	equ	0xFDA
  5816                           fsr2l	equ	0xFD9
  5817                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        274
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    124     126
    BANK0           128    128     128
    BANK1           256    159     200
    BANK2           256    136     248
    BANK3           256     48     244
    BANK4           256      0      68
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_checkNextPosition
    _writePong->_off
    _writePong->i2_on
    _checkNextPosition->i2_startPong
    i2_initializePong->i2_startPong
    i2_startPong->i2_drawSymbol
    i2_refresh->i2_setColHigh
    i2_refresh->i2_setRowHigh
    i2_drawSymbol->i2_on

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK1

    _startPong->_drawSymbol
    _refresh->_setColHigh
    _refresh->_setRowHigh
    _drawSymbol->_on
    _initializeLED->_turnAllOff

Critical Paths under _ISR in BANK1

    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK2

    _initializePong->_startPong
    _startPong->_drawSymbol

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3641
                         _initialize
                      _initializeLED
                     _initializePong
                            _refresh
 ---------------------------------------------------------------------------------
 (1) _initializePong                                       0     0      0    3059
                          _startPong
 ---------------------------------------------------------------------------------
 (2) _startPong                                            2     2      0    3059
                                            134 BANK2      2     2      0
                         _drawSymbol
                            _refresh
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (1) _refresh                                              5     5      0     384
                                             59 BANK1      5     5      0
                             _allOff
                         _setColHigh
                         _setRowHigh
 ---------------------------------------------------------------------------------
 (2) _setRowHigh                                           3     3      0      93
                                             56 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setColHigh                                           3     3      0      31
                                             56 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _allOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drawSymbol                                         281   280      1    2409
                                             60 BANK1     99    98      1
                                              0 BANK2    134   134      0
                                              0 BANK3     48    48      0
                                 _on
 ---------------------------------------------------------------------------------
 (4) _on                                                   4     3      1     597
                                             56 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _initializeLED                                        0     0      0     198
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _turnAllOff                                           4     4      0     198
                                             56 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 17    17      0    9538
                                            110 COMRAM    14    14      0
                                             53 BANK1      3     3      0
                            ___lwdiv
                  _checkNextPosition
                          _writePong
 ---------------------------------------------------------------------------------
 (6) _writePong                                            0     0      0     847
                                _off
                               i2_on
 ---------------------------------------------------------------------------------
 (7) _off                                                  4     3      1     303
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _checkNextPosition                                    4     4      0    8282
                                            106 COMRAM     4     4      0
               _checkPaddleCollision
                 _checkWallCollision
                    _getNextPosition
                       i2_drawSymbol
                   i2_initializePong
                          i2_refresh
                        i2_startPong
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_initializePong                                     0     0      0    2738
                        i2_startPong
 ---------------------------------------------------------------------------------
 (7) i2_startPong                                          2     2      0    2738
                                            104 COMRAM     2     2      0
                       i2_drawSymbol
                          i2_refresh
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_turnAllOff                                         4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (8) i2_refresh                                            5     5      0     268
                                              3 COMRAM     5     5      0
                           i2_allOff
                       i2_setColHigh
                       i2_setRowHigh
 ---------------------------------------------------------------------------------
 (9) i2_setRowHigh                                         3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_setColHigh                                         3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_allOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_drawSymbol                                       281   280      1    2266
                                              4 COMRAM   100    99      1
                                              0 BANK0    128   128      0
                                              0 BANK1     53    53      0
                               i2_on
 ---------------------------------------------------------------------------------
 (7) i2_on                                                 4     3      1     544
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) _checkWallCollision                                   0     0      0       0
                _handleWallCollision
 ---------------------------------------------------------------------------------
 (8) _handleWallCollision                                  0     0      0       0
                    _getNextPosition
 ---------------------------------------------------------------------------------
 (7) _getNextPosition                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _checkPaddleCollision                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _initializeLED
     _turnAllOff
   _initializePong
     _startPong
       _drawSymbol
         _on
       _refresh
         _allOff
         _setColHigh
         _setRowHigh
       _turnAllOff
   _refresh
     _allOff
     _setColHigh
     _setRowHigh

 _ISR (ROOT)
   ___lwdiv
   _checkNextPosition
     _checkPaddleCollision
     _checkWallCollision
       _handleWallCollision
         _getNextPosition
     _getNextPosition
     i2_drawSymbol
       i2_on
     i2_initializePong
       i2_startPong
         i2_drawSymbol
           i2_on
         i2_refresh
           i2_allOff
           i2_setColHigh
           i2_setRowHigh
         i2_turnAllOff
     i2_refresh
       i2_allOff
       i2_setColHigh
       i2_setRowHigh
     i2_startPong
       i2_drawSymbol
         i2_on
       i2_refresh
         i2_allOff
         i2_setColHigh
         i2_setRowHigh
       i2_turnAllOff
     i2_turnAllOff
   _writePong
     _off
     i2_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      44      13       26.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100     30      F4      11       95.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     88      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     9F      C8       7       78.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     80      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7C      7E       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F6      15        0.0%
DATA                 0      0     3F6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Apr 05 10:53:37 2016

         __end_ofi2_setColHigh 10EE             drawSymbol@symbolGo 021E              ?i2_initializePong 0001  
                           _on 0E28                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
           ??i2_initializePong 006B            drawSymbol@symbolOne 03C4           __end_ofi2_setRowHigh 0FDC  
                          ?_on 0138            drawSymbol@symbolTwo 0262                            _GIE 007F97  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000                            _ISR 0008  
                          _PSA 007EAB                            __p1 01B7                            __p2 01BC  
                          _off 0FDC                            prod 000FF3                            wreg 000FE8  
          __end_ofi2_startPong 0D74                           ??_on 0139                   __CFG_LVP$OFF 000000  
                         ?_ISR 0001                   __CFG_WDT$OFF 000000           drawSymbol@symbolPlay 013D  
                         l3054 113A                           l2514 0E36                           l2620 0CC4  
                         l2508 0DA4                           l2630 0D0C                           l2614 0CB4  
                         l2518 0E40                           l2710 028C                           l2702 0244  
                         l2624 0CCE                           l2618 0CBE                           l2714 0296  
                         l2650 00F6                           l2642 00AE                           l2722 02D8  
                         l2730 09E0                           l2708 0286                           l2660 0142  
                         l2636 009E                           l2740 0A32                           l2732 09E6  
                         l2662 0148                           l2654 0100                           l2638 00A4  
                         l2726 09D6                           l2806 0C24                           l2672 0194  
                         l2648 00F0                           l2744 0A38                           l2736 09F0  
                         l2690 01F6                           l2674 019A                           l2666 0152  
                         l2684 01E6                           l2686 01EC                           l2678 01A4  
                         l2696 0234                           l2698 023A                           l2796 0C08  
                         ?_off 0001                           _ADIE 007CEE                           _ADIF 007CF6  
                         _T0CS 007EAD                           _LATA 000F89                           _LATC 000F8B  
                         _LATD 000F8C                           u3107 0A48                           u2264 10A6  
                         u2601 005E                           u2265 10A0                           u2611 0070  
                         u2284 0D96                           u2621 0082                           u2285 0D90  
                         u2294 0DC0                           u2631 0094                           u2295 0DBA  
                         u2571 0028                           u2581 003A                           u2591 004C  
                         _PEIE 007F96                           i2_on 1018               ??_initializePong 019F  
                         _main 112E         ??_checkPaddleCollision 0001                    drawSymbol@i 027F  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 007F                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
                        ??_ISR 006F                          ??_off 0002                          ?i2_on 0001  
                   i2on@column 0004          drawSymbol@symbolThree 03DC                          ?_main 0001  
                        _ADRES 000FC3                          _T0PS0 007EA8                          _T0PS1 007EA9  
                        _T0PS2 007EAA                __end_of___lwdiv 0ECC                          i2l296 08D6  
                        i2l705 0EC2                          _PLLEN 007CDE                          _TRISA 000F92  
                        _TRISC 000F94                          _TRISD 000F95                  __CFG_PWRT$OFF 000000  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000           __end_ofi2_turnAllOff 0F14                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                        __ball 01C1                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
              __end_of_refresh 0A5C                          on@row 0138                 __CFG_BOREN$OFF 000000  
                        tablat 000FF5               __end_ofi2_allOff 115C                          plusw1 000FE3  
                        plusw2 000FDB                          status 000FD8          __size_ofi2_drawSymbol 02D0  
                 __end_ofi2_on 1054                __initialization 0912                   __end_of_main 1140  
          _handleWallCollision 1054                         ??i2_on 0002                _getNextPosition 0A5C  
           __size_ofi2_refresh 006A                         ??_main 019F                    i2_startPong 0D12  
                __activetblptr 000002           ?_handleWallCollision 0001                   i2_drawSymbol 0308  
                       _T08BIT 007EAE       checkNextPosition@counter 006B                         i2l2050 1062  
                       i2l2044 1056                         i2l3012 085A                         i2l2046 105A  
                       i2l2054 106A                         i2l2048 105E                         i2l2056 1086  
                       i2l3018 0866                         i2l2500 102A                         i2l2094 0FE6  
                       i2l3038 08BA                         i2l2602 056C                         i2l2530 039A  
                       i2l2610 05AA                         i2l1706 0FBE                         i2l2098 0FEE  
                       i2l2524 038A                         i2l2390 0E9C                         i2l1750 0A9E  
                       i2l1742 0A5E                         i2l2550 042C                         i2l2542 03E8  
                       i2l2526 0390                         i2l1752 0AA8                         i2l1744 0A70  
                       i2l2560 0474                         i2l2536 03D8                         i2l2386 0E90  
                       i2l1746 0A7A                         i2l2562 047A                         i2l2554 0436  
                       i2l2538 03DE                         i2l1850 0ED0                         i2l2388 0E98  
                       i2l1748 0A8C                         i2l1756 0ABA                         i2l2572 04C2  
                       i2l2548 0426                         i2l1860 0EE4                         i2l2398 0EB8  
                       i2l2590 051E                         i2l2574 04C8                         i2l2566 0484  
                       i2l1854 0ED8                         i2l2910 06D0                         i2l2496 1022  
                       i2l2584 050E                         i2l1872 0C48                         i2l1856 0EDC  
                       i2l2920 0704                         i2l2904 06C0                         i2l2586 0514  
                       i2l2578 04D2                         i2l1890 0C90                         i2l1882 0C5C  
                       i2l1866 0F10                         i2l2922 0708                         i2l2596 055C  
                       i2l1876 0C50                         i2l2764 0D3E                         i2l2908 06CA  
                       i2l2852 0612                         i2l2598 0562                         i2l1886 0C8C  
                       i2l1878 0C54                         i2l2774 0D54                         i2l2942 0752  
                       i2l2950 0774                         i2l2918 0700                         i2l2926 0710  
                       i2l2934 072C                         i2l2870 0660                         i2l2854 0616  
                       i2l2944 0756                         i2l2928 0726                         i2l2880 0682  
                       i2l2856 061E                         i2l2864 063A                         i2l2954 077A  
                       i2l2874 0668                         i2l2858 0634                         i2l2964 079C  
                       i2l2948 075E                         i2l2980 07C2                         i2l2884 0688  
                       i2l2990 07D8                         i2l2974 07B2                         i2l2894 06AA  
                       i2l2878 066C                         i2l2984 07CC                         i2l2986 07D0  
                       i2l2994 07E0                         i2l2978 07BC                         i2l2988 07D4  
                       i2l2996 07FC                         _TMR0IE 007F95                         _TMR0IF 007F92  
                       _TMR0ON 007EAF            i2drawSymbol@offSetX 0005          __size_ofi2_setColHigh 001C  
               __CFG_XINST$OFF 000000                         _allOff 1140                 __CFG_STVREN$ON 000000  
        __size_ofi2_setRowHigh 0040                         __speed 007D                      ??___lwdiv 0005  
                       clear_0 0918                         clear_1 0924                         _pixels 0300  
                       off@row 0001                   __pdataCOMRAM 007D                      ??_refresh 013B  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
       __size_of_initializeLED 001E          ??_handleWallCollision 0001                   i2_setColHigh 10D2  
   __end_of_checkWallCollision 116A                     __accesstop 0080        __end_of__initialization 09C2  
           i2setColHigh@column 0003              __end_ofi2_refresh 0CAE                __CFG_PBADEN$OFF 000000  
                 i2_setRowHigh 0F9C                  ___rparam_used 000001        __end_of_getNextPosition 0AE4  
               __pcstackCOMRAM 0001               i2drawSymbol@i_82 00FF               i2drawSymbol@i_83 0130  
             i2drawSymbol@i_84 0131               i2drawSymbol@i_85 0132               i2drawSymbol@i_86 0133  
             i2drawSymbol@i_87 0134                   __pidataBANK1 10EE                   __pidataBANK2 0B66  
                 __pidataBANK3 0F14                   __pidataBANK4 0F58        i2drawSymbol@symbolThree 0118  
                   __end_of_on 0E7A          __size_ofi2_turnAllOff 0048                      ?i2_allOff 0001  
                i2turnAllOff@i 0003                  i2turnAllOff@j 0004               startPong@counter 0286  
    __size_ofi2_initializePong 0014                     __pbssBANK1 01B7                     __pbssBANK3 0300  
                _initializeLED 10B4                   i2_turnAllOff 0ECC   i2drawSymbol@symbolArrowRight 004A  
                      ?_allOff 0001                     ??i2_allOff 0001                     _drawSymbol 001A  
  i2drawSymbol@symbolArrowLeft 0080             __size_of_startPong 006E                        i2on@row 0001  
           __size_of_writePong 0082  __size_of_checkPaddleCollision 0002                 ?_initializeLED 0001  
                      __Hparam 0000                        __Lparam 0000               ?_getNextPosition 0001  
                refresh@theCol 013E                  refresh@theRow 013F                __size_of_allOff 000E  
         i2drawSymbol@symbolGo 009E                        ___lwdiv 0E7A     drawSymbol@symbolArrowRight 0181  
                      __pcinit 0912         drawSymbol@chosenSymbol 027E                        __ramtop 0600  
                   _initialize 0DCE                        __ptext0 112E                        __ptext1 1106  
                      __ptext2 0BD6                        __ptext3 09D0                        __ptext4 0D74  
                      __ptext5 108C                        __ptext6 1140                        __ptext7 001A  
                      __ptext8 0E28                        __ptext9 10B4                   ?i2_startPong 0001  
                 __size_of_ISR 090A                   __size_of_off 003C                        _refresh 09D0  
               drawSymbol@i_82 0280                 drawSymbol@i_83 0281                 drawSymbol@i_84 0282  
               drawSymbol@i_85 0283                 drawSymbol@i_86 0284                 drawSymbol@i_87 0285  
                   _setColHigh 108C                 __pintcode_body 0802           end_of_initialization 09C2  
                __Lmediumconst 0000                        int_func 0802                     _setRowHigh 0D74  
                      postdec1 000FE5                        postinc0 000FEE                        postinc2 000FDE  
      __size_of_initializePong 0014              __end_of_startPong 0C44              drawSymbol@offSetX 013C  
            __end_of_writePong 0B66                      _TRISBbits 000F93                    ?_drawSymbol 013C  
             i2_initializePong 111A                ??_initializeLED 013C                      i2_refresh 0C44  
                   _turnAllOff 0CAE             _checkWallCollision 115C                  setRowHigh@row 013A  
               __end_of_allOff 114E            ?_checkWallCollision 0001                  __pidataCOMRAM 116A  
                  ?_initialize 0001    __end_of_handleWallCollision 108C            start_initialization 0912  
                  __end_of_ISR 0912              __size_ofi2_allOff 000E                    ?_setColHigh 0001  
                  __end_of_off 1018           ??_checkWallCollision 0001                     ISR@ADvalue 0135  
                  ?_setRowHigh 0001               __CFG_OSC$INTIO67 000000                     ?i2_refresh 0001  
                     ??_allOff 0138            __size_of_drawSymbol 02EE                    __pdataBANK1 019F  
                  __pdataBANK2 0288                    __pdataBANK3 0380                    __pdataBANK4 0400  
             __CFG_LPT1OSC$OFF 000000           __size_ofi2_startPong 0062                  __pcstackBANK0 0080  
                __pcstackBANK1 0100                  __pcstackBANK2 0200                  __pcstackBANK3 03C4  
       i2drawSymbol@symbolPlay 0006             i2startPong@counter 0069            __size_of_initialize 005A  
                i2drawSymbol@i 00FE                       ISR@value 0137               ___lwdiv@dividend 0001  
                  ?_turnAllOff 0001              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
               _initializePong 1106            __size_of_setColHigh 0028                       ?___lwdiv 0001  
 __end_of_checkPaddleCollision 116E            __size_of_setRowHigh 005A                    turnAllOff@i 013A  
                  turnAllOff@j 013B              _checkNextPosition 05D8                       ?_refresh 0001  
           ?_checkNextPosition 0001               ___lwdiv@quotient 0005                  ?i2_drawSymbol 0005  
                  __size_of_on 0052            ??_checkNextPosition 006B         __end_of_initializePong 111A  
                     i2u113_44 10E4                       i2u113_45 10E0                       i2u115_44 0FB4  
                     i2u115_45 0FB0                       i2u116_44 0FD2                       i2u116_45 0FCE  
                  ??i2_refresh 0004                       i2u311_47 0C9C                       i2u232_41 0314  
                     i2u233_41 0326                       i2u234_41 0338                       i2u235_41 034A  
                     i2u236_41 035C                       i2u237_41 036E                       i2u238_41 0380  
                     i2u291_40 0652                       i2u297_40 06F2                       i2u289_40 0604  
                     i2u299_40 0744               __CFG_WDTPS$32768 000000       __end_ofi2_initializePong 112E  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
    __end_of_checkNextPosition 0802                      _startPong 0BD6       __size_of_getNextPosition 0088  
                     i2_allOff 114E                      off@column 0004                 ??i2_drawSymbol 0006  
          __size_of_turnAllOff 0064                  ?i2_setColHigh 0001                   ??_drawSymbol 013D  
                    _writePong 0AE4                      copy_data0 093E                      copy_data1 095E  
                    copy_data2 097E                      copy_data3 099E                  __timerCounter 01C6  
                ?i2_setRowHigh 0001                       __Hrparam 0000                ?_initializePong 0001  
                     __Lrparam 0000       i2drawSymbol@chosenSymbol 0068             __end_of_drawSymbol 0308  
             __size_of___lwdiv 0052                   ??_initialize 0138          i2drawSymbol@symbolOne 0100  
        i2drawSymbol@symbolTwo 00E2                     ?_startPong 0001                i2refresh@theCol 0007  
              i2refresh@theRow 0008                       __nextPos 01C4                 ??i2_setColHigh 0001  
              ___lwdiv@divisor 0003                   ??_setColHigh 0138               __size_of_refresh 008C  
              ___lwdiv@counter 0007                       __ptext10 0CAE                       __ptext11 0DCE  
                     __ptext20 0F9C                       __ptext21 10D2                       __ptext13 0AE4  
                     __ptext22 114E                       __ptext14 0FDC                       __ptext23 0308  
                     __ptext15 05D8                       __ptext24 1018                       __ptext16 111A  
                     __ptext25 115C                       __ptext17 0D12                       __ptext26 1054  
                     __ptext18 0ECC                       __ptext27 0A5C                       __ptext19 0C44  
                     __ptext28 116C                       __ptext29 0E7A                     ?_writePong 0001  
                __size_ofi2_on 003C                drawSymbol@F3230 02E0                drawSymbol@F3224 019F  
              drawSymbol@F3233 0380                drawSymbol@F3242 02A6                drawSymbol@F3227 02C4  
              drawSymbol@F3236 0400                drawSymbol@F3239 0288                 ??i2_setRowHigh 0001  
                 ??_setRowHigh 0138                  __size_of_main 0012             __end_of_initialize 0E28  
        __end_of_initializeLED 10D2           _checkPaddleCollision 116C                  ?i2_turnAllOff 0001  
                     int$flags 007F             __end_of_setColHigh 10B4                       on@column 013B  
   __size_of_checkNextPosition 022A                    _OSCTUNEbits 000F9B             __end_of_setRowHigh 0DCE  
             setColHigh@column 013A              ??_getNextPosition 0001   __size_of_handleWallCollision 0038  
    drawSymbol@symbolArrowLeft 0200                       intlevel2 0000    __size_of_checkWallCollision 000E  
 checkNextPosition@counter_439 006D          ?_checkPaddleCollision 0001                 ??i2_turnAllOff 0001  
                   _OSCCONbits 000FD3                   ??_turnAllOff 0138           __end_ofi2_drawSymbol 05D8  
                ??i2_startPong 0069                    ??_startPong 019F                i2setRowHigh@row 0003  
                  ??_writePong 0005             __end_of_turnAllOff 0D12  
