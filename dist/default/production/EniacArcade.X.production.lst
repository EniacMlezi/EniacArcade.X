

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Apr 01 18:49:40 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	idataBANK2,global,class=CODE,delta=1
     9                           	psect	idataBANK3,global,class=CODE,delta=1
    10                           	psect	idataBANK4,global,class=CODE,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataCOMRAM
    57  001046                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for drawSymbol@F3241
    61  001046  00                 	db	0
    62  001047  03                 	db	3
    63  001048  01                 	db	1
    64  001049  03                 	db	3
    65  00104A  02                 	db	2
    66  00104B  03                 	db	3
    67  00104C  03                 	db	3
    68  00104D  03                 	db	3
    69  00104E  04                 	db	4
    70  00104F  03                 	db	3
    71  001050  05                 	db	5
    72  001051  03                 	db	3
    73  001052  06                 	db	6
    74  001053  03                 	db	3
    75  001054  07                 	db	7
    76  001055  03                 	db	3
    77  001056  08                 	db	8
    78  001057  03                 	db	3
    79  001058  07                 	db	7
    80  001059  04                 	db	4
    81  00105A  06                 	db	6
    82  00105B  05                 	db	5
    83  00105C  05                 	db	5
    84  00105D  07                 	db	7
    85  00105E  06                 	db	6
    86  00105F  02                 	db	2
    87  001060  05                 	db	5
    88  001061  01                 	db	1
    89  001062  04                 	db	4
    90  001063  00                 	db	0
    91                           
    92                           ;initializer for __speed
    93  001064  00C8               	dw	200
    94                           
    95                           	psect	idataBANK0
    96  000FC8                     __pidataBANK0:
    97                           	opt stack 0
    98                           
    99                           ;initializer for drawSymbol@F3226
   100  000FC8  02                 	db	2
   101  000FC9  05                 	db	5
   102  000FCA  03                 	db	3
   103  000FCB  06                 	db	6
   104  000FCC  04                 	db	4
   105  000FCD  07                 	db	7
   106  000FCE  04                 	db	4
   107  000FCF  06                 	db	6
   108  000FD0  04                 	db	4
   109  000FD1  05                 	db	5
   110  000FD2  04                 	db	4
   111  000FD3  04                 	db	4
   112  000FD4  04                 	db	4
   113  000FD5  03                 	db	3
   114  000FD6  04                 	db	4
   115  000FD7  02                 	db	2
   116  000FD8  04                 	db	4
   117  000FD9  01                 	db	1
   118  000FDA  04                 	db	4
   119  000FDB  00                 	db	0
   120  000FDC  03                 	db	3
   121  000FDD  00                 	db	0
   122  000FDE  05                 	db	5
   123  000FDF  00                 	db	0
   124                           
   125                           ;initializer for drawSymbol@F3232
   126  000FE0  02                 	db	2
   127  000FE1  06                 	db	6
   128  000FE2  03                 	db	3
   129  000FE3  07                 	db	7
   130  000FE4  04                 	db	4
   131  000FE5  07                 	db	7
   132  000FE6  05                 	db	5
   133  000FE7  06                 	db	6
   134  000FE8  05                 	db	5
   135  000FE9  05                 	db	5
   136  000FEA  04                 	db	4
   137  000FEB  04                 	db	4
   138  000FEC  05                 	db	5
   139  000FED  03                 	db	3
   140  000FEE  05                 	db	5
   141  000FEF  02                 	db	2
   142  000FF0  05                 	db	5
   143  000FF1  01                 	db	1
   144  000FF2  04                 	db	4
   145  000FF3  00                 	db	0
   146  000FF4  03                 	db	3
   147  000FF5  00                 	db	0
   148  000FF6  02                 	db	2
   149  000FF7  01                 	db	1
   150                           
   151                           	psect	idataBANK1
   152  001066                     __pidataBANK1:
   153                           	opt stack 0
   154                           
   155                           ;initializer for drawSymbol@F3244
   156  001066  00                 	db	0
   157  001067  03                 	db	3
   158  001068  01                 	db	1
   159  001069  03                 	db	3
   160  00106A  02                 	db	2
   161  00106B  03                 	db	3
   162  00106C  03                 	db	3
   163  00106D  03                 	db	3
   164  00106E  04                 	db	4
   165  00106F  03                 	db	3
   166  001070  05                 	db	5
   167  001071  03                 	db	3
   168  001072  06                 	db	6
   169  001073  03                 	db	3
   170  001074  07                 	db	7
   171  001075  03                 	db	3
   172  001076  08                 	db	8
   173  001077  03                 	db	3
   174  001078  01                 	db	1
   175  001079  04                 	db	4
   176  00107A  02                 	db	2
   177  00107B  05                 	db	5
   178  00107C  03                 	db	3
   179  00107D  06                 	db	6
   180  00107E  01                 	db	1
   181  00107F  02                 	db	2
   182  001080  02                 	db	2
   183  001081  01                 	db	1
   184  001082  03                 	db	3
   185  001083  00                 	db	0
   186                           
   187                           	psect	idataBANK2
   188  001084                     __pidataBANK2:
   189                           	opt stack 0
   190                           
   191                           ;initializer for drawSymbol@F3229
   192  001084  02                 	db	2
   193  001085  05                 	db	5
   194  001086  03                 	db	3
   195  001087  06                 	db	6
   196  001088  04                 	db	4
   197  001089  06                 	db	6
   198  00108A  05                 	db	5
   199  00108B  06                 	db	6
   200  00108C  06                 	db	6
   201  00108D  05                 	db	5
   202  00108E  06                 	db	6
   203  00108F  04                 	db	4
   204  001090  05                 	db	5
   205  001091  03                 	db	3
   206  001092  04                 	db	4
   207  001093  02                 	db	2
   208  001094  03                 	db	3
   209  001095  01                 	db	1
   210  001096  02                 	db	2
   211  001097  00                 	db	0
   212  001098  03                 	db	3
   213  001099  00                 	db	0
   214  00109A  04                 	db	4
   215  00109B  00                 	db	0
   216  00109C  05                 	db	5
   217  00109D  00                 	db	0
   218  00109E  06                 	db	6
   219  00109F  00                 	db	0
   220                           
   221                           	psect	idataBANK3
   222  000E92                     __pidataBANK3:
   223                           	opt stack 0
   224                           
   225                           ;initializer for drawSymbol@F3235
   226  000E92  01                 	db	1
   227  000E93  01                 	db	1
   228  000E94  01                 	db	1
   229  000E95  02                 	db	2
   230  000E96  01                 	db	1
   231  000E97  03                 	db	3
   232  000E98  01                 	db	1
   233  000E99  04                 	db	4
   234  000E9A  01                 	db	1
   235  000E9B  05                 	db	5
   236  000E9C  01                 	db	1
   237  000E9D  06                 	db	6
   238  000E9E  02                 	db	2
   239  000E9F  06                 	db	6
   240  000EA0  03                 	db	3
   241  000EA1  06                 	db	6
   242  000EA2  03                 	db	3
   243  000EA3  05                 	db	5
   244  000EA4  03                 	db	3
   245  000EA5  04                 	db	4
   246  000EA6  02                 	db	2
   247  000EA7  04                 	db	4
   248  000EA8  05                 	db	5
   249  000EA9  06                 	db	6
   250  000EAA  05                 	db	5
   251  000EAB  05                 	db	5
   252  000EAC  05                 	db	5
   253  000EAD  04                 	db	4
   254  000EAE  05                 	db	5
   255  000EAF  03                 	db	3
   256  000EB0  05                 	db	5
   257  000EB1  02                 	db	2
   258  000EB2  05                 	db	5
   259  000EB3  01                 	db	1
   260  000EB4  06                 	db	6
   261  000EB5  01                 	db	1
   262  000EB6  08                 	db	8
   263  000EB7  01                 	db	1
   264  000EB8  08                 	db	8
   265  000EB9  02                 	db	2
   266  000EBA  08                 	db	8
   267  000EBB  03                 	db	3
   268  000EBC  09                 	db	9
   269  000EBD  04                 	db	4
   270  000EBE  0A                 	db	10
   271  000EBF  04                 	db	4
   272  000EC0  0B                 	db	11
   273  000EC1  03                 	db	3
   274  000EC2  0B                 	db	11
   275  000EC3  02                 	db	2
   276  000EC4  0B                 	db	11
   277  000EC5  01                 	db	1
   278  000EC6  0D                 	db	13
   279  000EC7  01                 	db	1
   280  000EC8  0D                 	db	13
   281  000EC9  02                 	db	2
   282  000ECA  0D                 	db	13
   283  000ECB  03                 	db	3
   284  000ECC  0D                 	db	13
   285  000ECD  04                 	db	4
   286  000ECE  0C                 	db	12
   287  000ECF  05                 	db	5
   288  000ED0  0B                 	db	11
   289  000ED1  06                 	db	6
   290  000ED2  0E                 	db	14
   291  000ED3  05                 	db	5
   292  000ED4  0E                 	db	14
   293  000ED5  06                 	db	6
   294                           
   295                           	psect	idataBANK4
   296  000ED6                     __pidataBANK4:
   297                           	opt stack 0
   298                           
   299                           ;initializer for drawSymbol@F3238
   300  000ED6  06                 	db	6
   301  000ED7  06                 	db	6
   302  000ED8  05                 	db	5
   303  000ED9  07                 	db	7
   304  000EDA  04                 	db	4
   305  000EDB  07                 	db	7
   306  000EDC  03                 	db	3
   307  000EDD  07                 	db	7
   308  000EDE  02                 	db	2
   309  000EDF  06                 	db	6
   310  000EE0  02                 	db	2
   311  000EE1  05                 	db	5
   312  000EE2  02                 	db	2
   313  000EE3  04                 	db	4
   314  000EE4  02                 	db	2
   315  000EE5  03                 	db	3
   316  000EE6  02                 	db	2
   317  000EE7  02                 	db	2
   318  000EE8  02                 	db	2
   319  000EE9  01                 	db	1
   320  000EEA  03                 	db	3
   321  000EEB  00                 	db	0
   322  000EEC  04                 	db	4
   323  000EED  00                 	db	0
   324  000EEE  05                 	db	5
   325  000EEF  00                 	db	0
   326  000EF0  06                 	db	6
   327  000EF1  01                 	db	1
   328  000EF2  05                 	db	5
   329  000EF3  02                 	db	2
   330  000EF4  04                 	db	4
   331  000EF5  02                 	db	2
   332  000EF6  09                 	db	9
   333  000EF7  06                 	db	6
   334  000EF8  09                 	db	9
   335  000EF9  05                 	db	5
   336  000EFA  09                 	db	9
   337  000EFB  04                 	db	4
   338  000EFC  09                 	db	9
   339  000EFD  03                 	db	3
   340  000EFE  09                 	db	9
   341  000EFF  02                 	db	2
   342  000F00  09                 	db	9
   343  000F01  01                 	db	1
   344  000F02  0A                 	db	10
   345  000F03  00                 	db	0
   346  000F04  0B                 	db	11
   347  000F05  00                 	db	0
   348  000F06  0C                 	db	12
   349  000F07  00                 	db	0
   350  000F08  0D                 	db	13
   351  000F09  01                 	db	1
   352  000F0A  0D                 	db	13
   353  000F0B  02                 	db	2
   354  000F0C  0D                 	db	13
   355  000F0D  04                 	db	4
   356  000F0E  0D                 	db	13
   357  000F0F  05                 	db	5
   358  000F10  0D                 	db	13
   359  000F11  06                 	db	6
   360  000F12  0C                 	db	12
   361  000F13  07                 	db	7
   362  000F14  0B                 	db	11
   363  000F15  07                 	db	7
   364  000F16  0A                 	db	10
   365  000F17  07                 	db	7
   366  000F18  00                 	db	0
   367  000F19  00                 	db	0
   368  0000                     _ADRES	set	4035
   369  0000                     _ADCON0bits	set	4034
   370  0000                     _ADCON1bits	set	4033
   371  0000                     _ADCON2bits	set	4032
   372  0000                     _LATA	set	3977
   373  0000                     _LATC	set	3979
   374  0000                     _LATD	set	3980
   375  0000                     _OSCCONbits	set	4051
   376  0000                     _OSCTUNEbits	set	3995
   377  0000                     _TRISA	set	3986
   378  0000                     _TRISBbits	set	3987
   379  0000                     _TRISC	set	3988
   380  0000                     _TRISD	set	3989
   381  0000                     _ADIE	set	31982
   382  0000                     _ADIF	set	31990
   383  0000                     _GIE	set	32663
   384  0000                     _PEIE	set	32662
   385  0000                     _PLLEN	set	31966
   386  0000                     _PSA	set	32427
   387  0000                     _T08BIT	set	32430
   388  0000                     _T0CS	set	32429
   389  0000                     _T0PS0	set	32424
   390  0000                     _T0PS1	set	32425
   391  0000                     _T0PS2	set	32426
   392  0000                     _TMR0IE	set	32661
   393  0000                     _TMR0IF	set	32658
   394  0000                     _TMR0ON	set	32431
   395                           
   396                           ; #config settings
   397  0000                     
   398                           	psect	cinit
   399  00084A                     __pcinit:
   400                           	opt stack 0
   401  00084A                     start_initialization:
   402                           	opt stack 0
   403  00084A                     __initialization:
   404                           	opt stack 0
   405                           
   406                           ; Clear objects allocated to BANK3 (128 bytes)
   407  00084A  EE03  F000         	lfsr	0,__pbssBANK3
   408  00084E  0E80               	movlw	128
   409  000850                     clear_0:
   410  000850  6AEE               	clrf	postinc0,c
   411  000852  06E8               	decf	wreg,f,c
   412  000854  E1FD               	bnz	clear_0
   413                           
   414                           ; Clear objects allocated to BANK0 (15 bytes)
   415  000856  EE00  F0F1         	lfsr	0,__pbssBANK0
   416  00085A  0E0F               	movlw	15
   417  00085C                     clear_1:
   418  00085C  6AEE               	clrf	postinc0,c
   419  00085E  06E8               	decf	wreg,f,c
   420  000860  E1FD               	bnz	clear_1
   421                           
   422                           ; Clear objects allocated to COMRAM (2 bytes)
   423  000862  6A74               	clrf	(__pbssCOMRAM+1)& (0+255),c
   424  000864  6A73               	clrf	__pbssCOMRAM& (0+255),c
   425                           
   426                           ; Initialize objects allocated to BANK4 (68 bytes)
   427                           ; load TBLPTR registers with __pidataBANK4
   428  000866  0ED6               	movlw	low __pidataBANK4
   429  000868  6EF6               	movwf	tblptrl,c
   430  00086A  0E0E               	movlw	high __pidataBANK4
   431  00086C  6EF7               	movwf	tblptrh,c
   432  00086E  0E00               	movlw	low (__pidataBANK4 shr (0+16))
   433  000870  6EF8               	movwf	tblptru,c
   434  000872  EE04  F000         	lfsr	0,__pdataBANK4
   435  000876  EE10 F044          	lfsr	1,68
   436  00087A                     copy_data0:
   437  00087A  0009               	tblrd		*+
   438  00087C  CFF5 FFEE          	movff	tablat,postinc0
   439  000880  50E5               	movf	postdec1,w,c
   440  000882  50E1               	movf	fsr1l,w,c
   441  000884  E1FA               	bnz	copy_data0
   442                           
   443                           ; Initialize objects allocated to BANK3 (68 bytes)
   444                           ; load TBLPTR registers with __pidataBANK3
   445  000886  0E92               	movlw	low __pidataBANK3
   446  000888  6EF6               	movwf	tblptrl,c
   447  00088A  0E0E               	movlw	high __pidataBANK3
   448  00088C  6EF7               	movwf	tblptrh,c
   449  00088E  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   450  000890  6EF8               	movwf	tblptru,c
   451  000892  EE03  F080         	lfsr	0,__pdataBANK3
   452  000896  EE10 F044          	lfsr	1,68
   453  00089A                     copy_data1:
   454  00089A  0009               	tblrd		*+
   455  00089C  CFF5 FFEE          	movff	tablat,postinc0
   456  0008A0  50E5               	movf	postdec1,w,c
   457  0008A2  50E1               	movf	fsr1l,w,c
   458  0008A4  E1FA               	bnz	copy_data1
   459                           
   460                           ; Initialize objects allocated to BANK2 (28 bytes)
   461                           ; load TBLPTR registers with __pidataBANK2
   462  0008A6  0E84               	movlw	low __pidataBANK2
   463  0008A8  6EF6               	movwf	tblptrl,c
   464  0008AA  0E10               	movlw	high __pidataBANK2
   465  0008AC  6EF7               	movwf	tblptrh,c
   466  0008AE  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   467  0008B0  6EF8               	movwf	tblptru,c
   468  0008B2  EE02  F0DC         	lfsr	0,__pdataBANK2
   469  0008B6  EE10 F01C          	lfsr	1,28
   470  0008BA                     copy_data2:
   471  0008BA  0009               	tblrd		*+
   472  0008BC  CFF5 FFEE          	movff	tablat,postinc0
   473  0008C0  50E5               	movf	postdec1,w,c
   474  0008C2  50E1               	movf	fsr1l,w,c
   475  0008C4  E1FA               	bnz	copy_data2
   476                           
   477                           ; Initialize objects allocated to BANK1 (30 bytes)
   478                           ; load TBLPTR registers with __pidataBANK1
   479  0008C6  0E66               	movlw	low __pidataBANK1
   480  0008C8  6EF6               	movwf	tblptrl,c
   481  0008CA  0E10               	movlw	high __pidataBANK1
   482  0008CC  6EF7               	movwf	tblptrh,c
   483  0008CE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   484  0008D0  6EF8               	movwf	tblptru,c
   485  0008D2  EE01  F0DC         	lfsr	0,__pdataBANK1
   486  0008D6  EE10 F01E          	lfsr	1,30
   487  0008DA                     copy_data3:
   488  0008DA  0009               	tblrd		*+
   489  0008DC  CFF5 FFEE          	movff	tablat,postinc0
   490  0008E0  50E5               	movf	postdec1,w,c
   491  0008E2  50E1               	movf	fsr1l,w,c
   492  0008E4  E1FA               	bnz	copy_data3
   493                           
   494                           ; Initialize objects allocated to BANK0 (48 bytes)
   495                           ; load TBLPTR registers with __pidataBANK0
   496  0008E6  0EC8               	movlw	low __pidataBANK0
   497  0008E8  6EF6               	movwf	tblptrl,c
   498  0008EA  0E0F               	movlw	high __pidataBANK0
   499  0008EC  6EF7               	movwf	tblptrh,c
   500  0008EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   501  0008F0  6EF8               	movwf	tblptru,c
   502  0008F2  EE00  F0C1         	lfsr	0,__pdataBANK0
   503  0008F6  EE10 F030          	lfsr	1,48
   504  0008FA                     copy_data4:
   505  0008FA  0009               	tblrd		*+
   506  0008FC  CFF5 FFEE          	movff	tablat,postinc0
   507  000900  50E5               	movf	postdec1,w,c
   508  000902  50E1               	movf	fsr1l,w,c
   509  000904  E1FA               	bnz	copy_data4
   510                           
   511                           ; Initialize objects allocated to COMRAM (32 bytes)
   512                           ; load TBLPTR registers with __pidataCOMRAM
   513  000906  0E46               	movlw	low __pidataCOMRAM
   514  000908  6EF6               	movwf	tblptrl,c
   515  00090A  0E10               	movlw	high __pidataCOMRAM
   516  00090C  6EF7               	movwf	tblptrh,c
   517  00090E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   518  000910  6EF8               	movwf	tblptru,c
   519  000912  EE00  F053         	lfsr	0,__pdataCOMRAM
   520  000916  EE10 F020          	lfsr	1,32
   521  00091A                     copy_data5:
   522  00091A  0009               	tblrd		*+
   523  00091C  CFF5 FFEE          	movff	tablat,postinc0
   524  000920  50E5               	movf	postdec1,w,c
   525  000922  50E1               	movf	fsr1l,w,c
   526  000924  E1FA               	bnz	copy_data5
   527  000926                     end_of_initialization:
   528                           	opt stack 0
   529  000926                     __end_of__initialization:
   530                           	opt stack 0
   531  000926  9075               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   532  000928  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   533  00092A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   534  00092C  6EF8               	movwf	tblptru,c
   535  00092E  0100               	movlb	0
   536  000930  EF50  F008         	goto	_main	;jump to C main() function
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           postdec1	equ	0xFE5
   544                           fsr1l	equ	0xFE1
   545                           
   546                           	psect	bssCOMRAM
   547  000073                     __pbssCOMRAM:
   548                           	opt stack 0
   549  000073                     __timerCounter:
   550                           	opt stack 0
   551  000073                     	ds	2
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           postinc0	equ	0xFEE
   557                           wreg	equ	0xFE8
   558                           postdec1	equ	0xFE5
   559                           fsr1l	equ	0xFE1
   560                           
   561                           	psect	dataCOMRAM
   562  000053                     __pdataCOMRAM:
   563                           	opt stack 0
   564  000053                     drawSymbol@F3241:
   565                           	opt stack 0
   566  000053                     	ds	30
   567  000071                     __speed:
   568                           	opt stack 0
   569  000071                     	ds	2
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           postdec1	equ	0xFE5
   577                           fsr1l	equ	0xFE1
   578                           
   579                           	psect	bssBANK0
   580  0000F1                     __pbssBANK0:
   581                           	opt stack 0
   582  0000F1                     __p1:
   583                           	opt stack 0
   584  0000F1                     	ds	5
   585  0000F6                     __p2:
   586                           	opt stack 0
   587  0000F6                     	ds	5
   588  0000FB                     __ball:
   589                           	opt stack 0
   590  0000FB                     	ds	3
   591  0000FE                     __nextPos:
   592                           	opt stack 0
   593  0000FE                     	ds	2
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	dataBANK0
   604  0000C1                     __pdataBANK0:
   605                           	opt stack 0
   606  0000C1                     drawSymbol@F3226:
   607                           	opt stack 0
   608  0000C1                     	ds	24
   609  0000D9                     drawSymbol@F3232:
   610                           	opt stack 0
   611  0000D9                     	ds	24
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1l	equ	0xFE1
   620                           
   621                           	psect	dataBANK1
   622  0001DC                     __pdataBANK1:
   623                           	opt stack 0
   624  0001DC                     drawSymbol@F3244:
   625                           	opt stack 0
   626  0001DC                     	ds	30
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636                           	psect	dataBANK2
   637  0002DC                     __pdataBANK2:
   638                           	opt stack 0
   639  0002DC                     drawSymbol@F3229:
   640                           	opt stack 0
   641  0002DC                     	ds	28
   642                           tblptru	equ	0xFF8
   643                           tblptrh	equ	0xFF7
   644                           tblptrl	equ	0xFF6
   645                           tablat	equ	0xFF5
   646                           postinc0	equ	0xFEE
   647                           wreg	equ	0xFE8
   648                           postdec1	equ	0xFE5
   649                           fsr1l	equ	0xFE1
   650                           
   651                           	psect	bssBANK3
   652  000300                     __pbssBANK3:
   653                           	opt stack 0
   654  000300                     _pixels:
   655                           	opt stack 0
   656  000300                     	ds	128
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           tblptrl	equ	0xFF6
   660                           tablat	equ	0xFF5
   661                           postinc0	equ	0xFEE
   662                           wreg	equ	0xFE8
   663                           postdec1	equ	0xFE5
   664                           fsr1l	equ	0xFE1
   665                           
   666                           	psect	dataBANK3
   667  000380                     __pdataBANK3:
   668                           	opt stack 0
   669  000380                     drawSymbol@F3235:
   670                           	opt stack 0
   671  000380                     	ds	68
   672                           tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           postinc0	equ	0xFEE
   677                           wreg	equ	0xFE8
   678                           postdec1	equ	0xFE5
   679                           fsr1l	equ	0xFE1
   680                           
   681                           	psect	dataBANK4
   682  000400                     __pdataBANK4:
   683                           	opt stack 0
   684  000400                     drawSymbol@F3238:
   685                           	opt stack 0
   686  000400                     	ds	68
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           tblptrl	equ	0xFF6
   690                           tablat	equ	0xFF5
   691                           postinc0	equ	0xFEE
   692                           wreg	equ	0xFE8
   693                           postdec1	equ	0xFE5
   694                           fsr1l	equ	0xFE1
   695                           
   696                           	psect	cstackBANK2
   697  000200                     __pcstackBANK2:
   698                           	opt stack 0
   699  000200                     drawSymbol@symbolPlay:
   700                           	opt stack 0
   701                           
   702                           ; 68 bytes @ 0x0
   703  000200                     	ds	68
   704  000244                     drawSymbol@symbolTwo:
   705                           	opt stack 0
   706                           
   707                           ; 28 bytes @ 0x44
   708  000244                     	ds	28
   709  000260                     drawSymbol@symbolGo:
   710                           	opt stack 0
   711                           
   712                           ; 68 bytes @ 0x60
   713  000260                     	ds	68
   714  0002A4                     drawSymbol@symbolOne:
   715                           	opt stack 0
   716                           
   717                           ; 24 bytes @ 0xA4
   718  0002A4                     	ds	24
   719  0002BC                     drawSymbol@symbolThree:
   720                           	opt stack 0
   721                           
   722                           ; 24 bytes @ 0xBC
   723  0002BC                     	ds	24
   724  0002D4                     drawSymbol@chosenSymbol:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0xD4
   728  0002D4                     	ds	1
   729  0002D5                     drawSymbol@i:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0xD5
   733  0002D5                     	ds	1
   734  0002D6                     drawSymbol@i_84:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0xD6
   738  0002D6                     	ds	1
   739  0002D7                     drawSymbol@i_85:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0xD7
   743  0002D7                     	ds	1
   744  0002D8                     drawSymbol@i_86:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0xD8
   748  0002D8                     	ds	1
   749  0002D9                     drawSymbol@i_87:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0xD9
   753  0002D9                     	ds	1
   754  0002DA                     drawSymbol@i_88:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0xDA
   758  0002DA                     	ds	1
   759  0002DB                     drawSymbol@i_89:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0xDB
   763  0002DB                     	ds	1
   764                           tblptru	equ	0xFF8
   765                           tblptrh	equ	0xFF7
   766                           tblptrl	equ	0xFF6
   767                           tablat	equ	0xFF5
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           postdec1	equ	0xFE5
   771                           fsr1l	equ	0xFE1
   772                           
   773                           	psect	cstackBANK1
   774  000100                     __pcstackBANK1:
   775                           	opt stack 0
   776  000100                     i2drawSymbol@symbolPlay:
   777                           	opt stack 0
   778                           
   779                           ; 68 bytes @ 0x0
   780  000100                     	ds	68
   781  000144                     i2drawSymbol@symbolGo:
   782                           	opt stack 0
   783                           
   784                           ; 68 bytes @ 0x44
   785  000144                     	ds	68
   786  000188                     i2drawSymbol@symbolTwo:
   787                           	opt stack 0
   788                           
   789                           ; 28 bytes @ 0x88
   790  000188                     	ds	28
   791  0001A4                     i2drawSymbol@symbolOne:
   792                           	opt stack 0
   793                           
   794                           ; 24 bytes @ 0xA4
   795  0001A4                     	ds	24
   796  0001BC                     i2drawSymbol@symbolThree:
   797                           	opt stack 0
   798                           
   799                           ; 24 bytes @ 0xBC
   800  0001BC                     	ds	24
   801  0001D4                     i2drawSymbol@chosenSymbol:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0xD4
   805  0001D4                     	ds	1
   806  0001D5                     i2drawSymbol@i:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0xD5
   810  0001D5                     	ds	1
   811  0001D6                     i2drawSymbol@i_84:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0xD6
   815  0001D6                     	ds	1
   816  0001D7                     i2drawSymbol@i_85:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0xD7
   820  0001D7                     	ds	1
   821  0001D8                     i2drawSymbol@i_86:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0xD8
   825  0001D8                     	ds	1
   826  0001D9                     i2drawSymbol@i_87:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0xD9
   830  0001D9                     	ds	1
   831  0001DA                     i2drawSymbol@i_88:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0xDA
   835  0001DA                     	ds	1
   836  0001DB                     i2drawSymbol@i_89:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0xDB
   840  0001DB                     	ds	1
   841                           tblptru	equ	0xFF8
   842                           tblptrh	equ	0xFF7
   843                           tblptrl	equ	0xFF6
   844                           tablat	equ	0xFF5
   845                           postinc0	equ	0xFEE
   846                           wreg	equ	0xFE8
   847                           postdec1	equ	0xFE5
   848                           fsr1l	equ	0xFE1
   849                           
   850                           	psect	cstackBANK0
   851  000080                     __pcstackBANK0:
   852                           	opt stack 0
   853  000080                     ??_turnAllOff:
   854  000080                     ??_setColHigh:
   855  000080                     ??_setRowHigh:
   856  000080                     ??_initializeLED:
   857  000080                     ?___wmul:
   858                           	opt stack 0
   859  000080                     on@row:
   860                           	opt stack 0
   861  000080                     ___wmul@multiplier:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x0
   865  000080                     	ds	1
   866  000081                     ??_on:
   867                           
   868                           ; 1 bytes @ 0x1
   869  000081                     	ds	1
   870  000082                     setColHigh@column:
   871                           	opt stack 0
   872  000082                     setRowHigh@row:
   873                           	opt stack 0
   874  000082                     initializeLED@i:
   875                           	opt stack 0
   876  000082                     turnAllOff@i:
   877                           	opt stack 0
   878  000082                     ___wmul@multiplicand:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x2
   882  000082                     	ds	1
   883  000083                     ??_refresh:
   884  000083                     initializeLED@j:
   885                           	opt stack 0
   886  000083                     on@column:
   887                           	opt stack 0
   888  000083                     turnAllOff@j:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x3
   892  000083                     	ds	1
   893  000084                     drawSymbol@offSetX:
   894                           	opt stack 0
   895  000084                     ___wmul@product:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x4
   899  000084                     	ds	1
   900  000085                     drawSymbol@symbolArrowRight:
   901                           	opt stack 0
   902                           
   903                           ; 30 bytes @ 0x5
   904  000085                     	ds	1
   905  000086                     refresh@theCol:
   906                           	opt stack 0
   907  000086                     delaySeconds@numberOfSeconds:
   908                           	opt stack 0
   909                           
   910                           ; 2 bytes @ 0x6
   911  000086                     	ds	1
   912  000087                     refresh@theRow:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x7
   916  000087                     	ds	1
   917  000088                     ??_delaySeconds:
   918                           
   919                           ; 1 bytes @ 0x8
   920  000088                     	ds	1
   921  000089                     delaySeconds@i:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x9
   925  000089                     	ds	26
   926  0000A3                     drawSymbol@symbolArrowLeft:
   927                           	opt stack 0
   928                           
   929                           ; 30 bytes @ 0x23
   930  0000A3                     	ds	30
   931  0000C1                     tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           postinc0	equ	0xFEE
   936                           wreg	equ	0xFE8
   937                           postdec1	equ	0xFE5
   938                           fsr1l	equ	0xFE1
   939                           
   940                           ; 1 bytes @ 0x41
   941                           
   942                           	psect	cstackCOMRAM
   943  000001                     __pcstackCOMRAM:
   944                           	opt stack 0
   945  000001                     ??i2_turnAllOff:
   946  000001                     ?___lwdiv:
   947                           	opt stack 0
   948  000001                     ?i2___wmul:
   949                           	opt stack 0
   950  000001                     off@row:
   951                           	opt stack 0
   952  000001                     i2on@row:
   953                           	opt stack 0
   954  000001                     ___lwdiv@dividend:
   955                           	opt stack 0
   956  000001                     i2___wmul@multiplier:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0x0
   960  000001                     	ds	1
   961  000002                     ??_off:
   962  000002                     ??i2_on:
   963                           
   964                           ; 1 bytes @ 0x1
   965  000002                     	ds	1
   966  000003                     i2turnAllOff@i:
   967                           	opt stack 0
   968  000003                     ___lwdiv@divisor:
   969                           	opt stack 0
   970  000003                     i2___wmul@multiplicand:
   971                           	opt stack 0
   972                           
   973                           ; 2 bytes @ 0x2
   974  000003                     	ds	1
   975  000004                     off@column:
   976                           	opt stack 0
   977  000004                     i2on@column:
   978                           	opt stack 0
   979  000004                     i2turnAllOff@j:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x3
   983  000004                     	ds	1
   984  000005                     i2drawSymbol@offSetX:
   985                           	opt stack 0
   986  000005                     ___lwdiv@quotient:
   987                           	opt stack 0
   988  000005                     i2___wmul@product:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x4
   992  000005                     	ds	1
   993  000006                     i2drawSymbol@symbolArrowRight:
   994                           	opt stack 0
   995                           
   996                           ; 30 bytes @ 0x5
   997  000006                     	ds	1
   998  000007                     ___lwdiv@counter:
   999                           	opt stack 0
  1000  000007                     i2delaySeconds@numberOfSeconds:
  1001                           	opt stack 0
  1002                           
  1003                           ; 2 bytes @ 0x6
  1004  000007                     	ds	2
  1005  000009                     ??i2_delaySeconds:
  1006                           
  1007                           ; 1 bytes @ 0x8
  1008  000009                     	ds	1
  1009  00000A                     i2delaySeconds@i:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x9
  1013  00000A                     	ds	26
  1014  000024                     i2drawSymbol@symbolArrowLeft:
  1015                           	opt stack 0
  1016                           
  1017                           ; 30 bytes @ 0x23
  1018  000024                     	ds	30
  1019  000042                     ??_ISR:
  1020  000042                     
  1021                           ; 1 bytes @ 0x41
  1022  000042                     	ds	14
  1023  000050                     ISR@ADvalue:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x4F
  1027  000050                     	ds	2
  1028  000052                     ISR@value:
  1029                           	opt stack 0
  1030                           
  1031                           ; 1 bytes @ 0x51
  1032  000052                     	ds	1
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           postinc0	equ	0xFEE
  1038                           wreg	equ	0xFE8
  1039                           postdec1	equ	0xFE5
  1040                           fsr1l	equ	0xFE1
  1041                           
  1042 ;;
  1043 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1044 ;;
  1045 ;; *************** function _main *****************
  1046 ;; Defined at:
  1047 ;;		line 355 in file "main.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  GO_SYMBOL       1    0        const unsigned char 
  1052 ;;  ONE_SYMBOL      1    0        const unsigned char 
  1053 ;;  TWO_SYMBOL      1    0        const unsigned char 
  1054 ;;  THREE_SYMBOL    1    0        const unsigned char 
  1055 ;;  HELLO_SYMBOL    1    0        const unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1065 ;;      Params:         0       0       0       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0
  1068 ;;      Totals:         0       0       0       0       0       0       0
  1069 ;;Total ram usage:        0 bytes
  1070 ;; Hardware stack levels required when called:    9
  1071 ;; This function calls:
  1072 ;;		_initialize
  1073 ;;		_initializeLED
  1074 ;;		_initializePong
  1075 ;;		_refresh
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text0
  1082  0010A0                     __ptext0:
  1083                           	opt stack 0
  1084  0010A0                     _main:
  1085                           	opt stack 22
  1086                           
  1087                           ;main.c: 357: initializeLED();
  1088                           
  1089                           ;incstack = 0
  1090  0010A0  EC65  F005         	call	_initializeLED	;wreg free
  1091                           
  1092                           ;main.c: 358: initializePong();
  1093  0010A4  EC59  F008         	call	_initializePong	;wreg free
  1094                           
  1095                           ;main.c: 359: initialize();
  1096  0010A8  EC31  F006         	call	_initialize	;wreg free
  1097  0010AC                     l2271:
  1098  0010AC  EC9A  F004         	call	_refresh	;wreg free
  1099  0010B0  D7FD               	goto	l2271
  1100  0010B2                     __end_of_main:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           
  1111 ;; *************** function _refresh *****************
  1112 ;; Defined at:
  1113 ;;		line 185 in file "Source/LED-API.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  theRow          1    7[BANK0 ] unsigned char 
  1118 ;;  theCol          1    6[BANK0 ] unsigned char 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1128 ;;      Params:         0       0       0       0       0       0       0
  1129 ;;      Locals:         0       2       0       0       0       0       0
  1130 ;;      Temps:          0       3       0       0       0       0       0
  1131 ;;      Totals:         0       5       0       0       0       0       0
  1132 ;;Total ram usage:        5 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    6
  1135 ;; This function calls:
  1136 ;;		_allOff
  1137 ;;		_setColHigh
  1138 ;;		_setRowHigh
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text1
  1145  000934                     __ptext1:
  1146                           	opt stack 0
  1147  000934                     _refresh:
  1148                           	opt stack 24
  1149                           
  1150                           ;LED-API.c: 187: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  1151                           
  1152                           ;incstack = 0
  1153  000934  0E00               	movlw	0
  1154  000936  0100               	movlb	0	; () banked
  1155  000938  6F86               	movwf	refresh@theCol& (0+255),b
  1156  00093A                     l1967:
  1157                           
  1158                           ; BSR set to: 0
  1159  00093A  0E07               	movlw	7
  1160  00093C  0100               	movlb	0	; () banked
  1161  00093E  6586               	cpfsgt	refresh@theCol& (0+255),b
  1162  000940  D001               	goto	l1971
  1163  000942  0012               	return	
  1164  000944                     l1971:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;LED-API.c: 189: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  1168  000944  0E00               	movlw	0
  1169  000946  0100               	movlb	0	; () banked
  1170  000948  6F87               	movwf	refresh@theRow& (0+255),b
  1171  00094A                     l1973:
  1172                           
  1173                           ; BSR set to: 0
  1174  00094A  0E0F               	movlw	15
  1175  00094C  0100               	movlb	0	; () banked
  1176  00094E  6587               	cpfsgt	refresh@theRow& (0+255),b
  1177  000950  D001               	goto	l1977
  1178  000952  D024               	goto	l1985
  1179  000954                     l1977:
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;LED-API.c: 191: if (pixels[theCol][theRow] == 1)
  1183  000954  0100               	movlb	0	; () banked
  1184  000956  5186               	movf	refresh@theCol& (0+255),w,b
  1185  000958  0D10               	mullw	16
  1186  00095A  0E00               	movlw	low _pixels
  1187  00095C  0100               	movlb	0	; () banked
  1188  00095E  6F83               	movwf	??_refresh& (0+255),b
  1189  000960  0E03               	movlw	high _pixels
  1190  000962  0100               	movlb	0	; () banked
  1191  000964  6F84               	movwf	(??_refresh+1)& (0+255),b
  1192  000966  50F3               	movf	prodl,w,c
  1193  000968  0100               	movlb	0	; () banked
  1194  00096A  2783               	addwf	??_refresh& (0+255),f,b
  1195  00096C  50F4               	movf	prodh,w,c
  1196  00096E  0100               	movlb	0	; () banked
  1197  000970  2384               	addwfc	(??_refresh+1)& (0+255),f,b
  1198  000972  0100               	movlb	0	; () banked
  1199  000974  5187               	movf	refresh@theRow& (0+255),w,b
  1200  000976  0D01               	mullw	1
  1201  000978  50F3               	movf	prodl,w,c
  1202  00097A  0100               	movlb	0	; () banked
  1203  00097C  2583               	addwf	??_refresh& (0+255),w,b
  1204  00097E  6ED9               	movwf	fsr2l,c
  1205  000980  50F4               	movf	prodh,w,c
  1206  000982  0100               	movlb	0	; () banked
  1207  000984  2184               	addwfc	(??_refresh+1)& (0+255),w,b
  1208  000986  6EDA               	movwf	fsr2h,c
  1209  000988  04DE               	decf	postinc2,w,c
  1210  00098A  A4D8               	btfss	status,2,c
  1211  00098C  D004               	goto	l1981
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;LED-API.c: 192: setRowHigh(theRow);
  1215  00098E  0100               	movlb	0	; () banked
  1216  000990  5187               	movf	refresh@theRow& (0+255),w,b
  1217  000992  EC04  F006         	call	_setRowHigh
  1218  000996                     l1981:
  1219  000996  0100               	movlb	0	; () banked
  1220  000998  2B87               	incf	refresh@theRow& (0+255),f,b
  1221  00099A  D7D7               	goto	l1973
  1222  00099C                     l1985:
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;LED-API.c: 193: }
  1226                           ;LED-API.c: 197: setColHigh(theCol);
  1227  00099C  0100               	movlb	0	; () banked
  1228  00099E  5186               	movf	refresh@theCol& (0+255),w,b
  1229  0009A0  ECFC  F007         	call	_setColHigh
  1230                           
  1231                           ;LED-API.c: 198: _delay((unsigned long)((500)*(32000000/4000000.0)));
  1232  0009A4  0E06               	movlw	6
  1233  0009A6  0100               	movlb	0	; () banked
  1234  0009A8  6F83               	movwf	??_refresh& (0+255),b
  1235  0009AA  0E30               	movlw	48
  1236  0009AC                     u1917:
  1237  0009AC  2EE8               	decfsz	wreg,f,c
  1238  0009AE  D7FE               	goto	u1917
  1239  0009B0  2F83               	decfsz	??_refresh& (0+255),f,b
  1240  0009B2  D7FC               	goto	u1917
  1241  0009B4  D000               	nop2	
  1242                           
  1243                           ;LED-API.c: 199: allOff();
  1244  0009B6  EC62  F008         	call	_allOff	;wreg free
  1245  0009BA  0100               	movlb	0	; () banked
  1246  0009BC  2B86               	incf	refresh@theCol& (0+255),f,b
  1247  0009BE  D7BD               	goto	l1967
  1248  0009C0                     __end_of_refresh:
  1249                           	opt stack 0
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           prodh	equ	0xFF4
  1255                           prodl	equ	0xFF3
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1l	equ	0xFE1
  1260                           postinc2	equ	0xFDE
  1261                           fsr2h	equ	0xFDA
  1262                           fsr2l	equ	0xFD9
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _setRowHigh *****************
  1266 ;; Defined at:
  1267 ;;		line 24 in file "Source/LED-API.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  row             1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  row             1    2[BANK0 ] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1281 ;;      Params:         0       0       0       0       0       0       0
  1282 ;;      Locals:         0       1       0       0       0       0       0
  1283 ;;      Temps:          0       2       0       0       0       0       0
  1284 ;;      Totals:         0       3       0       0       0       0       0
  1285 ;;Total ram usage:        3 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    5
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_refresh
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text2
  1296  000C08                     __ptext2:
  1297                           	opt stack 0
  1298  000C08                     _setRowHigh:
  1299                           	opt stack 24
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;incstack = 0
  1303                           ;setRowHigh@row stored from wreg
  1304  000C08  0100               	movlb	0	; () banked
  1305  000C0A  6F82               	movwf	setRowHigh@row& (0+255),b
  1306                           
  1307                           ;LED-API.c: 25: if(row < 8)
  1308  000C0C  0E08               	movlw	8
  1309  000C0E  0100               	movlb	0	; () banked
  1310  000C10  6182               	cpfslt	setRowHigh@row& (0+255),b
  1311  000C12  D012               	goto	l1871
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;LED-API.c: 26: LATC |= (1 << row);
  1315  000C14  C082  F080         	movff	setRowHigh@row,??_setRowHigh
  1316  000C18  0E01               	movlw	1
  1317  000C1A  0100               	movlb	0	; () banked
  1318  000C1C  6F81               	movwf	(??_setRowHigh+1)& (0+255),b
  1319  000C1E  0100               	movlb	0	; () banked
  1320  000C20  2B80               	incf	??_setRowHigh& (0+255),f,b
  1321  000C22  D003               	goto	u1544
  1322  000C24                     u1545:
  1323  000C24  0100               	movlb	0	; () banked
  1324  000C26  90D8               	bcf	status,0,c
  1325  000C28  3781               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1326  000C2A                     u1544:
  1327  000C2A  0100               	movlb	0	; () banked
  1328  000C2C  2F80               	decfsz	??_setRowHigh& (0+255),f,b
  1329  000C2E  D7FA               	goto	u1545
  1330  000C30  0100               	movlb	0	; () banked
  1331  000C32  5181               	movf	(??_setRowHigh+1)& (0+255),w,b
  1332  000C34  128B               	iorwf	3979,f,c	;volatile
  1333  000C36  0012               	return	
  1334  000C38                     l1871:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;LED-API.c: 27: else
  1338                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  1339  000C38  C082  F080         	movff	setRowHigh@row,??_setRowHigh
  1340  000C3C  0EF8               	movlw	-8
  1341  000C3E  0100               	movlb	0	; () banked
  1342  000C40  2780               	addwf	??_setRowHigh& (0+255),f,b
  1343  000C42  0E01               	movlw	1
  1344  000C44  0100               	movlb	0	; () banked
  1345  000C46  6F81               	movwf	(??_setRowHigh+1)& (0+255),b
  1346  000C48  0100               	movlb	0	; () banked
  1347  000C4A  2B80               	incf	??_setRowHigh& (0+255),f,b
  1348  000C4C  D003               	goto	u1554
  1349  000C4E                     u1555:
  1350  000C4E  0100               	movlb	0	; () banked
  1351  000C50  90D8               	bcf	status,0,c
  1352  000C52  3781               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1353  000C54                     u1554:
  1354  000C54  0100               	movlb	0	; () banked
  1355  000C56  2F80               	decfsz	??_setRowHigh& (0+255),f,b
  1356  000C58  D7FA               	goto	u1555
  1357  000C5A  0100               	movlb	0	; () banked
  1358  000C5C  5181               	movf	(??_setRowHigh+1)& (0+255),w,b
  1359  000C5E  128C               	iorwf	3980,f,c	;volatile
  1360  000C60  0012               	return	
  1361  000C62                     __end_of_setRowHigh:
  1362                           	opt stack 0
  1363                           tblptru	equ	0xFF8
  1364                           tblptrh	equ	0xFF7
  1365                           tblptrl	equ	0xFF6
  1366                           tablat	equ	0xFF5
  1367                           prodh	equ	0xFF4
  1368                           prodl	equ	0xFF3
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           postdec1	equ	0xFE5
  1372                           fsr1l	equ	0xFE1
  1373                           postinc2	equ	0xFDE
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function _setColHigh *****************
  1379 ;; Defined at:
  1380 ;;		line 20 in file "Source/LED-API.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  column          1    wreg     unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  column          1    2[BANK0 ] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1394 ;;      Params:         0       0       0       0       0       0       0
  1395 ;;      Locals:         0       1       0       0       0       0       0
  1396 ;;      Temps:          0       2       0       0       0       0       0
  1397 ;;      Totals:         0       3       0       0       0       0       0
  1398 ;;Total ram usage:        3 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    5
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_refresh
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text3
  1409  000FF8                     __ptext3:
  1410                           	opt stack 0
  1411  000FF8                     _setColHigh:
  1412                           	opt stack 24
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;incstack = 0
  1416                           ;setColHigh@column stored from wreg
  1417  000FF8  0100               	movlb	0	; () banked
  1418  000FFA  6F82               	movwf	setColHigh@column& (0+255),b
  1419                           
  1420                           ;LED-API.c: 21: LATA |= (1 << column);
  1421  000FFC  C082  F080         	movff	setColHigh@column,??_setColHigh
  1422  001000  0E01               	movlw	1
  1423  001002  0100               	movlb	0	; () banked
  1424  001004  6F81               	movwf	(??_setColHigh+1)& (0+255),b
  1425  001006  0100               	movlb	0	; () banked
  1426  001008  2B80               	incf	??_setColHigh& (0+255),f,b
  1427  00100A  D003               	goto	u1524
  1428  00100C                     u1525:
  1429  00100C  0100               	movlb	0	; () banked
  1430  00100E  90D8               	bcf	status,0,c
  1431  001010  3781               	rlcf	(??_setColHigh+1)& (0+255),f,b
  1432  001012                     u1524:
  1433  001012  0100               	movlb	0	; () banked
  1434  001014  2F80               	decfsz	??_setColHigh& (0+255),f,b
  1435  001016  D7FA               	goto	u1525
  1436  001018  0100               	movlb	0	; () banked
  1437  00101A  5181               	movf	(??_setColHigh+1)& (0+255),w,b
  1438  00101C  1289               	iorwf	3977,f,c	;volatile
  1439                           
  1440                           ; BSR set to: 0
  1441  00101E  0012               	return		;funcret
  1442  001020                     __end_of_setColHigh:
  1443                           	opt stack 0
  1444                           tblptru	equ	0xFF8
  1445                           tblptrh	equ	0xFF7
  1446                           tblptrl	equ	0xFF6
  1447                           tablat	equ	0xFF5
  1448                           prodh	equ	0xFF4
  1449                           prodl	equ	0xFF3
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           postdec1	equ	0xFE5
  1453                           fsr1l	equ	0xFE1
  1454                           postinc2	equ	0xFDE
  1455                           fsr2h	equ	0xFDA
  1456                           fsr2l	equ	0xFD9
  1457                           status	equ	0xFD8
  1458                           
  1459 ;; *************** function _allOff *****************
  1460 ;; Defined at:
  1461 ;;		line 179 in file "Source/LED-API.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1475 ;;      Params:         0       0       0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    5
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_refresh
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text4
  1490  0010C4                     __ptext4:
  1491                           	opt stack 0
  1492  0010C4                     _allOff:
  1493                           	opt stack 24
  1494                           
  1495                           ;LED-API.c: 180: LATA = 0;
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;incstack = 0
  1499  0010C4  0E00               	movlw	0
  1500  0010C6  6E89               	movwf	3977,c	;volatile
  1501                           
  1502                           ;LED-API.c: 181: LATC = 0;
  1503  0010C8  0E00               	movlw	0
  1504  0010CA  6E8B               	movwf	3979,c	;volatile
  1505                           
  1506                           ;LED-API.c: 182: LATD = 0;
  1507  0010CC  0E00               	movlw	0
  1508  0010CE  6E8C               	movwf	3980,c	;volatile
  1509  0010D0  0012               	return		;funcret
  1510  0010D2                     __end_of_allOff:
  1511                           	opt stack 0
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           prodh	equ	0xFF4
  1517                           prodl	equ	0xFF3
  1518                           postinc0	equ	0xFEE
  1519                           wreg	equ	0xFE8
  1520                           postdec1	equ	0xFE5
  1521                           fsr1l	equ	0xFE1
  1522                           postinc2	equ	0xFDE
  1523                           fsr2h	equ	0xFDA
  1524                           fsr2l	equ	0xFD9
  1525                           status	equ	0xFD8
  1526                           
  1527 ;; *************** function _initializePong *****************
  1528 ;; Defined at:
  1529 ;;		line 82 in file "main.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1543 ;;      Params:         0       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    8
  1550 ;; This function calls:
  1551 ;;		_startPong
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text5
  1558  0010B2                     __ptext5:
  1559                           	opt stack 0
  1560  0010B2                     _initializePong:
  1561                           	opt stack 22
  1562                           
  1563                           ;main.c: 87: _p1.lives = 2;
  1564                           
  1565                           ;incstack = 0
  1566  0010B2  0E02               	movlw	2
  1567  0010B4  0100               	movlb	0	; () banked
  1568  0010B6  6FF5               	movwf	(__p1+4)& (0+255),b
  1569                           
  1570                           ;main.c: 88: _p2.lives = 2;
  1571  0010B8  0E02               	movlw	2
  1572  0010BA  0100               	movlb	0	; () banked
  1573  0010BC  6FFA               	movwf	(__p2+4)& (0+255),b
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;main.c: 90: startPong();
  1577  0010BE  EC5E  F006         	call	_startPong	;wreg free
  1578  0010C2  0012               	return		;funcret
  1579  0010C4                     __end_of_initializePong:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           prodh	equ	0xFF4
  1586                           prodl	equ	0xFF3
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           postdec1	equ	0xFE5
  1590                           fsr1l	equ	0xFE1
  1591                           postinc2	equ	0xFDE
  1592                           fsr2h	equ	0xFDA
  1593                           fsr2l	equ	0xFD9
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _startPong *****************
  1597 ;; Defined at:
  1598 ;;		line 58 in file "main.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1612 ;;      Params:         0       0       0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    7
  1619 ;; This function calls:
  1620 ;;		_delaySeconds
  1621 ;;		_drawSymbol
  1622 ;;		_turnAllOff
  1623 ;; This function is called by:
  1624 ;;		_initializePong
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text6
  1629  000CBC                     __ptext6:
  1630                           	opt stack 0
  1631  000CBC                     _startPong:
  1632                           	opt stack 22
  1633                           
  1634                           ;main.c: 61: turnAllOff();
  1635                           
  1636                           ;incstack = 0
  1637  000CBC  ECA3  F005         	call	_turnAllOff	;wreg free
  1638                           
  1639                           ;main.c: 62: drawSymbol(_p1.lives, 0);
  1640  000CC0  0E00               	movlw	0
  1641  000CC2  0100               	movlb	0	; () banked
  1642  000CC4  6F84               	movwf	drawSymbol@offSetX& (0+255),b
  1643  000CC6  0100               	movlb	0	; () banked
  1644  000CC8  51F5               	movf	(__p1+4)& (0+255),w,b
  1645  000CCA  EC0D  F000         	call	_drawSymbol
  1646                           
  1647                           ;main.c: 63: drawSymbol(_p2.lives, 8);
  1648  000CCE  0E08               	movlw	8
  1649  000CD0  0100               	movlb	0	; () banked
  1650  000CD2  6F84               	movwf	drawSymbol@offSetX& (0+255),b
  1651  000CD4  0100               	movlb	0	; () banked
  1652  000CD6  51FA               	movf	(__p2+4)& (0+255),w,b
  1653  000CD8  EC0D  F000         	call	_drawSymbol
  1654  000CDC                     l1891:
  1655  000CDC  0E00               	movlw	0
  1656  000CDE  0100               	movlb	0	; () banked
  1657  000CE0  6F87               	movwf	(delaySeconds@numberOfSeconds+1)& (0+255),b
  1658  000CE2  0E02               	movlw	2
  1659  000CE4  6F86               	movwf	delaySeconds@numberOfSeconds& (0+255),b
  1660  000CE6  ECD5  F005         	call	_delaySeconds	;wreg free
  1661  000CEA  0100               	movlb	0	; () banked
  1662  000CEC  A0D8               	btfss	status,0,c
  1663  000CEE  D7F6               	goto	l1891
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;main.c: 65: turnAllOff();
  1667                           
  1668                           ; BSR set to: 0
  1669  000CF0  ECA3  F005         	call	_turnAllOff	;wreg free
  1670                           
  1671                           ;main.c: 70: _ball.bDirection = 3;
  1672  000CF4  0E03               	movlw	3
  1673  000CF6  0100               	movlb	0	; () banked
  1674  000CF8  6FFD               	movwf	(__ball+2)& (0+255),b
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;main.c: 72: _ball.bPos[0] = 2;
  1678  000CFA  0E02               	movlw	2
  1679  000CFC  0100               	movlb	0	; () banked
  1680  000CFE  6FFB               	movwf	__ball& (0+255),b
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;main.c: 74: _ball.bPos[1] = 4;
  1684  000D00  0E04               	movlw	4
  1685  000D02  0100               	movlb	0	; () banked
  1686  000D04  6FFC               	movwf	(__ball+1)& (0+255),b
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;main.c: 77: _nextPos[0] = _ball.bPos[0];
  1690  000D06  C0FB  F0FE         	movff	__ball,__nextPos
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;main.c: 78: _nextPos[1] = _ball.bPos[1];
  1694  000D0A  C0FC  F0FF         	movff	__ball+1,__nextPos+1
  1695                           
  1696                           ; BSR set to: 0
  1697  000D0E  0012               	return		;funcret
  1698  000D10                     __end_of_startPong:
  1699                           	opt stack 0
  1700                           tblptru	equ	0xFF8
  1701                           tblptrh	equ	0xFF7
  1702                           tblptrl	equ	0xFF6
  1703                           tablat	equ	0xFF5
  1704                           prodh	equ	0xFF4
  1705                           prodl	equ	0xFF3
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           postdec1	equ	0xFE5
  1709                           fsr1l	equ	0xFE1
  1710                           postinc2	equ	0xFDE
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8
  1714                           
  1715 ;; *************** function _drawSymbol *****************
  1716 ;; Defined at:
  1717 ;;		line 89 in file "Source/LED-API.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  chosenSymbol    1    wreg     unsigned char 
  1720 ;;  offSetX         1    4[BANK0 ] unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  chosenSymbol    1  212[BANK2 ] unsigned char 
  1723 ;;  i               1  219[BANK2 ] unsigned char 
  1724 ;;  i               1  218[BANK2 ] unsigned char 
  1725 ;;  i               1  217[BANK2 ] unsigned char 
  1726 ;;  i               1  216[BANK2 ] unsigned char 
  1727 ;;  i               1  215[BANK2 ] unsigned char 
  1728 ;;  i               1  214[BANK2 ] unsigned char 
  1729 ;;  i               1  213[BANK2 ] unsigned char 
  1730 ;;  symbolGo       68   96[BANK2 ] unsigned char [2][34]
  1731 ;;  symbolPlay     68    0[BANK2 ] unsigned char [2][34]
  1732 ;;  symbolArrowL   30   35[BANK0 ] unsigned char [2][15]
  1733 ;;  symbolArrowR   30    5[BANK0 ] unsigned char [2][15]
  1734 ;;  symbolTwo      28   68[BANK2 ] unsigned char [2][14]
  1735 ;;  symbolThree    24  188[BANK2 ] unsigned char [2][12]
  1736 ;;  symbolOne      24  164[BANK2 ] unsigned char [2][12]
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1746 ;;      Params:         0       1       0       0       0       0       0
  1747 ;;      Locals:         0      60       0     220       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0
  1749 ;;      Totals:         0      61       0     220       0       0       0
  1750 ;;Total ram usage:      281 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    6
  1753 ;; This function calls:
  1754 ;;		_on
  1755 ;;		_turnAllOff
  1756 ;; This function is called by:
  1757 ;;		_startPong
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text7
  1762  00001A                     __ptext7:
  1763                           	opt stack 0
  1764  00001A                     _drawSymbol:
  1765                           	opt stack 22
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;incstack = 0
  1769                           ;drawSymbol@chosenSymbol stored from wreg
  1770  00001A  0102               	movlb	2	; () banked
  1771  00001C  6FD4               	movwf	drawSymbol@chosenSymbol& (0+255),b
  1772                           
  1773                           ;LED-API.c: 91: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  1774  00001E  EE20  F0C1         	lfsr	2,drawSymbol@F3226
  1775  000022  EE12  F0A4         	lfsr	1,drawSymbol@symbolOne
  1776  000026  0E17               	movlw	23
  1777  000028                     u1081:
  1778  000028  CFDB FFE3          	movff	plusw2,plusw1
  1779  00002C  06E8               	decf	wreg,f,c
  1780  00002E  E2FC               	bc	u1081
  1781                           
  1782                           ;LED-API.c: 92: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  1783  000030  EE22  F0DC         	lfsr	2,drawSymbol@F3229
  1784  000034  EE12  F044         	lfsr	1,drawSymbol@symbolTwo
  1785  000038  0E1B               	movlw	27
  1786  00003A                     u1091:
  1787  00003A  CFDB FFE3          	movff	plusw2,plusw1
  1788  00003E  06E8               	decf	wreg,f,c
  1789  000040  E2FC               	bc	u1091
  1790                           
  1791                           ;LED-API.c: 93: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  1792  000042  EE20  F0D9         	lfsr	2,drawSymbol@F3232
  1793  000046  EE12  F0BC         	lfsr	1,drawSymbol@symbolThree
  1794  00004A  0E17               	movlw	23
  1795  00004C                     u1101:
  1796  00004C  CFDB FFE3          	movff	plusw2,plusw1
  1797  000050  06E8               	decf	wreg,f,c
  1798  000052  E2FC               	bc	u1101
  1799                           
  1800                           ;LED-API.c: 95: char symbolPlay[34][2] = {
  1801                           ;LED-API.c: 96: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  1802                           ;LED-API.c: 97: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  1803                           ;LED-API.c: 98: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  1804                           ;LED-API.c: 99: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  1805  000054  EE23  F080         	lfsr	2,drawSymbol@F3235
  1806  000058  EE12  F000         	lfsr	1,drawSymbol@symbolPlay
  1807  00005C  0E43               	movlw	67
  1808  00005E                     u1111:
  1809  00005E  CFDB FFE3          	movff	plusw2,plusw1
  1810  000062  06E8               	decf	wreg,f,c
  1811  000064  E2FC               	bc	u1111
  1812                           
  1813                           ;LED-API.c: 101: char symbolGo[34][2] = {
  1814                           ;LED-API.c: 102: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0}
      +                          ,{5,0},{6,1},{5,2},{4,2},
  1815                           ;LED-API.c: 103: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},
      +                          {13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  1816  000066  EE24  F000         	lfsr	2,drawSymbol@F3238
  1817  00006A  EE12  F060         	lfsr	1,drawSymbol@symbolGo
  1818  00006E  0E43               	movlw	67
  1819  000070                     u1121:
  1820  000070  CFDB FFE3          	movff	plusw2,plusw1
  1821  000074  06E8               	decf	wreg,f,c
  1822  000076  E2FC               	bc	u1121
  1823                           
  1824                           ;LED-API.c: 105: char symbolArrowRight[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3},{6,
      +                          3},{7,3},{8,3},{7,4},{6,5},{5,7},{6,2},{5,1},{4,0}};
  1825  000078  EE20  F053         	lfsr	2,drawSymbol@F3241
  1826  00007C  EE10  F085         	lfsr	1,drawSymbol@symbolArrowRight
  1827  000080  0E1D               	movlw	29
  1828  000082                     u1131:
  1829  000082  CFDB FFE3          	movff	plusw2,plusw1
  1830  000086  06E8               	decf	wreg,f,c
  1831  000088  E2FC               	bc	u1131
  1832                           
  1833                           ;LED-API.c: 106: char symbolArrowLeft[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3}, {6,
      +                          3},{7,3},{8,3}, {1,4},{2,5},{3,6},{1,2},{2,1},{3,0}};
  1834  00008A  EE21  F0DC         	lfsr	2,drawSymbol@F3244
  1835  00008E  EE10  F0A3         	lfsr	1,drawSymbol@symbolArrowLeft
  1836  000092  0E1D               	movlw	29
  1837  000094                     u1141:
  1838  000094  CFDB FFE3          	movff	plusw2,plusw1
  1839  000098  06E8               	decf	wreg,f,c
  1840  00009A  E2FC               	bc	u1141
  1841                           
  1842                           ;LED-API.c: 108: switch(chosenSymbol)
  1843  00009C  D127               	goto	l1741
  1844  00009E                     l1647:
  1845                           
  1846                           ;LED-API.c: 113: for(unsigned char i = 0; i < 12; i++)
  1847  00009E  0E00               	movlw	0
  1848  0000A0  0102               	movlb	2	; () banked
  1849  0000A2  6FD5               	movwf	drawSymbol@i& (0+255),b
  1850  0000A4                     l1649:
  1851                           
  1852                           ; BSR set to: 2
  1853  0000A4  0E0B               	movlw	11
  1854  0000A6  0102               	movlb	2	; () banked
  1855  0000A8  65D5               	cpfsgt	drawSymbol@i& (0+255),b
  1856  0000AA  D001               	goto	l1653
  1857  0000AC  0012               	return	
  1858  0000AE                     l1653:
  1859                           
  1860                           ; BSR set to: 2
  1861                           ;LED-API.c: 114: {
  1862                           ;LED-API.c: 115: on(symbolOne[i][0] + offSetX, symbolOne[i][1]);
  1863  0000AE  0102               	movlb	2	; () banked
  1864  0000B0  51D5               	movf	drawSymbol@i& (0+255),w,b
  1865  0000B2  0D02               	mullw	2
  1866  0000B4  0E01               	movlw	1
  1867  0000B6  26F3               	addwf	prodl,f,c
  1868  0000B8  0E00               	movlw	0
  1869  0000BA  22F4               	addwfc	prodh,f,c
  1870  0000BC  0EA4               	movlw	low drawSymbol@symbolOne
  1871  0000BE  24F3               	addwf	prodl,w,c
  1872  0000C0  6ED9               	movwf	fsr2l,c
  1873  0000C2  0E02               	movlw	high drawSymbol@symbolOne
  1874  0000C4  20F4               	addwfc	prodh,w,c
  1875  0000C6  6EDA               	movwf	fsr2h,c
  1876  0000C8  50DF               	movf	indf2,w,c
  1877  0000CA  0100               	movlb	0	; () banked
  1878  0000CC  6F80               	movwf	on@row& (0+255),b
  1879  0000CE  0102               	movlb	2	; () banked
  1880  0000D0  51D5               	movf	drawSymbol@i& (0+255),w,b
  1881  0000D2  0D02               	mullw	2
  1882  0000D4  0EA4               	movlw	low drawSymbol@symbolOne
  1883  0000D6  24F3               	addwf	prodl,w,c
  1884  0000D8  6ED9               	movwf	fsr2l,c
  1885  0000DA  0E02               	movlw	high drawSymbol@symbolOne
  1886  0000DC  20F4               	addwfc	prodh,w,c
  1887  0000DE  6EDA               	movwf	fsr2h,c
  1888  0000E0  50DF               	movf	indf2,w,c
  1889  0000E2  0100               	movlb	0	; () banked
  1890  0000E4  2584               	addwf	drawSymbol@offSetX& (0+255),w,b
  1891  0000E6  EC88  F006         	call	_on
  1892  0000EA  0102               	movlb	2	; () banked
  1893  0000EC  2BD5               	incf	drawSymbol@i& (0+255),f,b
  1894  0000EE  D7DA               	goto	l1649
  1895  0000F0                     l1659:
  1896                           
  1897                           ; BSR set to: 2
  1898                           ;LED-API.c: 121: for(unsigned char i = 0; i < 14; i++)
  1899  0000F0  0E00               	movlw	0
  1900  0000F2  0102               	movlb	2	; () banked
  1901  0000F4  6FD6               	movwf	drawSymbol@i_84& (0+255),b
  1902  0000F6                     l1661:
  1903                           
  1904                           ; BSR set to: 2
  1905  0000F6  0E0D               	movlw	13
  1906  0000F8  0102               	movlb	2	; () banked
  1907  0000FA  65D6               	cpfsgt	drawSymbol@i_84& (0+255),b
  1908  0000FC  D001               	goto	l1665
  1909  0000FE  0012               	return	
  1910  000100                     l1665:
  1911                           
  1912                           ; BSR set to: 2
  1913                           ;LED-API.c: 122: {
  1914                           ;LED-API.c: 123: on(symbolTwo[i][0] + offSetX, symbolTwo[i][1]);
  1915  000100  0102               	movlb	2	; () banked
  1916  000102  51D6               	movf	drawSymbol@i_84& (0+255),w,b
  1917  000104  0D02               	mullw	2
  1918  000106  0E01               	movlw	1
  1919  000108  26F3               	addwf	prodl,f,c
  1920  00010A  0E00               	movlw	0
  1921  00010C  22F4               	addwfc	prodh,f,c
  1922  00010E  0E44               	movlw	low drawSymbol@symbolTwo
  1923  000110  24F3               	addwf	prodl,w,c
  1924  000112  6ED9               	movwf	fsr2l,c
  1925  000114  0E02               	movlw	high drawSymbol@symbolTwo
  1926  000116  20F4               	addwfc	prodh,w,c
  1927  000118  6EDA               	movwf	fsr2h,c
  1928  00011A  50DF               	movf	indf2,w,c
  1929  00011C  0100               	movlb	0	; () banked
  1930  00011E  6F80               	movwf	on@row& (0+255),b
  1931  000120  0102               	movlb	2	; () banked
  1932  000122  51D6               	movf	drawSymbol@i_84& (0+255),w,b
  1933  000124  0D02               	mullw	2
  1934  000126  0E44               	movlw	low drawSymbol@symbolTwo
  1935  000128  24F3               	addwf	prodl,w,c
  1936  00012A  6ED9               	movwf	fsr2l,c
  1937  00012C  0E02               	movlw	high drawSymbol@symbolTwo
  1938  00012E  20F4               	addwfc	prodh,w,c
  1939  000130  6EDA               	movwf	fsr2h,c
  1940  000132  50DF               	movf	indf2,w,c
  1941  000134  0100               	movlb	0	; () banked
  1942  000136  2584               	addwf	drawSymbol@offSetX& (0+255),w,b
  1943  000138  EC88  F006         	call	_on
  1944  00013C  0102               	movlb	2	; () banked
  1945  00013E  2BD6               	incf	drawSymbol@i_84& (0+255),f,b
  1946  000140  D7DA               	goto	l1661
  1947  000142                     l1671:
  1948                           
  1949                           ; BSR set to: 2
  1950                           ;LED-API.c: 129: for(unsigned char i = 0; i < 12; i++)
  1951  000142  0E00               	movlw	0
  1952  000144  0102               	movlb	2	; () banked
  1953  000146  6FD7               	movwf	drawSymbol@i_85& (0+255),b
  1954  000148                     l1673:
  1955                           
  1956                           ; BSR set to: 2
  1957  000148  0E0B               	movlw	11
  1958  00014A  0102               	movlb	2	; () banked
  1959  00014C  65D7               	cpfsgt	drawSymbol@i_85& (0+255),b
  1960  00014E  D001               	goto	l1677
  1961  000150  0012               	return	
  1962  000152                     l1677:
  1963                           
  1964                           ; BSR set to: 2
  1965                           ;LED-API.c: 130: {
  1966                           ;LED-API.c: 131: on(symbolThree[i][0] + offSetX, symbolThree[i][1]);
  1967  000152  0102               	movlb	2	; () banked
  1968  000154  51D7               	movf	drawSymbol@i_85& (0+255),w,b
  1969  000156  0D02               	mullw	2
  1970  000158  0E01               	movlw	1
  1971  00015A  26F3               	addwf	prodl,f,c
  1972  00015C  0E00               	movlw	0
  1973  00015E  22F4               	addwfc	prodh,f,c
  1974  000160  0EBC               	movlw	low drawSymbol@symbolThree
  1975  000162  24F3               	addwf	prodl,w,c
  1976  000164  6ED9               	movwf	fsr2l,c
  1977  000166  0E02               	movlw	high drawSymbol@symbolThree
  1978  000168  20F4               	addwfc	prodh,w,c
  1979  00016A  6EDA               	movwf	fsr2h,c
  1980  00016C  50DF               	movf	indf2,w,c
  1981  00016E  0100               	movlb	0	; () banked
  1982  000170  6F80               	movwf	on@row& (0+255),b
  1983  000172  0102               	movlb	2	; () banked
  1984  000174  51D7               	movf	drawSymbol@i_85& (0+255),w,b
  1985  000176  0D02               	mullw	2
  1986  000178  0EBC               	movlw	low drawSymbol@symbolThree
  1987  00017A  24F3               	addwf	prodl,w,c
  1988  00017C  6ED9               	movwf	fsr2l,c
  1989  00017E  0E02               	movlw	high drawSymbol@symbolThree
  1990  000180  20F4               	addwfc	prodh,w,c
  1991  000182  6EDA               	movwf	fsr2h,c
  1992  000184  50DF               	movf	indf2,w,c
  1993  000186  0100               	movlb	0	; () banked
  1994  000188  2584               	addwf	drawSymbol@offSetX& (0+255),w,b
  1995  00018A  EC88  F006         	call	_on
  1996  00018E  0102               	movlb	2	; () banked
  1997  000190  2BD7               	incf	drawSymbol@i_85& (0+255),f,b
  1998  000192  D7DA               	goto	l1673
  1999  000194                     l1683:
  2000                           
  2001                           ; BSR set to: 2
  2002                           ;LED-API.c: 137: turnAllOff();
  2003  000194  ECA3  F005         	call	_turnAllOff	;wreg free
  2004                           
  2005                           ;LED-API.c: 138: for(unsigned char i = 0; i < 34; i++)
  2006  000198  0E00               	movlw	0
  2007  00019A  0102               	movlb	2	; () banked
  2008  00019C  6FD8               	movwf	drawSymbol@i_86& (0+255),b
  2009  00019E                     l1687:
  2010                           
  2011                           ; BSR set to: 2
  2012  00019E  0E21               	movlw	33
  2013  0001A0  0102               	movlb	2	; () banked
  2014  0001A2  65D8               	cpfsgt	drawSymbol@i_86& (0+255),b
  2015  0001A4  D001               	goto	l1691
  2016  0001A6  0012               	return	
  2017  0001A8                     l1691:
  2018                           
  2019                           ; BSR set to: 2
  2020                           ;LED-API.c: 139: {
  2021                           ;LED-API.c: 140: on(symbolPlay[i][0] + offSetX, symbolPlay[i][1]);
  2022  0001A8  0102               	movlb	2	; () banked
  2023  0001AA  51D8               	movf	drawSymbol@i_86& (0+255),w,b
  2024  0001AC  0D02               	mullw	2
  2025  0001AE  0E01               	movlw	1
  2026  0001B0  26F3               	addwf	prodl,f,c
  2027  0001B2  0E00               	movlw	0
  2028  0001B4  22F4               	addwfc	prodh,f,c
  2029  0001B6  0E00               	movlw	low drawSymbol@symbolPlay
  2030  0001B8  24F3               	addwf	prodl,w,c
  2031  0001BA  6ED9               	movwf	fsr2l,c
  2032  0001BC  0E02               	movlw	high drawSymbol@symbolPlay
  2033  0001BE  20F4               	addwfc	prodh,w,c
  2034  0001C0  6EDA               	movwf	fsr2h,c
  2035  0001C2  50DF               	movf	indf2,w,c
  2036  0001C4  0100               	movlb	0	; () banked
  2037  0001C6  6F80               	movwf	on@row& (0+255),b
  2038  0001C8  0102               	movlb	2	; () banked
  2039  0001CA  51D8               	movf	drawSymbol@i_86& (0+255),w,b
  2040  0001CC  0D02               	mullw	2
  2041  0001CE  0E00               	movlw	low drawSymbol@symbolPlay
  2042  0001D0  24F3               	addwf	prodl,w,c
  2043  0001D2  6ED9               	movwf	fsr2l,c
  2044  0001D4  0E02               	movlw	high drawSymbol@symbolPlay
  2045  0001D6  20F4               	addwfc	prodh,w,c
  2046  0001D8  6EDA               	movwf	fsr2h,c
  2047  0001DA  50DF               	movf	indf2,w,c
  2048  0001DC  0100               	movlb	0	; () banked
  2049  0001DE  2584               	addwf	drawSymbol@offSetX& (0+255),w,b
  2050  0001E0  EC88  F006         	call	_on
  2051  0001E4  0102               	movlb	2	; () banked
  2052  0001E6  2BD8               	incf	drawSymbol@i_86& (0+255),f,b
  2053  0001E8  D7DA               	goto	l1687
  2054  0001EA                     l1697:
  2055                           
  2056                           ; BSR set to: 2
  2057                           ;LED-API.c: 146: turnAllOff();
  2058  0001EA  ECA3  F005         	call	_turnAllOff	;wreg free
  2059                           
  2060                           ;LED-API.c: 147: for(unsigned char i = 0; i < 34; i++)
  2061  0001EE  0E00               	movlw	0
  2062  0001F0  0102               	movlb	2	; () banked
  2063  0001F2  6FD9               	movwf	drawSymbol@i_87& (0+255),b
  2064  0001F4                     l1701:
  2065                           
  2066                           ; BSR set to: 2
  2067  0001F4  0E21               	movlw	33
  2068  0001F6  0102               	movlb	2	; () banked
  2069  0001F8  65D9               	cpfsgt	drawSymbol@i_87& (0+255),b
  2070  0001FA  D001               	goto	l1705
  2071  0001FC  0012               	return	
  2072  0001FE                     l1705:
  2073                           
  2074                           ; BSR set to: 2
  2075                           ;LED-API.c: 148: {
  2076                           ;LED-API.c: 149: on(symbolGo[i][0] + offSetX, symbolGo[i][1]);
  2077  0001FE  0102               	movlb	2	; () banked
  2078  000200  51D9               	movf	drawSymbol@i_87& (0+255),w,b
  2079  000202  0D02               	mullw	2
  2080  000204  0E01               	movlw	1
  2081  000206  26F3               	addwf	prodl,f,c
  2082  000208  0E00               	movlw	0
  2083  00020A  22F4               	addwfc	prodh,f,c
  2084  00020C  0E60               	movlw	low drawSymbol@symbolGo
  2085  00020E  24F3               	addwf	prodl,w,c
  2086  000210  6ED9               	movwf	fsr2l,c
  2087  000212  0E02               	movlw	high drawSymbol@symbolGo
  2088  000214  20F4               	addwfc	prodh,w,c
  2089  000216  6EDA               	movwf	fsr2h,c
  2090  000218  50DF               	movf	indf2,w,c
  2091  00021A  0100               	movlb	0	; () banked
  2092  00021C  6F80               	movwf	on@row& (0+255),b
  2093  00021E  0102               	movlb	2	; () banked
  2094  000220  51D9               	movf	drawSymbol@i_87& (0+255),w,b
  2095  000222  0D02               	mullw	2
  2096  000224  0E60               	movlw	low drawSymbol@symbolGo
  2097  000226  24F3               	addwf	prodl,w,c
  2098  000228  6ED9               	movwf	fsr2l,c
  2099  00022A  0E02               	movlw	high drawSymbol@symbolGo
  2100  00022C  20F4               	addwfc	prodh,w,c
  2101  00022E  6EDA               	movwf	fsr2h,c
  2102  000230  50DF               	movf	indf2,w,c
  2103  000232  0100               	movlb	0	; () banked
  2104  000234  2584               	addwf	drawSymbol@offSetX& (0+255),w,b
  2105  000236  EC88  F006         	call	_on
  2106  00023A  0102               	movlb	2	; () banked
  2107  00023C  2BD9               	incf	drawSymbol@i_87& (0+255),f,b
  2108  00023E  D7DA               	goto	l1701
  2109  000240                     l1711:
  2110                           
  2111                           ; BSR set to: 2
  2112                           ;LED-API.c: 153: turnAllOff();
  2113  000240  ECA3  F005         	call	_turnAllOff	;wreg free
  2114                           
  2115                           ;LED-API.c: 154: for(unsigned char i = 0; i < 15; i++)
  2116  000244  0E00               	movlw	0
  2117  000246  0102               	movlb	2	; () banked
  2118  000248  6FDA               	movwf	drawSymbol@i_88& (0+255),b
  2119  00024A                     l1715:
  2120                           
  2121                           ; BSR set to: 2
  2122  00024A  0E0E               	movlw	14
  2123  00024C  0102               	movlb	2	; () banked
  2124  00024E  65DA               	cpfsgt	drawSymbol@i_88& (0+255),b
  2125  000250  D001               	goto	l1719
  2126  000252  0012               	return	
  2127  000254                     l1719:
  2128                           
  2129                           ; BSR set to: 2
  2130                           ;LED-API.c: 155: {
  2131                           ;LED-API.c: 156: on(symbolGo[i][0] + offSetX, symbolGo[i][1]);
  2132  000254  0102               	movlb	2	; () banked
  2133  000256  51DA               	movf	drawSymbol@i_88& (0+255),w,b
  2134  000258  0D02               	mullw	2
  2135  00025A  0E01               	movlw	1
  2136  00025C  26F3               	addwf	prodl,f,c
  2137  00025E  0E00               	movlw	0
  2138  000260  22F4               	addwfc	prodh,f,c
  2139  000262  0E60               	movlw	low drawSymbol@symbolGo
  2140  000264  24F3               	addwf	prodl,w,c
  2141  000266  6ED9               	movwf	fsr2l,c
  2142  000268  0E02               	movlw	high drawSymbol@symbolGo
  2143  00026A  20F4               	addwfc	prodh,w,c
  2144  00026C  6EDA               	movwf	fsr2h,c
  2145  00026E  50DF               	movf	indf2,w,c
  2146  000270  0100               	movlb	0	; () banked
  2147  000272  6F80               	movwf	on@row& (0+255),b
  2148  000274  0102               	movlb	2	; () banked
  2149  000276  51DA               	movf	drawSymbol@i_88& (0+255),w,b
  2150  000278  0D02               	mullw	2
  2151  00027A  0E60               	movlw	low drawSymbol@symbolGo
  2152  00027C  24F3               	addwf	prodl,w,c
  2153  00027E  6ED9               	movwf	fsr2l,c
  2154  000280  0E02               	movlw	high drawSymbol@symbolGo
  2155  000282  20F4               	addwfc	prodh,w,c
  2156  000284  6EDA               	movwf	fsr2h,c
  2157  000286  50DF               	movf	indf2,w,c
  2158  000288  0100               	movlb	0	; () banked
  2159  00028A  2584               	addwf	drawSymbol@offSetX& (0+255),w,b
  2160  00028C  EC88  F006         	call	_on
  2161  000290  0102               	movlb	2	; () banked
  2162  000292  2BDA               	incf	drawSymbol@i_88& (0+255),f,b
  2163  000294  D7DA               	goto	l1715
  2164  000296                     l1725:
  2165                           
  2166                           ; BSR set to: 2
  2167                           ;LED-API.c: 160: turnAllOff();
  2168  000296  ECA3  F005         	call	_turnAllOff	;wreg free
  2169                           
  2170                           ;LED-API.c: 161: for(unsigned char i = 0; i < 15; i++)
  2171  00029A  0E00               	movlw	0
  2172  00029C  0102               	movlb	2	; () banked
  2173  00029E  6FDB               	movwf	drawSymbol@i_89& (0+255),b
  2174  0002A0                     l1729:
  2175                           
  2176                           ; BSR set to: 2
  2177  0002A0  0E0E               	movlw	14
  2178  0002A2  0102               	movlb	2	; () banked
  2179  0002A4  65DB               	cpfsgt	drawSymbol@i_89& (0+255),b
  2180  0002A6  D001               	goto	l1733
  2181  0002A8  0012               	return	
  2182  0002AA                     l1733:
  2183                           
  2184                           ; BSR set to: 2
  2185                           ;LED-API.c: 162: {
  2186                           ;LED-API.c: 163: on(symbolGo[i][0] + offSetX, symbolGo[i][1]);
  2187  0002AA  0102               	movlb	2	; () banked
  2188  0002AC  51DB               	movf	drawSymbol@i_89& (0+255),w,b
  2189  0002AE  0D02               	mullw	2
  2190  0002B0  0E01               	movlw	1
  2191  0002B2  26F3               	addwf	prodl,f,c
  2192  0002B4  0E00               	movlw	0
  2193  0002B6  22F4               	addwfc	prodh,f,c
  2194  0002B8  0E60               	movlw	low drawSymbol@symbolGo
  2195  0002BA  24F3               	addwf	prodl,w,c
  2196  0002BC  6ED9               	movwf	fsr2l,c
  2197  0002BE  0E02               	movlw	high drawSymbol@symbolGo
  2198  0002C0  20F4               	addwfc	prodh,w,c
  2199  0002C2  6EDA               	movwf	fsr2h,c
  2200  0002C4  50DF               	movf	indf2,w,c
  2201  0002C6  0100               	movlb	0	; () banked
  2202  0002C8  6F80               	movwf	on@row& (0+255),b
  2203  0002CA  0102               	movlb	2	; () banked
  2204  0002CC  51DB               	movf	drawSymbol@i_89& (0+255),w,b
  2205  0002CE  0D02               	mullw	2
  2206  0002D0  0E60               	movlw	low drawSymbol@symbolGo
  2207  0002D2  24F3               	addwf	prodl,w,c
  2208  0002D4  6ED9               	movwf	fsr2l,c
  2209  0002D6  0E02               	movlw	high drawSymbol@symbolGo
  2210  0002D8  20F4               	addwfc	prodh,w,c
  2211  0002DA  6EDA               	movwf	fsr2h,c
  2212  0002DC  50DF               	movf	indf2,w,c
  2213  0002DE  0100               	movlb	0	; () banked
  2214  0002E0  2584               	addwf	drawSymbol@offSetX& (0+255),w,b
  2215  0002E2  EC88  F006         	call	_on
  2216  0002E6  0102               	movlb	2	; () banked
  2217  0002E8  2BDB               	incf	drawSymbol@i_89& (0+255),f,b
  2218  0002EA  D7DA               	goto	l1729
  2219  0002EC                     l1741:
  2220  0002EC  0102               	movlb	2	; () banked
  2221  0002EE  51D4               	movf	drawSymbol@chosenSymbol& (0+255),w,b
  2222                           
  2223                           ; Switch size 1, requested type "space"
  2224                           ; Number of cases is 7, Range of values is 1 to 7
  2225                           ; switch strategies available:
  2226                           ; Name         Instructions Cycles
  2227                           ; simple_byte           22    12 (average)
  2228                           ;	Chosen strategy is simple_byte
  2229  0002F0  0A01               	xorlw	1	; case 1
  2230  0002F2  B4D8               	btfsc	status,2,c
  2231  0002F4  D6D4               	goto	l1647
  2232  0002F6  0A03               	xorlw	3	; case 2
  2233  0002F8  B4D8               	btfsc	status,2,c
  2234  0002FA  D6FA               	goto	l1659
  2235  0002FC  0A01               	xorlw	1	; case 3
  2236  0002FE  B4D8               	btfsc	status,2,c
  2237  000300  D720               	goto	l1671
  2238  000302  0A07               	xorlw	7	; case 4
  2239  000304  B4D8               	btfsc	status,2,c
  2240  000306  D746               	goto	l1683
  2241  000308  0A01               	xorlw	1	; case 5
  2242  00030A  B4D8               	btfsc	status,2,c
  2243  00030C  D76E               	goto	l1697
  2244  00030E  0A03               	xorlw	3	; case 6
  2245  000310  B4D8               	btfsc	status,2,c
  2246  000312  D796               	goto	l1711
  2247  000314  0A01               	xorlw	1	; case 7
  2248  000316  A4D8               	btfss	status,2,c
  2249  000318  0012               	return	
  2250  00031A  D7BD               	goto	l1725
  2251  00031C                     __end_of_drawSymbol:
  2252                           	opt stack 0
  2253                           tblptru	equ	0xFF8
  2254                           tblptrh	equ	0xFF7
  2255                           tblptrl	equ	0xFF6
  2256                           tablat	equ	0xFF5
  2257                           prodh	equ	0xFF4
  2258                           prodl	equ	0xFF3
  2259                           postinc0	equ	0xFEE
  2260                           wreg	equ	0xFE8
  2261                           postdec1	equ	0xFE5
  2262                           plusw1	equ	0xFE3
  2263                           fsr1l	equ	0xFE1
  2264                           indf2	equ	0xFDF
  2265                           postinc2	equ	0xFDE
  2266                           plusw2	equ	0xFDB
  2267                           fsr2h	equ	0xFDA
  2268                           fsr2l	equ	0xFD9
  2269                           status	equ	0xFD8
  2270                           
  2271 ;; *************** function _turnAllOff *****************
  2272 ;; Defined at:
  2273 ;;		line 169 in file "Source/LED-API.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  j               1    3[BANK0 ] unsigned char 
  2278 ;;  i               1    2[BANK0 ] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2288 ;;      Params:         0       0       0       0       0       0       0
  2289 ;;      Locals:         0       2       0       0       0       0       0
  2290 ;;      Temps:          0       2       0       0       0       0       0
  2291 ;;      Totals:         0       4       0       0       0       0       0
  2292 ;;Total ram usage:        4 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    5
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_drawSymbol
  2299 ;;		_startPong
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text8
  2304  000B46                     __ptext8:
  2305                           	opt stack 0
  2306  000B46                     _turnAllOff:
  2307                           	opt stack 23
  2308                           
  2309                           ;LED-API.c: 172: for (unsigned char i = 0; i < 8; i++) {
  2310                           
  2311                           ; BSR set to: 2
  2312                           ;incstack = 0
  2313  000B46  0E00               	movlw	0
  2314  000B48  0100               	movlb	0	; () banked
  2315  000B4A  6F82               	movwf	turnAllOff@i& (0+255),b
  2316  000B4C                     l1581:
  2317                           
  2318                           ; BSR set to: 0
  2319  000B4C  0E07               	movlw	7
  2320  000B4E  0100               	movlb	0	; () banked
  2321  000B50  6582               	cpfsgt	turnAllOff@i& (0+255),b
  2322  000B52  D001               	goto	l1585
  2323  000B54  0012               	return	
  2324  000B56                     l1585:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;LED-API.c: 173: for (unsigned char j = 0; j < 16; j++) {
  2328  000B56  0E00               	movlw	0
  2329  000B58  0100               	movlb	0	; () banked
  2330  000B5A  6F83               	movwf	turnAllOff@j& (0+255),b
  2331  000B5C                     l1587:
  2332                           
  2333                           ; BSR set to: 0
  2334  000B5C  0E0F               	movlw	15
  2335  000B5E  0100               	movlb	0	; () banked
  2336  000B60  6583               	cpfsgt	turnAllOff@j& (0+255),b
  2337  000B62  D001               	goto	l1591
  2338  000B64  D01F               	goto	l1597
  2339  000B66                     l1591:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;LED-API.c: 174: pixels[i][j] = 0;
  2343  000B66  0100               	movlb	0	; () banked
  2344  000B68  5182               	movf	turnAllOff@i& (0+255),w,b
  2345  000B6A  0D10               	mullw	16
  2346  000B6C  0E00               	movlw	low _pixels
  2347  000B6E  0100               	movlb	0	; () banked
  2348  000B70  6F80               	movwf	??_turnAllOff& (0+255),b
  2349  000B72  0E03               	movlw	high _pixels
  2350  000B74  0100               	movlb	0	; () banked
  2351  000B76  6F81               	movwf	(??_turnAllOff+1)& (0+255),b
  2352  000B78  50F3               	movf	prodl,w,c
  2353  000B7A  0100               	movlb	0	; () banked
  2354  000B7C  2780               	addwf	??_turnAllOff& (0+255),f,b
  2355  000B7E  50F4               	movf	prodh,w,c
  2356  000B80  0100               	movlb	0	; () banked
  2357  000B82  2381               	addwfc	(??_turnAllOff+1)& (0+255),f,b
  2358  000B84  0100               	movlb	0	; () banked
  2359  000B86  5183               	movf	turnAllOff@j& (0+255),w,b
  2360  000B88  0D01               	mullw	1
  2361  000B8A  50F3               	movf	prodl,w,c
  2362  000B8C  0100               	movlb	0	; () banked
  2363  000B8E  2580               	addwf	??_turnAllOff& (0+255),w,b
  2364  000B90  6ED9               	movwf	fsr2l,c
  2365  000B92  50F4               	movf	prodh,w,c
  2366  000B94  0100               	movlb	0	; () banked
  2367  000B96  2181               	addwfc	(??_turnAllOff+1)& (0+255),w,b
  2368  000B98  6EDA               	movwf	fsr2h,c
  2369  000B9A  0E00               	movlw	0
  2370  000B9C  6EDF               	movwf	indf2,c
  2371                           
  2372                           ; BSR set to: 0
  2373  000B9E  0100               	movlb	0	; () banked
  2374  000BA0  2B83               	incf	turnAllOff@j& (0+255),f,b
  2375  000BA2  D7DC               	goto	l1587
  2376  000BA4                     l1597:
  2377                           
  2378                           ; BSR set to: 0
  2379  000BA4  0100               	movlb	0	; () banked
  2380  000BA6  2B82               	incf	turnAllOff@i& (0+255),f,b
  2381  000BA8  D7D1               	goto	l1581
  2382  000BAA                     __end_of_turnAllOff:
  2383                           	opt stack 0
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           prodh	equ	0xFF4
  2389                           prodl	equ	0xFF3
  2390                           postinc0	equ	0xFEE
  2391                           wreg	equ	0xFE8
  2392                           postdec1	equ	0xFE5
  2393                           plusw1	equ	0xFE3
  2394                           fsr1l	equ	0xFE1
  2395                           indf2	equ	0xFDF
  2396                           postinc2	equ	0xFDE
  2397                           plusw2	equ	0xFDB
  2398                           fsr2h	equ	0xFDA
  2399                           fsr2l	equ	0xFD9
  2400                           status	equ	0xFD8
  2401                           
  2402 ;; *************** function _on *****************
  2403 ;; Defined at:
  2404 ;;		line 47 in file "Source/LED-API.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  column          1    wreg     unsigned char 
  2407 ;;  row             1    0[BANK0 ] unsigned char 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  column          1    3[BANK0 ] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2419 ;;      Params:         0       1       0       0       0       0       0
  2420 ;;      Locals:         0       1       0       0       0       0       0
  2421 ;;      Temps:          0       2       0       0       0       0       0
  2422 ;;      Totals:         0       4       0       0       0       0       0
  2423 ;;Total ram usage:        4 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    5
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_drawSymbol
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text9
  2434  000D10                     __ptext9:
  2435                           	opt stack 0
  2436  000D10                     _on:
  2437                           	opt stack 22
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;incstack = 0
  2441                           ;on@column stored from wreg
  2442  000D10  0100               	movlb	0	; () banked
  2443  000D12  6F83               	movwf	on@column& (0+255),b
  2444                           
  2445                           ;LED-API.c: 49: if (row < 0 || row >= 16)
  2446  000D14  0E0F               	movlw	15
  2447  000D16  0100               	movlb	0	; () banked
  2448  000D18  6580               	cpfsgt	on@row& (0+255),b
  2449  000D1A  D001               	goto	l1573
  2450  000D1C  0012               	return	
  2451  000D1E                     l1573:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;LED-API.c: 51: if (column < 0 || column >= 8)
  2455  000D1E  0E07               	movlw	7
  2456  000D20  0100               	movlb	0	; () banked
  2457  000D22  6583               	cpfsgt	on@column& (0+255),b
  2458  000D24  D001               	goto	l1577
  2459  000D26  0012               	return	
  2460  000D28                     l1577:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;LED-API.c: 54: pixels[column][row] = 1;
  2464  000D28  0100               	movlb	0	; () banked
  2465  000D2A  5183               	movf	on@column& (0+255),w,b
  2466  000D2C  0D10               	mullw	16
  2467  000D2E  0E00               	movlw	low _pixels
  2468  000D30  0100               	movlb	0	; () banked
  2469  000D32  6F81               	movwf	??_on& (0+255),b
  2470  000D34  0E03               	movlw	high _pixels
  2471  000D36  0100               	movlb	0	; () banked
  2472  000D38  6F82               	movwf	(??_on+1)& (0+255),b
  2473  000D3A  50F3               	movf	prodl,w,c
  2474  000D3C  0100               	movlb	0	; () banked
  2475  000D3E  2781               	addwf	??_on& (0+255),f,b
  2476  000D40  50F4               	movf	prodh,w,c
  2477  000D42  0100               	movlb	0	; () banked
  2478  000D44  2382               	addwfc	(??_on+1)& (0+255),f,b
  2479  000D46  0100               	movlb	0	; () banked
  2480  000D48  5180               	movf	on@row& (0+255),w,b
  2481  000D4A  0D01               	mullw	1
  2482  000D4C  50F3               	movf	prodl,w,c
  2483  000D4E  0100               	movlb	0	; () banked
  2484  000D50  2581               	addwf	??_on& (0+255),w,b
  2485  000D52  6ED9               	movwf	fsr2l,c
  2486  000D54  50F4               	movf	prodh,w,c
  2487  000D56  0100               	movlb	0	; () banked
  2488  000D58  2182               	addwfc	(??_on+1)& (0+255),w,b
  2489  000D5A  6EDA               	movwf	fsr2h,c
  2490  000D5C  0E01               	movlw	1
  2491  000D5E  6EDF               	movwf	indf2,c
  2492                           
  2493                           ; BSR set to: 0
  2494  000D60  0012               	return		;funcret
  2495  000D62                     __end_of_on:
  2496                           	opt stack 0
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           prodh	equ	0xFF4
  2502                           prodl	equ	0xFF3
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           postdec1	equ	0xFE5
  2506                           plusw1	equ	0xFE3
  2507                           fsr1l	equ	0xFE1
  2508                           indf2	equ	0xFDF
  2509                           postinc2	equ	0xFDE
  2510                           plusw2	equ	0xFDB
  2511                           fsr2h	equ	0xFDA
  2512                           fsr2l	equ	0xFD9
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _delaySeconds *****************
  2516 ;; Defined at:
  2517 ;;		line 49 in file "main.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  numberOfSeco    2    6[BANK0 ] int 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  i               2    9[BANK0 ] int 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2531 ;;      Params:         0       2       0       0       0       0       0
  2532 ;;      Locals:         0       2       0       0       0       0       0
  2533 ;;      Temps:          0       1       0       0       0       0       0
  2534 ;;      Totals:         0       5       0       0       0       0       0
  2535 ;;Total ram usage:        5 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    6
  2538 ;; This function calls:
  2539 ;;		___wmul
  2540 ;; This function is called by:
  2541 ;;		_startPong
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text10
  2546  000BAA                     __ptext10:
  2547                           	opt stack 0
  2548  000BAA                     _delaySeconds:
  2549                           	opt stack 22
  2550                           
  2551                           ;main.c: 51: for(int i = 0; i < numberOfSeconds * 100; i++)
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;incstack = 0
  2555  000BAA  0E00               	movlw	0
  2556  000BAC  0100               	movlb	0	; () banked
  2557  000BAE  6F8A               	movwf	(delaySeconds@i+1)& (0+255),b
  2558  000BB0  0E00               	movlw	0
  2559  000BB2  6F89               	movwf	delaySeconds@i& (0+255),b
  2560  000BB4  D00C               	goto	l1749
  2561  000BB6                     l1745:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;main.c: 52: _delay((unsigned long)((10)*(32000000/4000.0)));
  2565  000BB6  0E68               	movlw	104
  2566  000BB8  0100               	movlb	0	; () banked
  2567  000BBA  6F88               	movwf	??_delaySeconds& (0+255),b
  2568  000BBC  0EE4               	movlw	228
  2569  000BBE                     u1927:
  2570  000BBE  2EE8               	decfsz	wreg,f,c
  2571  000BC0  D7FE               	goto	u1927
  2572  000BC2  2F88               	decfsz	??_delaySeconds& (0+255),f,b
  2573  000BC4  D7FC               	goto	u1927
  2574  000BC6  D000               	nop2	
  2575  000BC8  0100               	movlb	0	; () banked
  2576  000BCA  4B89               	infsnz	delaySeconds@i& (0+255),f,b
  2577  000BCC  2B8A               	incf	(delaySeconds@i+1)& (0+255),f,b
  2578  000BCE                     l1749:
  2579                           
  2580                           ; BSR set to: 0
  2581  000BCE  C086  F080         	movff	delaySeconds@numberOfSeconds,___wmul@multiplier
  2582  000BD2  C087  F081         	movff	delaySeconds@numberOfSeconds+1,___wmul@multiplier+1
  2583  000BD6  0E00               	movlw	0
  2584  000BD8  0100               	movlb	0	; () banked
  2585  000BDA  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2586  000BDC  0E64               	movlw	100
  2587  000BDE  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2588  000BE0  ECC9  F007         	call	___wmul	;wreg free
  2589  000BE4  0100               	movlb	0	; () banked
  2590  000BE6  5180               	movf	?___wmul& (0+255),w,b
  2591  000BE8  0100               	movlb	0	; () banked
  2592  000BEA  5D89               	subwf	delaySeconds@i& (0+255),w,b
  2593  000BEC  0100               	movlb	0	; () banked
  2594  000BEE  518A               	movf	(delaySeconds@i+1)& (0+255),w,b
  2595  000BF0  0A80               	xorlw	128
  2596  000BF2  0100               	movlb	0	; () banked
  2597  000BF4  6F88               	movwf	??_delaySeconds& (0+255),b
  2598  000BF6  0100               	movlb	0	; () banked
  2599  000BF8  5181               	movf	(?___wmul+1)& (0+255),w,b
  2600  000BFA  0A80               	xorlw	128
  2601  000BFC  0100               	movlb	0	; () banked
  2602  000BFE  5988               	subwfb	??_delaySeconds& (0+255),w,b
  2603  000C00  A0D8               	btfss	status,0,c
  2604  000C02  D7D9               	goto	l1745
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;main.c: 54: return 1;
  2608                           
  2609                           ; BSR set to: 0
  2610  000C04  80D8               	bsf	status,0,c
  2611  000C06  0012               	return	
  2612  000C08                     __end_of_delaySeconds:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           postdec1	equ	0xFE5
  2623                           plusw1	equ	0xFE3
  2624                           fsr1l	equ	0xFE1
  2625                           indf2	equ	0xFDF
  2626                           postinc2	equ	0xFDE
  2627                           plusw2	equ	0xFDB
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632 ;; *************** function ___wmul *****************
  2633 ;; Defined at:
  2634 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2637 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  product         2    4[BANK0 ] unsigned int 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  2    0[BANK0 ] unsigned int 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, prodl, prodh
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2649 ;;      Params:         0       4       0       0       0       0       0
  2650 ;;      Locals:         0       2       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0
  2652 ;;      Totals:         0       6       0       0       0       0       0
  2653 ;;Total ram usage:        6 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    5
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_delaySeconds
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text11
  2664  000F92                     __ptext11:
  2665                           	opt stack 0
  2666  000F92                     ___wmul:
  2667                           	opt stack 22
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;incstack = 0
  2671  000F92  0100               	movlb	0	; () banked
  2672  000F94  5180               	movf	___wmul@multiplier& (0+255),w,b
  2673  000F96  0100               	movlb	0	; () banked
  2674  000F98  0382               	mulwf	___wmul@multiplicand& (0+255),b
  2675  000F9A  CFF3 F084          	movff	prodl,___wmul@product
  2676  000F9E  CFF4 F085          	movff	prodh,___wmul@product+1
  2677  000FA2  0100               	movlb	0	; () banked
  2678  000FA4  5180               	movf	___wmul@multiplier& (0+255),w,b
  2679  000FA6  0100               	movlb	0	; () banked
  2680  000FA8  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2681  000FAA  50F3               	movf	prodl,w,c
  2682  000FAC  0100               	movlb	0	; () banked
  2683  000FAE  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  2684  000FB0  0100               	movlb	0	; () banked
  2685  000FB2  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2686  000FB4  0100               	movlb	0	; () banked
  2687  000FB6  0382               	mulwf	___wmul@multiplicand& (0+255),b
  2688  000FB8  50F3               	movf	prodl,w,c
  2689  000FBA  0100               	movlb	0	; () banked
  2690  000FBC  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  2691                           
  2692                           ; BSR set to: 0
  2693  000FBE  C084  F080         	movff	___wmul@product,?___wmul
  2694  000FC2  C085  F081         	movff	___wmul@product+1,?___wmul+1
  2695  000FC6  0012               	return	
  2696  000FC8                     __end_of___wmul:
  2697                           	opt stack 0
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodh	equ	0xFF4
  2703                           prodl	equ	0xFF3
  2704                           postinc0	equ	0xFEE
  2705                           wreg	equ	0xFE8
  2706                           postdec1	equ	0xFE5
  2707                           plusw1	equ	0xFE3
  2708                           fsr1l	equ	0xFE1
  2709                           indf2	equ	0xFDF
  2710                           postinc2	equ	0xFDE
  2711                           plusw2	equ	0xFDB
  2712                           fsr2h	equ	0xFDA
  2713                           fsr2l	equ	0xFD9
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _initializeLED *****************
  2717 ;; Defined at:
  2718 ;;		line 31 in file "Source/LED-API.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  j               1    3[BANK0 ] unsigned char 
  2723 ;;  i               1    2[BANK0 ] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2733 ;;      Params:         0       0       0       0       0       0       0
  2734 ;;      Locals:         0       2       0       0       0       0       0
  2735 ;;      Temps:          0       2       0       0       0       0       0
  2736 ;;      Totals:         0       4       0       0       0       0       0
  2737 ;;Total ram usage:        4 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    5
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text12
  2748  000ACA                     __ptext12:
  2749                           	opt stack 0
  2750  000ACA                     _initializeLED:
  2751                           	opt stack 25
  2752                           
  2753                           ;LED-API.c: 32: TRISA = 0b00000000;
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;incstack = 0
  2757  000ACA  0E00               	movlw	0
  2758  000ACC  6E92               	movwf	3986,c	;volatile
  2759                           
  2760                           ;LED-API.c: 33: TRISC = 0b00000000;
  2761  000ACE  0E00               	movlw	0
  2762  000AD0  6E94               	movwf	3988,c	;volatile
  2763                           
  2764                           ;LED-API.c: 34: TRISD = 0b00000000;
  2765  000AD2  0E00               	movlw	0
  2766  000AD4  6E95               	movwf	3989,c	;volatile
  2767                           
  2768                           ;LED-API.c: 35: LATA = 0b00000000;
  2769  000AD6  0E00               	movlw	0
  2770  000AD8  6E89               	movwf	3977,c	;volatile
  2771                           
  2772                           ;LED-API.c: 36: LATC = 0b00000000;
  2773  000ADA  0E00               	movlw	0
  2774  000ADC  6E8B               	movwf	3979,c	;volatile
  2775                           
  2776                           ;LED-API.c: 37: LATD = 0b00000000;
  2777  000ADE  0E00               	movlw	0
  2778  000AE0  6E8C               	movwf	3980,c	;volatile
  2779                           
  2780                           ;LED-API.c: 40: for (unsigned char i = 0; i < 8; i++) {
  2781  000AE2  0E00               	movlw	0
  2782  000AE4  0100               	movlb	0	; () banked
  2783  000AE6  6F82               	movwf	initializeLED@i& (0+255),b
  2784  000AE8                     l1945:
  2785                           
  2786                           ; BSR set to: 0
  2787  000AE8  0E07               	movlw	7
  2788  000AEA  0100               	movlb	0	; () banked
  2789  000AEC  6582               	cpfsgt	initializeLED@i& (0+255),b
  2790  000AEE  D001               	goto	l1949
  2791  000AF0  0012               	return	
  2792  000AF2                     l1949:
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;LED-API.c: 41: for (unsigned char j = 0; j < 16; j++) {
  2796  000AF2  0E00               	movlw	0
  2797  000AF4  0100               	movlb	0	; () banked
  2798  000AF6  6F83               	movwf	initializeLED@j& (0+255),b
  2799  000AF8                     l1951:
  2800                           
  2801                           ; BSR set to: 0
  2802  000AF8  0E0F               	movlw	15
  2803  000AFA  0100               	movlb	0	; () banked
  2804  000AFC  6583               	cpfsgt	initializeLED@j& (0+255),b
  2805  000AFE  D001               	goto	l1955
  2806  000B00  D01F               	goto	l1961
  2807  000B02                     l1955:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;LED-API.c: 42: pixels[i][j] = 0;
  2811  000B02  0100               	movlb	0	; () banked
  2812  000B04  5182               	movf	initializeLED@i& (0+255),w,b
  2813  000B06  0D10               	mullw	16
  2814  000B08  0E00               	movlw	low _pixels
  2815  000B0A  0100               	movlb	0	; () banked
  2816  000B0C  6F80               	movwf	??_initializeLED& (0+255),b
  2817  000B0E  0E03               	movlw	high _pixels
  2818  000B10  0100               	movlb	0	; () banked
  2819  000B12  6F81               	movwf	(??_initializeLED+1)& (0+255),b
  2820  000B14  50F3               	movf	prodl,w,c
  2821  000B16  0100               	movlb	0	; () banked
  2822  000B18  2780               	addwf	??_initializeLED& (0+255),f,b
  2823  000B1A  50F4               	movf	prodh,w,c
  2824  000B1C  0100               	movlb	0	; () banked
  2825  000B1E  2381               	addwfc	(??_initializeLED+1)& (0+255),f,b
  2826  000B20  0100               	movlb	0	; () banked
  2827  000B22  5183               	movf	initializeLED@j& (0+255),w,b
  2828  000B24  0D01               	mullw	1
  2829  000B26  50F3               	movf	prodl,w,c
  2830  000B28  0100               	movlb	0	; () banked
  2831  000B2A  2580               	addwf	??_initializeLED& (0+255),w,b
  2832  000B2C  6ED9               	movwf	fsr2l,c
  2833  000B2E  50F4               	movf	prodh,w,c
  2834  000B30  0100               	movlb	0	; () banked
  2835  000B32  2181               	addwfc	(??_initializeLED+1)& (0+255),w,b
  2836  000B34  6EDA               	movwf	fsr2h,c
  2837  000B36  0E00               	movlw	0
  2838  000B38  6EDF               	movwf	indf2,c
  2839                           
  2840                           ; BSR set to: 0
  2841  000B3A  0100               	movlb	0	; () banked
  2842  000B3C  2B83               	incf	initializeLED@j& (0+255),f,b
  2843  000B3E  D7DC               	goto	l1951
  2844  000B40                     l1961:
  2845                           
  2846                           ; BSR set to: 0
  2847  000B40  0100               	movlb	0	; () banked
  2848  000B42  2B82               	incf	initializeLED@i& (0+255),f,b
  2849  000B44  D7D1               	goto	l1945
  2850  000B46                     __end_of_initializeLED:
  2851                           	opt stack 0
  2852                           tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           prodh	equ	0xFF4
  2857                           prodl	equ	0xFF3
  2858                           postinc0	equ	0xFEE
  2859                           wreg	equ	0xFE8
  2860                           postdec1	equ	0xFE5
  2861                           plusw1	equ	0xFE3
  2862                           fsr1l	equ	0xFE1
  2863                           indf2	equ	0xFDF
  2864                           postinc2	equ	0xFDE
  2865                           plusw2	equ	0xFDB
  2866                           fsr2h	equ	0xFDA
  2867                           fsr2l	equ	0xFD9
  2868                           status	equ	0xFD8
  2869                           
  2870 ;; *************** function _initialize *****************
  2871 ;; Defined at:
  2872 ;;		line 93 in file "main.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2886 ;;      Params:         0       0       0       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0       0       0
  2889 ;;      Totals:         0       0       0       0       0       0       0
  2890 ;;Total ram usage:        0 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    5
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text13
  2901  000C62                     __ptext13:
  2902                           	opt stack 0
  2903  000C62                     _initialize:
  2904                           	opt stack 25
  2905                           
  2906                           ;main.c: 96: OSCTUNEbits.PLLEN = 1;
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;incstack = 0
  2910  000C62  8C9B               	bsf	3995,6,c	;volatile
  2911                           
  2912                           ;main.c: 97: OSCTUNEbits.TUN = 011111;
  2913  000C64  809B               	bsf	3995,0,c	;volatile
  2914  000C66  929B               	bcf	3995,1,c	;volatile
  2915  000C68  949B               	bcf	3995,2,c	;volatile
  2916  000C6A  869B               	bsf	3995,3,c	;volatile
  2917  000C6C  989B               	bcf	3995,4,c	;volatile
  2918                           
  2919                           ;main.c: 99: OSCCONbits.SCS = 00;
  2920  000C6E  0EFC               	movlw	-4
  2921  000C70  16D3               	andwf	4051,f,c	;volatile
  2922                           
  2923                           ;main.c: 100: OSCCONbits.IRCF = 111;
  2924  000C72  88D3               	bsf	4051,4,c	;volatile
  2925  000C74  8AD3               	bsf	4051,5,c	;volatile
  2926  000C76  8CD3               	bsf	4051,6,c	;volatile
  2927                           
  2928                           ;main.c: 102: PLLEN = 1;
  2929  000C78  8C9B               	bsf	3995,6,c	;volatile
  2930                           
  2931                           ;main.c: 105: GIE = 1;
  2932  000C7A  8EF2               	bsf	intcon,7,c	;volatile
  2933                           
  2934                           ;main.c: 106: PEIE=1;
  2935  000C7C  8CF2               	bsf	intcon,6,c	;volatile
  2936                           
  2937                           ;main.c: 109: TRISBbits.TRISB0 = 1;
  2938  000C7E  8093               	bsf	3987,0,c	;volatile
  2939                           
  2940                           ;main.c: 110: TRISBbits.TRISB1 = 1;
  2941  000C80  8293               	bsf	3987,1,c	;volatile
  2942                           
  2943                           ;main.c: 111: ADCON2bits.ADFM = 1;
  2944  000C82  8EC0               	bsf	4032,7,c	;volatile
  2945                           
  2946                           ;main.c: 112: ADCON2bits.ADCS = 010;
  2947  000C84  90C0               	bcf	4032,0,c	;volatile
  2948  000C86  92C0               	bcf	4032,1,c	;volatile
  2949  000C88  94C0               	bcf	4032,2,c	;volatile
  2950                           
  2951                           ;main.c: 113: ADCON2bits.ACQT = 111;
  2952  000C8A  86C0               	bsf	4032,3,c	;volatile
  2953  000C8C  88C0               	bsf	4032,4,c	;volatile
  2954  000C8E  8AC0               	bsf	4032,5,c	;volatile
  2955                           
  2956                           ;main.c: 114: ADCON1bits.VCFG0 = 0;
  2957  000C90  98C1               	bcf	4033,4,c	;volatile
  2958                           
  2959                           ;main.c: 115: ADCON1bits.VCFG1 = 0;
  2960  000C92  9AC1               	bcf	4033,5,c	;volatile
  2961                           
  2962                           ;main.c: 116: ADCON1bits.PCFG = 0000;
  2963  000C94  90C1               	bcf	4033,0,c	;volatile
  2964  000C96  92C1               	bcf	4033,1,c	;volatile
  2965  000C98  94C1               	bcf	4033,2,c	;volatile
  2966  000C9A  96C1               	bcf	4033,3,c	;volatile
  2967                           
  2968                           ;main.c: 117: ADCON0bits.CHS = 1100;
  2969  000C9C  50C2               	movf	4034,w,c	;volatile
  2970  000C9E  0BC3               	andlw	-61
  2971  000CA0  0930               	iorlw	48
  2972  000CA2  6EC2               	movwf	4034,c	;volatile
  2973                           
  2974                           ;main.c: 118: ADCON0bits.ADON = 1;
  2975  000CA4  80C2               	bsf	4034,0,c	;volatile
  2976                           
  2977                           ;main.c: 119: ADIE = 1;
  2978  000CA6  8C9D               	bsf	3997,6,c	;volatile
  2979                           
  2980                           ;main.c: 122: T0PS0 = 1;
  2981  000CA8  80D5               	bsf	4053,0,c	;volatile
  2982                           
  2983                           ;main.c: 123: T0PS1 = 0;
  2984  000CAA  92D5               	bcf	4053,1,c	;volatile
  2985                           
  2986                           ;main.c: 124: T0PS2 = 1;
  2987  000CAC  84D5               	bsf	4053,2,c	;volatile
  2988                           
  2989                           ;main.c: 125: PSA = 0;
  2990  000CAE  96D5               	bcf	4053,3,c	;volatile
  2991                           
  2992                           ;main.c: 126: T0CS = 0;
  2993  000CB0  9AD5               	bcf	4053,5,c	;volatile
  2994                           
  2995                           ;main.c: 127: T08BIT = 1;
  2996  000CB2  8CD5               	bsf	4053,6,c	;volatile
  2997                           
  2998                           ;main.c: 128: TMR0IE = 1;
  2999  000CB4  8AF2               	bsf	intcon,5,c	;volatile
  3000                           
  3001                           ;main.c: 129: TMR0IF = 0;
  3002  000CB6  94F2               	bcf	intcon,2,c	;volatile
  3003                           
  3004                           ;main.c: 131: TMR0ON = 1;
  3005  000CB8  8ED5               	bsf	4053,7,c	;volatile
  3006  000CBA  0012               	return		;funcret
  3007  000CBC                     __end_of_initialize:
  3008                           	opt stack 0
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           intcon	equ	0xFF2
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           postdec1	equ	0xFE5
  3019                           plusw1	equ	0xFE3
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           postinc2	equ	0xFDE
  3023                           plusw2	equ	0xFDB
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _ISR *****************
  3029 ;; Defined at:
  3030 ;;		line 300 in file "main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  ADvalue         2   79[COMRAM] unsigned short 
  3035 ;;  value           1   81[COMRAM] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3045 ;;      Params:         0       0       0       0       0       0       0
  3046 ;;      Locals:         3       0       0       0       0       0       0
  3047 ;;      Temps:         14       0       0       0       0       0       0
  3048 ;;      Totals:        17       0       0       0       0       0       0
  3049 ;;Total ram usage:       17 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    4
  3052 ;; This function calls:
  3053 ;;		___lwdiv
  3054 ;;		_checkNextPosition
  3055 ;;		_writePong
  3056 ;; This function is called by:
  3057 ;;		Interrupt level 2
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	intcode
  3062  000008                     __pintcode:
  3063                           	opt stack 0
  3064  000008                     _ISR:
  3065                           	opt stack 22
  3066                           
  3067                           ;incstack = 0
  3068  000008  8275               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3069  00000A  CFFA F042          	movff	pclath,??_ISR
  3070  00000E  CFFB F043          	movff	pclatu,??_ISR+1
  3071  000012  EDA4  F003         	call	int_func,f	;refresh shadow registers
  3072                           pclatu	equ	0xFFB
  3073                           pclath	equ	0xFFA
  3074                           tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           prodh	equ	0xFF4
  3079                           prodl	equ	0xFF3
  3080                           intcon	equ	0xFF2
  3081                           postinc0	equ	0xFEE
  3082                           wreg	equ	0xFE8
  3083                           postdec1	equ	0xFE5
  3084                           plusw1	equ	0xFE3
  3085                           fsr1l	equ	0xFE1
  3086                           indf2	equ	0xFDF
  3087                           postinc2	equ	0xFDE
  3088                           plusw2	equ	0xFDB
  3089                           fsr2h	equ	0xFDA
  3090                           fsr2l	equ	0xFD9
  3091                           status	equ	0xFD8
  3092                           
  3093                           	psect	intcode_body
  3094  000748                     __pintcode_body:
  3095                           	opt stack 22
  3096  000748                     int_func:
  3097                           	opt stack 22
  3098  000748  0006               	pop		; remove dummy address from shadow register refresh
  3099  00074A  CFE9 F044          	movff	fsr0l,??_ISR+2
  3100  00074E  CFEA F045          	movff	fsr0h,??_ISR+3
  3101  000752  CFE1 F046          	movff	fsr1l,??_ISR+4
  3102  000756  CFE2 F047          	movff	fsr1h,??_ISR+5
  3103  00075A  CFD9 F048          	movff	fsr2l,??_ISR+6
  3104  00075E  CFDA F049          	movff	fsr2h,??_ISR+7
  3105  000762  CFF3 F04A          	movff	prodl,??_ISR+8
  3106  000766  CFF4 F04B          	movff	prodh,??_ISR+9
  3107  00076A  CFF6 F04C          	movff	tblptrl,??_ISR+10
  3108  00076E  CFF7 F04D          	movff	tblptrh,??_ISR+11
  3109  000772  CFF8 F04E          	movff	tblptru,??_ISR+12
  3110  000776  CFF5 F04F          	movff	tablat,??_ISR+13
  3111                           
  3112                           ;main.c: 302: if(TMR0IE && TMR0IF)
  3113  00077A  BAF2               	btfsc	intcon,5,c	;volatile
  3114  00077C  A4F2               	btfss	intcon,2,c	;volatile
  3115  00077E  D012               	goto	i2l2235
  3116                           
  3117                           ;main.c: 303: {
  3118                           ;main.c: 305: TMR0IF = 0;
  3119  000780  94F2               	bcf	intcon,2,c	;volatile
  3120                           
  3121                           ;main.c: 307: if(_timerCounter > _speed)
  3122  000782  5073               	movf	__timerCounter,w,c
  3123  000784  5C71               	subwf	__speed,w,c
  3124  000786  5074               	movf	__timerCounter+1,w,c
  3125  000788  5872               	subwfb	__speed+1,w,c
  3126  00078A  B0D8               	btfsc	status,0,c
  3127  00078C  D006               	goto	i2l2229
  3128                           
  3129                           ;main.c: 308: {
  3130                           ;main.c: 309: checkNextPosition();
  3131  00078E  EC01  F003         	call	_checkNextPosition	;wreg free
  3132                           
  3133                           ;main.c: 310: _timerCounter = 0;
  3134  000792  0E00               	movlw	0
  3135  000794  6E74               	movwf	__timerCounter+1,c
  3136  000796  0E00               	movlw	0
  3137  000798  6E73               	movwf	__timerCounter,c
  3138  00079A                     i2l2229:
  3139                           
  3140                           ;main.c: 311: }
  3141                           ;main.c: 313: _timerCounter++;
  3142  00079A  4A73               	infsnz	__timerCounter,f,c
  3143  00079C  2A74               	incf	__timerCounter+1,f,c
  3144                           
  3145                           ;main.c: 314: writePong();
  3146  00079E  EC24  F005         	call	_writePong	;wreg free
  3147                           
  3148                           ;main.c: 317: ADCON0bits.GODONE = 1;
  3149  0007A2  82C2               	bsf	4034,1,c	;volatile
  3150  0007A4                     i2l2235:
  3151                           
  3152                           ;main.c: 319: }
  3153                           ;main.c: 321: if(ADIE && ADIF)
  3154  0007A4  BC9D               	btfsc	3997,6,c	;volatile
  3155  0007A6  AC9E               	btfss	3998,6,c	;volatile
  3156  0007A8  D032               	goto	i2l261
  3157                           
  3158                           ;main.c: 322: {
  3159                           ;main.c: 324: ADIF = 0;
  3160  0007AA  9C9E               	bcf	3998,6,c	;volatile
  3161                           
  3162                           ;main.c: 326: unsigned short ADvalue = ADRES;
  3163  0007AC  CFC3 F050          	movff	4035,ISR@ADvalue	;volatile
  3164  0007B0  CFC4 F051          	movff	4036,ISR@ADvalue+1	;volatile
  3165                           
  3166                           ;main.c: 327: unsigned char value = (ADvalue / 85);
  3167  0007B4  C050  F001         	movff	ISR@ADvalue,___lwdiv@dividend
  3168  0007B8  C051  F002         	movff	ISR@ADvalue+1,___lwdiv@dividend+1
  3169  0007BC  0E00               	movlw	0
  3170  0007BE  6E04               	movwf	___lwdiv@divisor+1,c
  3171  0007C0  0E55               	movlw	85
  3172  0007C2  6E03               	movwf	___lwdiv@divisor,c
  3173  0007C4  ECB1  F006         	call	___lwdiv	;wreg free
  3174  0007C8  5001               	movf	?___lwdiv,w,c
  3175  0007CA  6E52               	movwf	ISR@value,c
  3176                           
  3177                           ;main.c: 330: if(ADCON0bits.CHS == 12)
  3178  0007CC  30C2               	rrcf	4034,w,c	;volatile
  3179  0007CE  32E8               	rrcf	wreg,f,c
  3180  0007D0  0B0F               	andlw	15
  3181  0007D2  0A0C               	xorlw	12
  3182  0007D4  A4D8               	btfss	status,2,c
  3183  0007D6  D00E               	goto	i2l2255
  3184                           
  3185                           ;main.c: 331: {
  3186                           ;main.c: 332: ADCON0bits.CHS = 10;
  3187  0007D8  50C2               	movf	4034,w,c	;volatile
  3188  0007DA  0BC3               	andlw	-61
  3189  0007DC  0928               	iorlw	40
  3190  0007DE  6EC2               	movwf	4034,c	;volatile
  3191                           
  3192                           ;main.c: 335: _p1.paddlePosOld[0] = _p1.paddlePos[0];
  3193  0007E0  C0F3  F0F1         	movff	__p1+2,__p1
  3194                           
  3195                           ;main.c: 336: _p1.paddlePos[0] = value;
  3196  0007E4  C052  F0F3         	movff	ISR@value,__p1+2
  3197                           
  3198                           ;main.c: 338: _p1.paddlePosOld[1] = _p1.paddlePos[1];
  3199  0007E8  C0F4  F0F2         	movff	__p1+3,__p1+1
  3200                           
  3201                           ;main.c: 339: _p1.paddlePos[1] = value + 1;
  3202  0007EC  2852               	incf	ISR@value,w,c
  3203  0007EE  0100               	movlb	0	; () banked
  3204  0007F0  6FF4               	movwf	(__p1+3)& (0+255),b
  3205                           
  3206                           ;main.c: 340: }
  3207  0007F2  D00D               	goto	i2l261
  3208  0007F4                     i2l2255:
  3209                           
  3210                           ;main.c: 341: else
  3211                           ;main.c: 342: {
  3212                           ;main.c: 343: ADCON0bits.CHS = 12;
  3213  0007F4  50C2               	movf	4034,w,c	;volatile
  3214  0007F6  0BC3               	andlw	-61
  3215  0007F8  0930               	iorlw	48
  3216  0007FA  6EC2               	movwf	4034,c	;volatile
  3217                           
  3218                           ;main.c: 346: _p2.paddlePosOld[0] = _p2.paddlePos[0];
  3219  0007FC  C0F8  F0F6         	movff	__p2+2,__p2
  3220                           
  3221                           ;main.c: 347: _p2.paddlePos[0] = value;
  3222  000800  C052  F0F8         	movff	ISR@value,__p2+2
  3223                           
  3224                           ;main.c: 349: _p2.paddlePosOld[1] = _p2.paddlePos[1];
  3225  000804  C0F9  F0F7         	movff	__p2+3,__p2+1
  3226                           
  3227                           ;main.c: 350: _p2.paddlePos[1] = value + 1;
  3228  000808  2852               	incf	ISR@value,w,c
  3229  00080A  0100               	movlb	0	; () banked
  3230  00080C  6FF9               	movwf	(__p2+3)& (0+255),b
  3231  00080E                     i2l261:
  3232  00080E  C04F  FFF5         	movff	??_ISR+13,tablat
  3233  000812  C04E  FFF8         	movff	??_ISR+12,tblptru
  3234  000816  C04D  FFF7         	movff	??_ISR+11,tblptrh
  3235  00081A  C04C  FFF6         	movff	??_ISR+10,tblptrl
  3236  00081E  C04B  FFF4         	movff	??_ISR+9,prodh
  3237  000822  C04A  FFF3         	movff	??_ISR+8,prodl
  3238  000826  C049  FFDA         	movff	??_ISR+7,fsr2h
  3239  00082A  C048  FFD9         	movff	??_ISR+6,fsr2l
  3240  00082E  C047  FFE2         	movff	??_ISR+5,fsr1h
  3241  000832  C046  FFE1         	movff	??_ISR+4,fsr1l
  3242  000836  C045  FFEA         	movff	??_ISR+3,fsr0h
  3243  00083A  C044  FFE9         	movff	??_ISR+2,fsr0l
  3244  00083E  C043  FFFB         	movff	??_ISR+1,pclatu
  3245  000842  C042  FFFA         	movff	??_ISR,pclath
  3246  000846  9275               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3247  000848  0011               	retfie		f
  3248  00084A                     __end_of_ISR:
  3249                           	opt stack 0
  3250                           pclatu	equ	0xFFB
  3251                           pclath	equ	0xFFA
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           prodh	equ	0xFF4
  3257                           prodl	equ	0xFF3
  3258                           intcon	equ	0xFF2
  3259                           postinc0	equ	0xFEE
  3260                           fsr0h	equ	0xFEA
  3261                           fsr0l	equ	0xFE9
  3262                           wreg	equ	0xFE8
  3263                           postdec1	equ	0xFE5
  3264                           plusw1	equ	0xFE3
  3265                           fsr1h	equ	0xFE2
  3266                           fsr1l	equ	0xFE1
  3267                           indf2	equ	0xFDF
  3268                           postinc2	equ	0xFDE
  3269                           plusw2	equ	0xFDB
  3270                           fsr2h	equ	0xFDA
  3271                           fsr2l	equ	0xFD9
  3272                           status	equ	0xFD8
  3273                           
  3274 ;; *************** function _writePong *****************
  3275 ;; Defined at:
  3276 ;;		line 135 in file "main.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3290 ;;      Params:         0       0       0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0
  3293 ;;      Totals:         0       0       0       0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    1
  3297 ;; This function calls:
  3298 ;;		_off
  3299 ;;		i2_on
  3300 ;; This function is called by:
  3301 ;;		_ISR
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text15
  3306  000A48                     __ptext15:
  3307                           	opt stack 0
  3308  000A48                     _writePong:
  3309                           	opt stack 24
  3310                           
  3311                           ;main.c: 140: off(_ball.bPos[1], _ball.bPos[0]);
  3312                           
  3313                           ;incstack = 0
  3314  000A48  C0FB  F001         	movff	__ball,off@row
  3315  000A4C  0100               	movlb	0	; () banked
  3316  000A4E  51FC               	movf	(__ball+1)& (0+255),w,b
  3317  000A50  EC8D  F007         	call	_off
  3318                           
  3319                           ;main.c: 141: _ball.bPos[0] = _nextPos[0];
  3320  000A54  C0FE  F0FB         	movff	__nextPos,__ball
  3321                           
  3322                           ;main.c: 142: _ball.bPos[1] = _nextPos[1];
  3323  000A58  C0FF  F0FC         	movff	__nextPos+1,__ball+1
  3324                           
  3325                           ;main.c: 143: on(_ball.bPos[1], _ball.bPos[0]);
  3326  000A5C  C0FB  F001         	movff	__ball,i2on@row
  3327  000A60  0100               	movlb	0	; () banked
  3328  000A62  51FC               	movf	(__ball+1)& (0+255),w,b
  3329  000A64  ECAB  F007         	call	i2_on
  3330                           
  3331                           ;main.c: 146: off(_p1.paddlePosOld[0], 0);
  3332  000A68  0E00               	movlw	0
  3333  000A6A  6E01               	movwf	off@row,c
  3334  000A6C  0100               	movlb	0	; () banked
  3335  000A6E  51F1               	movf	__p1& (0+255),w,b
  3336  000A70  EC8D  F007         	call	_off
  3337                           
  3338                           ;main.c: 147: off(_p1.paddlePosOld[1], 0);
  3339  000A74  0E00               	movlw	0
  3340  000A76  6E01               	movwf	off@row,c
  3341  000A78  0100               	movlb	0	; () banked
  3342  000A7A  51F2               	movf	(__p1+1)& (0+255),w,b
  3343  000A7C  EC8D  F007         	call	_off
  3344                           
  3345                           ;main.c: 149: off(_p2.paddlePosOld[0], 15);
  3346  000A80  0E0F               	movlw	15
  3347  000A82  6E01               	movwf	off@row,c
  3348  000A84  0100               	movlb	0	; () banked
  3349  000A86  51F6               	movf	__p2& (0+255),w,b
  3350  000A88  EC8D  F007         	call	_off
  3351                           
  3352                           ;main.c: 150: off(_p2.paddlePosOld[1], 15);
  3353  000A8C  0E0F               	movlw	15
  3354  000A8E  6E01               	movwf	off@row,c
  3355  000A90  0100               	movlb	0	; () banked
  3356  000A92  51F7               	movf	(__p2+1)& (0+255),w,b
  3357  000A94  EC8D  F007         	call	_off
  3358                           
  3359                           ;main.c: 152: on(_p1.paddlePos[0], 0);
  3360  000A98  0E00               	movlw	0
  3361  000A9A  6E01               	movwf	i2on@row,c
  3362  000A9C  0100               	movlb	0	; () banked
  3363  000A9E  51F3               	movf	(__p1+2)& (0+255),w,b
  3364  000AA0  ECAB  F007         	call	i2_on
  3365                           
  3366                           ;main.c: 153: on(_p1.paddlePos[1], 0);
  3367  000AA4  0E00               	movlw	0
  3368  000AA6  6E01               	movwf	i2on@row,c
  3369  000AA8  0100               	movlb	0	; () banked
  3370  000AAA  51F4               	movf	(__p1+3)& (0+255),w,b
  3371  000AAC  ECAB  F007         	call	i2_on
  3372                           
  3373                           ;main.c: 154: on(_p2.paddlePos[0], 15);
  3374  000AB0  0E0F               	movlw	15
  3375  000AB2  6E01               	movwf	i2on@row,c
  3376  000AB4  0100               	movlb	0	; () banked
  3377  000AB6  51F8               	movf	(__p2+2)& (0+255),w,b
  3378  000AB8  ECAB  F007         	call	i2_on
  3379                           
  3380                           ;main.c: 155: on(_p2.paddlePos[1], 15);
  3381  000ABC  0E0F               	movlw	15
  3382  000ABE  6E01               	movwf	i2on@row,c
  3383  000AC0  0100               	movlb	0	; () banked
  3384  000AC2  51F9               	movf	(__p2+3)& (0+255),w,b
  3385  000AC4  ECAB  F007         	call	i2_on
  3386  000AC8  0012               	return		;funcret
  3387  000ACA                     __end_of_writePong:
  3388                           	opt stack 0
  3389                           pclatu	equ	0xFFB
  3390                           pclath	equ	0xFFA
  3391                           tblptru	equ	0xFF8
  3392                           tblptrh	equ	0xFF7
  3393                           tblptrl	equ	0xFF6
  3394                           tablat	equ	0xFF5
  3395                           prodh	equ	0xFF4
  3396                           prodl	equ	0xFF3
  3397                           intcon	equ	0xFF2
  3398                           postinc0	equ	0xFEE
  3399                           fsr0h	equ	0xFEA
  3400                           fsr0l	equ	0xFE9
  3401                           wreg	equ	0xFE8
  3402                           postdec1	equ	0xFE5
  3403                           plusw1	equ	0xFE3
  3404                           fsr1h	equ	0xFE2
  3405                           fsr1l	equ	0xFE1
  3406                           indf2	equ	0xFDF
  3407                           postinc2	equ	0xFDE
  3408                           plusw2	equ	0xFDB
  3409                           fsr2h	equ	0xFDA
  3410                           fsr2l	equ	0xFD9
  3411                           status	equ	0xFD8
  3412                           
  3413 ;; *************** function _off *****************
  3414 ;; Defined at:
  3415 ;;		line 68 in file "Source/LED-API.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  column          1    wreg     unsigned char 
  3418 ;;  row             1    0[COMRAM] unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  column          1    3[COMRAM] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3430 ;;      Params:         1       0       0       0       0       0       0
  3431 ;;      Locals:         1       0       0       0       0       0       0
  3432 ;;      Temps:          2       0       0       0       0       0       0
  3433 ;;      Totals:         4       0       0       0       0       0       0
  3434 ;;Total ram usage:        4 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_writePong
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text16
  3444  000F1A                     __ptext16:
  3445                           	opt stack 0
  3446  000F1A                     _off:
  3447                           	opt stack 24
  3448                           
  3449                           ;incstack = 0
  3450                           ;off@column stored from wreg
  3451  000F1A  6E04               	movwf	off@column,c
  3452                           
  3453                           ;LED-API.c: 70: if (row < 0 || row > 16)
  3454  000F1C  0E10               	movlw	16
  3455  000F1E  6401               	cpfsgt	off@row,c
  3456  000F20  D001               	goto	i2l1877
  3457  000F22  0012               	return	
  3458  000F24                     i2l1877:
  3459                           
  3460                           ;LED-API.c: 72: if (column < 0 || column > 8)
  3461  000F24  0E08               	movlw	8
  3462  000F26  6404               	cpfsgt	off@column,c
  3463  000F28  D001               	goto	i2l1881
  3464  000F2A  0012               	return	
  3465  000F2C                     i2l1881:
  3466                           
  3467                           ;LED-API.c: 75: pixels[column][row] = 0;
  3468  000F2C  5004               	movf	off@column,w,c
  3469  000F2E  0D10               	mullw	16
  3470  000F30  0E00               	movlw	low _pixels
  3471  000F32  6E02               	movwf	??_off& (0+255),c
  3472  000F34  0E03               	movlw	high _pixels
  3473  000F36  6E03               	movwf	(??_off+1)& (0+255),c
  3474  000F38  50F3               	movf	prodl,w,c
  3475  000F3A  2602               	addwf	??_off,f,c
  3476  000F3C  50F4               	movf	prodh,w,c
  3477  000F3E  2203               	addwfc	??_off+1,f,c
  3478  000F40  5001               	movf	off@row,w,c
  3479  000F42  0D01               	mullw	1
  3480  000F44  50F3               	movf	prodl,w,c
  3481  000F46  2402               	addwf	??_off,w,c
  3482  000F48  6ED9               	movwf	fsr2l,c
  3483  000F4A  50F4               	movf	prodh,w,c
  3484  000F4C  2003               	addwfc	??_off+1,w,c
  3485  000F4E  6EDA               	movwf	fsr2h,c
  3486  000F50  0E00               	movlw	0
  3487  000F52  6EDF               	movwf	indf2,c
  3488  000F54  0012               	return		;funcret
  3489  000F56                     __end_of_off:
  3490                           	opt stack 0
  3491                           pclatu	equ	0xFFB
  3492                           pclath	equ	0xFFA
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           intcon	equ	0xFF2
  3500                           postinc0	equ	0xFEE
  3501                           fsr0h	equ	0xFEA
  3502                           fsr0l	equ	0xFE9
  3503                           wreg	equ	0xFE8
  3504                           postdec1	equ	0xFE5
  3505                           plusw1	equ	0xFE3
  3506                           fsr1h	equ	0xFE2
  3507                           fsr1l	equ	0xFE1
  3508                           indf2	equ	0xFDF
  3509                           postinc2	equ	0xFDE
  3510                           plusw2	equ	0xFDB
  3511                           fsr2h	equ	0xFDA
  3512                           fsr2l	equ	0xFD9
  3513                           status	equ	0xFD8
  3514                           
  3515 ;; *************** function _checkNextPosition *****************
  3516 ;; Defined at:
  3517 ;;		line 189 in file "main.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3531 ;;      Params:         0       0       0       0       0       0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0
  3534 ;;      Totals:         0       0       0       0       0       0       0
  3535 ;;Total ram usage:        0 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    3
  3538 ;; This function calls:
  3539 ;;		_getNextPosition
  3540 ;;		i2_startPong
  3541 ;; This function is called by:
  3542 ;;		_ISR
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text17
  3547  000602                     __ptext17:
  3548                           	opt stack 0
  3549  000602                     _checkNextPosition:
  3550                           	opt stack 22
  3551                           
  3552                           ;main.c: 191: getNextPosition();
  3553                           
  3554                           ;incstack = 0
  3555  000602  ECE0  F004         	call	_getNextPosition	;wreg free
  3556                           
  3557                           ;main.c: 192: if(_nextPos[0] == 0)
  3558  000606  0100               	movlb	0	; () banked
  3559  000608  51FE               	movf	__nextPos& (0+255),w,b
  3560  00060A  A4D8               	btfss	status,2,c
  3561  00060C  D03B               	goto	i2l2099
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;main.c: 193: {
  3565                           ;main.c: 194: if(_p1.paddlePos[0] == _nextPos[1])
  3566  00060E  0100               	movlb	0	; () banked
  3567  000610  51FF               	movf	(__nextPos+1)& (0+255),w,b
  3568  000612  0100               	movlb	0	; () banked
  3569  000614  19F3               	xorwf	(__p1+2)& (0+255),w,b
  3570  000616  B4D8               	btfsc	status,2,c
  3571  000618  D007               	goto	i2l2069
  3572  00061A  D014               	goto	i2l2077
  3573  00061C                     i2l2065:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;main.c: 204: _ball.bDirection = 1;
  3577  00061C  0E01               	movlw	1
  3578  00061E  D001               	goto	L2
  3579  000620                     i2l2067:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;main.c: 207: _ball.bDirection = 2;
  3583  000620  0E02               	movlw	2
  3584  000622                     L2:
  3585  000622  0100               	movlb	0	; () banked
  3586  000624  6FFD               	movwf	(__ball+2)& (0+255),b
  3587                           
  3588                           ;main.c: 208: }
  3589  000626  D00B               	goto	i2l2071
  3590  000628                     i2l2069:
  3591                           
  3592                           ; BSR set to: 0
  3593  000628  0100               	movlb	0	; () banked
  3594  00062A  51FD               	movf	(__ball+2)& (0+255),w,b
  3595                           
  3596                           ; Switch size 1, requested type "space"
  3597                           ; Number of cases is 3, Range of values is 4 to 6
  3598                           ; switch strategies available:
  3599                           ; Name         Instructions Cycles
  3600                           ; simple_byte           10     6 (average)
  3601                           ;	Chosen strategy is simple_byte
  3602  00062C  0A04               	xorlw	4	; case 4
  3603  00062E  B4D8               	btfsc	status,2,c
  3604  000630  D7F7               	goto	i2l2067
  3605  000632  0A01               	xorlw	1	; case 5
  3606  000634  B4D8               	btfsc	status,2,c
  3607  000636  D7F2               	goto	i2l2065
  3608  000638  0A03               	xorlw	3	; case 6
  3609  00063A  B4D8               	btfsc	status,2,c
  3610  00063C  D7F1               	goto	i2l2067
  3611  00063E                     i2l2071:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;main.c: 209: getNextPosition();
  3615  00063E  ECE0  F004         	call	_getNextPosition	;wreg free
  3616                           
  3617                           ;main.c: 210: return;
  3618  000642  0012               	return	
  3619  000644                     i2l2077:
  3620                           
  3621                           ;main.c: 212: else if(_p1.paddlePos[1] == _nextPos[1])
  3622  000644  0100               	movlb	0	; () banked
  3623  000646  51FF               	movf	(__nextPos+1)& (0+255),w,b
  3624  000648  0100               	movlb	0	; () banked
  3625  00064A  19F4               	xorwf	(__p1+3)& (0+255),w,b
  3626  00064C  B4D8               	btfsc	status,2,c
  3627  00064E  D007               	goto	i2l2089
  3628  000650  D014               	goto	i2l2095
  3629  000652                     i2l2081:
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;main.c: 219: _ball.bDirection = 1;
  3633  000652  0E01               	movlw	1
  3634  000654                     L3:
  3635  000654  0100               	movlb	0	; () banked
  3636  000656  6FFD               	movwf	(__ball+2)& (0+255),b
  3637                           
  3638                           ;main.c: 223: break;
  3639  000658  D00D               	goto	i2l2091
  3640  00065A                     i2l2085:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;main.c: 225: _ball.bDirection = 3;
  3644  00065A  0E03               	movlw	3
  3645  00065C  D7FB               	goto	L3
  3646  00065E                     i2l2089:
  3647                           
  3648                           ; BSR set to: 0
  3649  00065E  0100               	movlb	0	; () banked
  3650  000660  51FD               	movf	(__ball+2)& (0+255),w,b
  3651                           
  3652                           ; Switch size 1, requested type "space"
  3653                           ; Number of cases is 3, Range of values is 4 to 6
  3654                           ; switch strategies available:
  3655                           ; Name         Instructions Cycles
  3656                           ; simple_byte           10     6 (average)
  3657                           ;	Chosen strategy is simple_byte
  3658  000662  0A04               	xorlw	4	; case 4
  3659  000664  B4D8               	btfsc	status,2,c
  3660  000666  D7F5               	goto	i2l2081
  3661  000668  0A01               	xorlw	1	; case 5
  3662  00066A  B4D8               	btfsc	status,2,c
  3663  00066C  D7F6               	goto	i2l2085
  3664  00066E  0A03               	xorlw	3	; case 6
  3665  000670  B4D8               	btfsc	status,2,c
  3666  000672  D7F3               	goto	i2l2085
  3667  000674                     i2l2091:
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;main.c: 228: getNextPosition();
  3671  000674  ECE0  F004         	call	_getNextPosition	;wreg free
  3672                           
  3673                           ;main.c: 229: return;
  3674  000678  0012               	return	
  3675  00067A                     i2l2095:
  3676                           
  3677                           ;main.c: 230: }
  3678                           ;main.c: 232: _p1.lives--;
  3679  00067A  0100               	movlb	0	; () banked
  3680  00067C  07F5               	decf	(__p1+4)& (0+255),f,b
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;main.c: 233: startPong();
  3684  00067E  ECDA  F006         	call	i2_startPong	;wreg free
  3685                           
  3686                           ;main.c: 234: }
  3687  000682  0012               	return	
  3688  000684                     i2l2099:
  3689                           
  3690                           ;main.c: 235: else if(_nextPos[0] == 15)
  3691  000684  0E0F               	movlw	15
  3692  000686  0100               	movlb	0	; () banked
  3693  000688  19FE               	xorwf	__nextPos& (0+255),w,b
  3694  00068A  A4D8               	btfss	status,2,c
  3695  00068C  D03D               	goto	i2l2143
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;main.c: 236: {
  3699                           ;main.c: 237: if(_p2.paddlePos[0] == _nextPos[1])
  3700  00068E  0100               	movlb	0	; () banked
  3701  000690  51FF               	movf	(__nextPos+1)& (0+255),w,b
  3702  000692  0100               	movlb	0	; () banked
  3703  000694  19F8               	xorwf	(__p2+2)& (0+255),w,b
  3704  000696  B4D8               	btfsc	status,2,c
  3705  000698  D009               	goto	i2l2113
  3706  00069A  D016               	goto	i2l2121
  3707  00069C                     i2l2105:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;main.c: 243: _ball.bDirection = 4;
  3711  00069C  0E04               	movlw	4
  3712  00069E  D003               	goto	L5
  3713  0006A0                     i2l2107:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;main.c: 246: _ball.bDirection = 6;
  3717  0006A0  0E06               	movlw	6
  3718  0006A2  D001               	goto	L5
  3719  0006A4                     i2l2109:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;main.c: 249: _ball.bDirection = 5;
  3723  0006A4  0E05               	movlw	5
  3724  0006A6                     L5:
  3725  0006A6  0100               	movlb	0	; () banked
  3726  0006A8  6FFD               	movwf	(__ball+2)& (0+255),b
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;main.c: 251: }
  3730                           
  3731                           ;main.c: 250: break;
  3732  0006AA  D00B               	goto	i2l2115
  3733  0006AC                     i2l2113:
  3734                           
  3735                           ; BSR set to: 0
  3736  0006AC  0100               	movlb	0	; () banked
  3737  0006AE  51FD               	movf	(__ball+2)& (0+255),w,b
  3738                           
  3739                           ; Switch size 1, requested type "space"
  3740                           ; Number of cases is 3, Range of values is 1 to 3
  3741                           ; switch strategies available:
  3742                           ; Name         Instructions Cycles
  3743                           ; simple_byte           10     6 (average)
  3744                           ;	Chosen strategy is simple_byte
  3745  0006B0  0A01               	xorlw	1	; case 1
  3746  0006B2  B4D8               	btfsc	status,2,c
  3747  0006B4  D7F3               	goto	i2l2105
  3748  0006B6  0A03               	xorlw	3	; case 2
  3749  0006B8  B4D8               	btfsc	status,2,c
  3750  0006BA  D7F2               	goto	i2l2107
  3751  0006BC  0A01               	xorlw	1	; case 3
  3752  0006BE  B4D8               	btfsc	status,2,c
  3753  0006C0  D7F1               	goto	i2l2109
  3754  0006C2                     i2l2115:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;main.c: 252: getNextPosition();
  3758  0006C2  ECE0  F004         	call	_getNextPosition	;wreg free
  3759                           
  3760                           ;main.c: 253: return;
  3761  0006C6  0012               	return	
  3762  0006C8                     i2l2121:
  3763                           
  3764                           ;main.c: 255: else if( _p2.paddlePos[1] == _nextPos[1])
  3765  0006C8  0100               	movlb	0	; () banked
  3766  0006CA  51FF               	movf	(__nextPos+1)& (0+255),w,b
  3767  0006CC  0100               	movlb	0	; () banked
  3768  0006CE  19F9               	xorwf	(__p2+3)& (0+255),w,b
  3769  0006D0  B4D8               	btfsc	status,2,c
  3770  0006D2  D007               	goto	i2l2133
  3771  0006D4  D014               	goto	i2l2139
  3772  0006D6                     i2l2127:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;main.c: 264: _ball.bDirection = 4;
  3776  0006D6  0E04               	movlw	4
  3777  0006D8  D001               	goto	L6
  3778  0006DA                     i2l2129:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;main.c: 267: _ball.bDirection = 6;
  3782  0006DA  0E06               	movlw	6
  3783  0006DC                     L6:
  3784  0006DC  0100               	movlb	0	; () banked
  3785  0006DE  6FFD               	movwf	(__ball+2)& (0+255),b
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;main.c: 269: }
  3789                           
  3790                           ;main.c: 268: break;
  3791  0006E0  D00B               	goto	i2l2135
  3792  0006E2                     i2l2133:
  3793                           
  3794                           ; BSR set to: 0
  3795  0006E2  0100               	movlb	0	; () banked
  3796  0006E4  51FD               	movf	(__ball+2)& (0+255),w,b
  3797                           
  3798                           ; Switch size 1, requested type "space"
  3799                           ; Number of cases is 3, Range of values is 1 to 3
  3800                           ; switch strategies available:
  3801                           ; Name         Instructions Cycles
  3802                           ; simple_byte           10     6 (average)
  3803                           ;	Chosen strategy is simple_byte
  3804  0006E6  0A01               	xorlw	1	; case 1
  3805  0006E8  B4D8               	btfsc	status,2,c
  3806  0006EA  D7F5               	goto	i2l2127
  3807  0006EC  0A03               	xorlw	3	; case 2
  3808  0006EE  B4D8               	btfsc	status,2,c
  3809  0006F0  D7F2               	goto	i2l2127
  3810  0006F2  0A01               	xorlw	1	; case 3
  3811  0006F4  B4D8               	btfsc	status,2,c
  3812  0006F6  D7F1               	goto	i2l2129
  3813  0006F8                     i2l2135:
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;main.c: 270: getNextPosition();
  3817  0006F8  ECE0  F004         	call	_getNextPosition	;wreg free
  3818                           
  3819                           ;main.c: 271: return;
  3820  0006FC  0012               	return	
  3821  0006FE                     i2l2139:
  3822                           
  3823                           ;main.c: 272: }
  3824                           ;main.c: 274: _p2.lives--;
  3825  0006FE  0100               	movlb	0	; () banked
  3826  000700  07FA               	decf	(__p2+4)& (0+255),f,b
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;main.c: 275: startPong();
  3830  000702  ECDA  F006         	call	i2_startPong	;wreg free
  3831                           
  3832                           ;main.c: 276: }
  3833  000706  0012               	return	
  3834  000708                     i2l2143:
  3835                           
  3836                           ;main.c: 277: else if(_nextPos[1] < 0 || _nextPos[1] > 7)
  3837  000708  0E07               	movlw	7
  3838  00070A  0100               	movlb	0	; () banked
  3839  00070C  65FF               	cpfsgt	(__nextPos+1)& (0+255),b
  3840  00070E  0012               	return	
  3841  000710  D00A               	goto	i2l2157
  3842  000712                     i2l2147:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;main.c: 282: _ball.bDirection = 3;
  3846  000712  0E03               	movlw	3
  3847  000714  D005               	goto	L9
  3848  000716                     i2l2149:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;main.c: 285: _ball.bDirection = 1;
  3852  000716  0E01               	movlw	1
  3853  000718  D003               	goto	L9
  3854  00071A                     i2l2151:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;main.c: 288: _ball.bDirection = 6;
  3858  00071A  0E06               	movlw	6
  3859  00071C  D001               	goto	L9
  3860  00071E                     i2l2153:
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;main.c: 291: _ball.bDirection = 4;
  3864  00071E  0E04               	movlw	4
  3865  000720                     L9:
  3866  000720  0100               	movlb	0	; () banked
  3867  000722  6FFD               	movwf	(__ball+2)& (0+255),b
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;main.c: 293: }
  3871                           
  3872                           ;main.c: 292: break;
  3873  000724  D00E               	goto	i2l2159
  3874  000726                     i2l2157:
  3875                           
  3876                           ; BSR set to: 0
  3877  000726  0100               	movlb	0	; () banked
  3878  000728  51FD               	movf	(__ball+2)& (0+255),w,b
  3879                           
  3880                           ; Switch size 1, requested type "space"
  3881                           ; Number of cases is 4, Range of values is 1 to 6
  3882                           ; switch strategies available:
  3883                           ; Name         Instructions Cycles
  3884                           ; simple_byte           13     7 (average)
  3885                           ;	Chosen strategy is simple_byte
  3886  00072A  0A01               	xorlw	1	; case 1
  3887  00072C  B4D8               	btfsc	status,2,c
  3888  00072E  D7F1               	goto	i2l2147
  3889  000730  0A02               	xorlw	2	; case 3
  3890  000732  B4D8               	btfsc	status,2,c
  3891  000734  D7F0               	goto	i2l2149
  3892  000736  0A07               	xorlw	7	; case 4
  3893  000738  B4D8               	btfsc	status,2,c
  3894  00073A  D7EF               	goto	i2l2151
  3895  00073C  0A02               	xorlw	2	; case 6
  3896  00073E  B4D8               	btfsc	status,2,c
  3897  000740  D7EE               	goto	i2l2153
  3898  000742                     i2l2159:
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;main.c: 294: getNextPosition();
  3902  000742  ECE0  F004         	call	_getNextPosition	;wreg free
  3903                           
  3904                           ;main.c: 295: return;
  3905  000746  0012               	return	
  3906  000748                     __end_of_checkNextPosition:
  3907                           	opt stack 0
  3908                           pclatu	equ	0xFFB
  3909                           pclath	equ	0xFFA
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           prodh	equ	0xFF4
  3915                           prodl	equ	0xFF3
  3916                           intcon	equ	0xFF2
  3917                           postinc0	equ	0xFEE
  3918                           fsr0h	equ	0xFEA
  3919                           fsr0l	equ	0xFE9
  3920                           wreg	equ	0xFE8
  3921                           postdec1	equ	0xFE5
  3922                           plusw1	equ	0xFE3
  3923                           fsr1h	equ	0xFE2
  3924                           fsr1l	equ	0xFE1
  3925                           indf2	equ	0xFDF
  3926                           postinc2	equ	0xFDE
  3927                           plusw2	equ	0xFDB
  3928                           fsr2h	equ	0xFDA
  3929                           fsr2l	equ	0xFD9
  3930                           status	equ	0xFD8
  3931                           
  3932 ;; *************** function i2_startPong *****************
  3933 ;; Defined at:
  3934 ;;		line 58 in file "main.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3948 ;;      Params:         0       0       0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    2
  3955 ;; This function calls:
  3956 ;;		i2_delaySeconds
  3957 ;;		i2_drawSymbol
  3958 ;;		i2_turnAllOff
  3959 ;; This function is called by:
  3960 ;;		_checkNextPosition
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text18
  3965  000DB4                     __ptext18:
  3966                           	opt stack 0
  3967  000DB4                     i2_startPong:
  3968                           	opt stack 22
  3969                           
  3970                           ;main.c: 61: turnAllOff();
  3971                           
  3972                           ;incstack = 0
  3973  000DB4  EC25  F007         	call	i2_turnAllOff	;wreg free
  3974                           
  3975                           ;main.c: 62: drawSymbol(_p1.lives, 0);
  3976  000DB8  0E00               	movlw	0
  3977  000DBA  6E05               	movwf	i2drawSymbol@offSetX,c
  3978  000DBC  0100               	movlb	0	; () banked
  3979  000DBE  51F5               	movf	(__p1+4)& (0+255),w,b
  3980  000DC0  EC8E  F001         	call	i2_drawSymbol
  3981                           
  3982                           ;main.c: 63: drawSymbol(_p2.lives, 8);
  3983  000DC4  0E08               	movlw	8
  3984  000DC6  6E05               	movwf	i2drawSymbol@offSetX,c
  3985  000DC8  0100               	movlb	0	; () banked
  3986  000DCA  51FA               	movf	(__p2+4)& (0+255),w,b
  3987  000DCC  EC8E  F001         	call	i2_drawSymbol
  3988  000DD0                     i2l1929:
  3989  000DD0  0E00               	movlw	0
  3990  000DD2  6E08               	movwf	i2delaySeconds@numberOfSeconds+1,c
  3991  000DD4  0E02               	movlw	2
  3992  000DD6  6E07               	movwf	i2delaySeconds@numberOfSeconds,c
  3993  000DD8  EC00  F007         	call	i2_delaySeconds	;wreg free
  3994  000DDC  A0D8               	btfss	status,0,c
  3995  000DDE  D7F8               	goto	i2l1929
  3996                           
  3997                           ;main.c: 65: turnAllOff();
  3998  000DE0  EC25  F007         	call	i2_turnAllOff	;wreg free
  3999                           
  4000                           ;main.c: 70: _ball.bDirection = 3;
  4001  000DE4  0E03               	movlw	3
  4002  000DE6  0100               	movlb	0	; () banked
  4003  000DE8  6FFD               	movwf	(__ball+2)& (0+255),b
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;main.c: 72: _ball.bPos[0] = 2;
  4007  000DEA  0E02               	movlw	2
  4008  000DEC  0100               	movlb	0	; () banked
  4009  000DEE  6FFB               	movwf	__ball& (0+255),b
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;main.c: 74: _ball.bPos[1] = 4;
  4013  000DF0  0E04               	movlw	4
  4014  000DF2  0100               	movlb	0	; () banked
  4015  000DF4  6FFC               	movwf	(__ball+1)& (0+255),b
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;main.c: 77: _nextPos[0] = _ball.bPos[0];
  4019  000DF6  C0FB  F0FE         	movff	__ball,__nextPos
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;main.c: 78: _nextPos[1] = _ball.bPos[1];
  4023  000DFA  C0FC  F0FF         	movff	__ball+1,__nextPos+1
  4024                           
  4025                           ; BSR set to: 0
  4026  000DFE  0012               	return		;funcret
  4027  000E00                     __end_ofi2_startPong:
  4028                           	opt stack 0
  4029                           pclatu	equ	0xFFB
  4030                           pclath	equ	0xFFA
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon	equ	0xFF2
  4038                           postinc0	equ	0xFEE
  4039                           fsr0h	equ	0xFEA
  4040                           fsr0l	equ	0xFE9
  4041                           wreg	equ	0xFE8
  4042                           postdec1	equ	0xFE5
  4043                           plusw1	equ	0xFE3
  4044                           fsr1h	equ	0xFE2
  4045                           fsr1l	equ	0xFE1
  4046                           indf2	equ	0xFDF
  4047                           postinc2	equ	0xFDE
  4048                           plusw2	equ	0xFDB
  4049                           fsr2h	equ	0xFDA
  4050                           fsr2l	equ	0xFD9
  4051                           status	equ	0xFD8
  4052                           
  4053 ;; *************** function i2_drawSymbol *****************
  4054 ;; Defined at:
  4055 ;;		line 89 in file "Source/LED-API.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  chosenSymbol    1    wreg     unsigned char 
  4058 ;;  offSetX         1    4[COMRAM] unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  chosenSymbol    1  212[BANK1 ] unsigned char 
  4061 ;;  drawSymbol     68   68[BANK1 ] unsigned char [2][34]
  4062 ;;  drawSymbol     68    0[BANK1 ] unsigned char [2][34]
  4063 ;;  drawSymbol     30   35[COMRAM] unsigned char [2][15]
  4064 ;;  drawSymbol     30    5[COMRAM] unsigned char [2][15]
  4065 ;;  drawSymbol     28  136[BANK1 ] unsigned char [2][14]
  4066 ;;  drawSymbol     24  188[BANK1 ] unsigned char [2][12]
  4067 ;;  drawSymbol     24  164[BANK1 ] unsigned char [2][12]
  4068 ;;  drawSymbol      1  219[BANK1 ] unsigned char 
  4069 ;;  drawSymbol      1  218[BANK1 ] unsigned char 
  4070 ;;  drawSymbol      1  217[BANK1 ] unsigned char 
  4071 ;;  drawSymbol      1  216[BANK1 ] unsigned char 
  4072 ;;  drawSymbol      1  215[BANK1 ] unsigned char 
  4073 ;;  drawSymbol      1  214[BANK1 ] unsigned char 
  4074 ;;  drawSymbol      1  213[BANK1 ] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4084 ;;      Params:         1       0       0       0       0       0       0
  4085 ;;      Locals:        60       0     220       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0
  4087 ;;      Totals:        61       0     220       0       0       0       0
  4088 ;;Total ram usage:      281 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    1
  4091 ;; This function calls:
  4092 ;;		i2_on
  4093 ;;		i2_turnAllOff
  4094 ;; This function is called by:
  4095 ;;		i2_startPong
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text19
  4100  00031C                     __ptext19:
  4101                           	opt stack 0
  4102  00031C                     i2_drawSymbol:
  4103                           	opt stack 22
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;incstack = 0
  4107                           ;i2drawSymbol@chosenSymbol stored from wreg
  4108  00031C  0101               	movlb	1	; () banked
  4109  00031E  6FD4               	movwf	i2drawSymbol@chosenSymbol& (0+255),b
  4110                           
  4111                           ;LED-API.c: 91: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  4112  000320  EE20  F0C1         	lfsr	2,drawSymbol@F3226
  4113  000324  EE11  F0A4         	lfsr	1,i2drawSymbol@symbolOne
  4114  000328  0E17               	movlw	23
  4115  00032A                     i2u130_41:
  4116  00032A  CFDB FFE3          	movff	plusw2,plusw1
  4117  00032E  06E8               	decf	wreg,f,c
  4118  000330  E2FC               	bc	i2u130_41
  4119                           
  4120                           ;LED-API.c: 92: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  4121  000332  EE22  F0DC         	lfsr	2,drawSymbol@F3229
  4122  000336  EE11  F088         	lfsr	1,i2drawSymbol@symbolTwo
  4123  00033A  0E1B               	movlw	27
  4124  00033C                     i2u131_41:
  4125  00033C  CFDB FFE3          	movff	plusw2,plusw1
  4126  000340  06E8               	decf	wreg,f,c
  4127  000342  E2FC               	bc	i2u131_41
  4128                           
  4129                           ;LED-API.c: 93: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  4130  000344  EE20  F0D9         	lfsr	2,drawSymbol@F3232
  4131  000348  EE11  F0BC         	lfsr	1,i2drawSymbol@symbolThree
  4132  00034C  0E17               	movlw	23
  4133  00034E                     i2u132_41:
  4134  00034E  CFDB FFE3          	movff	plusw2,plusw1
  4135  000352  06E8               	decf	wreg,f,c
  4136  000354  E2FC               	bc	i2u132_41
  4137                           
  4138                           ;LED-API.c: 95: char symbolPlay[34][2] = {
  4139                           ;LED-API.c: 96: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  4140                           ;LED-API.c: 97: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  4141                           ;LED-API.c: 98: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  4142                           ;LED-API.c: 99: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  4143  000356  EE23  F080         	lfsr	2,drawSymbol@F3235
  4144  00035A  EE11  F000         	lfsr	1,i2drawSymbol@symbolPlay
  4145  00035E  0E43               	movlw	67
  4146  000360                     i2u133_41:
  4147  000360  CFDB FFE3          	movff	plusw2,plusw1
  4148  000364  06E8               	decf	wreg,f,c
  4149  000366  E2FC               	bc	i2u133_41
  4150                           
  4151                           ;LED-API.c: 101: char symbolGo[34][2] = {
  4152                           ;LED-API.c: 102: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0}
      +                          ,{5,0},{6,1},{5,2},{4,2},
  4153                           ;LED-API.c: 103: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},
      +                          {13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  4154  000368  EE24  F000         	lfsr	2,drawSymbol@F3238
  4155  00036C  EE11  F044         	lfsr	1,i2drawSymbol@symbolGo
  4156  000370  0E43               	movlw	67
  4157  000372                     i2u134_41:
  4158  000372  CFDB FFE3          	movff	plusw2,plusw1
  4159  000376  06E8               	decf	wreg,f,c
  4160  000378  E2FC               	bc	i2u134_41
  4161                           
  4162                           ;LED-API.c: 105: char symbolArrowRight[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3},{6,
      +                          3},{7,3},{8,3},{7,4},{6,5},{5,7},{6,2},{5,1},{4,0}};
  4163  00037A  EE20  F053         	lfsr	2,drawSymbol@F3241
  4164  00037E  EE10  F006         	lfsr	1,i2drawSymbol@symbolArrowRight
  4165  000382  0E1D               	movlw	29
  4166  000384                     i2u135_41:
  4167  000384  CFDB FFE3          	movff	plusw2,plusw1
  4168  000388  06E8               	decf	wreg,f,c
  4169  00038A  E2FC               	bc	i2u135_41
  4170                           
  4171                           ;LED-API.c: 106: char symbolArrowLeft[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3}, {6,
      +                          3},{7,3},{8,3}, {1,4},{2,5},{3,6},{1,2},{2,1},{3,0}};
  4172  00038C  EE21  F0DC         	lfsr	2,drawSymbol@F3244
  4173  000390  EE10  F024         	lfsr	1,i2drawSymbol@symbolArrowLeft
  4174  000394  0E1D               	movlw	29
  4175  000396                     i2u136_41:
  4176  000396  CFDB FFE3          	movff	plusw2,plusw1
  4177  00039A  06E8               	decf	wreg,f,c
  4178  00039C  E2FC               	bc	i2u136_41
  4179                           
  4180                           ;LED-API.c: 108: switch(chosenSymbol)
  4181  00039E  D119               	goto	i2l1851
  4182  0003A0                     i2l1757:
  4183                           
  4184                           ;LED-API.c: 113: for(unsigned char i = 0; i < 12; i++)
  4185  0003A0  0E00               	movlw	0
  4186  0003A2  0101               	movlb	1	; () banked
  4187  0003A4  6FD5               	movwf	i2drawSymbol@i& (0+255),b
  4188  0003A6                     i2l1759:
  4189                           
  4190                           ; BSR set to: 1
  4191  0003A6  0E0B               	movlw	11
  4192  0003A8  0101               	movlb	1	; () banked
  4193  0003AA  65D5               	cpfsgt	i2drawSymbol@i& (0+255),b
  4194  0003AC  D001               	goto	i2l1763
  4195  0003AE  0012               	return	
  4196  0003B0                     i2l1763:
  4197                           
  4198                           ; BSR set to: 1
  4199                           ;LED-API.c: 114: {
  4200                           ;LED-API.c: 115: on(symbolOne[i][0] + offSetX, symbolOne[i][1]);
  4201  0003B0  0101               	movlb	1	; () banked
  4202  0003B2  51D5               	movf	i2drawSymbol@i& (0+255),w,b
  4203  0003B4  0D02               	mullw	2
  4204  0003B6  0E01               	movlw	1
  4205  0003B8  26F3               	addwf	prodl,f,c
  4206  0003BA  0E00               	movlw	0
  4207  0003BC  22F4               	addwfc	prodh,f,c
  4208  0003BE  0EA4               	movlw	low i2drawSymbol@symbolOne
  4209  0003C0  24F3               	addwf	prodl,w,c
  4210  0003C2  6ED9               	movwf	fsr2l,c
  4211  0003C4  0E01               	movlw	high i2drawSymbol@symbolOne
  4212  0003C6  20F4               	addwfc	prodh,w,c
  4213  0003C8  6EDA               	movwf	fsr2h,c
  4214  0003CA  50DF               	movf	indf2,w,c
  4215  0003CC  6E01               	movwf	i2on@row,c
  4216  0003CE  0101               	movlb	1	; () banked
  4217  0003D0  51D5               	movf	i2drawSymbol@i& (0+255),w,b
  4218  0003D2  0D02               	mullw	2
  4219  0003D4  0EA4               	movlw	low i2drawSymbol@symbolOne
  4220  0003D6  24F3               	addwf	prodl,w,c
  4221  0003D8  6ED9               	movwf	fsr2l,c
  4222  0003DA  0E01               	movlw	high i2drawSymbol@symbolOne
  4223  0003DC  20F4               	addwfc	prodh,w,c
  4224  0003DE  6EDA               	movwf	fsr2h,c
  4225  0003E0  50DF               	movf	indf2,w,c
  4226  0003E2  2405               	addwf	i2drawSymbol@offSetX,w,c
  4227  0003E4  ECAB  F007         	call	i2_on
  4228  0003E8  0101               	movlb	1	; () banked
  4229  0003EA  2BD5               	incf	i2drawSymbol@i& (0+255),f,b
  4230  0003EC  D7DC               	goto	i2l1759
  4231  0003EE                     i2l1769:
  4232                           
  4233                           ; BSR set to: 1
  4234                           ;LED-API.c: 121: for(unsigned char i = 0; i < 14; i++)
  4235  0003EE  0E00               	movlw	0
  4236  0003F0  0101               	movlb	1	; () banked
  4237  0003F2  6FD6               	movwf	i2drawSymbol@i_84& (0+255),b
  4238  0003F4                     i2l1771:
  4239                           
  4240                           ; BSR set to: 1
  4241  0003F4  0E0D               	movlw	13
  4242  0003F6  0101               	movlb	1	; () banked
  4243  0003F8  65D6               	cpfsgt	i2drawSymbol@i_84& (0+255),b
  4244  0003FA  D001               	goto	i2l1775
  4245  0003FC  0012               	return	
  4246  0003FE                     i2l1775:
  4247                           
  4248                           ; BSR set to: 1
  4249                           ;LED-API.c: 122: {
  4250                           ;LED-API.c: 123: on(symbolTwo[i][0] + offSetX, symbolTwo[i][1]);
  4251  0003FE  0101               	movlb	1	; () banked
  4252  000400  51D6               	movf	i2drawSymbol@i_84& (0+255),w,b
  4253  000402  0D02               	mullw	2
  4254  000404  0E01               	movlw	1
  4255  000406  26F3               	addwf	prodl,f,c
  4256  000408  0E00               	movlw	0
  4257  00040A  22F4               	addwfc	prodh,f,c
  4258  00040C  0E88               	movlw	low i2drawSymbol@symbolTwo
  4259  00040E  24F3               	addwf	prodl,w,c
  4260  000410  6ED9               	movwf	fsr2l,c
  4261  000412  0E01               	movlw	high i2drawSymbol@symbolTwo
  4262  000414  20F4               	addwfc	prodh,w,c
  4263  000416  6EDA               	movwf	fsr2h,c
  4264  000418  50DF               	movf	indf2,w,c
  4265  00041A  6E01               	movwf	i2on@row,c
  4266  00041C  0101               	movlb	1	; () banked
  4267  00041E  51D6               	movf	i2drawSymbol@i_84& (0+255),w,b
  4268  000420  0D02               	mullw	2
  4269  000422  0E88               	movlw	low i2drawSymbol@symbolTwo
  4270  000424  24F3               	addwf	prodl,w,c
  4271  000426  6ED9               	movwf	fsr2l,c
  4272  000428  0E01               	movlw	high i2drawSymbol@symbolTwo
  4273  00042A  20F4               	addwfc	prodh,w,c
  4274  00042C  6EDA               	movwf	fsr2h,c
  4275  00042E  50DF               	movf	indf2,w,c
  4276  000430  2405               	addwf	i2drawSymbol@offSetX,w,c
  4277  000432  ECAB  F007         	call	i2_on
  4278  000436  0101               	movlb	1	; () banked
  4279  000438  2BD6               	incf	i2drawSymbol@i_84& (0+255),f,b
  4280  00043A  D7DC               	goto	i2l1771
  4281  00043C                     i2l1781:
  4282                           
  4283                           ; BSR set to: 1
  4284                           ;LED-API.c: 129: for(unsigned char i = 0; i < 12; i++)
  4285  00043C  0E00               	movlw	0
  4286  00043E  0101               	movlb	1	; () banked
  4287  000440  6FD7               	movwf	i2drawSymbol@i_85& (0+255),b
  4288  000442                     i2l1783:
  4289                           
  4290                           ; BSR set to: 1
  4291  000442  0E0B               	movlw	11
  4292  000444  0101               	movlb	1	; () banked
  4293  000446  65D7               	cpfsgt	i2drawSymbol@i_85& (0+255),b
  4294  000448  D001               	goto	i2l1787
  4295  00044A  0012               	return	
  4296  00044C                     i2l1787:
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;LED-API.c: 130: {
  4300                           ;LED-API.c: 131: on(symbolThree[i][0] + offSetX, symbolThree[i][1]);
  4301  00044C  0101               	movlb	1	; () banked
  4302  00044E  51D7               	movf	i2drawSymbol@i_85& (0+255),w,b
  4303  000450  0D02               	mullw	2
  4304  000452  0E01               	movlw	1
  4305  000454  26F3               	addwf	prodl,f,c
  4306  000456  0E00               	movlw	0
  4307  000458  22F4               	addwfc	prodh,f,c
  4308  00045A  0EBC               	movlw	low i2drawSymbol@symbolThree
  4309  00045C  24F3               	addwf	prodl,w,c
  4310  00045E  6ED9               	movwf	fsr2l,c
  4311  000460  0E01               	movlw	high i2drawSymbol@symbolThree
  4312  000462  20F4               	addwfc	prodh,w,c
  4313  000464  6EDA               	movwf	fsr2h,c
  4314  000466  50DF               	movf	indf2,w,c
  4315  000468  6E01               	movwf	i2on@row,c
  4316  00046A  0101               	movlb	1	; () banked
  4317  00046C  51D7               	movf	i2drawSymbol@i_85& (0+255),w,b
  4318  00046E  0D02               	mullw	2
  4319  000470  0EBC               	movlw	low i2drawSymbol@symbolThree
  4320  000472  24F3               	addwf	prodl,w,c
  4321  000474  6ED9               	movwf	fsr2l,c
  4322  000476  0E01               	movlw	high i2drawSymbol@symbolThree
  4323  000478  20F4               	addwfc	prodh,w,c
  4324  00047A  6EDA               	movwf	fsr2h,c
  4325  00047C  50DF               	movf	indf2,w,c
  4326  00047E  2405               	addwf	i2drawSymbol@offSetX,w,c
  4327  000480  ECAB  F007         	call	i2_on
  4328  000484  0101               	movlb	1	; () banked
  4329  000486  2BD7               	incf	i2drawSymbol@i_85& (0+255),f,b
  4330  000488  D7DC               	goto	i2l1783
  4331  00048A                     i2l1793:
  4332                           
  4333                           ; BSR set to: 1
  4334                           ;LED-API.c: 137: turnAllOff();
  4335  00048A  EC25  F007         	call	i2_turnAllOff	;wreg free
  4336                           
  4337                           ;LED-API.c: 138: for(unsigned char i = 0; i < 34; i++)
  4338  00048E  0E00               	movlw	0
  4339  000490  0101               	movlb	1	; () banked
  4340  000492  6FD8               	movwf	i2drawSymbol@i_86& (0+255),b
  4341  000494                     i2l1797:
  4342                           
  4343                           ; BSR set to: 1
  4344  000494  0E21               	movlw	33
  4345  000496  0101               	movlb	1	; () banked
  4346  000498  65D8               	cpfsgt	i2drawSymbol@i_86& (0+255),b
  4347  00049A  D001               	goto	i2l1801
  4348  00049C  0012               	return	
  4349  00049E                     i2l1801:
  4350                           
  4351                           ; BSR set to: 1
  4352                           ;LED-API.c: 139: {
  4353                           ;LED-API.c: 140: on(symbolPlay[i][0] + offSetX, symbolPlay[i][1]);
  4354  00049E  0101               	movlb	1	; () banked
  4355  0004A0  51D8               	movf	i2drawSymbol@i_86& (0+255),w,b
  4356  0004A2  0D02               	mullw	2
  4357  0004A4  0E01               	movlw	1
  4358  0004A6  26F3               	addwf	prodl,f,c
  4359  0004A8  0E00               	movlw	0
  4360  0004AA  22F4               	addwfc	prodh,f,c
  4361  0004AC  0E00               	movlw	low i2drawSymbol@symbolPlay
  4362  0004AE  24F3               	addwf	prodl,w,c
  4363  0004B0  6ED9               	movwf	fsr2l,c
  4364  0004B2  0E01               	movlw	high i2drawSymbol@symbolPlay
  4365  0004B4  20F4               	addwfc	prodh,w,c
  4366  0004B6  6EDA               	movwf	fsr2h,c
  4367  0004B8  50DF               	movf	indf2,w,c
  4368  0004BA  6E01               	movwf	i2on@row,c
  4369  0004BC  0101               	movlb	1	; () banked
  4370  0004BE  51D8               	movf	i2drawSymbol@i_86& (0+255),w,b
  4371  0004C0  0D02               	mullw	2
  4372  0004C2  0E00               	movlw	low i2drawSymbol@symbolPlay
  4373  0004C4  24F3               	addwf	prodl,w,c
  4374  0004C6  6ED9               	movwf	fsr2l,c
  4375  0004C8  0E01               	movlw	high i2drawSymbol@symbolPlay
  4376  0004CA  20F4               	addwfc	prodh,w,c
  4377  0004CC  6EDA               	movwf	fsr2h,c
  4378  0004CE  50DF               	movf	indf2,w,c
  4379  0004D0  2405               	addwf	i2drawSymbol@offSetX,w,c
  4380  0004D2  ECAB  F007         	call	i2_on
  4381  0004D6  0101               	movlb	1	; () banked
  4382  0004D8  2BD8               	incf	i2drawSymbol@i_86& (0+255),f,b
  4383  0004DA  D7DC               	goto	i2l1797
  4384  0004DC                     i2l1807:
  4385                           
  4386                           ; BSR set to: 1
  4387                           ;LED-API.c: 146: turnAllOff();
  4388  0004DC  EC25  F007         	call	i2_turnAllOff	;wreg free
  4389                           
  4390                           ;LED-API.c: 147: for(unsigned char i = 0; i < 34; i++)
  4391  0004E0  0E00               	movlw	0
  4392  0004E2  0101               	movlb	1	; () banked
  4393  0004E4  6FD9               	movwf	i2drawSymbol@i_87& (0+255),b
  4394  0004E6                     i2l1811:
  4395                           
  4396                           ; BSR set to: 1
  4397  0004E6  0E21               	movlw	33
  4398  0004E8  0101               	movlb	1	; () banked
  4399  0004EA  65D9               	cpfsgt	i2drawSymbol@i_87& (0+255),b
  4400  0004EC  D001               	goto	i2l1815
  4401  0004EE  0012               	return	
  4402  0004F0                     i2l1815:
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;LED-API.c: 148: {
  4406                           ;LED-API.c: 149: on(symbolGo[i][0] + offSetX, symbolGo[i][1]);
  4407  0004F0  0101               	movlb	1	; () banked
  4408  0004F2  51D9               	movf	i2drawSymbol@i_87& (0+255),w,b
  4409  0004F4  0D02               	mullw	2
  4410  0004F6  0E01               	movlw	1
  4411  0004F8  26F3               	addwf	prodl,f,c
  4412  0004FA  0E00               	movlw	0
  4413  0004FC  22F4               	addwfc	prodh,f,c
  4414  0004FE  0E44               	movlw	low i2drawSymbol@symbolGo
  4415  000500  24F3               	addwf	prodl,w,c
  4416  000502  6ED9               	movwf	fsr2l,c
  4417  000504  0E01               	movlw	high i2drawSymbol@symbolGo
  4418  000506  20F4               	addwfc	prodh,w,c
  4419  000508  6EDA               	movwf	fsr2h,c
  4420  00050A  50DF               	movf	indf2,w,c
  4421  00050C  6E01               	movwf	i2on@row,c
  4422  00050E  0101               	movlb	1	; () banked
  4423  000510  51D9               	movf	i2drawSymbol@i_87& (0+255),w,b
  4424  000512  0D02               	mullw	2
  4425  000514  0E44               	movlw	low i2drawSymbol@symbolGo
  4426  000516  24F3               	addwf	prodl,w,c
  4427  000518  6ED9               	movwf	fsr2l,c
  4428  00051A  0E01               	movlw	high i2drawSymbol@symbolGo
  4429  00051C  20F4               	addwfc	prodh,w,c
  4430  00051E  6EDA               	movwf	fsr2h,c
  4431  000520  50DF               	movf	indf2,w,c
  4432  000522  2405               	addwf	i2drawSymbol@offSetX,w,c
  4433  000524  ECAB  F007         	call	i2_on
  4434  000528  0101               	movlb	1	; () banked
  4435  00052A  2BD9               	incf	i2drawSymbol@i_87& (0+255),f,b
  4436  00052C  D7DC               	goto	i2l1811
  4437  00052E                     i2l1821:
  4438                           
  4439                           ; BSR set to: 1
  4440                           ;LED-API.c: 153: turnAllOff();
  4441  00052E  EC25  F007         	call	i2_turnAllOff	;wreg free
  4442                           
  4443                           ;LED-API.c: 154: for(unsigned char i = 0; i < 15; i++)
  4444  000532  0E00               	movlw	0
  4445  000534  0101               	movlb	1	; () banked
  4446  000536  6FDA               	movwf	i2drawSymbol@i_88& (0+255),b
  4447  000538                     i2l1825:
  4448                           
  4449                           ; BSR set to: 1
  4450  000538  0E0E               	movlw	14
  4451  00053A  0101               	movlb	1	; () banked
  4452  00053C  65DA               	cpfsgt	i2drawSymbol@i_88& (0+255),b
  4453  00053E  D001               	goto	i2l1829
  4454  000540  0012               	return	
  4455  000542                     i2l1829:
  4456                           
  4457                           ; BSR set to: 1
  4458                           ;LED-API.c: 155: {
  4459                           ;LED-API.c: 156: on(symbolGo[i][0] + offSetX, symbolGo[i][1]);
  4460  000542  0101               	movlb	1	; () banked
  4461  000544  51DA               	movf	i2drawSymbol@i_88& (0+255),w,b
  4462  000546  0D02               	mullw	2
  4463  000548  0E01               	movlw	1
  4464  00054A  26F3               	addwf	prodl,f,c
  4465  00054C  0E00               	movlw	0
  4466  00054E  22F4               	addwfc	prodh,f,c
  4467  000550  0E44               	movlw	low i2drawSymbol@symbolGo
  4468  000552  24F3               	addwf	prodl,w,c
  4469  000554  6ED9               	movwf	fsr2l,c
  4470  000556  0E01               	movlw	high i2drawSymbol@symbolGo
  4471  000558  20F4               	addwfc	prodh,w,c
  4472  00055A  6EDA               	movwf	fsr2h,c
  4473  00055C  50DF               	movf	indf2,w,c
  4474  00055E  6E01               	movwf	i2on@row,c
  4475  000560  0101               	movlb	1	; () banked
  4476  000562  51DA               	movf	i2drawSymbol@i_88& (0+255),w,b
  4477  000564  0D02               	mullw	2
  4478  000566  0E44               	movlw	low i2drawSymbol@symbolGo
  4479  000568  24F3               	addwf	prodl,w,c
  4480  00056A  6ED9               	movwf	fsr2l,c
  4481  00056C  0E01               	movlw	high i2drawSymbol@symbolGo
  4482  00056E  20F4               	addwfc	prodh,w,c
  4483  000570  6EDA               	movwf	fsr2h,c
  4484  000572  50DF               	movf	indf2,w,c
  4485  000574  2405               	addwf	i2drawSymbol@offSetX,w,c
  4486  000576  ECAB  F007         	call	i2_on
  4487  00057A  0101               	movlb	1	; () banked
  4488  00057C  2BDA               	incf	i2drawSymbol@i_88& (0+255),f,b
  4489  00057E  D7DC               	goto	i2l1825
  4490  000580                     i2l1835:
  4491                           
  4492                           ; BSR set to: 1
  4493                           ;LED-API.c: 160: turnAllOff();
  4494  000580  EC25  F007         	call	i2_turnAllOff	;wreg free
  4495                           
  4496                           ;LED-API.c: 161: for(unsigned char i = 0; i < 15; i++)
  4497  000584  0E00               	movlw	0
  4498  000586  0101               	movlb	1	; () banked
  4499  000588  6FDB               	movwf	i2drawSymbol@i_89& (0+255),b
  4500  00058A                     i2l1839:
  4501                           
  4502                           ; BSR set to: 1
  4503  00058A  0E0E               	movlw	14
  4504  00058C  0101               	movlb	1	; () banked
  4505  00058E  65DB               	cpfsgt	i2drawSymbol@i_89& (0+255),b
  4506  000590  D001               	goto	i2l1843
  4507  000592  0012               	return	
  4508  000594                     i2l1843:
  4509                           
  4510                           ; BSR set to: 1
  4511                           ;LED-API.c: 162: {
  4512                           ;LED-API.c: 163: on(symbolGo[i][0] + offSetX, symbolGo[i][1]);
  4513  000594  0101               	movlb	1	; () banked
  4514  000596  51DB               	movf	i2drawSymbol@i_89& (0+255),w,b
  4515  000598  0D02               	mullw	2
  4516  00059A  0E01               	movlw	1
  4517  00059C  26F3               	addwf	prodl,f,c
  4518  00059E  0E00               	movlw	0
  4519  0005A0  22F4               	addwfc	prodh,f,c
  4520  0005A2  0E44               	movlw	low i2drawSymbol@symbolGo
  4521  0005A4  24F3               	addwf	prodl,w,c
  4522  0005A6  6ED9               	movwf	fsr2l,c
  4523  0005A8  0E01               	movlw	high i2drawSymbol@symbolGo
  4524  0005AA  20F4               	addwfc	prodh,w,c
  4525  0005AC  6EDA               	movwf	fsr2h,c
  4526  0005AE  50DF               	movf	indf2,w,c
  4527  0005B0  6E01               	movwf	i2on@row,c
  4528  0005B2  0101               	movlb	1	; () banked
  4529  0005B4  51DB               	movf	i2drawSymbol@i_89& (0+255),w,b
  4530  0005B6  0D02               	mullw	2
  4531  0005B8  0E44               	movlw	low i2drawSymbol@symbolGo
  4532  0005BA  24F3               	addwf	prodl,w,c
  4533  0005BC  6ED9               	movwf	fsr2l,c
  4534  0005BE  0E01               	movlw	high i2drawSymbol@symbolGo
  4535  0005C0  20F4               	addwfc	prodh,w,c
  4536  0005C2  6EDA               	movwf	fsr2h,c
  4537  0005C4  50DF               	movf	indf2,w,c
  4538  0005C6  2405               	addwf	i2drawSymbol@offSetX,w,c
  4539  0005C8  ECAB  F007         	call	i2_on
  4540  0005CC  0101               	movlb	1	; () banked
  4541  0005CE  2BDB               	incf	i2drawSymbol@i_89& (0+255),f,b
  4542  0005D0  D7DC               	goto	i2l1839
  4543  0005D2                     i2l1851:
  4544  0005D2  0101               	movlb	1	; () banked
  4545  0005D4  51D4               	movf	i2drawSymbol@chosenSymbol& (0+255),w,b
  4546                           
  4547                           ; Switch size 1, requested type "space"
  4548                           ; Number of cases is 7, Range of values is 1 to 7
  4549                           ; switch strategies available:
  4550                           ; Name         Instructions Cycles
  4551                           ; simple_byte           22    12 (average)
  4552                           ;	Chosen strategy is simple_byte
  4553  0005D6  0A01               	xorlw	1	; case 1
  4554  0005D8  B4D8               	btfsc	status,2,c
  4555  0005DA  D6E2               	goto	i2l1757
  4556  0005DC  0A03               	xorlw	3	; case 2
  4557  0005DE  B4D8               	btfsc	status,2,c
  4558  0005E0  D706               	goto	i2l1769
  4559  0005E2  0A01               	xorlw	1	; case 3
  4560  0005E4  B4D8               	btfsc	status,2,c
  4561  0005E6  D72A               	goto	i2l1781
  4562  0005E8  0A07               	xorlw	7	; case 4
  4563  0005EA  B4D8               	btfsc	status,2,c
  4564  0005EC  D74E               	goto	i2l1793
  4565  0005EE  0A01               	xorlw	1	; case 5
  4566  0005F0  B4D8               	btfsc	status,2,c
  4567  0005F2  D774               	goto	i2l1807
  4568  0005F4  0A03               	xorlw	3	; case 6
  4569  0005F6  B4D8               	btfsc	status,2,c
  4570  0005F8  D79A               	goto	i2l1821
  4571  0005FA  0A01               	xorlw	1	; case 7
  4572  0005FC  A4D8               	btfss	status,2,c
  4573  0005FE  0012               	return	
  4574  000600  D7BF               	goto	i2l1835
  4575  000602                     __end_ofi2_drawSymbol:
  4576                           	opt stack 0
  4577                           pclatu	equ	0xFFB
  4578                           pclath	equ	0xFFA
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           prodh	equ	0xFF4
  4584                           prodl	equ	0xFF3
  4585                           intcon	equ	0xFF2
  4586                           postinc0	equ	0xFEE
  4587                           fsr0h	equ	0xFEA
  4588                           fsr0l	equ	0xFE9
  4589                           wreg	equ	0xFE8
  4590                           postdec1	equ	0xFE5
  4591                           plusw1	equ	0xFE3
  4592                           fsr1h	equ	0xFE2
  4593                           fsr1l	equ	0xFE1
  4594                           indf2	equ	0xFDF
  4595                           postinc2	equ	0xFDE
  4596                           plusw2	equ	0xFDB
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function i2_turnAllOff *****************
  4602 ;; Defined at:
  4603 ;;		line 169 in file "Source/LED-API.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  turnAllOff      1    3[COMRAM] unsigned char 
  4608 ;;  turnAllOff      1    2[COMRAM] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4618 ;;      Params:         0       0       0       0       0       0       0
  4619 ;;      Locals:         2       0       0       0       0       0       0
  4620 ;;      Temps:          2       0       0       0       0       0       0
  4621 ;;      Totals:         4       0       0       0       0       0       0
  4622 ;;Total ram usage:        4 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		i2_drawSymbol
  4628 ;;		i2_startPong
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text20
  4633  000E4A                     __ptext20:
  4634                           	opt stack 0
  4635  000E4A                     i2_turnAllOff:
  4636                           	opt stack 23
  4637                           
  4638                           ;LED-API.c: 172: for (unsigned char i = 0; i < 8; i++) {
  4639                           
  4640                           ; BSR set to: 1
  4641                           ;incstack = 0
  4642  000E4A  0E00               	movlw	0
  4643  000E4C  6E03               	movwf	i2turnAllOff@i,c
  4644  000E4E                     i2l1619:
  4645  000E4E  0E07               	movlw	7
  4646  000E50  6403               	cpfsgt	i2turnAllOff@i,c
  4647  000E52  D001               	goto	i2l1623
  4648  000E54  0012               	return	
  4649  000E56                     i2l1623:
  4650                           
  4651                           ;LED-API.c: 173: for (unsigned char j = 0; j < 16; j++) {
  4652  000E56  0E00               	movlw	0
  4653  000E58  6E04               	movwf	i2turnAllOff@j,c
  4654  000E5A                     i2l1625:
  4655  000E5A  0E0F               	movlw	15
  4656  000E5C  6404               	cpfsgt	i2turnAllOff@j,c
  4657  000E5E  D001               	goto	i2l1629
  4658  000E60  D016               	goto	i2l1635
  4659  000E62                     i2l1629:
  4660                           
  4661                           ;LED-API.c: 174: pixels[i][j] = 0;
  4662  000E62  5003               	movf	i2turnAllOff@i,w,c
  4663  000E64  0D10               	mullw	16
  4664  000E66  0E00               	movlw	low _pixels
  4665  000E68  6E01               	movwf	??i2_turnAllOff& (0+255),c
  4666  000E6A  0E03               	movlw	high _pixels
  4667  000E6C  6E02               	movwf	(??i2_turnAllOff+1)& (0+255),c
  4668  000E6E  50F3               	movf	prodl,w,c
  4669  000E70  2601               	addwf	??i2_turnAllOff,f,c
  4670  000E72  50F4               	movf	prodh,w,c
  4671  000E74  2202               	addwfc	??i2_turnAllOff+1,f,c
  4672  000E76  5004               	movf	i2turnAllOff@j,w,c
  4673  000E78  0D01               	mullw	1
  4674  000E7A  50F3               	movf	prodl,w,c
  4675  000E7C  2401               	addwf	??i2_turnAllOff,w,c
  4676  000E7E  6ED9               	movwf	fsr2l,c
  4677  000E80  50F4               	movf	prodh,w,c
  4678  000E82  2002               	addwfc	??i2_turnAllOff+1,w,c
  4679  000E84  6EDA               	movwf	fsr2h,c
  4680  000E86  0E00               	movlw	0
  4681  000E88  6EDF               	movwf	indf2,c
  4682  000E8A  2A04               	incf	i2turnAllOff@j,f,c
  4683  000E8C  D7E6               	goto	i2l1625
  4684  000E8E                     i2l1635:
  4685  000E8E  2A03               	incf	i2turnAllOff@i,f,c
  4686  000E90  D7DE               	goto	i2l1619
  4687  000E92                     __end_ofi2_turnAllOff:
  4688                           	opt stack 0
  4689                           pclatu	equ	0xFFB
  4690                           pclath	equ	0xFFA
  4691                           tblptru	equ	0xFF8
  4692                           tblptrh	equ	0xFF7
  4693                           tblptrl	equ	0xFF6
  4694                           tablat	equ	0xFF5
  4695                           prodh	equ	0xFF4
  4696                           prodl	equ	0xFF3
  4697                           intcon	equ	0xFF2
  4698                           postinc0	equ	0xFEE
  4699                           fsr0h	equ	0xFEA
  4700                           fsr0l	equ	0xFE9
  4701                           wreg	equ	0xFE8
  4702                           postdec1	equ	0xFE5
  4703                           plusw1	equ	0xFE3
  4704                           fsr1h	equ	0xFE2
  4705                           fsr1l	equ	0xFE1
  4706                           indf2	equ	0xFDF
  4707                           postinc2	equ	0xFDE
  4708                           plusw2	equ	0xFDB
  4709                           fsr2h	equ	0xFDA
  4710                           fsr2l	equ	0xFD9
  4711                           status	equ	0xFD8
  4712                           
  4713 ;; *************** function i2_on *****************
  4714 ;; Defined at:
  4715 ;;		line 47 in file "Source/LED-API.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  column          1    wreg     unsigned char 
  4718 ;;  row             1    0[COMRAM] unsigned char 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  column          1    3[COMRAM] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4730 ;;      Params:         1       0       0       0       0       0       0
  4731 ;;      Locals:         1       0       0       0       0       0       0
  4732 ;;      Temps:          2       0       0       0       0       0       0
  4733 ;;      Totals:         4       0       0       0       0       0       0
  4734 ;;Total ram usage:        4 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_writePong
  4740 ;;		i2_drawSymbol
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text21
  4745  000F56                     __ptext21:
  4746                           	opt stack 0
  4747  000F56                     i2_on:
  4748                           	opt stack 24
  4749                           
  4750                           ;incstack = 0
  4751                           ;i2on@column stored from wreg
  4752  000F56  6E04               	movwf	i2on@column,c
  4753                           
  4754                           ;LED-API.c: 49: if (row < 0 || row >= 16)
  4755  000F58  0E0F               	movlw	15
  4756  000F5A  6401               	cpfsgt	i2on@row,c
  4757  000F5C  D001               	goto	i2l1611
  4758  000F5E  0012               	return	
  4759  000F60                     i2l1611:
  4760                           
  4761                           ;LED-API.c: 51: if (column < 0 || column >= 8)
  4762  000F60  0E07               	movlw	7
  4763  000F62  6404               	cpfsgt	i2on@column,c
  4764  000F64  D001               	goto	i2l1615
  4765  000F66  0012               	return	
  4766  000F68                     i2l1615:
  4767                           
  4768                           ;LED-API.c: 54: pixels[column][row] = 1;
  4769  000F68  5004               	movf	i2on@column,w,c
  4770  000F6A  0D10               	mullw	16
  4771  000F6C  0E00               	movlw	low _pixels
  4772  000F6E  6E02               	movwf	??i2_on& (0+255),c
  4773  000F70  0E03               	movlw	high _pixels
  4774  000F72  6E03               	movwf	(??i2_on+1)& (0+255),c
  4775  000F74  50F3               	movf	prodl,w,c
  4776  000F76  2602               	addwf	??i2_on,f,c
  4777  000F78  50F4               	movf	prodh,w,c
  4778  000F7A  2203               	addwfc	??i2_on+1,f,c
  4779  000F7C  5001               	movf	i2on@row,w,c
  4780  000F7E  0D01               	mullw	1
  4781  000F80  50F3               	movf	prodl,w,c
  4782  000F82  2402               	addwf	??i2_on,w,c
  4783  000F84  6ED9               	movwf	fsr2l,c
  4784  000F86  50F4               	movf	prodh,w,c
  4785  000F88  2003               	addwfc	??i2_on+1,w,c
  4786  000F8A  6EDA               	movwf	fsr2h,c
  4787  000F8C  0E01               	movlw	1
  4788  000F8E  6EDF               	movwf	indf2,c
  4789  000F90  0012               	return		;funcret
  4790  000F92                     __end_ofi2_on:
  4791                           	opt stack 0
  4792                           pclatu	equ	0xFFB
  4793                           pclath	equ	0xFFA
  4794                           tblptru	equ	0xFF8
  4795                           tblptrh	equ	0xFF7
  4796                           tblptrl	equ	0xFF6
  4797                           tablat	equ	0xFF5
  4798                           prodh	equ	0xFF4
  4799                           prodl	equ	0xFF3
  4800                           intcon	equ	0xFF2
  4801                           postinc0	equ	0xFEE
  4802                           fsr0h	equ	0xFEA
  4803                           fsr0l	equ	0xFE9
  4804                           wreg	equ	0xFE8
  4805                           postdec1	equ	0xFE5
  4806                           plusw1	equ	0xFE3
  4807                           fsr1h	equ	0xFE2
  4808                           fsr1l	equ	0xFE1
  4809                           indf2	equ	0xFDF
  4810                           postinc2	equ	0xFDE
  4811                           plusw2	equ	0xFDB
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function i2_delaySeconds *****************
  4817 ;; Defined at:
  4818 ;;		line 49 in file "main.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  numberOfSeco    2    6[COMRAM] int 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  delaySeconds    2    9[COMRAM] int 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;		None               void
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4832 ;;      Params:         2       0       0       0       0       0       0
  4833 ;;      Locals:         2       0       0       0       0       0       0
  4834 ;;      Temps:          1       0       0       0       0       0       0
  4835 ;;      Totals:         5       0       0       0       0       0       0
  4836 ;;Total ram usage:        5 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    1
  4839 ;; This function calls:
  4840 ;;		i2___wmul
  4841 ;; This function is called by:
  4842 ;;		i2_startPong
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text22
  4847  000E00                     __ptext22:
  4848                           	opt stack 0
  4849  000E00                     i2_delaySeconds:
  4850                           	opt stack 22
  4851                           
  4852                           ;main.c: 51: for(int i = 0; i < numberOfSeconds * 100; i++)
  4853                           
  4854                           ;incstack = 0
  4855  000E00  0E00               	movlw	0
  4856  000E02  6E0B               	movwf	i2delaySeconds@i+1,c
  4857  000E04  0E00               	movlw	0
  4858  000E06  6E0A               	movwf	i2delaySeconds@i,c
  4859  000E08  D00A               	goto	i2l1859
  4860  000E0A                     i2l1855:
  4861                           
  4862                           ;main.c: 52: _delay((unsigned long)((10)*(32000000/4000.0)));
  4863  000E0A  0E68               	movlw	104
  4864  000E0C  6E09               	movwf	??i2_delaySeconds& (0+255),c
  4865  000E0E  0EE4               	movlw	228
  4866  000E10                     i2u193_47:
  4867  000E10  2EE8               	decfsz	wreg,f,c
  4868  000E12  D7FE               	goto	i2u193_47
  4869  000E14  2E09               	decfsz	??i2_delaySeconds& (0+255),f,c
  4870  000E16  D7FC               	goto	i2u193_47
  4871  000E18  D000               	nop2	
  4872  000E1A  4A0A               	infsnz	i2delaySeconds@i,f,c
  4873  000E1C  2A0B               	incf	i2delaySeconds@i+1,f,c
  4874  000E1E                     i2l1859:
  4875  000E1E  C007  F001         	movff	i2delaySeconds@numberOfSeconds,i2___wmul@multiplier
  4876  000E22  C008  F002         	movff	i2delaySeconds@numberOfSeconds+1,i2___wmul@multiplier+1
  4877  000E26  0E00               	movlw	0
  4878  000E28  6E04               	movwf	i2___wmul@multiplicand+1,c
  4879  000E2A  0E64               	movlw	100
  4880  000E2C  6E03               	movwf	i2___wmul@multiplicand,c
  4881  000E2E  EC10  F008         	call	i2___wmul	;wreg free
  4882  000E32  5001               	movf	?i2___wmul,w,c
  4883  000E34  5C0A               	subwf	i2delaySeconds@i,w,c
  4884  000E36  500B               	movf	i2delaySeconds@i+1,w,c
  4885  000E38  0A80               	xorlw	128
  4886  000E3A  6E09               	movwf	??i2_delaySeconds& (0+255),c
  4887  000E3C  5002               	movf	?i2___wmul+1,w,c
  4888  000E3E  0A80               	xorlw	128
  4889  000E40  5809               	subwfb	??i2_delaySeconds& (0+255),w,c
  4890  000E42  A0D8               	btfss	status,0,c
  4891  000E44  D7E2               	goto	i2l1855
  4892                           
  4893                           ;main.c: 54: return 1;
  4894  000E46  80D8               	bsf	status,0,c
  4895  000E48  0012               	return	
  4896  000E4A                     __end_ofi2_delaySeconds:
  4897                           	opt stack 0
  4898                           pclatu	equ	0xFFB
  4899                           pclath	equ	0xFFA
  4900                           tblptru	equ	0xFF8
  4901                           tblptrh	equ	0xFF7
  4902                           tblptrl	equ	0xFF6
  4903                           tablat	equ	0xFF5
  4904                           prodh	equ	0xFF4
  4905                           prodl	equ	0xFF3
  4906                           intcon	equ	0xFF2
  4907                           postinc0	equ	0xFEE
  4908                           fsr0h	equ	0xFEA
  4909                           fsr0l	equ	0xFE9
  4910                           wreg	equ	0xFE8
  4911                           postdec1	equ	0xFE5
  4912                           plusw1	equ	0xFE3
  4913                           fsr1h	equ	0xFE2
  4914                           fsr1l	equ	0xFE1
  4915                           indf2	equ	0xFDF
  4916                           postinc2	equ	0xFDE
  4917                           plusw2	equ	0xFDB
  4918                           fsr2h	equ	0xFDA
  4919                           fsr2l	equ	0xFD9
  4920                           status	equ	0xFD8
  4921                           
  4922 ;; *************** function i2___wmul *****************
  4923 ;; Defined at:
  4924 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  multiplier      2    0[COMRAM] unsigned int 
  4927 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  __wmul          2    4[COMRAM] unsigned int 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  2    0[COMRAM] unsigned int 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0, prodl, prodh
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4939 ;;      Params:         4       0       0       0       0       0       0
  4940 ;;      Locals:         2       0       0       0       0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0       0
  4942 ;;      Totals:         6       0       0       0       0       0       0
  4943 ;;Total ram usage:        6 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		i2_delaySeconds
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           	psect	text23
  4953  001020                     __ptext23:
  4954                           	opt stack 0
  4955  001020                     i2___wmul:
  4956                           	opt stack 22
  4957                           
  4958                           ;incstack = 0
  4959  001020  5001               	movf	i2___wmul@multiplier,w,c
  4960  001022  0203               	mulwf	i2___wmul@multiplicand,c
  4961  001024  CFF3 F005          	movff	prodl,i2___wmul@product
  4962  001028  CFF4 F006          	movff	prodh,i2___wmul@product+1
  4963  00102C  5001               	movf	i2___wmul@multiplier,w,c
  4964  00102E  0204               	mulwf	i2___wmul@multiplicand+1,c
  4965  001030  50F3               	movf	prodl,w,c
  4966  001032  2606               	addwf	i2___wmul@product+1,f,c
  4967  001034  5002               	movf	i2___wmul@multiplier+1,w,c
  4968  001036  0203               	mulwf	i2___wmul@multiplicand,c
  4969  001038  50F3               	movf	prodl,w,c
  4970  00103A  2606               	addwf	i2___wmul@product+1,f,c
  4971  00103C  C005  F001         	movff	i2___wmul@product,?i2___wmul
  4972  001040  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  4973  001044  0012               	return	
  4974  001046                     __end_ofi2___wmul:
  4975                           	opt stack 0
  4976                           pclatu	equ	0xFFB
  4977                           pclath	equ	0xFFA
  4978                           tblptru	equ	0xFF8
  4979                           tblptrh	equ	0xFF7
  4980                           tblptrl	equ	0xFF6
  4981                           tablat	equ	0xFF5
  4982                           prodh	equ	0xFF4
  4983                           prodl	equ	0xFF3
  4984                           intcon	equ	0xFF2
  4985                           postinc0	equ	0xFEE
  4986                           fsr0h	equ	0xFEA
  4987                           fsr0l	equ	0xFE9
  4988                           wreg	equ	0xFE8
  4989                           postdec1	equ	0xFE5
  4990                           plusw1	equ	0xFE3
  4991                           fsr1h	equ	0xFE2
  4992                           fsr1l	equ	0xFE1
  4993                           indf2	equ	0xFDF
  4994                           postinc2	equ	0xFDE
  4995                           plusw2	equ	0xFDB
  4996                           fsr2h	equ	0xFDA
  4997                           fsr2l	equ	0xFD9
  4998                           status	equ	0xFD8
  4999                           
  5000 ;; *************** function _getNextPosition *****************
  5001 ;; Defined at:
  5002 ;;		line 160 in file "main.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5016 ;;      Params:         0       0       0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0
  5019 ;;      Totals:         0       0       0       0       0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_checkNextPosition
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text24
  5030  0009C0                     __ptext24:
  5031                           	opt stack 0
  5032  0009C0                     _getNextPosition:
  5033                           	opt stack 24
  5034                           
  5035                           ;main.c: 162: switch(_ball.bDirection)
  5036                           
  5037                           ;incstack = 0
  5038  0009C0  D02E               	goto	i2l1921
  5039  0009C2                     i2l1907:
  5040                           
  5041                           ;main.c: 165: _nextPos[0] = _ball.bPos[0] + 1;
  5042  0009C2  0100               	movlb	0	; () banked
  5043  0009C4  29FB               	incf	__ball& (0+255),w,b
  5044  0009C6  0100               	movlb	0	; () banked
  5045  0009C8  6FFE               	movwf	__nextPos& (0+255),b
  5046                           
  5047                           ;main.c: 166: _nextPos[1] = _ball.bPos[1] + 1;
  5048  0009CA  0100               	movlb	0	; () banked
  5049  0009CC  29FC               	incf	(__ball+1)& (0+255),w,b
  5050  0009CE  0100               	movlb	0	; () banked
  5051  0009D0  6FFF               	movwf	(__nextPos+1)& (0+255),b
  5052                           
  5053                           ;main.c: 167: break;
  5054  0009D2  0012               	return	
  5055  0009D4                     i2l1909:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;main.c: 169: _nextPos[0] = _ball.bPos[0] + 1;
  5059  0009D4  0100               	movlb	0	; () banked
  5060  0009D6  29FB               	incf	__ball& (0+255),w,b
  5061  0009D8  0100               	movlb	0	; () banked
  5062  0009DA  6FFE               	movwf	__nextPos& (0+255),b
  5063                           
  5064                           ;main.c: 170: break;
  5065  0009DC  0012               	return	
  5066  0009DE                     i2l1911:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;main.c: 172: _nextPos[0] = _ball.bPos[0] + 1;
  5070  0009DE  0100               	movlb	0	; () banked
  5071  0009E0  29FB               	incf	__ball& (0+255),w,b
  5072  0009E2  0100               	movlb	0	; () banked
  5073  0009E4  6FFE               	movwf	__nextPos& (0+255),b
  5074                           
  5075                           ;main.c: 173: _nextPos[1] = _ball.bPos[1] - 1;
  5076  0009E6  0100               	movlb	0	; () banked
  5077  0009E8  05FC               	decf	(__ball+1)& (0+255),w,b
  5078  0009EA  0100               	movlb	0	; () banked
  5079  0009EC  6FFF               	movwf	(__nextPos+1)& (0+255),b
  5080                           
  5081                           ;main.c: 174: break;
  5082  0009EE  0012               	return	
  5083  0009F0                     i2l1913:
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;main.c: 176: _nextPos[0] = _ball.bPos[0] - 1;
  5087  0009F0  0100               	movlb	0	; () banked
  5088  0009F2  05FB               	decf	__ball& (0+255),w,b
  5089  0009F4  0100               	movlb	0	; () banked
  5090  0009F6  6FFE               	movwf	__nextPos& (0+255),b
  5091                           
  5092                           ;main.c: 177: _nextPos[1] = _ball.bPos[1] - 1;
  5093  0009F8  0100               	movlb	0	; () banked
  5094  0009FA  05FC               	decf	(__ball+1)& (0+255),w,b
  5095  0009FC  0100               	movlb	0	; () banked
  5096  0009FE  6FFF               	movwf	(__nextPos+1)& (0+255),b
  5097                           
  5098                           ;main.c: 178: break;
  5099  000A00  0012               	return	
  5100  000A02                     i2l1915:
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;main.c: 180: _nextPos[0] = _ball.bPos[0] - 1;
  5104  000A02  0100               	movlb	0	; () banked
  5105  000A04  05FB               	decf	__ball& (0+255),w,b
  5106  000A06  0100               	movlb	0	; () banked
  5107  000A08  6FFE               	movwf	__nextPos& (0+255),b
  5108                           
  5109                           ;main.c: 181: break;
  5110  000A0A  0012               	return	
  5111  000A0C                     i2l1917:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;main.c: 183: _nextPos[0] = _ball.bPos[0] - 1;
  5115  000A0C  0100               	movlb	0	; () banked
  5116  000A0E  05FB               	decf	__ball& (0+255),w,b
  5117  000A10  0100               	movlb	0	; () banked
  5118  000A12  6FFE               	movwf	__nextPos& (0+255),b
  5119                           
  5120                           ;main.c: 184: _nextPos[1] = _ball.bPos[1] + 1;
  5121  000A14  0100               	movlb	0	; () banked
  5122  000A16  29FC               	incf	(__ball+1)& (0+255),w,b
  5123  000A18  0100               	movlb	0	; () banked
  5124  000A1A  6FFF               	movwf	(__nextPos+1)& (0+255),b
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;main.c: 186: }
  5128                           
  5129                           ;main.c: 185: break;
  5130  000A1C  0012               	return	
  5131  000A1E                     i2l1921:
  5132  000A1E  0100               	movlb	0	; () banked
  5133  000A20  51FD               	movf	(__ball+2)& (0+255),w,b
  5134                           
  5135                           ; Switch size 1, requested type "space"
  5136                           ; Number of cases is 6, Range of values is 1 to 6
  5137                           ; switch strategies available:
  5138                           ; Name         Instructions Cycles
  5139                           ; simple_byte           19    10 (average)
  5140                           ;	Chosen strategy is simple_byte
  5141  000A22  0A01               	xorlw	1	; case 1
  5142  000A24  B4D8               	btfsc	status,2,c
  5143  000A26  D7CD               	goto	i2l1907
  5144  000A28  0A03               	xorlw	3	; case 2
  5145  000A2A  B4D8               	btfsc	status,2,c
  5146  000A2C  D7D3               	goto	i2l1909
  5147  000A2E  0A01               	xorlw	1	; case 3
  5148  000A30  B4D8               	btfsc	status,2,c
  5149  000A32  D7D5               	goto	i2l1911
  5150  000A34  0A07               	xorlw	7	; case 4
  5151  000A36  B4D8               	btfsc	status,2,c
  5152  000A38  D7DB               	goto	i2l1913
  5153  000A3A  0A01               	xorlw	1	; case 5
  5154  000A3C  B4D8               	btfsc	status,2,c
  5155  000A3E  D7E1               	goto	i2l1915
  5156  000A40  0A03               	xorlw	3	; case 6
  5157  000A42  A4D8               	btfss	status,2,c
  5158  000A44  0012               	return	
  5159  000A46  D7E2               	goto	i2l1917
  5160  000A48                     __end_of_getNextPosition:
  5161                           	opt stack 0
  5162                           pclatu	equ	0xFFB
  5163                           pclath	equ	0xFFA
  5164                           tblptru	equ	0xFF8
  5165                           tblptrh	equ	0xFF7
  5166                           tblptrl	equ	0xFF6
  5167                           tablat	equ	0xFF5
  5168                           prodh	equ	0xFF4
  5169                           prodl	equ	0xFF3
  5170                           intcon	equ	0xFF2
  5171                           postinc0	equ	0xFEE
  5172                           fsr0h	equ	0xFEA
  5173                           fsr0l	equ	0xFE9
  5174                           wreg	equ	0xFE8
  5175                           postdec1	equ	0xFE5
  5176                           plusw1	equ	0xFE3
  5177                           fsr1h	equ	0xFE2
  5178                           fsr1l	equ	0xFE1
  5179                           indf2	equ	0xFDF
  5180                           postinc2	equ	0xFDE
  5181                           plusw2	equ	0xFDB
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function ___lwdiv *****************
  5187 ;; Defined at:
  5188 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  dividend        2    0[COMRAM] unsigned int 
  5191 ;;  divisor         2    2[COMRAM] unsigned int 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  quotient        2    4[COMRAM] unsigned int 
  5194 ;;  counter         1    6[COMRAM] unsigned char 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  2    0[COMRAM] unsigned int 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5204 ;;      Params:         4       0       0       0       0       0       0
  5205 ;;      Locals:         3       0       0       0       0       0       0
  5206 ;;      Temps:          0       0       0       0       0       0       0
  5207 ;;      Totals:         7       0       0       0       0       0       0
  5208 ;;Total ram usage:        7 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_ISR
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text25
  5218  000D62                     __ptext25:
  5219                           	opt stack 0
  5220  000D62                     ___lwdiv:
  5221                           	opt stack 25
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;incstack = 0
  5225  000D62  0E00               	movlw	0
  5226  000D64  6E06               	movwf	___lwdiv@quotient+1,c
  5227  000D66  0E00               	movlw	0
  5228  000D68  6E05               	movwf	___lwdiv@quotient,c
  5229  000D6A  5003               	movf	___lwdiv@divisor,w,c
  5230  000D6C  1004               	iorwf	___lwdiv@divisor+1,w,c
  5231  000D6E  B4D8               	btfsc	status,2,c
  5232  000D70  D01C               	goto	i2l670
  5233  000D72  0E01               	movlw	1
  5234  000D74  6E07               	movwf	___lwdiv@counter,c
  5235  000D76  D004               	goto	i2l2171
  5236  000D78                     i2l2169:
  5237  000D78  90D8               	bcf	status,0,c
  5238  000D7A  3603               	rlcf	___lwdiv@divisor,f,c
  5239  000D7C  3604               	rlcf	___lwdiv@divisor+1,f,c
  5240  000D7E  2A07               	incf	___lwdiv@counter,f,c
  5241  000D80                     i2l2171:
  5242  000D80  AE04               	btfss	___lwdiv@divisor+1,7,c
  5243  000D82  D7FA               	goto	i2l2169
  5244  000D84                     i2l2173:
  5245  000D84  90D8               	bcf	status,0,c
  5246  000D86  3605               	rlcf	___lwdiv@quotient,f,c
  5247  000D88  3606               	rlcf	___lwdiv@quotient+1,f,c
  5248  000D8A  5003               	movf	___lwdiv@divisor,w,c
  5249  000D8C  5C01               	subwf	___lwdiv@dividend,w,c
  5250  000D8E  5004               	movf	___lwdiv@divisor+1,w,c
  5251  000D90  5802               	subwfb	___lwdiv@dividend+1,w,c
  5252  000D92  A0D8               	btfss	status,0,c
  5253  000D94  D005               	goto	i2l2181
  5254  000D96  5003               	movf	___lwdiv@divisor,w,c
  5255  000D98  5E01               	subwf	___lwdiv@dividend,f,c
  5256  000D9A  5004               	movf	___lwdiv@divisor+1,w,c
  5257  000D9C  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5258  000D9E  8005               	bsf	___lwdiv@quotient,0,c
  5259  000DA0                     i2l2181:
  5260  000DA0  90D8               	bcf	status,0,c
  5261  000DA2  3204               	rrcf	___lwdiv@divisor+1,f,c
  5262  000DA4  3203               	rrcf	___lwdiv@divisor,f,c
  5263  000DA6  2E07               	decfsz	___lwdiv@counter,f,c
  5264  000DA8  D7ED               	goto	i2l2173
  5265  000DAA                     i2l670:
  5266  000DAA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5267  000DAE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5268  000DB2  0012               	return		;funcret
  5269  000DB4                     __end_of___lwdiv:
  5270                           	opt stack 0
  5271  0000                     pclatu	equ	0xFFB
  5272                           pclath	equ	0xFFA
  5273                           tblptru	equ	0xFF8
  5274                           tblptrh	equ	0xFF7
  5275                           tblptrl	equ	0xFF6
  5276                           tablat	equ	0xFF5
  5277                           prodh	equ	0xFF4
  5278                           prodl	equ	0xFF3
  5279                           intcon	equ	0xFF2
  5280                           postinc0	equ	0xFEE
  5281                           fsr0h	equ	0xFEA
  5282                           fsr0l	equ	0xFE9
  5283                           wreg	equ	0xFE8
  5284                           postdec1	equ	0xFE5
  5285                           plusw1	equ	0xFE3
  5286                           fsr1h	equ	0xFE2
  5287                           fsr1l	equ	0xFE1
  5288                           indf2	equ	0xFDF
  5289                           postinc2	equ	0xFDE
  5290                           plusw2	equ	0xFDB
  5291                           fsr2h	equ	0xFDA
  5292                           fsr2l	equ	0xFD9
  5293                           status	equ	0xFD8
  5294                           pclatu	equ	0xFFB
  5295                           pclath	equ	0xFFA
  5296                           tblptru	equ	0xFF8
  5297                           tblptrh	equ	0xFF7
  5298                           tblptrl	equ	0xFF6
  5299                           tablat	equ	0xFF5
  5300                           prodh	equ	0xFF4
  5301                           prodl	equ	0xFF3
  5302                           intcon	equ	0xFF2
  5303                           postinc0	equ	0xFEE
  5304                           fsr0h	equ	0xFEA
  5305                           fsr0l	equ	0xFE9
  5306                           wreg	equ	0xFE8
  5307                           postdec1	equ	0xFE5
  5308                           plusw1	equ	0xFE3
  5309                           fsr1h	equ	0xFE2
  5310                           fsr1l	equ	0xFE1
  5311                           indf2	equ	0xFDF
  5312                           postinc2	equ	0xFDE
  5313                           plusw2	equ	0xFDB
  5314                           fsr2h	equ	0xFDA
  5315                           fsr2l	equ	0xFD9
  5316                           status	equ	0xFD8
  5317                           
  5318                           	psect	rparam
  5319  0000                     pclatu	equ	0xFFB
  5320                           pclath	equ	0xFFA
  5321                           tblptru	equ	0xFF8
  5322                           tblptrh	equ	0xFF7
  5323                           tblptrl	equ	0xFF6
  5324                           tablat	equ	0xFF5
  5325                           prodh	equ	0xFF4
  5326                           prodl	equ	0xFF3
  5327                           intcon	equ	0xFF2
  5328                           postinc0	equ	0xFEE
  5329                           fsr0h	equ	0xFEA
  5330                           fsr0l	equ	0xFE9
  5331                           wreg	equ	0xFE8
  5332                           postdec1	equ	0xFE5
  5333                           plusw1	equ	0xFE3
  5334                           fsr1h	equ	0xFE2
  5335                           fsr1l	equ	0xFE1
  5336                           indf2	equ	0xFDF
  5337                           postinc2	equ	0xFDE
  5338                           plusw2	equ	0xFDB
  5339                           fsr2h	equ	0xFDA
  5340                           fsr2l	equ	0xFD9
  5341                           status	equ	0xFD8
  5342                           
  5343                           	psect	temp
  5344  000075                     btemp:
  5345                           	opt stack 0
  5346  000075                     	ds	1
  5347  0000                     int$flags	set	btemp
  5348                           pclatu	equ	0xFFB
  5349                           pclath	equ	0xFFA
  5350                           tblptru	equ	0xFF8
  5351                           tblptrh	equ	0xFF7
  5352                           tblptrl	equ	0xFF6
  5353                           tablat	equ	0xFF5
  5354                           prodh	equ	0xFF4
  5355                           prodl	equ	0xFF3
  5356                           intcon	equ	0xFF2
  5357                           postinc0	equ	0xFEE
  5358                           fsr0h	equ	0xFEA
  5359                           fsr0l	equ	0xFE9
  5360                           wreg	equ	0xFE8
  5361                           postdec1	equ	0xFE5
  5362                           plusw1	equ	0xFE3
  5363                           fsr1h	equ	0xFE2
  5364                           fsr1l	equ	0xFE1
  5365                           indf2	equ	0xFDF
  5366                           postinc2	equ	0xFDE
  5367                           plusw2	equ	0xFDB
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        274
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     82     116
    BANK0           128     65     128
    BANK1           256    220     250
    BANK2           256    220     248
    BANK3           256      0     196
    BANK4           256      0      68
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _writePong->_off
    _writePong->i2_on
    i2_startPong->i2_drawSymbol
    i2_drawSymbol->i2_on
    i2_drawSymbol->i2_turnAllOff
    i2_delaySeconds->i2___wmul

Critical Paths under _main in BANK0

    _refresh->_setColHigh
    _refresh->_setRowHigh
    _startPong->_drawSymbol
    _drawSymbol->_on
    _drawSymbol->_turnAllOff
    _delaySeconds->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK2

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2721
                         _initialize
                      _initializeLED
                     _initializePong
                            _refresh
 ---------------------------------------------------------------------------------
 (1) _refresh                                              5     5      0     268
                                              3 BANK0      5     5      0
                             _allOff
                         _setColHigh
                         _setRowHigh
 ---------------------------------------------------------------------------------
 (2) _setRowHigh                                           3     3      0      66
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setColHigh                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _allOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initializePong                                       0     0      0    2317
                          _startPong
 ---------------------------------------------------------------------------------
 (2) _startPong                                            0     0      0    2317
                       _delaySeconds
                         _drawSymbol
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _drawSymbol                                         281   280      1    1845
                                              4 BANK0     61    60      1
                                              0 BANK2    220   220      0
                                 _on
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _turnAllOff                                           4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _on                                                   4     3      1     474
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _delaySeconds                                         5     3      2     336
                                              6 BANK0      5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     247
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initializeLED                                        4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 17    17      0    3189
                                             65 COMRAM    17    17      0
                            ___lwdiv
                  _checkNextPosition
                          _writePong
 ---------------------------------------------------------------------------------
 (6) _writePong                                            0     0      0     703
                                _off
                               i2_on
 ---------------------------------------------------------------------------------
 (7) _off                                                  4     3      1     303
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _checkNextPosition                                    0     0      0    2126
                    _getNextPosition
                        i2_startPong
 ---------------------------------------------------------------------------------
 (7) i2_startPong                                          0     0      0    2126
                     i2_delaySeconds
                       i2_drawSymbol
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (8) i2_drawSymbol                                       281   280      1    1709
                                              4 COMRAM    61    60      1
                                              0 BANK1    220   220      0
                               i2_on
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (8) i2_turnAllOff                                         4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) i2_on                                                 4     3      1     400
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) i2_delaySeconds                                       5     3      2     281
                                              6 COMRAM     5     3      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _getNextPosition                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _initializeLED
   _initializePong
     _startPong
       _delaySeconds
         ___wmul
       _drawSymbol
         _on
         _turnAllOff
       _turnAllOff
   _refresh
     _allOff
     _setColHigh
     _setRowHigh

 _ISR (ROOT)
   ___lwdiv
   _checkNextPosition
     _getNextPosition
     i2_startPong
       i2_delaySeconds
         i2___wmul
       i2_drawSymbol
         i2_on
         i2_turnAllOff
       i2_turnAllOff
   _writePong
     _off
     i2_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      44      13       26.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C4      11       76.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     DC      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     DC      FA       7       97.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     41      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     52      74       1       92.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3EE      15        0.0%
DATA                 0      0     3EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Apr 01 18:49:40 2016

           drawSymbol@symbolGo 0260                             _on 0D10            ___wmul@multiplicand 0082  
                  __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000            drawSymbol@symbolOne 02A4  
                          ?_on 0080            drawSymbol@symbolTwo 0244                            _GIE 007F97  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000                            _ISR 0008  
                          _PSA 007EAB                            __p1 00F1                            __p2 00F6  
                          _off 0F1A                            prod 000FF3                            wreg 000FE8  
          __end_ofi2_startPong 0E00                           ??_on 0081                   __CFG_LVP$OFF 000000  
                         ?_ISR 0001                   __CFG_WDT$OFF 000000           drawSymbol@symbolPlay 0200  
                         l1701 01F4                           l1711 0240                           l2271 10AC  
                         l1705 01FE                           l1715 024A                           l1573 0D1E  
                         l1581 0B4C                           l1733 02AA                           l1725 0296  
                         l1661 00F6                           l1653 00AE                           l1741 02EC  
                         l1591 0B66                           l1719 0254                           l1671 0142  
                         l1647 009E                           l1745 0BB6                           l1577 0D28  
                         l1585 0B56                           l1729 02A0                           l1673 0148  
                         l1665 0100                           l1649 00A4                           l1587 0B5C  
                         l1691 01A8                           l1683 0194                           l1659 00F0  
                         l1749 0BCE                           l1597 0BA4                           l1677 0152  
                         l1951 0AF8                           l1687 019E                           l1871 0C38  
                         l1961 0B40                           l1945 0AE8                           l1697 01EA  
                         l1955 0B02                           l1891 0CDC                           l1971 0944  
                         l1949 0AF2                           l1981 0996                           l1973 094A  
                         l1967 093A                           l1985 099C                           l1977 0954  
                         ?_off 0001                           _ADIE 007CEE                           _ADIF 007CF6  
                         _T0CS 007EAD                           u1101 004C                           u1111 005E  
                         u1121 0070                           u1131 0082                           u1141 0094  
                         u1081 0028                           u1091 003A                           _LATA 000F89  
                         _LATC 000F8B                           _LATD 000F8C                           u1524 1012  
                         u1525 100C                           u1544 0C2A                           u1545 0C24  
                         u1554 0C54                           u1555 0C4E                           u1917 09AC  
                         u1927 0BBE                           _PEIE 007F96                           i2_on 0F56  
             ??_initializePong 00C1                           _main 10A0                    drawSymbol@i 02D5  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 0075                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
         __end_of_delaySeconds 0C08                          ??_ISR 0042                          ??_off 0002  
                        ?i2_on 0001                     i2on@column 0004          drawSymbol@symbolThree 02BC  
                        ?_main 0001                          _ADRES 000FC3                          _T0PS0 007EA8  
                        _T0PS1 007EA9                          _T0PS2 007EAA                __end_of___lwdiv 0DB4  
                        i2l261 080E                          i2l670 0DAA                          _PLLEN 007CDE  
                        _TRISA 000F92                          _TRISC 000F94                          _TRISD 000F95  
                __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000           __end_ofi2_turnAllOff 0E92  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                          __ball 00FB                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                __end_of_refresh 09C0                          on@row 0080  
               __CFG_BOREN$OFF 000000                          tablat 000FF5               __end_ofi2___wmul 1046  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
        __size_ofi2_drawSymbol 02E6                   __end_ofi2_on 0F92                __initialization 084A  
                 __end_of_main 10B2                         ??i2_on 0002                _getNextPosition 09C0  
                       ??_main 00C1                    i2_startPong 0DB4                  __activetblptr 000002  
                 i2_drawSymbol 031C                         _T08BIT 007EAE                         i2l2105 069C  
                       i2l2113 06AC                         i2l2121 06C8                         i2l2107 06A0  
                       i2l2115 06C2                         i2l2133 06E2                         i2l2109 06A4  
                       i2l2151 071A                         i2l2127 06D6                         i2l2135 06F8  
                       i2l2143 0708                         i2l2071 063E                         i2l2153 071E  
                       i2l2129 06DA                         i2l2081 0652                         i2l2065 061C  
                       i2l2171 0D80                         i2l1611 0F60                         i2l2147 0712  
                       i2l2139 06FE                         i2l2091 0674                         i2l2067 0620  
                       i2l2235 07A4                         i2l2181 0DA0                         i2l2173 0D84  
                       i2l2149 0716                         i2l2157 0726                         i2l2085 065A  
                       i2l2069 0628                         i2l2077 0644                         i2l2229 079A  
                       i2l1615 0F68                         i2l1623 0E56                         i2l2159 0742  
                       i2l2095 067A                         i2l2255 07F4                         i2l2169 0D78  
                       i2l1625 0E5A                         i2l1801 049E                         i2l2089 065E  
                       i2l1635 0E8E                         i2l1619 0E4E                         i2l1811 04E6  
                       i2l2099 0684                         i2l1629 0E62                         i2l1821 052E  
                       i2l1911 09DE                         i2l1815 04F0                         i2l1807 04DC  
                       i2l1913 09F0                         i2l1921 0A1E                         i2l1825 0538  
                       i2l1915 0A02                         i2l1907 09C2                         i2l1843 0594  
                       i2l1835 0580                         i2l1771 03F4                         i2l1763 03B0  
                       i2l1851 05D2                         i2l1917 0A0C                         i2l1909 09D4  
                       i2l1829 0542                         i2l1781 043C                         i2l1757 03A0  
                       i2l1855 0E0A                         i2l1839 058A                         i2l1783 0442  
                       i2l1775 03FE                         i2l1759 03A6                         i2l1793 048A  
                       i2l1769 03EE                         i2l1929 0DD0                         i2l1881 0F2C  
                       i2l1859 0E1E                         i2l1787 044C                         i2l1797 0494  
                       i2l1877 0F24                         _TMR0IE 007F95                         _TMR0IF 007F92  
                       _TMR0ON 007EAF            i2drawSymbol@offSetX 0005                 __CFG_XINST$OFF 000000  
                       ___wmul 0F92                         _allOff 10C4                 __CFG_STVREN$ON 000000  
                       __speed 0071                      ??___lwdiv 0005                         clear_0 0850  
                       clear_1 085C                         _pixels 0300                         off@row 0001  
                 __pdataCOMRAM 0053                      ??_refresh 0083                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8         __size_of_initializeLED 007C  
i2delaySeconds@numberOfSeconds 0007                     __accesstop 0080        __end_of__initialization 0926  
              __CFG_PBADEN$OFF 000000          __size_of_delaySeconds 005E                  ___rparam_used 000001  
      __end_of_getNextPosition 0A48                 __pcstackCOMRAM 0001               i2drawSymbol@i_84 01D6  
             i2drawSymbol@i_85 01D7               i2drawSymbol@i_86 01D8               i2drawSymbol@i_87 01D9  
             i2drawSymbol@i_88 01DA               i2drawSymbol@i_89 01DB                   __pidataBANK0 0FC8  
                 __pidataBANK1 1066                   __pidataBANK2 1084                   __pidataBANK3 0E92  
                 __pidataBANK4 0ED6        i2drawSymbol@symbolThree 01BC                     __end_of_on 0D62  
        __size_ofi2_turnAllOff 0048                      ?i2___wmul 0001                  i2turnAllOff@i 0003  
                i2turnAllOff@j 0004                   _delaySeconds 0BAA                     __pbssBANK0 00F1  
                   __pbssBANK3 0300        __size_ofi2_delaySeconds 004A                  _initializeLED 0ACA  
                 i2_turnAllOff 0E4A   i2drawSymbol@symbolArrowRight 0006                        ?___wmul 0080  
                      ?_allOff 0001                     ??i2___wmul 0005                     _drawSymbol 001A  
  i2drawSymbol@symbolArrowLeft 0024             __size_of_startPong 0054    delaySeconds@numberOfSeconds 0086  
                      i2on@row 0001             __size_of_writePong 0082                 ?_initializeLED 0001  
                      __Hparam 0000                        __Lparam 0000               ?_getNextPosition 0001  
                refresh@theCol 0086                  refresh@theRow 0087                __size_of___wmul 0036  
              __size_of_allOff 000E           i2drawSymbol@symbolGo 0144                        ___lwdiv 0D62  
   drawSymbol@symbolArrowRight 0085                        __pcinit 084A         drawSymbol@chosenSymbol 02D4  
                      __ramtop 0600                     _initialize 0C62                        __ptext0 10A0  
                      __ptext1 0934                        __ptext2 0C08                        __ptext3 0FF8  
                      __ptext4 10C4                        __ptext5 10B2                        __ptext6 0CBC  
                      __ptext7 001A                        __ptext8 0B46                        __ptext9 0D10  
                 ?i2_startPong 0001                   __size_of_ISR 0842                   __size_of_off 003C  
                      _refresh 0934                 drawSymbol@i_84 02D6                 drawSymbol@i_85 02D7  
               drawSymbol@i_86 02D8                 drawSymbol@i_87 02D9                 drawSymbol@i_88 02DA  
               drawSymbol@i_89 02DB                     _setColHigh 0FF8                 __pintcode_body 0748  
         end_of_initialization 0926                  __Lmediumconst 0000                        int_func 0748  
          i2___wmul@multiplier 0001                     _setRowHigh 0C08                        postdec1 000FE5  
                      postinc0 000FEE                        postinc2 000FDE        __size_of_initializePong 0012  
            __end_of_startPong 0D10              drawSymbol@offSetX 0084                  delaySeconds@i 0089  
            __end_of_writePong 0ACA                      _TRISBbits 000F93                    ?_drawSymbol 0084  
               i2_delaySeconds 0E00                ??_initializeLED 0080                     _turnAllOff 0B46  
                setRowHigh@row 0082                 __end_of___wmul 0FC8                 __end_of_allOff 10D2  
                __pidataCOMRAM 1046                    ?_initialize 0001               i2___wmul@product 0005  
          start_initialization 084A                    __end_of_ISR 084A              __size_ofi2___wmul 0026  
                  ?_setColHigh 0001                    __end_of_off 0F56         __end_ofi2_delaySeconds 0E4A  
                   ISR@ADvalue 0050                    ?_setRowHigh 0001               __CFG_OSC$INTIO67 000000  
                     ??___wmul 0084                       ??_allOff 0080            __size_of_drawSymbol 0302  
                  __pdataBANK0 00C1                    __pdataBANK1 01DC                    __pdataBANK2 02DC  
                  __pdataBANK3 0380                    __pdataBANK4 0400               __CFG_LPT1OSC$OFF 000000  
                  __pbssCOMRAM 0073           __size_ofi2_startPong 004C                  __pcstackBANK0 0080  
                __pcstackBANK1 0100                  __pcstackBANK2 0200         i2drawSymbol@symbolPlay 0100  
              ?i2_delaySeconds 0007            __size_of_initialize 005A                  i2drawSymbol@i 01D5  
                     ISR@value 0052               ___lwdiv@dividend 0001                    ?_turnAllOff 0001  
            __CFG_CCP2MX$PORTC 000000                      __pintcode 0008                 _initializePong 10B2  
          __size_of_setColHigh 0028                       ?___lwdiv 0001            __size_of_setRowHigh 005A  
                  turnAllOff@i 0082                    turnAllOff@j 0083              _checkNextPosition 0602  
                     ?_refresh 0001             ?_checkNextPosition 0001               ___lwdiv@quotient 0005  
                ?i2_drawSymbol 0005                    __size_of_on 0052            ??_checkNextPosition 0042  
               ___wmul@product 0084         __end_of_initializePong 10C4                       i2u130_41 032A  
                     i2u131_41 033C                       i2u132_41 034E                       i2u133_41 0360  
                     i2u134_41 0372                       i2u135_41 0384                       i2u136_41 0396  
                     i2u193_47 0E10               __CFG_WDTPS$32768 000000                     _ADCON0bits 000FC2  
                   _ADCON1bits 000FC1                     _ADCON2bits 000FC0              ___wmul@multiplier 0080  
    __end_of_checkNextPosition 0748                      _startPong 0CBC       __size_of_getNextPosition 0088  
                     i2___wmul 1020                      off@column 0004                 ??i2_drawSymbol 0006  
          __size_of_turnAllOff 0064                   ??_drawSymbol 0085                      _writePong 0A48  
                    copy_data0 087A                      copy_data1 089A                      copy_data2 08BA  
                    copy_data3 08DA                      copy_data4 08FA                      copy_data5 091A  
                __timerCounter 0073                       __Hrparam 0000                ?_initializePong 0001  
                     __Lrparam 0000       i2drawSymbol@chosenSymbol 01D4          i2___wmul@multiplicand 0003  
           __end_of_drawSymbol 031C               __size_of___lwdiv 0052                   ??_initialize 0080  
        i2drawSymbol@symbolOne 01A4          i2drawSymbol@symbolTwo 0188                     ?_startPong 0001  
                     __nextPos 00FE                ___lwdiv@divisor 0003                   ??_setColHigh 0080  
             __size_of_refresh 008C                ___lwdiv@counter 0007                  ?_delaySeconds 0086  
                     __ptext10 0BAA                       __ptext11 0F92                       __ptext20 0E4A  
                     __ptext12 0ACA                       __ptext21 0F56                       __ptext13 0C62  
                     __ptext22 0E00                       __ptext23 1020                       __ptext15 0A48  
                     __ptext24 09C0                       __ptext16 0F1A                       __ptext25 0D62  
                     __ptext17 0602                       __ptext18 0DB4                       __ptext19 031C  
                   ?_writePong 0001                  __size_ofi2_on 003C                drawSymbol@F3232 00D9  
              drawSymbol@F3241 0053                drawSymbol@F3226 00C1                drawSymbol@F3235 0380  
              drawSymbol@F3244 01DC                drawSymbol@F3229 02DC                drawSymbol@F3238 0400  
                 ??_setRowHigh 0080                  __size_of_main 0012             __end_of_initialize 0CBC  
        __end_of_initializeLED 0B46                  ?i2_turnAllOff 0001                 initializeLED@i 0082  
               initializeLED@j 0083                       int$flags 0075             __end_of_setColHigh 1020  
                     on@column 0083     __size_of_checkNextPosition 0146               ??i2_delaySeconds 0009  
                  _OSCTUNEbits 000F9B             __end_of_setRowHigh 0C62                 ??_delaySeconds 0088  
             setColHigh@column 0082                i2delaySeconds@i 000A              ??_getNextPosition 0001  
    drawSymbol@symbolArrowLeft 00A3                       intlevel2 0000                 ??i2_turnAllOff 0001  
                   _OSCCONbits 000FD3                   ??_turnAllOff 0080           __end_ofi2_drawSymbol 0602  
                ??i2_startPong 0042                    ??_startPong 00C1                    ??_writePong 0005  
           __end_of_turnAllOff 0BAA  
