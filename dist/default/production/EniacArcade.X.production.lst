

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Apr 05 11:06:51 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataBANK1
    55  001120                     __pidataBANK1:
    56                           	opt stack 0
    57                           
    58                           ;initializer for drawSymbol@F3239
    59  001120  03                 	db	3
    60  001121  00                 	db	0
    61  001122  03                 	db	3
    62  001123  07                 	db	7
    63  001124  04                 	db	4
    64  001125  01                 	db	1
    65  001126  04                 	db	4
    66  001127  06                 	db	6
    67  001128  05                 	db	5
    68  001129  02                 	db	2
    69  00112A  05                 	db	5
    70  00112B  05                 	db	5
    71  00112C  06                 	db	6
    72  00112D  03                 	db	3
    73  00112E  06                 	db	6
    74  00112F  04                 	db	4
    75                           
    76                           ;initializer for __speed
    77  001130  0096               	dw	150
    78                           
    79                           	psect	idataBANK2
    80  00096A                     __pidataBANK2:
    81                           	opt stack 0
    82                           
    83                           ;initializer for drawSymbol@F3233
    84  00096A  01                 	db	1
    85  00096B  01                 	db	1
    86  00096C  01                 	db	1
    87  00096D  02                 	db	2
    88  00096E  01                 	db	1
    89  00096F  03                 	db	3
    90  000970  01                 	db	1
    91  000971  04                 	db	4
    92  000972  01                 	db	1
    93  000973  05                 	db	5
    94  000974  01                 	db	1
    95  000975  06                 	db	6
    96  000976  02                 	db	2
    97  000977  06                 	db	6
    98  000978  03                 	db	3
    99  000979  06                 	db	6
   100  00097A  03                 	db	3
   101  00097B  05                 	db	5
   102  00097C  03                 	db	3
   103  00097D  04                 	db	4
   104  00097E  02                 	db	2
   105  00097F  04                 	db	4
   106  000980  05                 	db	5
   107  000981  06                 	db	6
   108  000982  05                 	db	5
   109  000983  05                 	db	5
   110  000984  05                 	db	5
   111  000985  04                 	db	4
   112  000986  05                 	db	5
   113  000987  03                 	db	3
   114  000988  05                 	db	5
   115  000989  02                 	db	2
   116  00098A  05                 	db	5
   117  00098B  01                 	db	1
   118  00098C  06                 	db	6
   119  00098D  01                 	db	1
   120  00098E  08                 	db	8
   121  00098F  01                 	db	1
   122  000990  08                 	db	8
   123  000991  02                 	db	2
   124  000992  08                 	db	8
   125  000993  03                 	db	3
   126  000994  09                 	db	9
   127  000995  04                 	db	4
   128  000996  0A                 	db	10
   129  000997  04                 	db	4
   130  000998  0B                 	db	11
   131  000999  03                 	db	3
   132  00099A  0B                 	db	11
   133  00099B  02                 	db	2
   134  00099C  0B                 	db	11
   135  00099D  01                 	db	1
   136  00099E  0D                 	db	13
   137  00099F  01                 	db	1
   138  0009A0  0D                 	db	13
   139  0009A1  02                 	db	2
   140  0009A2  0D                 	db	13
   141  0009A3  03                 	db	3
   142  0009A4  0D                 	db	13
   143  0009A5  04                 	db	4
   144  0009A6  0C                 	db	12
   145  0009A7  05                 	db	5
   146  0009A8  0B                 	db	11
   147  0009A9  06                 	db	6
   148  0009AA  0E                 	db	14
   149  0009AB  05                 	db	5
   150  0009AC  0E                 	db	14
   151  0009AD  06                 	db	6
   152                           
   153                           ;initializer for drawSymbol@F3227
   154  0009AE  01                 	db	1
   155  0009AF  00                 	db	0
   156  0009B0  02                 	db	2
   157  0009B1  00                 	db	0
   158  0009B2  03                 	db	3
   159  0009B3  00                 	db	0
   160  0009B4  04                 	db	4
   161  0009B5  00                 	db	0
   162  0009B6  05                 	db	5
   163  0009B7  00                 	db	0
   164  0009B8  05                 	db	5
   165  0009B9  01                 	db	1
   166  0009BA  04                 	db	4
   167  0009BB  02                 	db	2
   168  0009BC  03                 	db	3
   169  0009BD  03                 	db	3
   170  0009BE  02                 	db	2
   171  0009BF  04                 	db	4
   172  0009C0  01                 	db	1
   173  0009C1  05                 	db	5
   174  0009C2  01                 	db	1
   175  0009C3  06                 	db	6
   176  0009C4  05                 	db	5
   177  0009C5  06                 	db	6
   178  0009C6  02                 	db	2
   179  0009C7  07                 	db	7
   180  0009C8  03                 	db	3
   181  0009C9  07                 	db	7
   182  0009CA  04                 	db	4
   183  0009CB  07                 	db	7
   184                           
   185                           ;initializer for drawSymbol@F3230
   186  0009CC  02                 	db	2
   187  0009CD  00                 	db	0
   188  0009CE  03                 	db	3
   189  0009CF  00                 	db	0
   190  0009D0  04                 	db	4
   191  0009D1  00                 	db	0
   192  0009D2  05                 	db	5
   193  0009D3  01                 	db	1
   194  0009D4  01                 	db	1
   195  0009D5  01                 	db	1
   196  0009D6  01                 	db	1
   197  0009D7  02                 	db	2
   198  0009D8  01                 	db	1
   199  0009D9  03                 	db	3
   200  0009DA  02                 	db	2
   201  0009DB  04                 	db	4
   202  0009DC  03                 	db	3
   203  0009DD  04                 	db	4
   204  0009DE  01                 	db	1
   205  0009DF  05                 	db	5
   206  0009E0  01                 	db	1
   207  0009E1  06                 	db	6
   208  0009E2  02                 	db	2
   209  0009E3  07                 	db	7
   210  0009E4  03                 	db	3
   211  0009E5  07                 	db	7
   212  0009E6  04                 	db	4
   213  0009E7  07                 	db	7
   214  0009E8  05                 	db	5
   215  0009E9  06                 	db	6
   216                           
   217                           ;initializer for drawSymbol@F3224
   218  0009EA  02                 	db	2
   219  0009EB  00                 	db	0
   220  0009EC  03                 	db	3
   221  0009ED  00                 	db	0
   222  0009EE  04                 	db	4
   223  0009EF  00                 	db	0
   224  0009F0  03                 	db	3
   225  0009F1  01                 	db	1
   226  0009F2  03                 	db	3
   227  0009F3  02                 	db	2
   228  0009F4  03                 	db	3
   229  0009F5  03                 	db	3
   230  0009F6  03                 	db	3
   231  0009F7  04                 	db	4
   232  0009F8  03                 	db	3
   233  0009F9  05                 	db	5
   234  0009FA  03                 	db	3
   235  0009FB  06                 	db	6
   236  0009FC  03                 	db	3
   237  0009FD  07                 	db	7
   238  0009FE  04                 	db	4
   239  0009FF  06                 	db	6
   240                           
   241                           ;initializer for drawSymbol@F3242
   242  000A00  04                 	db	4
   243  000A01  00                 	db	0
   244  000A02  03                 	db	3
   245  000A03  01                 	db	1
   246  000A04  02                 	db	2
   247  000A05  02                 	db	2
   248  000A06  01                 	db	1
   249  000A07  03                 	db	3
   250  000A08  01                 	db	1
   251  000A09  04                 	db	4
   252  000A0A  02                 	db	2
   253  000A0B  05                 	db	5
   254  000A0C  03                 	db	3
   255  000A0D  06                 	db	6
   256  000A0E  04                 	db	4
   257  000A0F  07                 	db	7
   258                           
   259                           	psect	idataBANK3
   260  000F62                     __pidataBANK3:
   261                           	opt stack 0
   262                           
   263                           ;initializer for drawSymbol@F3236
   264  000F62  06                 	db	6
   265  000F63  06                 	db	6
   266  000F64  05                 	db	5
   267  000F65  07                 	db	7
   268  000F66  04                 	db	4
   269  000F67  07                 	db	7
   270  000F68  03                 	db	3
   271  000F69  07                 	db	7
   272  000F6A  02                 	db	2
   273  000F6B  06                 	db	6
   274  000F6C  02                 	db	2
   275  000F6D  05                 	db	5
   276  000F6E  02                 	db	2
   277  000F6F  04                 	db	4
   278  000F70  02                 	db	2
   279  000F71  03                 	db	3
   280  000F72  02                 	db	2
   281  000F73  02                 	db	2
   282  000F74  02                 	db	2
   283  000F75  01                 	db	1
   284  000F76  03                 	db	3
   285  000F77  00                 	db	0
   286  000F78  04                 	db	4
   287  000F79  00                 	db	0
   288  000F7A  05                 	db	5
   289  000F7B  00                 	db	0
   290  000F7C  06                 	db	6
   291  000F7D  01                 	db	1
   292  000F7E  05                 	db	5
   293  000F7F  02                 	db	2
   294  000F80  04                 	db	4
   295  000F81  02                 	db	2
   296  000F82  09                 	db	9
   297  000F83  06                 	db	6
   298  000F84  09                 	db	9
   299  000F85  05                 	db	5
   300  000F86  09                 	db	9
   301  000F87  04                 	db	4
   302  000F88  09                 	db	9
   303  000F89  03                 	db	3
   304  000F8A  09                 	db	9
   305  000F8B  02                 	db	2
   306  000F8C  09                 	db	9
   307  000F8D  01                 	db	1
   308  000F8E  0A                 	db	10
   309  000F8F  00                 	db	0
   310  000F90  0B                 	db	11
   311  000F91  00                 	db	0
   312  000F92  0C                 	db	12
   313  000F93  00                 	db	0
   314  000F94  0D                 	db	13
   315  000F95  01                 	db	1
   316  000F96  0D                 	db	13
   317  000F97  02                 	db	2
   318  000F98  0D                 	db	13
   319  000F99  04                 	db	4
   320  000F9A  0D                 	db	13
   321  000F9B  05                 	db	5
   322  000F9C  0D                 	db	13
   323  000F9D  06                 	db	6
   324  000F9E  0C                 	db	12
   325  000F9F  07                 	db	7
   326  000FA0  0B                 	db	11
   327  000FA1  07                 	db	7
   328  000FA2  0A                 	db	10
   329  000FA3  07                 	db	7
   330  000FA4  00                 	db	0
   331  000FA5  00                 	db	0
   332  0000                     _ADRES	set	4035
   333  0000                     _ADCON0bits	set	4034
   334  0000                     _ADCON1bits	set	4033
   335  0000                     _ADCON2bits	set	4032
   336  0000                     _LATA	set	3977
   337  0000                     _LATC	set	3979
   338  0000                     _LATD	set	3980
   339  0000                     _OSCCONbits	set	4051
   340  0000                     _OSCTUNEbits	set	3995
   341  0000                     _TRISA	set	3986
   342  0000                     _TRISBbits	set	3987
   343  0000                     _TRISC	set	3988
   344  0000                     _TRISD	set	3989
   345  0000                     _ADIE	set	31982
   346  0000                     _ADIF	set	31990
   347  0000                     _GIE	set	32663
   348  0000                     _PEIE	set	32662
   349  0000                     _PLLEN	set	31966
   350  0000                     _PSA	set	32427
   351  0000                     _T08BIT	set	32430
   352  0000                     _T0CS	set	32429
   353  0000                     _T0PS0	set	32424
   354  0000                     _T0PS1	set	32425
   355  0000                     _T0PS2	set	32426
   356  0000                     _TMR0IE	set	32661
   357  0000                     _TMR0IF	set	32658
   358  0000                     _TMR0ON	set	32431
   359                           
   360                           ; #config settings
   361  0000                     
   362                           	psect	cinit
   363  000B24                     __pcinit:
   364                           	opt stack 0
   365  000B24                     start_initialization:
   366                           	opt stack 0
   367  000B24                     __initialization:
   368                           	opt stack 0
   369                           
   370                           ; Clear objects allocated to BANK3 (128 bytes)
   371  000B24  EE03  F000         	lfsr	0,__pbssBANK3
   372  000B28  0E80               	movlw	128
   373  000B2A                     clear_0:
   374  000B2A  6AEE               	clrf	postinc0,c
   375  000B2C  06E8               	decf	wreg,f,c
   376  000B2E  E1FD               	bnz	clear_0
   377                           
   378                           ; Clear objects allocated to BANK1 (17 bytes)
   379  000B30  EE01  F0C5         	lfsr	0,__pbssBANK1
   380  000B34  0E11               	movlw	17
   381  000B36                     clear_1:
   382  000B36  6AEE               	clrf	postinc0,c
   383  000B38  06E8               	decf	wreg,f,c
   384  000B3A  E1FD               	bnz	clear_1
   385                           
   386                           ; Initialize objects allocated to BANK3 (68 bytes)
   387                           ; load TBLPTR registers with __pidataBANK3
   388  000B3C  0E62               	movlw	low __pidataBANK3
   389  000B3E  6EF6               	movwf	tblptrl,c
   390  000B40  0E0F               	movlw	high __pidataBANK3
   391  000B42  6EF7               	movwf	tblptrh,c
   392  000B44  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   393  000B46  6EF8               	movwf	tblptru,c
   394  000B48  EE03  F080         	lfsr	0,__pdataBANK3
   395  000B4C  EE10 F044          	lfsr	1,68
   396  000B50                     copy_data0:
   397  000B50  0009               	tblrd		*+
   398  000B52  CFF5 FFEE          	movff	tablat,postinc0
   399  000B56  50E5               	movf	postdec1,w,c
   400  000B58  50E1               	movf	fsr1l,w,c
   401  000B5A  E1FA               	bnz	copy_data0
   402                           
   403                           ; Initialize objects allocated to BANK2 (166 bytes)
   404                           ; load TBLPTR registers with __pidataBANK2
   405  000B5C  0E6A               	movlw	low __pidataBANK2
   406  000B5E  6EF6               	movwf	tblptrl,c
   407  000B60  0E09               	movlw	high __pidataBANK2
   408  000B62  6EF7               	movwf	tblptrh,c
   409  000B64  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   410  000B66  6EF8               	movwf	tblptru,c
   411  000B68  EE02  F000         	lfsr	0,__pdataBANK2
   412  000B6C  EE10 F0A6          	lfsr	1,166
   413  000B70                     copy_data1:
   414  000B70  0009               	tblrd		*+
   415  000B72  CFF5 FFEE          	movff	tablat,postinc0
   416  000B76  50E5               	movf	postdec1,w,c
   417  000B78  50E1               	movf	fsr1l,w,c
   418  000B7A  E1FA               	bnz	copy_data1
   419                           
   420                           ; Initialize objects allocated to BANK1 (18 bytes)
   421                           ; load TBLPTR registers with __pidataBANK1
   422  000B7C  0E20               	movlw	low __pidataBANK1
   423  000B7E  6EF6               	movwf	tblptrl,c
   424  000B80  0E11               	movlw	high __pidataBANK1
   425  000B82  6EF7               	movwf	tblptrh,c
   426  000B84  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   427  000B86  6EF8               	movwf	tblptru,c
   428  000B88  EE01  F0B3         	lfsr	0,__pdataBANK1
   429  000B8C  EE10 F012          	lfsr	1,18
   430  000B90                     copy_data2:
   431  000B90  0009               	tblrd		*+
   432  000B92  CFF5 FFEE          	movff	tablat,postinc0
   433  000B96  50E5               	movf	postdec1,w,c
   434  000B98  50E1               	movf	fsr1l,w,c
   435  000B9A  E1FA               	bnz	copy_data2
   436  000B9C                     end_of_initialization:
   437                           	opt stack 0
   438  000B9C                     __end_of__initialization:
   439                           	opt stack 0
   440  000B9C  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   441  000B9E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   442  000BA0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   443  000BA2  6EF8               	movwf	tblptru,c
   444  000BA4  0100               	movlb	0
   445  000BA6  EF99  F008         	goto	_main	;jump to C main() function
   446                           tblptru	equ	0xFF8
   447                           tblptrh	equ	0xFF7
   448                           tblptrl	equ	0xFF6
   449                           tablat	equ	0xFF5
   450                           postinc0	equ	0xFEE
   451                           wreg	equ	0xFE8
   452                           postdec1	equ	0xFE5
   453                           fsr1l	equ	0xFE1
   454                           
   455                           	psect	bssBANK1
   456  0001C5                     __pbssBANK1:
   457                           	opt stack 0
   458  0001C5                     __p1:
   459                           	opt stack 0
   460  0001C5                     	ds	5
   461  0001CA                     __p2:
   462                           	opt stack 0
   463  0001CA                     	ds	5
   464  0001CF                     __ball:
   465                           	opt stack 0
   466  0001CF                     	ds	3
   467  0001D2                     __nextPos:
   468                           	opt stack 0
   469  0001D2                     	ds	2
   470  0001D4                     __timerCounter:
   471                           	opt stack 0
   472  0001D4                     	ds	2
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           postdec1	equ	0xFE5
   480                           fsr1l	equ	0xFE1
   481                           
   482                           	psect	dataBANK1
   483  0001B3                     __pdataBANK1:
   484                           	opt stack 0
   485  0001B3                     drawSymbol@F3239:
   486                           	opt stack 0
   487  0001B3                     	ds	16
   488  0001C3                     __speed:
   489                           	opt stack 0
   490  0001C3                     	ds	2
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1l	equ	0xFE1
   499                           
   500                           	psect	dataBANK2
   501  000200                     __pdataBANK2:
   502                           	opt stack 0
   503  000200                     drawSymbol@F3233:
   504                           	opt stack 0
   505  000200                     	ds	68
   506  000244                     drawSymbol@F3227:
   507                           	opt stack 0
   508  000244                     	ds	30
   509  000262                     drawSymbol@F3230:
   510                           	opt stack 0
   511  000262                     	ds	30
   512  000280                     drawSymbol@F3224:
   513                           	opt stack 0
   514  000280                     	ds	22
   515  000296                     drawSymbol@F3242:
   516                           	opt stack 0
   517  000296                     	ds	16
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	bssBANK3
   528  000300                     __pbssBANK3:
   529                           	opt stack 0
   530  000300                     _pixels:
   531                           	opt stack 0
   532  000300                     	ds	128
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	dataBANK3
   543  000380                     __pdataBANK3:
   544                           	opt stack 0
   545  000380                     drawSymbol@F3236:
   546                           	opt stack 0
   547  000380                     	ds	68
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	cstackBANK3
   558  0003C4                     __pcstackBANK3:
   559                           	opt stack 0
   560  0003C4                     drawSymbol@symbolArrowLeft:
   561                           	opt stack 0
   562                           
   563                           ; 16 bytes @ 0x0
   564  0003C4                     	ds	16
   565  0003D4                     drawSymbol@symbolArrowRight:
   566                           	opt stack 0
   567                           
   568                           ; 16 bytes @ 0x10
   569  0003D4                     	ds	16
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           postdec1	equ	0xFE5
   577                           fsr1l	equ	0xFE1
   578                           
   579                           	psect	cstackBANK2
   580  0002A6                     __pcstackBANK2:
   581                           	opt stack 0
   582  0002A6                     drawSymbol@symbolTwo:
   583                           	opt stack 0
   584                           
   585                           ; 30 bytes @ 0x0
   586  0002A6                     	ds	30
   587  0002C4                     drawSymbol@symbolThree:
   588                           	opt stack 0
   589                           
   590                           ; 30 bytes @ 0x1E
   591  0002C4                     	ds	30
   592  0002E2                     drawSymbol@symbolOne:
   593                           	opt stack 0
   594                           
   595                           ; 22 bytes @ 0x3C
   596  0002E2                     	ds	22
   597  0002F8                     drawSymbol@i_83:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x52
   601  0002F8                     	ds	1
   602  0002F9                     drawSymbol@i_84:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x53
   606  0002F9                     	ds	1
   607  0002FA                     drawSymbol@i_85:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x54
   611  0002FA                     	ds	1
   612  0002FB                     drawSymbol@i_86:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x55
   616  0002FB                     	ds	1
   617  0002FC                     drawSymbol@i_87:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x56
   621  0002FC                     	ds	1
   622                           tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           postinc0	equ	0xFEE
   627                           wreg	equ	0xFE8
   628                           postdec1	equ	0xFE5
   629                           fsr1l	equ	0xFE1
   630                           
   631                           	psect	cstackBANK1
   632  000100                     __pcstackBANK1:
   633                           	opt stack 0
   634  000100                     i2drawSymbol@symbolArrowRight:
   635                           	opt stack 0
   636                           
   637                           ; 16 bytes @ 0x0
   638  000100                     	ds	16
   639  000110                     ??_ISR:
   640                           
   641                           ; 1 bytes @ 0x10
   642  000110                     	ds	14
   643  00011E                     ISR@ADvalue:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x1E
   647  00011E                     	ds	2
   648  000120                     ISR@value:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x20
   652  000120                     	ds	1
   653  000121                     ??_turnAllOff:
   654  000121                     ??_setColHigh:
   655  000121                     ??_setRowHigh:
   656  000121                     on@row:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x21
   660  000121                     	ds	1
   661  000122                     ??_on:
   662                           
   663                           ; 1 bytes @ 0x22
   664  000122                     	ds	1
   665  000123                     setColHigh@column:
   666                           	opt stack 0
   667  000123                     setRowHigh@row:
   668                           	opt stack 0
   669  000123                     turnAllOff@i:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x23
   673  000123                     	ds	1
   674  000124                     ??_refresh:
   675  000124                     on@column:
   676                           	opt stack 0
   677  000124                     turnAllOff@j:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x24
   681  000124                     	ds	1
   682  000125                     drawSymbol@offSetX:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x25
   686  000125                     	ds	1
   687  000126                     drawSymbol@symbolPlay:
   688                           	opt stack 0
   689                           
   690                           ; 68 bytes @ 0x26
   691  000126                     	ds	1
   692  000127                     refresh@theCol:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x27
   696  000127                     	ds	1
   697  000128                     refresh@theRow:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x28
   701  000128                     	ds	66
   702  00016A                     drawSymbol@symbolGo:
   703                           	opt stack 0
   704                           
   705                           ; 68 bytes @ 0x6A
   706  00016A                     	ds	68
   707  0001AE                     drawSymbol@chosenSymbol:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0xAE
   711  0001AE                     	ds	1
   712  0001AF                     drawSymbol@i:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0xAF
   716  0001AF                     	ds	1
   717  0001B0                     drawSymbol@i_82:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0xB0
   721  0001B0                     	ds	1
   722  0001B1                     startPong@counter:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0xB1
   726  0001B1                     	ds	2
   727  0001B3                     tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           postdec1	equ	0xFE5
   734                           fsr1l	equ	0xFE1
   735                           
   736                           ; 1 bytes @ 0xB3
   737                           
   738                           	psect	cstackBANK0
   739  000080                     __pcstackBANK0:
   740                           	opt stack 0
   741  000080                     i2drawSymbol@symbolGo:
   742                           	opt stack 0
   743                           
   744                           ; 68 bytes @ 0x0
   745  000080                     	ds	68
   746  0000C4                     i2drawSymbol@symbolThree:
   747                           	opt stack 0
   748                           
   749                           ; 30 bytes @ 0x44
   750  0000C4                     	ds	30
   751  0000E2                     i2drawSymbol@symbolArrowLeft:
   752                           	opt stack 0
   753                           
   754                           ; 16 bytes @ 0x62
   755  0000E2                     	ds	16
   756  0000F2                     i2drawSymbol@i:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x72
   760  0000F2                     	ds	1
   761  0000F3                     i2drawSymbol@i_82:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x73
   765  0000F3                     	ds	1
   766  0000F4                     i2drawSymbol@i_83:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x74
   770  0000F4                     	ds	1
   771  0000F5                     i2drawSymbol@i_84:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x75
   775  0000F5                     	ds	1
   776  0000F6                     i2drawSymbol@i_85:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x76
   780  0000F6                     	ds	1
   781  0000F7                     i2drawSymbol@i_86:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x77
   785  0000F7                     	ds	1
   786  0000F8                     i2drawSymbol@i_87:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x78
   790  0000F8                     	ds	1
   791  0000F9                     i2startPong@counter:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x79
   795  0000F9                     	ds	2
   796  0000FB                     checkNextPosition@counter:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x7B
   800  0000FB                     	ds	2
   801  0000FD                     checkNextPosition@counter_439:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x7D
   805  0000FD                     	ds	2
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           postinc0	equ	0xFEE
   811                           wreg	equ	0xFE8
   812                           postdec1	equ	0xFE5
   813                           fsr1l	equ	0xFE1
   814                           
   815                           	psect	cstackCOMRAM
   816  000001                     __pcstackCOMRAM:
   817                           	opt stack 0
   818  000001                     ??i2_setColHigh:
   819  000001                     ??i2_setRowHigh:
   820  000001                     ??i2_turnAllOff:
   821  000001                     ?___lwdiv:
   822                           	opt stack 0
   823  000001                     off@row:
   824                           	opt stack 0
   825  000001                     i2on@row:
   826                           	opt stack 0
   827  000001                     ___lwdiv@dividend:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x0
   831  000001                     	ds	1
   832  000002                     ??_off:
   833  000002                     ??i2_on:
   834                           
   835                           ; 1 bytes @ 0x1
   836  000002                     	ds	1
   837  000003                     i2setColHigh@column:
   838                           	opt stack 0
   839  000003                     i2setRowHigh@row:
   840                           	opt stack 0
   841  000003                     i2turnAllOff@i:
   842                           	opt stack 0
   843  000003                     ___lwdiv@divisor:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x2
   847  000003                     	ds	1
   848  000004                     ??i2_refresh:
   849  000004                     off@column:
   850                           	opt stack 0
   851  000004                     i2on@column:
   852                           	opt stack 0
   853  000004                     i2turnAllOff@j:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x3
   857  000004                     	ds	1
   858  000005                     i2drawSymbol@offSetX:
   859                           	opt stack 0
   860  000005                     ___lwdiv@quotient:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x4
   864  000005                     	ds	1
   865  000006                     i2drawSymbol@symbolPlay:
   866                           	opt stack 0
   867                           
   868                           ; 68 bytes @ 0x5
   869  000006                     	ds	1
   870  000007                     ___lwdiv@counter:
   871                           	opt stack 0
   872  000007                     i2refresh@theCol:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x6
   876  000007                     	ds	1
   877  000008                     i2refresh@theRow:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0x7
   881  000008                     	ds	66
   882  00004A                     i2drawSymbol@symbolTwo:
   883                           	opt stack 0
   884                           
   885                           ; 30 bytes @ 0x49
   886  00004A                     	ds	30
   887  000068                     i2drawSymbol@symbolOne:
   888                           	opt stack 0
   889                           
   890                           ; 22 bytes @ 0x67
   891  000068                     	ds	22
   892  00007E                     i2drawSymbol@chosenSymbol:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x7D
   896  00007E                     	ds	1
   897  00007F                     tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           postinc0	equ	0xFEE
   902                           wreg	equ	0xFE8
   903                           postdec1	equ	0xFE5
   904                           fsr1l	equ	0xFE1
   905                           
   906                           ; 1 bytes @ 0x7E
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 425 in file "main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   926 ;;      Params:         0       0       0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels required when called:   10
   932 ;; This function calls:
   933 ;;		_initialize
   934 ;;		_initializeLED
   935 ;;		_initializePong
   936 ;;		_refresh
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text0
   943  001132                     __ptext0:
   944                           	opt stack 0
   945  001132                     _main:
   946                           	opt stack 21
   947                           
   948                           ;main.c: 426: initialize();
   949                           
   950                           ;incstack = 0
   951  001132  EC0E  F007         	call	_initialize	;wreg free
   952                           
   953                           ;main.c: 427: initializeLED();
   954  001136  EC5F  F008         	call	_initializeLED	;wreg free
   955                           
   956                           ;main.c: 428: initializePong();
   957  00113A  EC7C  F008         	call	_initializePong	;wreg free
   958  00113E                     l2988:
   959                           
   960                           ;main.c: 433: refresh();
   961  00113E  EC08  F005         	call	_refresh	;wreg free
   962  001142  D7FD               	goto	l2988
   963  001144                     __end_of_main:
   964                           	opt stack 0
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           postdec1	equ	0xFE5
   972                           fsr1l	equ	0xFE1
   973                           
   974 ;; *************** function _initializePong *****************
   975 ;; Defined at:
   976 ;;		line 83 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   990 ;;      Params:         0       0       0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    9
   997 ;; This function calls:
   998 ;;		_startPong
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text1
  1005  0010F8                     __ptext1:
  1006                           	opt stack 0
  1007  0010F8                     _initializePong:
  1008                           	opt stack 21
  1009                           
  1010                           ;main.c: 87: _p1.lives = 3;
  1011                           
  1012                           ;incstack = 0
  1013  0010F8  0E03               	movlw	3
  1014  0010FA  0101               	movlb	1	; () banked
  1015  0010FC  6FC9               	movwf	(__p1+4)& (0+255),b
  1016                           
  1017                           ;main.c: 88: _p2.lives = 3;
  1018  0010FE  0E03               	movlw	3
  1019  001100  0101               	movlb	1	; () banked
  1020  001102  6FCE               	movwf	(__p2+4)& (0+255),b
  1021                           
  1022                           ; BSR set to: 1
  1023                           ;main.c: 90: startPong();
  1024  001104  EC4B  F006         	call	_startPong	;wreg free
  1025                           
  1026                           ;main.c: 93: TMR0ON = 1;
  1027  001108  8ED5               	bsf	4053,7,c	;volatile
  1028  00110A  0012               	return		;funcret
  1029  00110C                     __end_of_initializePong:
  1030                           	opt stack 0
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           postdec1	equ	0xFE5
  1038                           fsr1l	equ	0xFE1
  1039                           
  1040 ;; *************** function _startPong *****************
  1041 ;; Defined at:
  1042 ;;		line 59 in file "main.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  counter         2  177[BANK1 ] unsigned int 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1056 ;;      Params:         0       0       0       0       0       0       0
  1057 ;;      Locals:         0       0       2       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0
  1059 ;;      Totals:         0       0       2       0       0       0       0
  1060 ;;Total ram usage:        2 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    8
  1063 ;; This function calls:
  1064 ;;		_drawSymbol
  1065 ;;		_refresh
  1066 ;;		_turnAllOff
  1067 ;; This function is called by:
  1068 ;;		_initializePong
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text2
  1073  000C96                     __ptext2:
  1074                           	opt stack 0
  1075  000C96                     _startPong:
  1076                           	opt stack 21
  1077                           
  1078                           ;main.c: 61: turnAllOff();
  1079                           
  1080                           ;incstack = 0
  1081  000C96  EC7E  F006         	call	_turnAllOff	;wreg free
  1082                           
  1083                           ;main.c: 62: drawSymbol(_p1.lives, 0);
  1084  000C9A  0E00               	movlw	0
  1085  000C9C  0101               	movlb	1	; () banked
  1086  000C9E  6F25               	movwf	drawSymbol@offSetX& (0+255),b
  1087  000CA0  0101               	movlb	1	; () banked
  1088  000CA2  51C9               	movf	(__p1+4)& (0+255),w,b
  1089  000CA4  EC0D  F000         	call	_drawSymbol
  1090                           
  1091                           ;main.c: 63: drawSymbol(_p2.lives, 8);
  1092  000CA8  0E08               	movlw	8
  1093  000CAA  0101               	movlb	1	; () banked
  1094  000CAC  6F25               	movwf	drawSymbol@offSetX& (0+255),b
  1095  000CAE  0101               	movlb	1	; () banked
  1096  000CB0  51CE               	movf	(__p2+4)& (0+255),w,b
  1097  000CB2  EC0D  F000         	call	_drawSymbol
  1098                           
  1099                           ;main.c: 64: for (unsigned int counter = 0; counter < 800; counter++) {
  1100  000CB6  0E00               	movlw	0
  1101  000CB8  0101               	movlb	1	; () banked
  1102  000CBA  6FB2               	movwf	(startPong@counter+1)& (0+255),b
  1103  000CBC  0E00               	movlw	0
  1104  000CBE  6FB1               	movwf	startPong@counter& (0+255),b
  1105  000CC0                     l2730:
  1106                           
  1107                           ; BSR set to: 1
  1108  000CC0  0E20               	movlw	32
  1109  000CC2  0101               	movlb	1	; () banked
  1110  000CC4  5DB1               	subwf	startPong@counter& (0+255),w,b
  1111  000CC6  0E03               	movlw	3
  1112  000CC8  0101               	movlb	1	; () banked
  1113  000CCA  59B2               	subwfb	(startPong@counter+1)& (0+255),w,b
  1114  000CCC  B0D8               	btfsc	status,0,c
  1115  000CCE  D006               	goto	l2740
  1116                           
  1117                           ; BSR set to: 1
  1118                           ;main.c: 65: refresh();
  1119                           
  1120                           ; BSR set to: 1
  1121                           
  1122                           ; BSR set to: 1
  1123  000CD0  EC08  F005         	call	_refresh	;wreg free
  1124  000CD4  0101               	movlb	1	; () banked
  1125  000CD6  4BB1               	infsnz	startPong@counter& (0+255),f,b
  1126  000CD8  2BB2               	incf	(startPong@counter+1)& (0+255),f,b
  1127  000CDA  D7F2               	goto	l2730
  1128  000CDC                     l2740:
  1129                           
  1130                           ; BSR set to: 1
  1131                           ;main.c: 66: }
  1132                           ;main.c: 67: turnAllOff();
  1133  000CDC  EC7E  F006         	call	_turnAllOff	;wreg free
  1134                           
  1135                           ;main.c: 72: _ball.bDirection = 3;
  1136  000CE0  0E03               	movlw	3
  1137  000CE2  0101               	movlb	1	; () banked
  1138  000CE4  6FD1               	movwf	(__ball+2)& (0+255),b
  1139                           
  1140                           ; BSR set to: 1
  1141                           ;main.c: 74: _ball.bPos[0] = 2;
  1142  000CE6  0E02               	movlw	2
  1143  000CE8  0101               	movlb	1	; () banked
  1144  000CEA  6FCF               	movwf	__ball& (0+255),b
  1145                           
  1146                           ; BSR set to: 1
  1147                           ;main.c: 76: _ball.bPos[1] = 4;
  1148  000CEC  0E04               	movlw	4
  1149  000CEE  0101               	movlb	1	; () banked
  1150  000CF0  6FD0               	movwf	(__ball+1)& (0+255),b
  1151                           
  1152                           ; BSR set to: 1
  1153                           ;main.c: 79: _nextPos[0] = _ball.bPos[0];
  1154  000CF2  C1CF  F1D2         	movff	__ball,__nextPos
  1155                           
  1156                           ; BSR set to: 1
  1157                           ;main.c: 80: _nextPos[1] = _ball.bPos[1];
  1158  000CF6  C1D0  F1D3         	movff	__ball+1,__nextPos+1
  1159                           
  1160                           ; BSR set to: 1
  1161  000CFA  0012               	return		;funcret
  1162  000CFC                     __end_of_startPong:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           postdec1	equ	0xFE5
  1171                           fsr1l	equ	0xFE1
  1172                           status	equ	0xFD8
  1173                           
  1174 ;; *************** function _refresh *****************
  1175 ;; Defined at:
  1176 ;;		line 177 in file "Source/LED-API.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  theRow          1   40[BANK1 ] unsigned char 
  1181 ;;  theCol          1   39[BANK1 ] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1191 ;;      Params:         0       0       0       0       0       0       0
  1192 ;;      Locals:         0       0       2       0       0       0       0
  1193 ;;      Temps:          0       0       3       0       0       0       0
  1194 ;;      Totals:         0       0       5       0       0       0       0
  1195 ;;Total ram usage:        5 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    7
  1198 ;; This function calls:
  1199 ;;		_allOff
  1200 ;;		_setColHigh
  1201 ;;		_setRowHigh
  1202 ;; This function is called by:
  1203 ;;		_startPong
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text3
  1209  000A10                     __ptext3:
  1210                           	opt stack 0
  1211  000A10                     _refresh:
  1212                           	opt stack 23
  1213                           
  1214                           ;LED-API.c: 179: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  1215                           
  1216                           ; BSR set to: 1
  1217                           ;incstack = 0
  1218  000A10  0E00               	movlw	0
  1219  000A12  0101               	movlb	1	; () banked
  1220  000A14  6F27               	movwf	refresh@theCol& (0+255),b
  1221  000A16                     l2014:
  1222                           
  1223                           ; BSR set to: 1
  1224  000A16  0E07               	movlw	7
  1225  000A18  0101               	movlb	1	; () banked
  1226  000A1A  6527               	cpfsgt	refresh@theCol& (0+255),b
  1227  000A1C  D001               	goto	l2018
  1228  000A1E  0012               	return	
  1229  000A20                     l2018:
  1230                           
  1231                           ; BSR set to: 1
  1232                           ;LED-API.c: 181: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  1233  000A20  0E00               	movlw	0
  1234  000A22  0101               	movlb	1	; () banked
  1235  000A24  6F28               	movwf	refresh@theRow& (0+255),b
  1236  000A26                     l2020:
  1237                           
  1238                           ; BSR set to: 1
  1239  000A26  0E0F               	movlw	15
  1240  000A28  0101               	movlb	1	; () banked
  1241  000A2A  6528               	cpfsgt	refresh@theRow& (0+255),b
  1242  000A2C  D001               	goto	l2024
  1243  000A2E  D024               	goto	l2032
  1244  000A30                     l2024:
  1245                           
  1246                           ; BSR set to: 1
  1247                           ;LED-API.c: 183: if (pixels[theCol][theRow] == 1)
  1248  000A30  0101               	movlb	1	; () banked
  1249  000A32  5127               	movf	refresh@theCol& (0+255),w,b
  1250  000A34  0D10               	mullw	16
  1251  000A36  0E00               	movlw	low _pixels
  1252  000A38  0101               	movlb	1	; () banked
  1253  000A3A  6F24               	movwf	??_refresh& (0+255),b
  1254  000A3C  0E03               	movlw	high _pixels
  1255  000A3E  0101               	movlb	1	; () banked
  1256  000A40  6F25               	movwf	(??_refresh+1)& (0+255),b
  1257  000A42  50F3               	movf	prodl,w,c
  1258  000A44  0101               	movlb	1	; () banked
  1259  000A46  2724               	addwf	??_refresh& (0+255),f,b
  1260  000A48  50F4               	movf	prodh,w,c
  1261  000A4A  0101               	movlb	1	; () banked
  1262  000A4C  2325               	addwfc	(??_refresh+1)& (0+255),f,b
  1263  000A4E  0101               	movlb	1	; () banked
  1264  000A50  5128               	movf	refresh@theRow& (0+255),w,b
  1265  000A52  0D01               	mullw	1
  1266  000A54  50F3               	movf	prodl,w,c
  1267  000A56  0101               	movlb	1	; () banked
  1268  000A58  2524               	addwf	??_refresh& (0+255),w,b
  1269  000A5A  6ED9               	movwf	fsr2l,c
  1270  000A5C  50F4               	movf	prodh,w,c
  1271  000A5E  0101               	movlb	1	; () banked
  1272  000A60  2125               	addwfc	(??_refresh+1)& (0+255),w,b
  1273  000A62  6EDA               	movwf	fsr2h,c
  1274  000A64  04DE               	decf	postinc2,w,c
  1275  000A66  A4D8               	btfss	status,2,c
  1276  000A68  D004               	goto	l2028
  1277                           
  1278                           ; BSR set to: 1
  1279                           ;LED-API.c: 184: setRowHigh(theRow);
  1280  000A6A  0101               	movlb	1	; () banked
  1281  000A6C  5128               	movf	refresh@theRow& (0+255),w,b
  1282  000A6E  ECE1  F006         	call	_setRowHigh
  1283  000A72                     l2028:
  1284  000A72  0101               	movlb	1	; () banked
  1285  000A74  2B28               	incf	refresh@theRow& (0+255),f,b
  1286  000A76  D7D7               	goto	l2020
  1287  000A78                     l2032:
  1288                           
  1289                           ; BSR set to: 1
  1290                           ;LED-API.c: 185: }
  1291                           ;LED-API.c: 189: setColHigh(theCol);
  1292  000A78  0101               	movlb	1	; () banked
  1293  000A7A  5127               	movf	refresh@theCol& (0+255),w,b
  1294  000A7C  EC4B  F008         	call	_setColHigh
  1295                           
  1296                           ;LED-API.c: 190: _delay((unsigned long)((500)*(32000000/4000000.0)));
  1297  000A80  0E06               	movlw	6
  1298  000A82  0101               	movlb	1	; () banked
  1299  000A84  6F24               	movwf	??_refresh& (0+255),b
  1300  000A86  0E30               	movlw	48
  1301  000A88                     u2977:
  1302  000A88  2EE8               	decfsz	wreg,f,c
  1303  000A8A  D7FE               	goto	u2977
  1304  000A8C  2F24               	decfsz	??_refresh& (0+255),f,b
  1305  000A8E  D7FC               	goto	u2977
  1306  000A90  D000               	nop2	
  1307                           
  1308                           ;LED-API.c: 191: allOff();
  1309  000A92  ECA2  F008         	call	_allOff	;wreg free
  1310  000A96  0101               	movlb	1	; () banked
  1311  000A98  2B27               	incf	refresh@theCol& (0+255),f,b
  1312  000A9A  D7BD               	goto	l2014
  1313  000A9C                     __end_of_refresh:
  1314                           	opt stack 0
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           postdec1	equ	0xFE5
  1324                           fsr1l	equ	0xFE1
  1325                           postinc2	equ	0xFDE
  1326                           fsr2h	equ	0xFDA
  1327                           fsr2l	equ	0xFD9
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function _setRowHigh *****************
  1331 ;; Defined at:
  1332 ;;		line 24 in file "Source/LED-API.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  row             1    wreg     unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  row             1   35[BANK1 ] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1346 ;;      Params:         0       0       0       0       0       0       0
  1347 ;;      Locals:         0       0       1       0       0       0       0
  1348 ;;      Temps:          0       0       2       0       0       0       0
  1349 ;;      Totals:         0       0       3       0       0       0       0
  1350 ;;Total ram usage:        3 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    6
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_refresh
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text4
  1361  000DC2                     __ptext4:
  1362                           	opt stack 0
  1363  000DC2                     _setRowHigh:
  1364                           	opt stack 23
  1365                           
  1366                           ; BSR set to: 1
  1367                           ;incstack = 0
  1368                           ;setRowHigh@row stored from wreg
  1369  000DC2  0101               	movlb	1	; () banked
  1370  000DC4  6F23               	movwf	setRowHigh@row& (0+255),b
  1371                           
  1372                           ;LED-API.c: 25: if(row < 8)
  1373  000DC6  0E08               	movlw	8
  1374  000DC8  0101               	movlb	1	; () banked
  1375  000DCA  6123               	cpfslt	setRowHigh@row& (0+255),b
  1376  000DCC  D012               	goto	l1726
  1377                           
  1378                           ; BSR set to: 1
  1379                           ;LED-API.c: 26: LATC |= (1 << row);
  1380  000DCE  C123  F121         	movff	setRowHigh@row,??_setRowHigh
  1381  000DD2  0E01               	movlw	1
  1382  000DD4  0101               	movlb	1	; () banked
  1383  000DD6  6F22               	movwf	(??_setRowHigh+1)& (0+255),b
  1384  000DD8  0101               	movlb	1	; () banked
  1385  000DDA  2B21               	incf	??_setRowHigh& (0+255),f,b
  1386  000DDC  D003               	goto	u1214
  1387  000DDE                     u1215:
  1388  000DDE  0101               	movlb	1	; () banked
  1389  000DE0  90D8               	bcf	status,0,c
  1390  000DE2  3722               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1391  000DE4                     u1214:
  1392  000DE4  0101               	movlb	1	; () banked
  1393  000DE6  2F21               	decfsz	??_setRowHigh& (0+255),f,b
  1394  000DE8  D7FA               	goto	u1215
  1395  000DEA  0101               	movlb	1	; () banked
  1396  000DEC  5122               	movf	(??_setRowHigh+1)& (0+255),w,b
  1397  000DEE  128B               	iorwf	3979,f,c	;volatile
  1398  000DF0  0012               	return	
  1399  000DF2                     l1726:
  1400                           
  1401                           ; BSR set to: 1
  1402                           ;LED-API.c: 27: else
  1403                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  1404  000DF2  C123  F121         	movff	setRowHigh@row,??_setRowHigh
  1405  000DF6  0EF8               	movlw	-8
  1406  000DF8  0101               	movlb	1	; () banked
  1407  000DFA  2721               	addwf	??_setRowHigh& (0+255),f,b
  1408  000DFC  0E01               	movlw	1
  1409  000DFE  0101               	movlb	1	; () banked
  1410  000E00  6F22               	movwf	(??_setRowHigh+1)& (0+255),b
  1411  000E02  0101               	movlb	1	; () banked
  1412  000E04  2B21               	incf	??_setRowHigh& (0+255),f,b
  1413  000E06  D003               	goto	u1224
  1414  000E08                     u1225:
  1415  000E08  0101               	movlb	1	; () banked
  1416  000E0A  90D8               	bcf	status,0,c
  1417  000E0C  3722               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1418  000E0E                     u1224:
  1419  000E0E  0101               	movlb	1	; () banked
  1420  000E10  2F21               	decfsz	??_setRowHigh& (0+255),f,b
  1421  000E12  D7FA               	goto	u1225
  1422  000E14  0101               	movlb	1	; () banked
  1423  000E16  5122               	movf	(??_setRowHigh+1)& (0+255),w,b
  1424  000E18  128C               	iorwf	3980,f,c	;volatile
  1425  000E1A  0012               	return	
  1426  000E1C                     __end_of_setRowHigh:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           prodh	equ	0xFF4
  1433                           prodl	equ	0xFF3
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           postdec1	equ	0xFE5
  1437                           fsr1l	equ	0xFE1
  1438                           postinc2	equ	0xFDE
  1439                           fsr2h	equ	0xFDA
  1440                           fsr2l	equ	0xFD9
  1441                           status	equ	0xFD8
  1442                           
  1443 ;; *************** function _setColHigh *****************
  1444 ;; Defined at:
  1445 ;;		line 20 in file "Source/LED-API.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  column          1    wreg     unsigned char 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  column          1   35[BANK1 ] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1459 ;;      Params:         0       0       0       0       0       0       0
  1460 ;;      Locals:         0       0       1       0       0       0       0
  1461 ;;      Temps:          0       0       2       0       0       0       0
  1462 ;;      Totals:         0       0       3       0       0       0       0
  1463 ;;Total ram usage:        3 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    6
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_refresh
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text5
  1474  001096                     __ptext5:
  1475                           	opt stack 0
  1476  001096                     _setColHigh:
  1477                           	opt stack 23
  1478                           
  1479                           ; BSR set to: 1
  1480                           ;incstack = 0
  1481                           ;setColHigh@column stored from wreg
  1482  001096  0101               	movlb	1	; () banked
  1483  001098  6F23               	movwf	setColHigh@column& (0+255),b
  1484                           
  1485                           ;LED-API.c: 21: LATA |= (1 << column);
  1486  00109A  C123  F121         	movff	setColHigh@column,??_setColHigh
  1487  00109E  0E01               	movlw	1
  1488  0010A0  0101               	movlb	1	; () banked
  1489  0010A2  6F22               	movwf	(??_setColHigh+1)& (0+255),b
  1490  0010A4  0101               	movlb	1	; () banked
  1491  0010A6  2B21               	incf	??_setColHigh& (0+255),f,b
  1492  0010A8  D003               	goto	u1194
  1493  0010AA                     u1195:
  1494  0010AA  0101               	movlb	1	; () banked
  1495  0010AC  90D8               	bcf	status,0,c
  1496  0010AE  3722               	rlcf	(??_setColHigh+1)& (0+255),f,b
  1497  0010B0                     u1194:
  1498  0010B0  0101               	movlb	1	; () banked
  1499  0010B2  2F21               	decfsz	??_setColHigh& (0+255),f,b
  1500  0010B4  D7FA               	goto	u1195
  1501  0010B6  0101               	movlb	1	; () banked
  1502  0010B8  5122               	movf	(??_setColHigh+1)& (0+255),w,b
  1503  0010BA  1289               	iorwf	3977,f,c	;volatile
  1504                           
  1505                           ; BSR set to: 1
  1506  0010BC  0012               	return		;funcret
  1507  0010BE                     __end_of_setColHigh:
  1508                           	opt stack 0
  1509                           tblptru	equ	0xFF8
  1510                           tblptrh	equ	0xFF7
  1511                           tblptrl	equ	0xFF6
  1512                           tablat	equ	0xFF5
  1513                           prodh	equ	0xFF4
  1514                           prodl	equ	0xFF3
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           postdec1	equ	0xFE5
  1518                           fsr1l	equ	0xFE1
  1519                           postinc2	equ	0xFDE
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _allOff *****************
  1525 ;; Defined at:
  1526 ;;		line 171 in file "Source/LED-API.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1540 ;;      Params:         0       0       0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    6
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_refresh
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text6
  1555  001144                     __ptext6:
  1556                           	opt stack 0
  1557  001144                     _allOff:
  1558                           	opt stack 23
  1559                           
  1560                           ;LED-API.c: 172: LATA = 0;
  1561                           
  1562                           ; BSR set to: 1
  1563                           ;incstack = 0
  1564  001144  0E00               	movlw	0
  1565  001146  6E89               	movwf	3977,c	;volatile
  1566                           
  1567                           ;LED-API.c: 173: LATC = 0;
  1568  001148  0E00               	movlw	0
  1569  00114A  6E8B               	movwf	3979,c	;volatile
  1570                           
  1571                           ;LED-API.c: 174: LATD = 0;
  1572  00114C  0E00               	movlw	0
  1573  00114E  6E8C               	movwf	3980,c	;volatile
  1574  001150  0012               	return		;funcret
  1575  001152                     __end_of_allOff:
  1576                           	opt stack 0
  1577                           tblptru	equ	0xFF8
  1578                           tblptrh	equ	0xFF7
  1579                           tblptrl	equ	0xFF6
  1580                           tablat	equ	0xFF5
  1581                           prodh	equ	0xFF4
  1582                           prodl	equ	0xFF3
  1583                           postinc0	equ	0xFEE
  1584                           wreg	equ	0xFE8
  1585                           postdec1	equ	0xFE5
  1586                           fsr1l	equ	0xFE1
  1587                           postinc2	equ	0xFDE
  1588                           fsr2h	equ	0xFDA
  1589                           fsr2l	equ	0xFD9
  1590                           status	equ	0xFD8
  1591                           
  1592 ;; *************** function _drawSymbol *****************
  1593 ;; Defined at:
  1594 ;;		line 85 in file "Source/LED-API.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  chosenSymbol    1    wreg     unsigned char 
  1597 ;;  offSetX         1   37[BANK1 ] unsigned char 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  chosenSymbol    1  174[BANK1 ] unsigned char 
  1600 ;;  i               1   86[BANK2 ] unsigned char 
  1601 ;;  i               1   85[BANK2 ] unsigned char 
  1602 ;;  i               1   84[BANK2 ] unsigned char 
  1603 ;;  i               1   83[BANK2 ] unsigned char 
  1604 ;;  i               1   82[BANK2 ] unsigned char 
  1605 ;;  i               1  176[BANK1 ] unsigned char 
  1606 ;;  i               1  175[BANK1 ] unsigned char 
  1607 ;;  symbolGo       68  106[BANK1 ] unsigned char [2][34]
  1608 ;;  symbolPlay     68   38[BANK1 ] unsigned char [2][34]
  1609 ;;  symbolThree    30   30[BANK2 ] unsigned char [2][15]
  1610 ;;  symbolTwo      30    0[BANK2 ] unsigned char [2][15]
  1611 ;;  symbolOne      22   60[BANK2 ] unsigned char [2][11]
  1612 ;;  symbolArrowR   16   16[BANK3 ] unsigned char [2][8]
  1613 ;;  symbolArrowL   16    0[BANK3 ] unsigned char [2][8]
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1623 ;;      Params:         0       0       1       0       0       0       0
  1624 ;;      Locals:         0       0     139      87      32       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0
  1626 ;;      Totals:         0       0     140      87      32       0       0
  1627 ;;Total ram usage:      259 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    7
  1630 ;; This function calls:
  1631 ;;		_on
  1632 ;; This function is called by:
  1633 ;;		_startPong
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text7
  1638  00001A                     __ptext7:
  1639                           	opt stack 0
  1640  00001A                     _drawSymbol:
  1641                           	opt stack 21
  1642                           
  1643                           ;incstack = 0
  1644                           ;drawSymbol@chosenSymbol stored from wreg
  1645  00001A  0101               	movlb	1	; () banked
  1646  00001C  6FAE               	movwf	drawSymbol@chosenSymbol& (0+255),b
  1647                           
  1648                           ;LED-API.c: 87: char symbolOne[11][2] = {{2,0},{3,0}, {4,0}, {3,1}, {3,2}, {3,3}, {3,4},
      +                           {3,5}, {3,6}, {3,7}, {4,6}};
  1649  00001E  EE22  F080         	lfsr	2,drawSymbol@F3224
  1650  000022  EE12  F0E2         	lfsr	1,drawSymbol@symbolOne
  1651  000026  0E15               	movlw	21
  1652  000028                     u2491:
  1653  000028  CFDB FFE3          	movff	plusw2,plusw1
  1654  00002C  06E8               	decf	wreg,f,c
  1655  00002E  E2FC               	bc	u2491
  1656                           
  1657                           ;LED-API.c: 88: char symbolTwo[15][2] = {{1,0}, {2,0}, {3,0}, {4,0}, {5,0}, {5,1}, {4,2}
      +                          , {3,3}, {2,4}, {1,5}, {1,6}, {5,6}, {2,7}, {3,7}, {4,7}};
  1658  000030  EE22  F044         	lfsr	2,drawSymbol@F3227
  1659  000034  EE12  F0A6         	lfsr	1,drawSymbol@symbolTwo
  1660  000038  0E1D               	movlw	29
  1661  00003A                     u2501:
  1662  00003A  CFDB FFE3          	movff	plusw2,plusw1
  1663  00003E  06E8               	decf	wreg,f,c
  1664  000040  E2FC               	bc	u2501
  1665                           
  1666                           ;LED-API.c: 89: char symbolThree[15][2] = {{2,0}, {3,0}, {4,0}, {5,1}, {1,1}, {1,2}, {1,
      +                          3}, {2,4}, {3,4}, {1,5}, {1,6}, {2,7}, {3,7}, {4,7}, {5,6}};
  1667  000042  EE22  F062         	lfsr	2,drawSymbol@F3230
  1668  000046  EE12  F0C4         	lfsr	1,drawSymbol@symbolThree
  1669  00004A  0E1D               	movlw	29
  1670  00004C                     u2511:
  1671  00004C  CFDB FFE3          	movff	plusw2,plusw1
  1672  000050  06E8               	decf	wreg,f,c
  1673  000052  E2FC               	bc	u2511
  1674                           
  1675                           ;LED-API.c: 91: char symbolPlay[34][2] = {
  1676                           ;LED-API.c: 92: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  1677                           ;LED-API.c: 93: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  1678                           ;LED-API.c: 94: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  1679                           ;LED-API.c: 95: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  1680  000054  EE22  F000         	lfsr	2,drawSymbol@F3233
  1681  000058  EE11  F026         	lfsr	1,drawSymbol@symbolPlay
  1682  00005C  0E43               	movlw	67
  1683  00005E                     u2521:
  1684  00005E  CFDB FFE3          	movff	plusw2,plusw1
  1685  000062  06E8               	decf	wreg,f,c
  1686  000064  E2FC               	bc	u2521
  1687                           
  1688                           ;LED-API.c: 97: char symbolGo[34][2] = {
  1689                           ;LED-API.c: 98: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0},
      +                          {5,0},{6,1},{5,2},{4,2},
  1690                           ;LED-API.c: 99: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},{
      +                          13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  1691  000066  EE23  F080         	lfsr	2,drawSymbol@F3236
  1692  00006A  EE11  F06A         	lfsr	1,drawSymbol@symbolGo
  1693  00006E  0E43               	movlw	67
  1694  000070                     u2531:
  1695  000070  CFDB FFE3          	movff	plusw2,plusw1
  1696  000074  06E8               	decf	wreg,f,c
  1697  000076  E2FC               	bc	u2531
  1698                           
  1699                           ;LED-API.c: 101: char symbolArrowLeft[8][2] = {{3,0}, {3,7}, {4,1}, {4,6}, {5,2}, {5,5},
      +                           {6,3}, {6,4}};
  1700  000078  EE21  F0B3         	lfsr	2,drawSymbol@F3239
  1701  00007C  EE13  F0C4         	lfsr	1,drawSymbol@symbolArrowLeft
  1702  000080  0E0F               	movlw	15
  1703  000082                     u2541:
  1704  000082  CFDB FFE3          	movff	plusw2,plusw1
  1705  000086  06E8               	decf	wreg,f,c
  1706  000088  E2FC               	bc	u2541
  1707                           
  1708                           ;LED-API.c: 102: char symbolArrowRight[8][2] = {{4,0}, {3,1}, {2,2}, {1,3}, {1,4}, {2,5}
      +                          , {3,6}, {4,7}};
  1709  00008A  EE22  F096         	lfsr	2,drawSymbol@F3242
  1710  00008E  EE13  F0D4         	lfsr	1,drawSymbol@symbolArrowRight
  1711  000092  0E0F               	movlw	15
  1712  000094                     u2551:
  1713  000094  CFDB FFE3          	movff	plusw2,plusw1
  1714  000098  06E8               	decf	wreg,f,c
  1715  00009A  E2FC               	bc	u2551
  1716                           
  1717                           ;LED-API.c: 104: switch(chosenSymbol)
  1718  00009C  D11D               	goto	l2690
  1719  00009E                     l2604:
  1720                           
  1721                           ;LED-API.c: 109: for(unsigned char i = 0; i < 11; i++)
  1722  00009E  0E00               	movlw	0
  1723  0000A0  0101               	movlb	1	; () banked
  1724  0000A2  6FAF               	movwf	drawSymbol@i& (0+255),b
  1725  0000A4                     l2606:
  1726                           
  1727                           ; BSR set to: 1
  1728  0000A4  0E0A               	movlw	10
  1729  0000A6  0101               	movlb	1	; () banked
  1730  0000A8  65AF               	cpfsgt	drawSymbol@i& (0+255),b
  1731  0000AA  D001               	goto	l2610
  1732  0000AC  0012               	return	
  1733  0000AE                     l2610:
  1734                           
  1735                           ; BSR set to: 1
  1736                           ;LED-API.c: 110: {
  1737                           ;LED-API.c: 111: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  1738  0000AE  0101               	movlb	1	; () banked
  1739  0000B0  51AF               	movf	drawSymbol@i& (0+255),w,b
  1740  0000B2  0D02               	mullw	2
  1741  0000B4  0EE2               	movlw	low drawSymbol@symbolOne
  1742  0000B6  24F3               	addwf	prodl,w,c
  1743  0000B8  6ED9               	movwf	fsr2l,c
  1744  0000BA  0E02               	movlw	high drawSymbol@symbolOne
  1745  0000BC  20F4               	addwfc	prodh,w,c
  1746  0000BE  6EDA               	movwf	fsr2h,c
  1747  0000C0  50DF               	movf	indf2,w,c
  1748  0000C2  0101               	movlb	1	; () banked
  1749  0000C4  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  1750  0000C6  0101               	movlb	1	; () banked
  1751  0000C8  6F21               	movwf	on@row& (0+255),b
  1752  0000CA  0101               	movlb	1	; () banked
  1753  0000CC  51AF               	movf	drawSymbol@i& (0+255),w,b
  1754  0000CE  0D02               	mullw	2
  1755  0000D0  0E01               	movlw	1
  1756  0000D2  26F3               	addwf	prodl,f,c
  1757  0000D4  0E00               	movlw	0
  1758  0000D6  22F4               	addwfc	prodh,f,c
  1759  0000D8  0EE2               	movlw	low drawSymbol@symbolOne
  1760  0000DA  24F3               	addwf	prodl,w,c
  1761  0000DC  6ED9               	movwf	fsr2l,c
  1762  0000DE  0E02               	movlw	high drawSymbol@symbolOne
  1763  0000E0  20F4               	addwfc	prodh,w,c
  1764  0000E2  6EDA               	movwf	fsr2h,c
  1765  0000E4  50DF               	movf	indf2,w,c
  1766  0000E6  EC3B  F007         	call	_on
  1767  0000EA  0101               	movlb	1	; () banked
  1768  0000EC  2BAF               	incf	drawSymbol@i& (0+255),f,b
  1769  0000EE  D7DA               	goto	l2606
  1770  0000F0                     l2616:
  1771                           
  1772                           ; BSR set to: 1
  1773                           ;LED-API.c: 117: for(unsigned char i = 0; i < 15; i++)
  1774  0000F0  0E00               	movlw	0
  1775  0000F2  0101               	movlb	1	; () banked
  1776  0000F4  6FB0               	movwf	drawSymbol@i_82& (0+255),b
  1777  0000F6                     l2618:
  1778                           
  1779                           ; BSR set to: 1
  1780  0000F6  0E0E               	movlw	14
  1781  0000F8  0101               	movlb	1	; () banked
  1782  0000FA  65B0               	cpfsgt	drawSymbol@i_82& (0+255),b
  1783  0000FC  D001               	goto	l2622
  1784  0000FE  0012               	return	
  1785  000100                     l2622:
  1786                           
  1787                           ; BSR set to: 1
  1788                           ;LED-API.c: 118: {
  1789                           ;LED-API.c: 119: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  1790  000100  0101               	movlb	1	; () banked
  1791  000102  51B0               	movf	drawSymbol@i_82& (0+255),w,b
  1792  000104  0D02               	mullw	2
  1793  000106  0EA6               	movlw	low drawSymbol@symbolTwo
  1794  000108  24F3               	addwf	prodl,w,c
  1795  00010A  6ED9               	movwf	fsr2l,c
  1796  00010C  0E02               	movlw	high drawSymbol@symbolTwo
  1797  00010E  20F4               	addwfc	prodh,w,c
  1798  000110  6EDA               	movwf	fsr2h,c
  1799  000112  50DF               	movf	indf2,w,c
  1800  000114  0101               	movlb	1	; () banked
  1801  000116  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  1802  000118  0101               	movlb	1	; () banked
  1803  00011A  6F21               	movwf	on@row& (0+255),b
  1804  00011C  0101               	movlb	1	; () banked
  1805  00011E  51B0               	movf	drawSymbol@i_82& (0+255),w,b
  1806  000120  0D02               	mullw	2
  1807  000122  0E01               	movlw	1
  1808  000124  26F3               	addwf	prodl,f,c
  1809  000126  0E00               	movlw	0
  1810  000128  22F4               	addwfc	prodh,f,c
  1811  00012A  0EA6               	movlw	low drawSymbol@symbolTwo
  1812  00012C  24F3               	addwf	prodl,w,c
  1813  00012E  6ED9               	movwf	fsr2l,c
  1814  000130  0E02               	movlw	high drawSymbol@symbolTwo
  1815  000132  20F4               	addwfc	prodh,w,c
  1816  000134  6EDA               	movwf	fsr2h,c
  1817  000136  50DF               	movf	indf2,w,c
  1818  000138  EC3B  F007         	call	_on
  1819  00013C  0101               	movlb	1	; () banked
  1820  00013E  2BB0               	incf	drawSymbol@i_82& (0+255),f,b
  1821  000140  D7DA               	goto	l2618
  1822  000142                     l2628:
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;LED-API.c: 125: for(unsigned char i = 0; i < 15; i++)
  1826  000142  0E00               	movlw	0
  1827  000144  0102               	movlb	2	; () banked
  1828  000146  6FF8               	movwf	drawSymbol@i_83& (0+255),b
  1829  000148                     l2630:
  1830                           
  1831                           ; BSR set to: 2
  1832  000148  0E0E               	movlw	14
  1833  00014A  0102               	movlb	2	; () banked
  1834  00014C  65F8               	cpfsgt	drawSymbol@i_83& (0+255),b
  1835  00014E  D001               	goto	l2634
  1836  000150  0012               	return	
  1837  000152                     l2634:
  1838                           
  1839                           ; BSR set to: 2
  1840                           ;LED-API.c: 126: {
  1841                           ;LED-API.c: 127: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  1842  000152  0102               	movlb	2	; () banked
  1843  000154  51F8               	movf	drawSymbol@i_83& (0+255),w,b
  1844  000156  0D02               	mullw	2
  1845  000158  0EC4               	movlw	low drawSymbol@symbolThree
  1846  00015A  24F3               	addwf	prodl,w,c
  1847  00015C  6ED9               	movwf	fsr2l,c
  1848  00015E  0E02               	movlw	high drawSymbol@symbolThree
  1849  000160  20F4               	addwfc	prodh,w,c
  1850  000162  6EDA               	movwf	fsr2h,c
  1851  000164  50DF               	movf	indf2,w,c
  1852  000166  0101               	movlb	1	; () banked
  1853  000168  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  1854  00016A  0101               	movlb	1	; () banked
  1855  00016C  6F21               	movwf	on@row& (0+255),b
  1856  00016E  0102               	movlb	2	; () banked
  1857  000170  51F8               	movf	drawSymbol@i_83& (0+255),w,b
  1858  000172  0D02               	mullw	2
  1859  000174  0E01               	movlw	1
  1860  000176  26F3               	addwf	prodl,f,c
  1861  000178  0E00               	movlw	0
  1862  00017A  22F4               	addwfc	prodh,f,c
  1863  00017C  0EC4               	movlw	low drawSymbol@symbolThree
  1864  00017E  24F3               	addwf	prodl,w,c
  1865  000180  6ED9               	movwf	fsr2l,c
  1866  000182  0E02               	movlw	high drawSymbol@symbolThree
  1867  000184  20F4               	addwfc	prodh,w,c
  1868  000186  6EDA               	movwf	fsr2h,c
  1869  000188  50DF               	movf	indf2,w,c
  1870  00018A  EC3B  F007         	call	_on
  1871  00018E  0102               	movlb	2	; () banked
  1872  000190  2BF8               	incf	drawSymbol@i_83& (0+255),f,b
  1873  000192  D7DA               	goto	l2630
  1874  000194                     l2640:
  1875                           
  1876                           ;LED-API.c: 133: for(unsigned char i = 0; i < 34; i++)
  1877  000194  0E00               	movlw	0
  1878  000196  0102               	movlb	2	; () banked
  1879  000198  6FF9               	movwf	drawSymbol@i_84& (0+255),b
  1880  00019A                     l2642:
  1881                           
  1882                           ; BSR set to: 2
  1883  00019A  0E21               	movlw	33
  1884  00019C  0102               	movlb	2	; () banked
  1885  00019E  65F9               	cpfsgt	drawSymbol@i_84& (0+255),b
  1886  0001A0  D001               	goto	l2646
  1887  0001A2  0012               	return	
  1888  0001A4                     l2646:
  1889                           
  1890                           ; BSR set to: 2
  1891                           ;LED-API.c: 134: {
  1892                           ;LED-API.c: 135: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  1893  0001A4  0102               	movlb	2	; () banked
  1894  0001A6  51F9               	movf	drawSymbol@i_84& (0+255),w,b
  1895  0001A8  0D02               	mullw	2
  1896  0001AA  0E26               	movlw	low drawSymbol@symbolPlay
  1897  0001AC  24F3               	addwf	prodl,w,c
  1898  0001AE  6ED9               	movwf	fsr2l,c
  1899  0001B0  0E01               	movlw	high drawSymbol@symbolPlay
  1900  0001B2  20F4               	addwfc	prodh,w,c
  1901  0001B4  6EDA               	movwf	fsr2h,c
  1902  0001B6  50DF               	movf	indf2,w,c
  1903  0001B8  0101               	movlb	1	; () banked
  1904  0001BA  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  1905  0001BC  0101               	movlb	1	; () banked
  1906  0001BE  6F21               	movwf	on@row& (0+255),b
  1907  0001C0  0102               	movlb	2	; () banked
  1908  0001C2  51F9               	movf	drawSymbol@i_84& (0+255),w,b
  1909  0001C4  0D02               	mullw	2
  1910  0001C6  0E01               	movlw	1
  1911  0001C8  26F3               	addwf	prodl,f,c
  1912  0001CA  0E00               	movlw	0
  1913  0001CC  22F4               	addwfc	prodh,f,c
  1914  0001CE  0E26               	movlw	low drawSymbol@symbolPlay
  1915  0001D0  24F3               	addwf	prodl,w,c
  1916  0001D2  6ED9               	movwf	fsr2l,c
  1917  0001D4  0E01               	movlw	high drawSymbol@symbolPlay
  1918  0001D6  20F4               	addwfc	prodh,w,c
  1919  0001D8  6EDA               	movwf	fsr2h,c
  1920  0001DA  50DF               	movf	indf2,w,c
  1921  0001DC  EC3B  F007         	call	_on
  1922  0001E0  0102               	movlb	2	; () banked
  1923  0001E2  2BF9               	incf	drawSymbol@i_84& (0+255),f,b
  1924  0001E4  D7DA               	goto	l2642
  1925  0001E6                     l2652:
  1926                           
  1927                           ;LED-API.c: 141: for(unsigned char i = 0; i < 34; i++)
  1928  0001E6  0E00               	movlw	0
  1929  0001E8  0102               	movlb	2	; () banked
  1930  0001EA  6FFA               	movwf	drawSymbol@i_85& (0+255),b
  1931  0001EC                     l2654:
  1932                           
  1933                           ; BSR set to: 2
  1934  0001EC  0E21               	movlw	33
  1935  0001EE  0102               	movlb	2	; () banked
  1936  0001F0  65FA               	cpfsgt	drawSymbol@i_85& (0+255),b
  1937  0001F2  D001               	goto	l2658
  1938  0001F4  0012               	return	
  1939  0001F6                     l2658:
  1940                           
  1941                           ; BSR set to: 2
  1942                           ;LED-API.c: 142: {
  1943                           ;LED-API.c: 143: on(symbolGo[i][1], symbolGo[i][0]);
  1944  0001F6  0102               	movlb	2	; () banked
  1945  0001F8  51FA               	movf	drawSymbol@i_85& (0+255),w,b
  1946  0001FA  0D02               	mullw	2
  1947  0001FC  0E6A               	movlw	low drawSymbol@symbolGo
  1948  0001FE  24F3               	addwf	prodl,w,c
  1949  000200  6ED9               	movwf	fsr2l,c
  1950  000202  0E01               	movlw	high drawSymbol@symbolGo
  1951  000204  20F4               	addwfc	prodh,w,c
  1952  000206  6EDA               	movwf	fsr2h,c
  1953  000208  50DF               	movf	indf2,w,c
  1954  00020A  0101               	movlb	1	; () banked
  1955  00020C  6F21               	movwf	on@row& (0+255),b
  1956  00020E  0102               	movlb	2	; () banked
  1957  000210  51FA               	movf	drawSymbol@i_85& (0+255),w,b
  1958  000212  0D02               	mullw	2
  1959  000214  0E01               	movlw	1
  1960  000216  26F3               	addwf	prodl,f,c
  1961  000218  0E00               	movlw	0
  1962  00021A  22F4               	addwfc	prodh,f,c
  1963  00021C  0E6A               	movlw	low drawSymbol@symbolGo
  1964  00021E  24F3               	addwf	prodl,w,c
  1965  000220  6ED9               	movwf	fsr2l,c
  1966  000222  0E01               	movlw	high drawSymbol@symbolGo
  1967  000224  20F4               	addwfc	prodh,w,c
  1968  000226  6EDA               	movwf	fsr2h,c
  1969  000228  50DF               	movf	indf2,w,c
  1970  00022A  EC3B  F007         	call	_on
  1971  00022E  0102               	movlb	2	; () banked
  1972  000230  2BFA               	incf	drawSymbol@i_85& (0+255),f,b
  1973  000232  D7DC               	goto	l2654
  1974  000234                     l2664:
  1975                           
  1976                           ;LED-API.c: 147: for(unsigned char i = 0; i < 8; i++)
  1977  000234  0E00               	movlw	0
  1978  000236  0102               	movlb	2	; () banked
  1979  000238  6FFB               	movwf	drawSymbol@i_86& (0+255),b
  1980  00023A                     l2666:
  1981                           
  1982                           ; BSR set to: 2
  1983  00023A  0E07               	movlw	7
  1984  00023C  0102               	movlb	2	; () banked
  1985  00023E  65FB               	cpfsgt	drawSymbol@i_86& (0+255),b
  1986  000240  D001               	goto	l2670
  1987  000242  0012               	return	
  1988  000244                     l2670:
  1989                           
  1990                           ; BSR set to: 2
  1991                           ;LED-API.c: 148: {
  1992                           ;LED-API.c: 149: on(symbolArrowLeft[i][1], symbolArrowLeft[i][0] + offSetX);
  1993  000244  0102               	movlb	2	; () banked
  1994  000246  51FB               	movf	drawSymbol@i_86& (0+255),w,b
  1995  000248  0D02               	mullw	2
  1996  00024A  0EC4               	movlw	low drawSymbol@symbolArrowLeft
  1997  00024C  24F3               	addwf	prodl,w,c
  1998  00024E  6ED9               	movwf	fsr2l,c
  1999  000250  0E03               	movlw	high drawSymbol@symbolArrowLeft
  2000  000252  20F4               	addwfc	prodh,w,c
  2001  000254  6EDA               	movwf	fsr2h,c
  2002  000256  50DF               	movf	indf2,w,c
  2003  000258  0101               	movlb	1	; () banked
  2004  00025A  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  2005  00025C  0101               	movlb	1	; () banked
  2006  00025E  6F21               	movwf	on@row& (0+255),b
  2007  000260  0102               	movlb	2	; () banked
  2008  000262  51FB               	movf	drawSymbol@i_86& (0+255),w,b
  2009  000264  0D02               	mullw	2
  2010  000266  0E01               	movlw	1
  2011  000268  26F3               	addwf	prodl,f,c
  2012  00026A  0E00               	movlw	0
  2013  00026C  22F4               	addwfc	prodh,f,c
  2014  00026E  0EC4               	movlw	low drawSymbol@symbolArrowLeft
  2015  000270  24F3               	addwf	prodl,w,c
  2016  000272  6ED9               	movwf	fsr2l,c
  2017  000274  0E03               	movlw	high drawSymbol@symbolArrowLeft
  2018  000276  20F4               	addwfc	prodh,w,c
  2019  000278  6EDA               	movwf	fsr2h,c
  2020  00027A  50DF               	movf	indf2,w,c
  2021  00027C  EC3B  F007         	call	_on
  2022  000280  0102               	movlb	2	; () banked
  2023  000282  2BFB               	incf	drawSymbol@i_86& (0+255),f,b
  2024  000284  D7DA               	goto	l2666
  2025  000286                     l2676:
  2026                           
  2027                           ;LED-API.c: 153: for(unsigned char i = 0; i < 8; i++)
  2028  000286  0E00               	movlw	0
  2029  000288  0102               	movlb	2	; () banked
  2030  00028A  6FFC               	movwf	drawSymbol@i_87& (0+255),b
  2031  00028C                     l2678:
  2032                           
  2033                           ; BSR set to: 2
  2034  00028C  0E07               	movlw	7
  2035  00028E  0102               	movlb	2	; () banked
  2036  000290  65FC               	cpfsgt	drawSymbol@i_87& (0+255),b
  2037  000292  D001               	goto	l2682
  2038  000294  0012               	return	
  2039  000296                     l2682:
  2040                           
  2041                           ; BSR set to: 2
  2042                           ;LED-API.c: 154: {
  2043                           ;LED-API.c: 155: on(symbolArrowRight[i][1], symbolArrowRight[i][0]+ offSetX);
  2044  000296  0102               	movlb	2	; () banked
  2045  000298  51FC               	movf	drawSymbol@i_87& (0+255),w,b
  2046  00029A  0D02               	mullw	2
  2047  00029C  0ED4               	movlw	low drawSymbol@symbolArrowRight
  2048  00029E  24F3               	addwf	prodl,w,c
  2049  0002A0  6ED9               	movwf	fsr2l,c
  2050  0002A2  0E03               	movlw	high drawSymbol@symbolArrowRight
  2051  0002A4  20F4               	addwfc	prodh,w,c
  2052  0002A6  6EDA               	movwf	fsr2h,c
  2053  0002A8  50DF               	movf	indf2,w,c
  2054  0002AA  0101               	movlb	1	; () banked
  2055  0002AC  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  2056  0002AE  0101               	movlb	1	; () banked
  2057  0002B0  6F21               	movwf	on@row& (0+255),b
  2058  0002B2  0102               	movlb	2	; () banked
  2059  0002B4  51FC               	movf	drawSymbol@i_87& (0+255),w,b
  2060  0002B6  0D02               	mullw	2
  2061  0002B8  0E01               	movlw	1
  2062  0002BA  26F3               	addwf	prodl,f,c
  2063  0002BC  0E00               	movlw	0
  2064  0002BE  22F4               	addwfc	prodh,f,c
  2065  0002C0  0ED4               	movlw	low drawSymbol@symbolArrowRight
  2066  0002C2  24F3               	addwf	prodl,w,c
  2067  0002C4  6ED9               	movwf	fsr2l,c
  2068  0002C6  0E03               	movlw	high drawSymbol@symbolArrowRight
  2069  0002C8  20F4               	addwfc	prodh,w,c
  2070  0002CA  6EDA               	movwf	fsr2h,c
  2071  0002CC  50DF               	movf	indf2,w,c
  2072  0002CE  EC3B  F007         	call	_on
  2073  0002D2  0102               	movlb	2	; () banked
  2074  0002D4  2BFC               	incf	drawSymbol@i_87& (0+255),f,b
  2075  0002D6  D7DA               	goto	l2678
  2076  0002D8                     l2690:
  2077  0002D8  0101               	movlb	1	; () banked
  2078  0002DA  51AE               	movf	drawSymbol@chosenSymbol& (0+255),w,b
  2079                           
  2080                           ; Switch size 1, requested type "space"
  2081                           ; Number of cases is 7, Range of values is 1 to 7
  2082                           ; switch strategies available:
  2083                           ; Name         Instructions Cycles
  2084                           ; simple_byte           22    12 (average)
  2085                           ;	Chosen strategy is simple_byte
  2086  0002DC  0A01               	xorlw	1	; case 1
  2087  0002DE  B4D8               	btfsc	status,2,c
  2088  0002E0  D6DE               	goto	l2604
  2089  0002E2  0A03               	xorlw	3	; case 2
  2090  0002E4  B4D8               	btfsc	status,2,c
  2091  0002E6  D704               	goto	l2616
  2092  0002E8  0A01               	xorlw	1	; case 3
  2093  0002EA  B4D8               	btfsc	status,2,c
  2094  0002EC  D72A               	goto	l2628
  2095  0002EE  0A07               	xorlw	7	; case 4
  2096  0002F0  B4D8               	btfsc	status,2,c
  2097  0002F2  D750               	goto	l2640
  2098  0002F4  0A01               	xorlw	1	; case 5
  2099  0002F6  B4D8               	btfsc	status,2,c
  2100  0002F8  D776               	goto	l2652
  2101  0002FA  0A03               	xorlw	3	; case 6
  2102  0002FC  B4D8               	btfsc	status,2,c
  2103  0002FE  D79A               	goto	l2664
  2104  000300  0A01               	xorlw	1	; case 7
  2105  000302  A4D8               	btfss	status,2,c
  2106  000304  0012               	return	
  2107  000306  D7BF               	goto	l2676
  2108  000308                     __end_of_drawSymbol:
  2109                           	opt stack 0
  2110                           tblptru	equ	0xFF8
  2111                           tblptrh	equ	0xFF7
  2112                           tblptrl	equ	0xFF6
  2113                           tablat	equ	0xFF5
  2114                           prodh	equ	0xFF4
  2115                           prodl	equ	0xFF3
  2116                           postinc0	equ	0xFEE
  2117                           wreg	equ	0xFE8
  2118                           postdec1	equ	0xFE5
  2119                           plusw1	equ	0xFE3
  2120                           fsr1l	equ	0xFE1
  2121                           indf2	equ	0xFDF
  2122                           postinc2	equ	0xFDE
  2123                           plusw2	equ	0xFDB
  2124                           fsr2h	equ	0xFDA
  2125                           fsr2l	equ	0xFD9
  2126                           status	equ	0xFD8
  2127                           
  2128 ;; *************** function _on *****************
  2129 ;; Defined at:
  2130 ;;		line 43 in file "Source/LED-API.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  column          1    wreg     unsigned char 
  2133 ;;  row             1   33[BANK1 ] unsigned char 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  column          1   36[BANK1 ] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2145 ;;      Params:         0       0       1       0       0       0       0
  2146 ;;      Locals:         0       0       1       0       0       0       0
  2147 ;;      Temps:          0       0       2       0       0       0       0
  2148 ;;      Totals:         0       0       4       0       0       0       0
  2149 ;;Total ram usage:        4 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    6
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_drawSymbol
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text8
  2160  000E76                     __ptext8:
  2161                           	opt stack 0
  2162  000E76                     _on:
  2163                           	opt stack 21
  2164                           
  2165                           ;incstack = 0
  2166                           ;on@column stored from wreg
  2167  000E76  0101               	movlb	1	; () banked
  2168  000E78  6F24               	movwf	on@column& (0+255),b
  2169                           
  2170                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  2171  000E7A  0E0F               	movlw	15
  2172  000E7C  0101               	movlb	1	; () banked
  2173  000E7E  6521               	cpfsgt	on@row& (0+255),b
  2174  000E80  D001               	goto	l2506
  2175  000E82  0012               	return	
  2176  000E84                     l2506:
  2177                           
  2178                           ; BSR set to: 1
  2179                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  2180  000E84  0E07               	movlw	7
  2181  000E86  0101               	movlb	1	; () banked
  2182  000E88  6524               	cpfsgt	on@column& (0+255),b
  2183  000E8A  D001               	goto	l2510
  2184  000E8C  0012               	return	
  2185  000E8E                     l2510:
  2186                           
  2187                           ; BSR set to: 1
  2188                           ;LED-API.c: 50: pixels[column][row] = 1;
  2189  000E8E  0101               	movlb	1	; () banked
  2190  000E90  5124               	movf	on@column& (0+255),w,b
  2191  000E92  0D10               	mullw	16
  2192  000E94  0E00               	movlw	low _pixels
  2193  000E96  0101               	movlb	1	; () banked
  2194  000E98  6F22               	movwf	??_on& (0+255),b
  2195  000E9A  0E03               	movlw	high _pixels
  2196  000E9C  0101               	movlb	1	; () banked
  2197  000E9E  6F23               	movwf	(??_on+1)& (0+255),b
  2198  000EA0  50F3               	movf	prodl,w,c
  2199  000EA2  0101               	movlb	1	; () banked
  2200  000EA4  2722               	addwf	??_on& (0+255),f,b
  2201  000EA6  50F4               	movf	prodh,w,c
  2202  000EA8  0101               	movlb	1	; () banked
  2203  000EAA  2323               	addwfc	(??_on+1)& (0+255),f,b
  2204  000EAC  0101               	movlb	1	; () banked
  2205  000EAE  5121               	movf	on@row& (0+255),w,b
  2206  000EB0  0D01               	mullw	1
  2207  000EB2  50F3               	movf	prodl,w,c
  2208  000EB4  0101               	movlb	1	; () banked
  2209  000EB6  2522               	addwf	??_on& (0+255),w,b
  2210  000EB8  6ED9               	movwf	fsr2l,c
  2211  000EBA  50F4               	movf	prodh,w,c
  2212  000EBC  0101               	movlb	1	; () banked
  2213  000EBE  2123               	addwfc	(??_on+1)& (0+255),w,b
  2214  000EC0  6EDA               	movwf	fsr2h,c
  2215  000EC2  0E01               	movlw	1
  2216  000EC4  6EDF               	movwf	indf2,c
  2217                           
  2218                           ; BSR set to: 1
  2219  000EC6  0012               	return		;funcret
  2220  000EC8                     __end_of_on:
  2221                           	opt stack 0
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           prodh	equ	0xFF4
  2227                           prodl	equ	0xFF3
  2228                           postinc0	equ	0xFEE
  2229                           wreg	equ	0xFE8
  2230                           postdec1	equ	0xFE5
  2231                           plusw1	equ	0xFE3
  2232                           fsr1l	equ	0xFE1
  2233                           indf2	equ	0xFDF
  2234                           postinc2	equ	0xFDE
  2235                           plusw2	equ	0xFDB
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _initializeLED *****************
  2241 ;; Defined at:
  2242 ;;		line 31 in file "Source/LED-API.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2256 ;;      Params:         0       0       0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    7
  2263 ;; This function calls:
  2264 ;;		_turnAllOff
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text9
  2271  0010BE                     __ptext9:
  2272                           	opt stack 0
  2273  0010BE                     _initializeLED:
  2274                           	opt stack 23
  2275                           
  2276                           ;LED-API.c: 32: TRISA = 0b00000000;
  2277                           
  2278                           ; BSR set to: 1
  2279                           ;incstack = 0
  2280  0010BE  0E00               	movlw	0
  2281  0010C0  6E92               	movwf	3986,c	;volatile
  2282                           
  2283                           ;LED-API.c: 33: TRISC = 0b00000000;
  2284  0010C2  0E00               	movlw	0
  2285  0010C4  6E94               	movwf	3988,c	;volatile
  2286                           
  2287                           ;LED-API.c: 34: TRISD = 0b00000000;
  2288  0010C6  0E00               	movlw	0
  2289  0010C8  6E95               	movwf	3989,c	;volatile
  2290                           
  2291                           ;LED-API.c: 35: LATA = 0b00000000;
  2292  0010CA  0E00               	movlw	0
  2293  0010CC  6E89               	movwf	3977,c	;volatile
  2294                           
  2295                           ;LED-API.c: 36: LATC = 0b00000000;
  2296  0010CE  0E00               	movlw	0
  2297  0010D0  6E8B               	movwf	3979,c	;volatile
  2298                           
  2299                           ;LED-API.c: 37: LATD = 0b00000000;
  2300  0010D2  0E00               	movlw	0
  2301  0010D4  6E8C               	movwf	3980,c	;volatile
  2302                           
  2303                           ;LED-API.c: 40: turnAllOff();
  2304  0010D6  EC7E  F006         	call	_turnAllOff	;wreg free
  2305  0010DA  0012               	return		;funcret
  2306  0010DC                     __end_of_initializeLED:
  2307                           	opt stack 0
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           prodh	equ	0xFF4
  2313                           prodl	equ	0xFF3
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           postdec1	equ	0xFE5
  2317                           plusw1	equ	0xFE3
  2318                           fsr1l	equ	0xFE1
  2319                           indf2	equ	0xFDF
  2320                           postinc2	equ	0xFDE
  2321                           plusw2	equ	0xFDB
  2322                           fsr2h	equ	0xFDA
  2323                           fsr2l	equ	0xFD9
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function _turnAllOff *****************
  2327 ;; Defined at:
  2328 ;;		line 161 in file "Source/LED-API.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  j               1   36[BANK1 ] unsigned char 
  2333 ;;  i               1   35[BANK1 ] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2343 ;;      Params:         0       0       0       0       0       0       0
  2344 ;;      Locals:         0       0       2       0       0       0       0
  2345 ;;      Temps:          0       0       2       0       0       0       0
  2346 ;;      Totals:         0       0       4       0       0       0       0
  2347 ;;Total ram usage:        4 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    6
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_initializeLED
  2354 ;;		_startPong
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text10
  2359  000CFC                     __ptext10:
  2360                           	opt stack 0
  2361  000CFC                     _turnAllOff:
  2362                           	opt stack 22
  2363                           
  2364                           ;LED-API.c: 164: for (unsigned char i = 0; i < 8; i++) {
  2365                           
  2366                           ;incstack = 0
  2367  000CFC  0E00               	movlw	0
  2368  000CFE  0101               	movlb	1	; () banked
  2369  000D00  6F23               	movwf	turnAllOff@i& (0+255),b
  2370  000D02                     l1902:
  2371                           
  2372                           ; BSR set to: 1
  2373  000D02  0E07               	movlw	7
  2374  000D04  0101               	movlb	1	; () banked
  2375  000D06  6523               	cpfsgt	turnAllOff@i& (0+255),b
  2376  000D08  D001               	goto	l1906
  2377  000D0A  0012               	return	
  2378  000D0C                     l1906:
  2379                           
  2380                           ; BSR set to: 1
  2381                           ;LED-API.c: 165: for (unsigned char j = 0; j < 16; j++) {
  2382  000D0C  0E00               	movlw	0
  2383  000D0E  0101               	movlb	1	; () banked
  2384  000D10  6F24               	movwf	turnAllOff@j& (0+255),b
  2385  000D12                     l1908:
  2386                           
  2387                           ; BSR set to: 1
  2388  000D12  0E0F               	movlw	15
  2389  000D14  0101               	movlb	1	; () banked
  2390  000D16  6524               	cpfsgt	turnAllOff@j& (0+255),b
  2391  000D18  D001               	goto	l1912
  2392  000D1A  D01F               	goto	l1918
  2393  000D1C                     l1912:
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;LED-API.c: 166: pixels[i][j] = 0;
  2397  000D1C  0101               	movlb	1	; () banked
  2398  000D1E  5123               	movf	turnAllOff@i& (0+255),w,b
  2399  000D20  0D10               	mullw	16
  2400  000D22  0E00               	movlw	low _pixels
  2401  000D24  0101               	movlb	1	; () banked
  2402  000D26  6F21               	movwf	??_turnAllOff& (0+255),b
  2403  000D28  0E03               	movlw	high _pixels
  2404  000D2A  0101               	movlb	1	; () banked
  2405  000D2C  6F22               	movwf	(??_turnAllOff+1)& (0+255),b
  2406  000D2E  50F3               	movf	prodl,w,c
  2407  000D30  0101               	movlb	1	; () banked
  2408  000D32  2721               	addwf	??_turnAllOff& (0+255),f,b
  2409  000D34  50F4               	movf	prodh,w,c
  2410  000D36  0101               	movlb	1	; () banked
  2411  000D38  2322               	addwfc	(??_turnAllOff+1)& (0+255),f,b
  2412  000D3A  0101               	movlb	1	; () banked
  2413  000D3C  5124               	movf	turnAllOff@j& (0+255),w,b
  2414  000D3E  0D01               	mullw	1
  2415  000D40  50F3               	movf	prodl,w,c
  2416  000D42  0101               	movlb	1	; () banked
  2417  000D44  2521               	addwf	??_turnAllOff& (0+255),w,b
  2418  000D46  6ED9               	movwf	fsr2l,c
  2419  000D48  50F4               	movf	prodh,w,c
  2420  000D4A  0101               	movlb	1	; () banked
  2421  000D4C  2122               	addwfc	(??_turnAllOff+1)& (0+255),w,b
  2422  000D4E  6EDA               	movwf	fsr2h,c
  2423  000D50  0E00               	movlw	0
  2424  000D52  6EDF               	movwf	indf2,c
  2425                           
  2426                           ; BSR set to: 1
  2427  000D54  0101               	movlb	1	; () banked
  2428  000D56  2B24               	incf	turnAllOff@j& (0+255),f,b
  2429  000D58  D7DC               	goto	l1908
  2430  000D5A                     l1918:
  2431                           
  2432                           ; BSR set to: 1
  2433  000D5A  0101               	movlb	1	; () banked
  2434  000D5C  2B23               	incf	turnAllOff@i& (0+255),f,b
  2435  000D5E  D7D1               	goto	l1902
  2436  000D60                     __end_of_turnAllOff:
  2437                           	opt stack 0
  2438                           tblptru	equ	0xFF8
  2439                           tblptrh	equ	0xFF7
  2440                           tblptrl	equ	0xFF6
  2441                           tablat	equ	0xFF5
  2442                           prodh	equ	0xFF4
  2443                           prodl	equ	0xFF3
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           postdec1	equ	0xFE5
  2447                           plusw1	equ	0xFE3
  2448                           fsr1l	equ	0xFE1
  2449                           indf2	equ	0xFDF
  2450                           postinc2	equ	0xFDE
  2451                           plusw2	equ	0xFDB
  2452                           fsr2h	equ	0xFDA
  2453                           fsr2l	equ	0xFD9
  2454                           status	equ	0xFD8
  2455                           
  2456 ;; *************** function _initialize *****************
  2457 ;; Defined at:
  2458 ;;		line 96 in file "main.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2472 ;;      Params:         0       0       0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0
  2475 ;;      Totals:         0       0       0       0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    6
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text11
  2487  000E1C                     __ptext11:
  2488                           	opt stack 0
  2489  000E1C                     _initialize:
  2490                           	opt stack 24
  2491                           
  2492                           ;main.c: 98: OSCTUNEbits.PLLEN = 1;
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;incstack = 0
  2496  000E1C  8C9B               	bsf	3995,6,c	;volatile
  2497                           
  2498                           ;main.c: 99: OSCTUNEbits.TUN = 011111;
  2499  000E1E  809B               	bsf	3995,0,c	;volatile
  2500  000E20  929B               	bcf	3995,1,c	;volatile
  2501  000E22  949B               	bcf	3995,2,c	;volatile
  2502  000E24  869B               	bsf	3995,3,c	;volatile
  2503  000E26  989B               	bcf	3995,4,c	;volatile
  2504                           
  2505                           ;main.c: 101: OSCCONbits.SCS = 00;
  2506  000E28  0EFC               	movlw	-4
  2507  000E2A  16D3               	andwf	4051,f,c	;volatile
  2508                           
  2509                           ;main.c: 102: OSCCONbits.IRCF = 111;
  2510  000E2C  88D3               	bsf	4051,4,c	;volatile
  2511  000E2E  8AD3               	bsf	4051,5,c	;volatile
  2512  000E30  8CD3               	bsf	4051,6,c	;volatile
  2513                           
  2514                           ;main.c: 104: PLLEN = 1;
  2515  000E32  8C9B               	bsf	3995,6,c	;volatile
  2516                           
  2517                           ;main.c: 107: GIE = 1;
  2518  000E34  8EF2               	bsf	intcon,7,c	;volatile
  2519                           
  2520                           ;main.c: 108: PEIE = 1;
  2521  000E36  8CF2               	bsf	intcon,6,c	;volatile
  2522                           
  2523                           ;main.c: 111: TRISBbits.TRISB0 = 1;
  2524  000E38  8093               	bsf	3987,0,c	;volatile
  2525                           
  2526                           ;main.c: 112: TRISBbits.TRISB1 = 1;
  2527  000E3A  8293               	bsf	3987,1,c	;volatile
  2528                           
  2529                           ;main.c: 113: ADCON2bits.ADFM = 1;
  2530  000E3C  8EC0               	bsf	4032,7,c	;volatile
  2531                           
  2532                           ;main.c: 114: ADCON2bits.ADCS = 010;
  2533  000E3E  90C0               	bcf	4032,0,c	;volatile
  2534  000E40  92C0               	bcf	4032,1,c	;volatile
  2535  000E42  94C0               	bcf	4032,2,c	;volatile
  2536                           
  2537                           ;main.c: 115: ADCON2bits.ACQT = 111;
  2538  000E44  86C0               	bsf	4032,3,c	;volatile
  2539  000E46  88C0               	bsf	4032,4,c	;volatile
  2540  000E48  8AC0               	bsf	4032,5,c	;volatile
  2541                           
  2542                           ;main.c: 116: ADCON1bits.VCFG0 = 0;
  2543  000E4A  98C1               	bcf	4033,4,c	;volatile
  2544                           
  2545                           ;main.c: 117: ADCON1bits.VCFG1 = 0;
  2546  000E4C  9AC1               	bcf	4033,5,c	;volatile
  2547                           
  2548                           ;main.c: 118: ADCON1bits.PCFG = 0000;
  2549  000E4E  90C1               	bcf	4033,0,c	;volatile
  2550  000E50  92C1               	bcf	4033,1,c	;volatile
  2551  000E52  94C1               	bcf	4033,2,c	;volatile
  2552  000E54  96C1               	bcf	4033,3,c	;volatile
  2553                           
  2554                           ;main.c: 119: ADCON0bits.CHS = 1100;
  2555  000E56  50C2               	movf	4034,w,c	;volatile
  2556  000E58  0BC3               	andlw	-61
  2557  000E5A  0930               	iorlw	48
  2558  000E5C  6EC2               	movwf	4034,c	;volatile
  2559                           
  2560                           ;main.c: 120: ADCON0bits.ADON = 1;
  2561  000E5E  80C2               	bsf	4034,0,c	;volatile
  2562                           
  2563                           ;main.c: 121: ADIE = 1;
  2564  000E60  8C9D               	bsf	3997,6,c	;volatile
  2565                           
  2566                           ;main.c: 124: T0PS0 = 1;
  2567  000E62  80D5               	bsf	4053,0,c	;volatile
  2568                           
  2569                           ;main.c: 125: T0PS1 = 0;
  2570  000E64  92D5               	bcf	4053,1,c	;volatile
  2571                           
  2572                           ;main.c: 126: T0PS2 = 1;
  2573  000E66  84D5               	bsf	4053,2,c	;volatile
  2574                           
  2575                           ;main.c: 127: PSA = 0;
  2576  000E68  96D5               	bcf	4053,3,c	;volatile
  2577                           
  2578                           ;main.c: 128: T0CS = 0;
  2579  000E6A  9AD5               	bcf	4053,5,c	;volatile
  2580                           
  2581                           ;main.c: 129: T08BIT = 1;
  2582  000E6C  8CD5               	bsf	4053,6,c	;volatile
  2583                           
  2584                           ;main.c: 130: TMR0IE = 1;
  2585  000E6E  8AF2               	bsf	intcon,5,c	;volatile
  2586                           
  2587                           ;main.c: 131: TMR0IF = 0;
  2588  000E70  94F2               	bcf	intcon,2,c	;volatile
  2589                           
  2590                           ;main.c: 133: TMR0ON = 0;
  2591  000E72  9ED5               	bcf	4053,7,c	;volatile
  2592  000E74  0012               	return		;funcret
  2593  000E76                     __end_of_initialize:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           prodh	equ	0xFF4
  2600                           prodl	equ	0xFF3
  2601                           intcon	equ	0xFF2
  2602                           postinc0	equ	0xFEE
  2603                           wreg	equ	0xFE8
  2604                           postdec1	equ	0xFE5
  2605                           plusw1	equ	0xFE3
  2606                           fsr1l	equ	0xFE1
  2607                           indf2	equ	0xFDF
  2608                           postinc2	equ	0xFDE
  2609                           plusw2	equ	0xFDB
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _ISR *****************
  2615 ;; Defined at:
  2616 ;;		line 377 in file "main.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  ADvalue         2   30[BANK1 ] unsigned short 
  2621 ;;  value           1   32[BANK1 ] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2631 ;;      Params:         0       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       3       0       0       0       0
  2633 ;;      Temps:          0       0      14       0       0       0       0
  2634 ;;      Totals:         0       0      17       0       0       0       0
  2635 ;;Total ram usage:       17 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    5
  2638 ;; This function calls:
  2639 ;;		___lwdiv
  2640 ;;		_checkNextPosition
  2641 ;;		_writePong
  2642 ;; This function is called by:
  2643 ;;		Interrupt level 2
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	intcode
  2648  000008                     __pintcode:
  2649                           	opt stack 0
  2650  000008                     _ISR:
  2651                           	opt stack 21
  2652                           
  2653                           ;incstack = 0
  2654  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2655  00000A  CFFA F110          	movff	pclath,??_ISR
  2656  00000E  CFFB F111          	movff	pclatu,??_ISR+1
  2657  000012  ED2B  F004         	call	int_func,f	;refresh shadow registers
  2658                           pclatu	equ	0xFFB
  2659                           pclath	equ	0xFFA
  2660                           tblptru	equ	0xFF8
  2661                           tblptrh	equ	0xFF7
  2662                           tblptrl	equ	0xFF6
  2663                           tablat	equ	0xFF5
  2664                           prodh	equ	0xFF4
  2665                           prodl	equ	0xFF3
  2666                           intcon	equ	0xFF2
  2667                           postinc0	equ	0xFEE
  2668                           wreg	equ	0xFE8
  2669                           postdec1	equ	0xFE5
  2670                           plusw1	equ	0xFE3
  2671                           fsr1l	equ	0xFE1
  2672                           indf2	equ	0xFDF
  2673                           postinc2	equ	0xFDE
  2674                           plusw2	equ	0xFDB
  2675                           fsr2h	equ	0xFDA
  2676                           fsr2l	equ	0xFD9
  2677                           status	equ	0xFD8
  2678                           
  2679                           	psect	intcode_body
  2680  000856                     __pintcode_body:
  2681                           	opt stack 21
  2682  000856                     int_func:
  2683                           	opt stack 21
  2684  000856  0006               	pop		; remove dummy address from shadow register refresh
  2685  000858  CFE9 F112          	movff	fsr0l,??_ISR+2
  2686  00085C  CFEA F113          	movff	fsr0h,??_ISR+3
  2687  000860  CFE1 F114          	movff	fsr1l,??_ISR+4
  2688  000864  CFE2 F115          	movff	fsr1h,??_ISR+5
  2689  000868  CFD9 F116          	movff	fsr2l,??_ISR+6
  2690  00086C  CFDA F117          	movff	fsr2h,??_ISR+7
  2691  000870  CFF3 F118          	movff	prodl,??_ISR+8
  2692  000874  CFF4 F119          	movff	prodh,??_ISR+9
  2693  000878  CFF6 F11A          	movff	tblptrl,??_ISR+10
  2694  00087C  CFF7 F11B          	movff	tblptrh,??_ISR+11
  2695  000880  CFF8 F11C          	movff	tblptru,??_ISR+12
  2696  000884  CFF5 F11D          	movff	tablat,??_ISR+13
  2697                           
  2698                           ;main.c: 378: if (TMR0IE && TMR0IF) {
  2699  000888  BAF2               	btfsc	intcon,5,c	;volatile
  2700  00088A  A4F2               	btfss	intcon,2,c	;volatile
  2701  00088C  D018               	goto	i2l2952
  2702                           
  2703                           ;main.c: 380: TMR0IF = 0;
  2704  00088E  94F2               	bcf	intcon,2,c	;volatile
  2705                           
  2706                           ;main.c: 382: if (_timerCounter > _speed) {
  2707  000890  0101               	movlb	1	; () banked
  2708  000892  51D4               	movf	__timerCounter& (0+255),w,b
  2709  000894  0101               	movlb	1	; () banked
  2710  000896  5DC3               	subwf	__speed& (0+255),w,b
  2711  000898  0101               	movlb	1	; () banked
  2712  00089A  51D5               	movf	(__timerCounter+1)& (0+255),w,b
  2713  00089C  0101               	movlb	1	; () banked
  2714  00089E  59C4               	subwfb	(__speed+1)& (0+255),w,b
  2715  0008A0  B0D8               	btfsc	status,0,c
  2716  0008A2  D007               	goto	i2l2946
  2717                           
  2718                           ; BSR set to: 1
  2719                           ;main.c: 383: checkNextPosition();
  2720  0008A4  ECEC  F002         	call	_checkNextPosition	;wreg free
  2721                           
  2722                           ;main.c: 384: _timerCounter = 0;
  2723  0008A8  0E00               	movlw	0
  2724  0008AA  0101               	movlb	1	; () banked
  2725  0008AC  6FD5               	movwf	(__timerCounter+1)& (0+255),b
  2726  0008AE  0E00               	movlw	0
  2727  0008B0  6FD4               	movwf	__timerCounter& (0+255),b
  2728  0008B2                     i2l2946:
  2729                           
  2730                           ; BSR set to: 1
  2731                           ;main.c: 385: }
  2732                           ;main.c: 387: _timerCounter++;
  2733  0008B2  0101               	movlb	1	; () banked
  2734  0008B4  4BD4               	infsnz	__timerCounter& (0+255),f,b
  2735  0008B6  2BD5               	incf	(__timerCounter+1)& (0+255),f,b
  2736                           
  2737                           ; BSR set to: 1
  2738                           ;main.c: 388: writePong();
  2739  0008B8  ECD5  F005         	call	_writePong	;wreg free
  2740                           
  2741                           ;main.c: 391: ADCON0bits.GODONE = 1;
  2742  0008BC  82C2               	bsf	4034,1,c	;volatile
  2743  0008BE                     i2l2952:
  2744                           
  2745                           ;main.c: 393: }
  2746                           ;main.c: 395: if (ADIE && ADIF) {
  2747  0008BE  BC9D               	btfsc	3997,6,c	;volatile
  2748  0008C0  AC9E               	btfss	3998,6,c	;volatile
  2749  0008C2  D035               	goto	i2l296
  2750                           
  2751                           ;main.c: 397: ADIF = 0;
  2752  0008C4  9C9E               	bcf	3998,6,c	;volatile
  2753                           
  2754                           ;main.c: 399: unsigned short ADvalue = ADRES;
  2755  0008C6  CFC3 F11E          	movff	4035,ISR@ADvalue	;volatile
  2756  0008CA  CFC4 F11F          	movff	4036,ISR@ADvalue+1	;volatile
  2757                           
  2758                           ;main.c: 400: unsigned char value = (ADvalue / 85);
  2759  0008CE  C11E  F001         	movff	ISR@ADvalue,___lwdiv@dividend
  2760  0008D2  C11F  F002         	movff	ISR@ADvalue+1,___lwdiv@dividend+1
  2761  0008D6  0E00               	movlw	0
  2762  0008D8  6E04               	movwf	___lwdiv@divisor+1,c
  2763  0008DA  0E55               	movlw	85
  2764  0008DC  6E03               	movwf	___lwdiv@divisor,c
  2765  0008DE  EC64  F007         	call	___lwdiv	;wreg free
  2766  0008E2  5001               	movf	?___lwdiv,w,c
  2767  0008E4  0101               	movlb	1	; () banked
  2768  0008E6  6F20               	movwf	ISR@value& (0+255),b
  2769                           
  2770                           ; BSR set to: 1
  2771                           ;main.c: 403: if (ADCON0bits.CHS == 12) {
  2772  0008E8  30C2               	rrcf	4034,w,c	;volatile
  2773  0008EA  32E8               	rrcf	wreg,f,c
  2774  0008EC  0B0F               	andlw	15
  2775  0008EE  0A0C               	xorlw	12
  2776  0008F0  A4D8               	btfss	status,2,c
  2777  0008F2  D00F               	goto	i2l2972
  2778                           
  2779                           ; BSR set to: 1
  2780                           ;main.c: 404: ADCON0bits.CHS = 10;
  2781  0008F4  50C2               	movf	4034,w,c	;volatile
  2782  0008F6  0BC3               	andlw	-61
  2783  0008F8  0928               	iorlw	40
  2784  0008FA  6EC2               	movwf	4034,c	;volatile
  2785                           
  2786                           ; BSR set to: 1
  2787                           ;main.c: 407: _p2.paddlePosOld[0] = _p2.paddlePos[0];
  2788  0008FC  C1CC  F1CA         	movff	__p2+2,__p2
  2789                           
  2790                           ; BSR set to: 1
  2791                           ;main.c: 408: _p2.paddlePos[0] = value;
  2792  000900  C120  F1CC         	movff	ISR@value,__p2+2
  2793                           
  2794                           ; BSR set to: 1
  2795                           ;main.c: 410: _p2.paddlePosOld[1] = _p2.paddlePos[1];
  2796  000904  C1CD  F1CB         	movff	__p2+3,__p2+1
  2797                           
  2798                           ; BSR set to: 1
  2799                           ;main.c: 411: _p2.paddlePos[1] = value + 1;
  2800  000908  0101               	movlb	1	; () banked
  2801  00090A  2920               	incf	ISR@value& (0+255),w,b
  2802  00090C  0101               	movlb	1	; () banked
  2803  00090E  6FCD               	movwf	(__p2+3)& (0+255),b
  2804                           
  2805                           ;main.c: 412: } else {
  2806  000910  D00E               	goto	i2l296
  2807  000912                     i2l2972:
  2808                           
  2809                           ; BSR set to: 1
  2810                           ;main.c: 413: ADCON0bits.CHS = 12;
  2811  000912  50C2               	movf	4034,w,c	;volatile
  2812  000914  0BC3               	andlw	-61
  2813  000916  0930               	iorlw	48
  2814  000918  6EC2               	movwf	4034,c	;volatile
  2815                           
  2816                           ; BSR set to: 1
  2817                           ;main.c: 416: _p1.paddlePosOld[0] = _p1.paddlePos[0];
  2818  00091A  C1C7  F1C5         	movff	__p1+2,__p1
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;main.c: 417: _p1.paddlePos[0] = value;
  2822  00091E  C120  F1C7         	movff	ISR@value,__p1+2
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;main.c: 419: _p1.paddlePosOld[1] = _p1.paddlePos[1];
  2826  000922  C1C8  F1C6         	movff	__p1+3,__p1+1
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;main.c: 420: _p1.paddlePos[1] = value + 1;
  2830  000926  0101               	movlb	1	; () banked
  2831  000928  2920               	incf	ISR@value& (0+255),w,b
  2832  00092A  0101               	movlb	1	; () banked
  2833  00092C  6FC8               	movwf	(__p1+3)& (0+255),b
  2834  00092E                     i2l296:
  2835  00092E  C11D  FFF5         	movff	??_ISR+13,tablat
  2836  000932  C11C  FFF8         	movff	??_ISR+12,tblptru
  2837  000936  C11B  FFF7         	movff	??_ISR+11,tblptrh
  2838  00093A  C11A  FFF6         	movff	??_ISR+10,tblptrl
  2839  00093E  C119  FFF4         	movff	??_ISR+9,prodh
  2840  000942  C118  FFF3         	movff	??_ISR+8,prodl
  2841  000946  C117  FFDA         	movff	??_ISR+7,fsr2h
  2842  00094A  C116  FFD9         	movff	??_ISR+6,fsr2l
  2843  00094E  C115  FFE2         	movff	??_ISR+5,fsr1h
  2844  000952  C114  FFE1         	movff	??_ISR+4,fsr1l
  2845  000956  C113  FFEA         	movff	??_ISR+3,fsr0h
  2846  00095A  C112  FFE9         	movff	??_ISR+2,fsr0l
  2847  00095E  C111  FFFB         	movff	??_ISR+1,pclatu
  2848  000962  C110  FFFA         	movff	??_ISR,pclath
  2849  000966  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2850  000968  0011               	retfie		f
  2851  00096A                     __end_of_ISR:
  2852                           	opt stack 0
  2853                           pclatu	equ	0xFFB
  2854                           pclath	equ	0xFFA
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           intcon	equ	0xFF2
  2862                           postinc0	equ	0xFEE
  2863                           fsr0h	equ	0xFEA
  2864                           fsr0l	equ	0xFE9
  2865                           wreg	equ	0xFE8
  2866                           postdec1	equ	0xFE5
  2867                           plusw1	equ	0xFE3
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           postinc2	equ	0xFDE
  2872                           plusw2	equ	0xFDB
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _writePong *****************
  2878 ;; Defined at:
  2879 ;;		line 138 in file "main.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2893 ;;      Params:         0       0       0       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0
  2896 ;;      Totals:         0       0       0       0       0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    1
  2900 ;; This function calls:
  2901 ;;		_off
  2902 ;;		i2_on
  2903 ;; This function is called by:
  2904 ;;		_ISR
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text13
  2909  000BAA                     __ptext13:
  2910                           	opt stack 0
  2911  000BAA                     _writePong:
  2912                           	opt stack 24
  2913                           
  2914                           ;main.c: 142: off(_ball.bPos[1], _ball.bPos[0]);
  2915                           
  2916                           ;incstack = 0
  2917  000BAA  C1CF  F001         	movff	__ball,off@row
  2918  000BAE  0101               	movlb	1	; () banked
  2919  000BB0  51D0               	movf	(__ball+1)& (0+255),w,b
  2920  000BB2  ECF3  F007         	call	_off
  2921                           
  2922                           ;main.c: 143: _ball.bPos[0] = _nextPos[0];
  2923  000BB6  C1D2  F1CF         	movff	__nextPos,__ball
  2924                           
  2925                           ;main.c: 144: _ball.bPos[1] = _nextPos[1];
  2926  000BBA  C1D3  F1D0         	movff	__nextPos+1,__ball+1
  2927                           
  2928                           ;main.c: 145: on(_ball.bPos[1], _ball.bPos[0]);
  2929  000BBE  C1CF  F001         	movff	__ball,i2on@row
  2930  000BC2  0101               	movlb	1	; () banked
  2931  000BC4  51D0               	movf	(__ball+1)& (0+255),w,b
  2932  000BC6  EC11  F008         	call	i2_on
  2933                           
  2934                           ;main.c: 148: off(_p1.paddlePosOld[0], 0);
  2935  000BCA  0E00               	movlw	0
  2936  000BCC  6E01               	movwf	off@row,c
  2937  000BCE  0101               	movlb	1	; () banked
  2938  000BD0  51C5               	movf	__p1& (0+255),w,b
  2939  000BD2  ECF3  F007         	call	_off
  2940                           
  2941                           ;main.c: 149: off(_p1.paddlePosOld[1], 0);
  2942  000BD6  0E00               	movlw	0
  2943  000BD8  6E01               	movwf	off@row,c
  2944  000BDA  0101               	movlb	1	; () banked
  2945  000BDC  51C6               	movf	(__p1+1)& (0+255),w,b
  2946  000BDE  ECF3  F007         	call	_off
  2947                           
  2948                           ;main.c: 151: off(_p2.paddlePosOld[0], 15);
  2949  000BE2  0E0F               	movlw	15
  2950  000BE4  6E01               	movwf	off@row,c
  2951  000BE6  0101               	movlb	1	; () banked
  2952  000BE8  51CA               	movf	__p2& (0+255),w,b
  2953  000BEA  ECF3  F007         	call	_off
  2954                           
  2955                           ;main.c: 152: off(_p2.paddlePosOld[1], 15);
  2956  000BEE  0E0F               	movlw	15
  2957  000BF0  6E01               	movwf	off@row,c
  2958  000BF2  0101               	movlb	1	; () banked
  2959  000BF4  51CB               	movf	(__p2+1)& (0+255),w,b
  2960  000BF6  ECF3  F007         	call	_off
  2961                           
  2962                           ;main.c: 154: on(_p1.paddlePos[0], 0);
  2963  000BFA  0E00               	movlw	0
  2964  000BFC  6E01               	movwf	i2on@row,c
  2965  000BFE  0101               	movlb	1	; () banked
  2966  000C00  51C7               	movf	(__p1+2)& (0+255),w,b
  2967  000C02  EC11  F008         	call	i2_on
  2968                           
  2969                           ;main.c: 155: on(_p1.paddlePos[1], 0);
  2970  000C06  0E00               	movlw	0
  2971  000C08  6E01               	movwf	i2on@row,c
  2972  000C0A  0101               	movlb	1	; () banked
  2973  000C0C  51C8               	movf	(__p1+3)& (0+255),w,b
  2974  000C0E  EC11  F008         	call	i2_on
  2975                           
  2976                           ;main.c: 156: on(_p2.paddlePos[0], 15);
  2977  000C12  0E0F               	movlw	15
  2978  000C14  6E01               	movwf	i2on@row,c
  2979  000C16  0101               	movlb	1	; () banked
  2980  000C18  51CC               	movf	(__p2+2)& (0+255),w,b
  2981  000C1A  EC11  F008         	call	i2_on
  2982                           
  2983                           ;main.c: 157: on(_p2.paddlePos[1], 15);
  2984  000C1E  0E0F               	movlw	15
  2985  000C20  6E01               	movwf	i2on@row,c
  2986  000C22  0101               	movlb	1	; () banked
  2987  000C24  51CD               	movf	(__p2+3)& (0+255),w,b
  2988  000C26  EC11  F008         	call	i2_on
  2989  000C2A  0012               	return		;funcret
  2990  000C2C                     __end_of_writePong:
  2991                           	opt stack 0
  2992                           pclatu	equ	0xFFB
  2993                           pclath	equ	0xFFA
  2994                           tblptru	equ	0xFF8
  2995                           tblptrh	equ	0xFF7
  2996                           tblptrl	equ	0xFF6
  2997                           tablat	equ	0xFF5
  2998                           prodh	equ	0xFF4
  2999                           prodl	equ	0xFF3
  3000                           intcon	equ	0xFF2
  3001                           postinc0	equ	0xFEE
  3002                           fsr0h	equ	0xFEA
  3003                           fsr0l	equ	0xFE9
  3004                           wreg	equ	0xFE8
  3005                           postdec1	equ	0xFE5
  3006                           plusw1	equ	0xFE3
  3007                           fsr1h	equ	0xFE2
  3008                           fsr1l	equ	0xFE1
  3009                           indf2	equ	0xFDF
  3010                           postinc2	equ	0xFDE
  3011                           plusw2	equ	0xFDB
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function _off *****************
  3017 ;; Defined at:
  3018 ;;		line 64 in file "Source/LED-API.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  column          1    wreg     unsigned char 
  3021 ;;  row             1    0[COMRAM] unsigned char 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  column          1    3[COMRAM] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3033 ;;      Params:         1       0       0       0       0       0       0
  3034 ;;      Locals:         1       0       0       0       0       0       0
  3035 ;;      Temps:          2       0       0       0       0       0       0
  3036 ;;      Totals:         4       0       0       0       0       0       0
  3037 ;;Total ram usage:        4 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_writePong
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text14
  3047  000FE6                     __ptext14:
  3048                           	opt stack 0
  3049  000FE6                     _off:
  3050                           	opt stack 24
  3051                           
  3052                           ;incstack = 0
  3053                           ;off@column stored from wreg
  3054  000FE6  6E04               	movwf	off@column,c
  3055                           
  3056                           ;LED-API.c: 66: if (row < 0 || row > 16)
  3057  000FE8  0E10               	movlw	16
  3058  000FEA  6401               	cpfsgt	off@row,c
  3059  000FEC  D001               	goto	i2l2092
  3060  000FEE  0012               	return	
  3061  000FF0                     i2l2092:
  3062                           
  3063                           ;LED-API.c: 68: if (column < 0 || column > 8)
  3064  000FF0  0E08               	movlw	8
  3065  000FF2  6404               	cpfsgt	off@column,c
  3066  000FF4  D001               	goto	i2l2096
  3067  000FF6  0012               	return	
  3068  000FF8                     i2l2096:
  3069                           
  3070                           ;LED-API.c: 71: pixels[column][row] = 0;
  3071  000FF8  5004               	movf	off@column,w,c
  3072  000FFA  0D10               	mullw	16
  3073  000FFC  0E00               	movlw	low _pixels
  3074  000FFE  6E02               	movwf	??_off& (0+255),c
  3075  001000  0E03               	movlw	high _pixels
  3076  001002  6E03               	movwf	(??_off+1)& (0+255),c
  3077  001004  50F3               	movf	prodl,w,c
  3078  001006  2602               	addwf	??_off,f,c
  3079  001008  50F4               	movf	prodh,w,c
  3080  00100A  2203               	addwfc	??_off+1,f,c
  3081  00100C  5001               	movf	off@row,w,c
  3082  00100E  0D01               	mullw	1
  3083  001010  50F3               	movf	prodl,w,c
  3084  001012  2402               	addwf	??_off,w,c
  3085  001014  6ED9               	movwf	fsr2l,c
  3086  001016  50F4               	movf	prodh,w,c
  3087  001018  2003               	addwfc	??_off+1,w,c
  3088  00101A  6EDA               	movwf	fsr2h,c
  3089  00101C  0E00               	movlw	0
  3090  00101E  6EDF               	movwf	indf2,c
  3091  001020  0012               	return		;funcret
  3092  001022                     __end_of_off:
  3093                           	opt stack 0
  3094                           pclatu	equ	0xFFB
  3095                           pclath	equ	0xFFA
  3096                           tblptru	equ	0xFF8
  3097                           tblptrh	equ	0xFF7
  3098                           tblptrl	equ	0xFF6
  3099                           tablat	equ	0xFF5
  3100                           prodh	equ	0xFF4
  3101                           prodl	equ	0xFF3
  3102                           intcon	equ	0xFF2
  3103                           postinc0	equ	0xFEE
  3104                           fsr0h	equ	0xFEA
  3105                           fsr0l	equ	0xFE9
  3106                           wreg	equ	0xFE8
  3107                           postdec1	equ	0xFE5
  3108                           plusw1	equ	0xFE3
  3109                           fsr1h	equ	0xFE2
  3110                           fsr1l	equ	0xFE1
  3111                           indf2	equ	0xFDF
  3112                           postinc2	equ	0xFDE
  3113                           plusw2	equ	0xFDB
  3114                           fsr2h	equ	0xFDA
  3115                           fsr2l	equ	0xFD9
  3116                           status	equ	0xFD8
  3117                           
  3118 ;; *************** function _checkNextPosition *****************
  3119 ;; Defined at:
  3120 ;;		line 236 in file "main.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  counter         2  125[BANK0 ] unsigned int 
  3125 ;;  counter         2  123[BANK0 ] unsigned int 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3135 ;;      Params:         0       0       0       0       0       0       0
  3136 ;;      Locals:         0       4       0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0
  3138 ;;      Totals:         0       4       0       0       0       0       0
  3139 ;;Total ram usage:        4 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    4
  3142 ;; This function calls:
  3143 ;;		_checkPaddleCollision
  3144 ;;		_checkWallCollision
  3145 ;;		_getNextPosition
  3146 ;;		i2_drawSymbol
  3147 ;;		i2_initializePong
  3148 ;;		i2_refresh
  3149 ;;		i2_startPong
  3150 ;;		i2_turnAllOff
  3151 ;; This function is called by:
  3152 ;;		_ISR
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text15
  3157  0005D8                     __ptext15:
  3158                           	opt stack 0
  3159  0005D8                     _checkNextPosition:
  3160                           	opt stack 21
  3161                           
  3162                           ;main.c: 237: getNextPosition();
  3163                           
  3164                           ;incstack = 0
  3165  0005D8  EC4E  F005         	call	_getNextPosition	;wreg free
  3166                           
  3167                           ;main.c: 238: checkPaddleCollision();
  3168  0005DC  ECB7  F008         	call	_checkPaddleCollision	;wreg free
  3169                           
  3170                           ;main.c: 239: checkWallCollision();
  3171  0005E0  ECB0  F008         	call	_checkWallCollision	;wreg free
  3172                           
  3173                           ;main.c: 241: if (_nextPos[0] == 0) {
  3174  0005E4  0101               	movlb	1	; () banked
  3175  0005E6  51D2               	movf	__nextPos& (0+255),w,b
  3176  0005E8  A4D8               	btfss	status,2,c
  3177  0005EA  D087               	goto	i2l2842
  3178                           
  3179                           ; BSR set to: 1
  3180                           ;main.c: 242: if (_p1.paddlePos[0] == _nextPos[1]) {
  3181  0005EC  0101               	movlb	1	; () banked
  3182  0005EE  51D3               	movf	(__nextPos+1)& (0+255),w,b
  3183  0005F0  0101               	movlb	1	; () banked
  3184  0005F2  19C7               	xorwf	(__p1+2)& (0+255),w,b
  3185  0005F4  A4D8               	btfss	status,2,c
  3186  0005F6  D027               	goto	i2l2794
  3187                           
  3188                           ; BSR set to: 1
  3189                           ;main.c: 244: if(_speed > 30)
  3190  0005F8  0101               	movlb	1	; () banked
  3191  0005FA  51C4               	movf	(__speed+1)& (0+255),w,b
  3192  0005FC  E105               	bnz	i2u276_40
  3193  0005FE  0E1F               	movlw	31
  3194  000600  0101               	movlb	1	; () banked
  3195  000602  5DC3               	subwf	__speed& (0+255),w,b
  3196  000604  A0D8               	btfss	status,0,c
  3197  000606  D011               	goto	i2l2786
  3198  000608                     i2u276_40:
  3199                           
  3200                           ; BSR set to: 1
  3201                           ;main.c: 245: _speed = _speed - 10;
  3202  000608  0EF6               	movlw	246
  3203  00060A  0101               	movlb	1	; () banked
  3204  00060C  25C3               	addwf	__speed& (0+255),w,b
  3205  00060E  0101               	movlb	1	; () banked
  3206  000610  6FC3               	movwf	__speed& (0+255),b
  3207  000612  0EFF               	movlw	255
  3208  000614  0101               	movlb	1	; () banked
  3209  000616  21C4               	addwfc	(__speed+1)& (0+255),w,b
  3210  000618  0101               	movlb	1	; () banked
  3211  00061A  6FC4               	movwf	(__speed+1)& (0+255),b
  3212                           
  3213                           ; BSR set to: 1
  3214                           ;main.c: 246: switch(_ball.bDirection)
  3215  00061C  D006               	goto	i2l2786
  3216  00061E                     i2l2782:
  3217                           
  3218                           ; BSR set to: 1
  3219                           ;main.c: 253: _ball.bDirection = 1;
  3220  00061E  0E01               	movlw	1
  3221  000620  D001               	goto	L2
  3222  000622                     i2l2784:
  3223                           
  3224                           ; BSR set to: 1
  3225                           ;main.c: 256: _ball.bDirection = 2;
  3226  000622  0E02               	movlw	2
  3227  000624                     L2:
  3228  000624  0101               	movlb	1	; () banked
  3229  000626  6FD1               	movwf	(__ball+2)& (0+255),b
  3230                           
  3231                           ;main.c: 257: }
  3232  000628  D00B               	goto	i2l2788
  3233  00062A                     i2l2786:
  3234                           
  3235                           ; BSR set to: 1
  3236  00062A  0101               	movlb	1	; () banked
  3237  00062C  51D1               	movf	(__ball+2)& (0+255),w,b
  3238                           
  3239                           ; Switch size 1, requested type "space"
  3240                           ; Number of cases is 3, Range of values is 4 to 6
  3241                           ; switch strategies available:
  3242                           ; Name         Instructions Cycles
  3243                           ; simple_byte           10     6 (average)
  3244                           ;	Chosen strategy is simple_byte
  3245  00062E  0A04               	xorlw	4	; case 4
  3246  000630  B4D8               	btfsc	status,2,c
  3247  000632  D7F7               	goto	i2l2784
  3248  000634  0A01               	xorlw	1	; case 5
  3249  000636  B4D8               	btfsc	status,2,c
  3250  000638  D7F2               	goto	i2l2782
  3251  00063A  0A03               	xorlw	3	; case 6
  3252  00063C  B4D8               	btfsc	status,2,c
  3253  00063E  D7F1               	goto	i2l2784
  3254  000640                     i2l2788:
  3255                           
  3256                           ; BSR set to: 1
  3257                           ;main.c: 258: getNextPosition();
  3258  000640  EC4E  F005         	call	_getNextPosition	;wreg free
  3259                           
  3260                           ;main.c: 259: return;
  3261  000644  0012               	return	
  3262  000646                     i2l2794:
  3263  000646  0101               	movlb	1	; () banked
  3264  000648  51D3               	movf	(__nextPos+1)& (0+255),w,b
  3265  00064A  0101               	movlb	1	; () banked
  3266  00064C  19C8               	xorwf	(__p1+3)& (0+255),w,b
  3267  00064E  A4D8               	btfss	status,2,c
  3268  000650  D027               	goto	i2l2814
  3269                           
  3270                           ; BSR set to: 1
  3271                           ;main.c: 263: if(_speed > 30)
  3272  000652  0101               	movlb	1	; () banked
  3273  000654  51C4               	movf	(__speed+1)& (0+255),w,b
  3274  000656  E105               	bnz	i2u278_40
  3275  000658  0E1F               	movlw	31
  3276  00065A  0101               	movlb	1	; () banked
  3277  00065C  5DC3               	subwf	__speed& (0+255),w,b
  3278  00065E  A0D8               	btfss	status,0,c
  3279  000660  D011               	goto	i2l2808
  3280  000662                     i2u278_40:
  3281                           
  3282                           ; BSR set to: 1
  3283                           ;main.c: 264: _speed = _speed - 10;
  3284  000662  0EF6               	movlw	246
  3285  000664  0101               	movlb	1	; () banked
  3286  000666  25C3               	addwf	__speed& (0+255),w,b
  3287  000668  0101               	movlb	1	; () banked
  3288  00066A  6FC3               	movwf	__speed& (0+255),b
  3289  00066C  0EFF               	movlw	255
  3290  00066E  0101               	movlb	1	; () banked
  3291  000670  21C4               	addwfc	(__speed+1)& (0+255),w,b
  3292  000672  0101               	movlb	1	; () banked
  3293  000674  6FC4               	movwf	(__speed+1)& (0+255),b
  3294                           
  3295                           ; BSR set to: 1
  3296                           ;main.c: 265: switch(_ball.bDirection)
  3297  000676  D006               	goto	i2l2808
  3298  000678                     i2l2800:
  3299                           
  3300                           ; BSR set to: 1
  3301                           ;main.c: 269: _ball.bDirection = 1;
  3302  000678  0E01               	movlw	1
  3303  00067A                     L3:
  3304  00067A  0101               	movlb	1	; () banked
  3305  00067C  6FD1               	movwf	(__ball+2)& (0+255),b
  3306                           
  3307                           ;main.c: 273: break;
  3308  00067E  D00D               	goto	i2l2810
  3309  000680                     i2l2804:
  3310                           
  3311                           ; BSR set to: 1
  3312                           ;main.c: 275: _ball.bDirection = 3;
  3313  000680  0E03               	movlw	3
  3314  000682  D7FB               	goto	L3
  3315  000684                     i2l2808:
  3316                           
  3317                           ; BSR set to: 1
  3318  000684  0101               	movlb	1	; () banked
  3319  000686  51D1               	movf	(__ball+2)& (0+255),w,b
  3320                           
  3321                           ; Switch size 1, requested type "space"
  3322                           ; Number of cases is 3, Range of values is 4 to 6
  3323                           ; switch strategies available:
  3324                           ; Name         Instructions Cycles
  3325                           ; simple_byte           10     6 (average)
  3326                           ;	Chosen strategy is simple_byte
  3327  000688  0A04               	xorlw	4	; case 4
  3328  00068A  B4D8               	btfsc	status,2,c
  3329  00068C  D7F5               	goto	i2l2800
  3330  00068E  0A01               	xorlw	1	; case 5
  3331  000690  B4D8               	btfsc	status,2,c
  3332  000692  D7F6               	goto	i2l2804
  3333  000694  0A03               	xorlw	3	; case 6
  3334  000696  B4D8               	btfsc	status,2,c
  3335  000698  D7F3               	goto	i2l2804
  3336  00069A                     i2l2810:
  3337                           
  3338                           ; BSR set to: 1
  3339                           ;main.c: 278: getNextPosition();
  3340  00069A  EC4E  F005         	call	_getNextPosition	;wreg free
  3341                           
  3342                           ;main.c: 279: return;
  3343  00069E  0012               	return	
  3344  0006A0                     i2l2814:
  3345                           
  3346                           ;main.c: 280: }
  3347                           ;main.c: 283: _p1.lives--;
  3348  0006A0  0101               	movlb	1	; () banked
  3349  0006A2  07C9               	decf	(__p1+4)& (0+255),f,b
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;main.c: 284: if (_p1.lives == 0) {
  3353  0006A4  0101               	movlb	1	; () banked
  3354  0006A6  51C9               	movf	(__p1+4)& (0+255),w,b
  3355  0006A8  A4D8               	btfss	status,2,c
  3356  0006AA  D024               	goto	i2l2840
  3357                           
  3358                           ; BSR set to: 1
  3359                           ;main.c: 286: turnAllOff();
  3360  0006AC  EC8D  F007         	call	i2_turnAllOff	;wreg free
  3361                           
  3362                           ;main.c: 287: drawSymbol(6, 0);
  3363  0006B0  0E00               	movlw	0
  3364  0006B2  6E05               	movwf	i2drawSymbol@offSetX,c
  3365  0006B4  0E06               	movlw	6
  3366  0006B6  EC84  F001         	call	i2_drawSymbol
  3367                           
  3368                           ;main.c: 288: drawSymbol(6, 8);
  3369  0006BA  0E08               	movlw	8
  3370  0006BC  6E05               	movwf	i2drawSymbol@offSetX,c
  3371  0006BE  0E06               	movlw	6
  3372  0006C0  EC84  F001         	call	i2_drawSymbol
  3373                           
  3374                           ;main.c: 289: for(unsigned int counter = 0; counter < 800; counter ++)
  3375  0006C4  0E00               	movlw	0
  3376  0006C6  0100               	movlb	0	; () banked
  3377  0006C8  6FFC               	movwf	(checkNextPosition@counter+1)& (0+255),b
  3378  0006CA  0E00               	movlw	0
  3379  0006CC  6FFB               	movwf	checkNextPosition@counter& (0+255),b
  3380  0006CE                     i2l2826:
  3381                           
  3382                           ; BSR set to: 0
  3383  0006CE  0E20               	movlw	32
  3384  0006D0  0100               	movlb	0	; () banked
  3385  0006D2  5DFB               	subwf	checkNextPosition@counter& (0+255),w,b
  3386  0006D4  0E03               	movlw	3
  3387  0006D6  0100               	movlb	0	; () banked
  3388  0006D8  59FC               	subwfb	(checkNextPosition@counter+1)& (0+255),w,b
  3389  0006DA  B0D8               	btfsc	status,0,c
  3390  0006DC  D006               	goto	i2l2836
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;main.c: 290: {
  3394                           ;main.c: 291: refresh();
  3395                           
  3396                           ; BSR set to: 0
  3397                           
  3398                           ; BSR set to: 0
  3399  0006DE  EC16  F006         	call	i2_refresh	;wreg free
  3400  0006E2  0100               	movlb	0	; () banked
  3401  0006E4  4BFB               	infsnz	checkNextPosition@counter& (0+255),f,b
  3402  0006E6  2BFC               	incf	(checkNextPosition@counter+1)& (0+255),f,b
  3403  0006E8  D7F2               	goto	i2l2826
  3404  0006EA                     i2l2836:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;main.c: 292: }
  3408                           ;main.c: 293: turnAllOff();
  3409  0006EA  EC8D  F007         	call	i2_turnAllOff	;wreg free
  3410                           
  3411                           ;main.c: 296: initializePong();
  3412  0006EE  EC86  F008         	call	i2_initializePong	;wreg free
  3413                           
  3414                           ;main.c: 297: } else {
  3415  0006F2  0012               	return	
  3416  0006F4                     i2l2840:
  3417                           
  3418                           ;main.c: 298: startPong();
  3419  0006F4  ECB0  F006         	call	i2_startPong	;wreg free
  3420                           
  3421                           ;main.c: 299: }
  3422                           ;main.c: 300: } else if (_nextPos[0] == 15) {
  3423  0006F8  0012               	return	
  3424  0006FA                     i2l2842:
  3425  0006FA  0E0F               	movlw	15
  3426  0006FC  0101               	movlb	1	; () banked
  3427  0006FE  19D2               	xorwf	__nextPos& (0+255),w,b
  3428  000700  A4D8               	btfss	status,2,c
  3429  000702  D089               	goto	i2l2914
  3430                           
  3431                           ; BSR set to: 1
  3432                           ;main.c: 301: if (_p2.paddlePos[0] == _nextPos[1]) {
  3433  000704  0101               	movlb	1	; () banked
  3434  000706  51D3               	movf	(__nextPos+1)& (0+255),w,b
  3435  000708  0101               	movlb	1	; () banked
  3436  00070A  19CC               	xorwf	(__p2+2)& (0+255),w,b
  3437  00070C  A4D8               	btfss	status,2,c
  3438  00070E  D029               	goto	i2l2866
  3439                           
  3440                           ; BSR set to: 1
  3441                           ;main.c: 302: if (_speed > 50)
  3442  000710  0101               	movlb	1	; () banked
  3443  000712  51C4               	movf	(__speed+1)& (0+255),w,b
  3444  000714  E105               	bnz	i2u284_40
  3445  000716  0E33               	movlw	51
  3446  000718  0101               	movlb	1	; () banked
  3447  00071A  5DC3               	subwf	__speed& (0+255),w,b
  3448  00071C  A0D8               	btfss	status,0,c
  3449  00071E  D013               	goto	i2l2858
  3450  000720                     i2u284_40:
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;main.c: 303: _speed = _speed - 3;
  3454  000720  0EFD               	movlw	253
  3455  000722  0101               	movlb	1	; () banked
  3456  000724  25C3               	addwf	__speed& (0+255),w,b
  3457  000726  0101               	movlb	1	; () banked
  3458  000728  6FC3               	movwf	__speed& (0+255),b
  3459  00072A  0EFF               	movlw	255
  3460  00072C  0101               	movlb	1	; () banked
  3461  00072E  21C4               	addwfc	(__speed+1)& (0+255),w,b
  3462  000730  0101               	movlb	1	; () banked
  3463  000732  6FC4               	movwf	(__speed+1)& (0+255),b
  3464                           
  3465                           ; BSR set to: 1
  3466                           ;main.c: 304: switch (_ball.bDirection) {
  3467  000734  D008               	goto	i2l2858
  3468  000736                     i2l2850:
  3469                           
  3470                           ; BSR set to: 1
  3471                           ;main.c: 307: _ball.bDirection = 4;
  3472  000736  0E04               	movlw	4
  3473  000738  D003               	goto	L5
  3474  00073A                     i2l2852:
  3475                           
  3476                           ; BSR set to: 1
  3477                           ;main.c: 310: _ball.bDirection = 6;
  3478  00073A  0E06               	movlw	6
  3479  00073C  D001               	goto	L5
  3480  00073E                     i2l2854:
  3481                           
  3482                           ; BSR set to: 1
  3483                           ;main.c: 313: _ball.bDirection = 5;
  3484  00073E  0E05               	movlw	5
  3485  000740                     L5:
  3486  000740  0101               	movlb	1	; () banked
  3487  000742  6FD1               	movwf	(__ball+2)& (0+255),b
  3488                           
  3489                           ; BSR set to: 1
  3490                           ;main.c: 315: }
  3491                           
  3492                           ;main.c: 314: break;
  3493  000744  D00B               	goto	i2l2860
  3494  000746                     i2l2858:
  3495                           
  3496                           ; BSR set to: 1
  3497  000746  0101               	movlb	1	; () banked
  3498  000748  51D1               	movf	(__ball+2)& (0+255),w,b
  3499                           
  3500                           ; Switch size 1, requested type "space"
  3501                           ; Number of cases is 3, Range of values is 1 to 3
  3502                           ; switch strategies available:
  3503                           ; Name         Instructions Cycles
  3504                           ; simple_byte           10     6 (average)
  3505                           ;	Chosen strategy is simple_byte
  3506  00074A  0A01               	xorlw	1	; case 1
  3507  00074C  B4D8               	btfsc	status,2,c
  3508  00074E  D7F3               	goto	i2l2850
  3509  000750  0A03               	xorlw	3	; case 2
  3510  000752  B4D8               	btfsc	status,2,c
  3511  000754  D7F2               	goto	i2l2852
  3512  000756  0A01               	xorlw	1	; case 3
  3513  000758  B4D8               	btfsc	status,2,c
  3514  00075A  D7F1               	goto	i2l2854
  3515  00075C                     i2l2860:
  3516                           
  3517                           ; BSR set to: 1
  3518                           ;main.c: 316: getNextPosition();
  3519  00075C  EC4E  F005         	call	_getNextPosition	;wreg free
  3520                           
  3521                           ;main.c: 317: return;
  3522  000760  0012               	return	
  3523  000762                     i2l2866:
  3524  000762  0101               	movlb	1	; () banked
  3525  000764  51D3               	movf	(__nextPos+1)& (0+255),w,b
  3526  000766  0101               	movlb	1	; () banked
  3527  000768  19CD               	xorwf	(__p2+3)& (0+255),w,b
  3528  00076A  A4D8               	btfss	status,2,c
  3529  00076C  D027               	goto	i2l2886
  3530                           
  3531                           ; BSR set to: 1
  3532                           ;main.c: 320: if(_speed > 30)
  3533  00076E  0101               	movlb	1	; () banked
  3534  000770  51C4               	movf	(__speed+1)& (0+255),w,b
  3535  000772  E105               	bnz	i2u286_40
  3536  000774  0E1F               	movlw	31
  3537  000776  0101               	movlb	1	; () banked
  3538  000778  5DC3               	subwf	__speed& (0+255),w,b
  3539  00077A  A0D8               	btfss	status,0,c
  3540  00077C  D011               	goto	i2l2880
  3541  00077E                     i2u286_40:
  3542                           
  3543                           ; BSR set to: 1
  3544                           ;main.c: 321: _speed = _speed - 10;
  3545  00077E  0EF6               	movlw	246
  3546  000780  0101               	movlb	1	; () banked
  3547  000782  25C3               	addwf	__speed& (0+255),w,b
  3548  000784  0101               	movlb	1	; () banked
  3549  000786  6FC3               	movwf	__speed& (0+255),b
  3550  000788  0EFF               	movlw	255
  3551  00078A  0101               	movlb	1	; () banked
  3552  00078C  21C4               	addwfc	(__speed+1)& (0+255),w,b
  3553  00078E  0101               	movlb	1	; () banked
  3554  000790  6FC4               	movwf	(__speed+1)& (0+255),b
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;main.c: 322: switch(_ball.bDirection)
  3558  000792  D006               	goto	i2l2880
  3559  000794                     i2l2874:
  3560                           
  3561                           ; BSR set to: 1
  3562                           ;main.c: 328: _ball.bDirection = 4;
  3563  000794  0E04               	movlw	4
  3564  000796  D001               	goto	L6
  3565  000798                     i2l2876:
  3566                           
  3567                           ; BSR set to: 1
  3568                           ;main.c: 331: _ball.bDirection = 6;
  3569  000798  0E06               	movlw	6
  3570  00079A                     L6:
  3571  00079A  0101               	movlb	1	; () banked
  3572  00079C  6FD1               	movwf	(__ball+2)& (0+255),b
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;main.c: 333: }
  3576                           
  3577                           ;main.c: 332: break;
  3578  00079E  D00B               	goto	i2l2882
  3579  0007A0                     i2l2880:
  3580                           
  3581                           ; BSR set to: 1
  3582  0007A0  0101               	movlb	1	; () banked
  3583  0007A2  51D1               	movf	(__ball+2)& (0+255),w,b
  3584                           
  3585                           ; Switch size 1, requested type "space"
  3586                           ; Number of cases is 3, Range of values is 1 to 3
  3587                           ; switch strategies available:
  3588                           ; Name         Instructions Cycles
  3589                           ; simple_byte           10     6 (average)
  3590                           ;	Chosen strategy is simple_byte
  3591  0007A4  0A01               	xorlw	1	; case 1
  3592  0007A6  B4D8               	btfsc	status,2,c
  3593  0007A8  D7F5               	goto	i2l2874
  3594  0007AA  0A03               	xorlw	3	; case 2
  3595  0007AC  B4D8               	btfsc	status,2,c
  3596  0007AE  D7F2               	goto	i2l2874
  3597  0007B0  0A01               	xorlw	1	; case 3
  3598  0007B2  B4D8               	btfsc	status,2,c
  3599  0007B4  D7F1               	goto	i2l2876
  3600  0007B6                     i2l2882:
  3601                           
  3602                           ; BSR set to: 1
  3603                           ;main.c: 334: getNextPosition();
  3604  0007B6  EC4E  F005         	call	_getNextPosition	;wreg free
  3605                           
  3606                           ;main.c: 335: return;
  3607  0007BA  0012               	return	
  3608  0007BC                     i2l2886:
  3609                           
  3610                           ;main.c: 336: }
  3611                           ;main.c: 338: _p2.lives--;
  3612  0007BC  0101               	movlb	1	; () banked
  3613  0007BE  07CE               	decf	(__p2+4)& (0+255),f,b
  3614                           
  3615                           ; BSR set to: 1
  3616                           ;main.c: 339: if (_p2.lives == 0) {
  3617  0007C0  0101               	movlb	1	; () banked
  3618  0007C2  51CE               	movf	(__p2+4)& (0+255),w,b
  3619  0007C4  A4D8               	btfss	status,2,c
  3620  0007C6  D024               	goto	i2l2912
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;main.c: 341: turnAllOff();
  3624  0007C8  EC8D  F007         	call	i2_turnAllOff	;wreg free
  3625                           
  3626                           ;main.c: 342: drawSymbol(7, 0);
  3627  0007CC  0E00               	movlw	0
  3628  0007CE  6E05               	movwf	i2drawSymbol@offSetX,c
  3629  0007D0  0E07               	movlw	7
  3630  0007D2  EC84  F001         	call	i2_drawSymbol
  3631                           
  3632                           ;main.c: 343: drawSymbol(7, 8);
  3633  0007D6  0E08               	movlw	8
  3634  0007D8  6E05               	movwf	i2drawSymbol@offSetX,c
  3635  0007DA  0E07               	movlw	7
  3636  0007DC  EC84  F001         	call	i2_drawSymbol
  3637                           
  3638                           ;main.c: 344: for(unsigned int counter = 0; counter < 800; counter ++)
  3639  0007E0  0E00               	movlw	0
  3640  0007E2  0100               	movlb	0	; () banked
  3641  0007E4  6FFE               	movwf	(checkNextPosition@counter_439+1)& (0+255),b
  3642  0007E6  0E00               	movlw	0
  3643  0007E8  6FFD               	movwf	checkNextPosition@counter_439& (0+255),b
  3644  0007EA                     i2l2898:
  3645                           
  3646                           ; BSR set to: 0
  3647  0007EA  0E20               	movlw	32
  3648  0007EC  0100               	movlb	0	; () banked
  3649  0007EE  5DFD               	subwf	checkNextPosition@counter_439& (0+255),w,b
  3650  0007F0  0E03               	movlw	3
  3651  0007F2  0100               	movlb	0	; () banked
  3652  0007F4  59FE               	subwfb	(checkNextPosition@counter_439+1)& (0+255),w,b
  3653  0007F6  B0D8               	btfsc	status,0,c
  3654  0007F8  D006               	goto	i2l2908
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;main.c: 345: {
  3658                           ;main.c: 346: refresh();
  3659                           
  3660                           ; BSR set to: 0
  3661                           
  3662                           ; BSR set to: 0
  3663  0007FA  EC16  F006         	call	i2_refresh	;wreg free
  3664  0007FE  0100               	movlb	0	; () banked
  3665  000800  4BFD               	infsnz	checkNextPosition@counter_439& (0+255),f,b
  3666  000802  2BFE               	incf	(checkNextPosition@counter_439+1)& (0+255),f,b
  3667  000804  D7F2               	goto	i2l2898
  3668  000806                     i2l2908:
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;main.c: 347: }
  3672                           ;main.c: 348: turnAllOff();
  3673  000806  EC8D  F007         	call	i2_turnAllOff	;wreg free
  3674                           
  3675                           ;main.c: 351: initializePong();
  3676  00080A  EC86  F008         	call	i2_initializePong	;wreg free
  3677                           
  3678                           ;main.c: 352: } else {
  3679  00080E  0012               	return	
  3680  000810                     i2l2912:
  3681                           
  3682                           ;main.c: 353: startPong();
  3683  000810  ECB0  F006         	call	i2_startPong	;wreg free
  3684                           
  3685                           ;main.c: 354: }
  3686                           ;main.c: 355: } else if (_nextPos[1] < 0 || _nextPos[1] > 7) {
  3687  000814  0012               	return	
  3688  000816                     i2l2914:
  3689  000816  0E07               	movlw	7
  3690  000818  0101               	movlb	1	; () banked
  3691  00081A  65D3               	cpfsgt	(__nextPos+1)& (0+255),b
  3692  00081C  0012               	return	
  3693  00081E  D00A               	goto	i2l2928
  3694  000820                     i2l2918:
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;main.c: 358: _ball.bDirection = 3;
  3698  000820  0E03               	movlw	3
  3699  000822  D005               	goto	L9
  3700  000824                     i2l2920:
  3701                           
  3702                           ; BSR set to: 1
  3703                           ;main.c: 361: _ball.bDirection = 1;
  3704  000824  0E01               	movlw	1
  3705  000826  D003               	goto	L9
  3706  000828                     i2l2922:
  3707                           
  3708                           ; BSR set to: 1
  3709                           ;main.c: 364: _ball.bDirection = 6;
  3710  000828  0E06               	movlw	6
  3711  00082A  D001               	goto	L9
  3712  00082C                     i2l2924:
  3713                           
  3714                           ; BSR set to: 1
  3715                           ;main.c: 367: _ball.bDirection = 4;
  3716  00082C  0E04               	movlw	4
  3717  00082E                     L9:
  3718  00082E  0101               	movlb	1	; () banked
  3719  000830  6FD1               	movwf	(__ball+2)& (0+255),b
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;main.c: 369: }
  3723                           
  3724                           ;main.c: 368: break;
  3725  000832  D00E               	goto	i2l2930
  3726  000834                     i2l2928:
  3727                           
  3728                           ; BSR set to: 1
  3729  000834  0101               	movlb	1	; () banked
  3730  000836  51D1               	movf	(__ball+2)& (0+255),w,b
  3731                           
  3732                           ; Switch size 1, requested type "space"
  3733                           ; Number of cases is 4, Range of values is 1 to 6
  3734                           ; switch strategies available:
  3735                           ; Name         Instructions Cycles
  3736                           ; simple_byte           13     7 (average)
  3737                           ;	Chosen strategy is simple_byte
  3738  000838  0A01               	xorlw	1	; case 1
  3739  00083A  B4D8               	btfsc	status,2,c
  3740  00083C  D7F1               	goto	i2l2918
  3741  00083E  0A02               	xorlw	2	; case 3
  3742  000840  B4D8               	btfsc	status,2,c
  3743  000842  D7F0               	goto	i2l2920
  3744  000844  0A07               	xorlw	7	; case 4
  3745  000846  B4D8               	btfsc	status,2,c
  3746  000848  D7EF               	goto	i2l2922
  3747  00084A  0A02               	xorlw	2	; case 6
  3748  00084C  B4D8               	btfsc	status,2,c
  3749  00084E  D7EE               	goto	i2l2924
  3750  000850                     i2l2930:
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;main.c: 370: getNextPosition();
  3754  000850  EC4E  F005         	call	_getNextPosition	;wreg free
  3755                           
  3756                           ;main.c: 371: return;
  3757  000854  0012               	return	
  3758  000856                     __end_of_checkNextPosition:
  3759                           	opt stack 0
  3760                           pclatu	equ	0xFFB
  3761                           pclath	equ	0xFFA
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           prodh	equ	0xFF4
  3767                           prodl	equ	0xFF3
  3768                           intcon	equ	0xFF2
  3769                           postinc0	equ	0xFEE
  3770                           fsr0h	equ	0xFEA
  3771                           fsr0l	equ	0xFE9
  3772                           wreg	equ	0xFE8
  3773                           postdec1	equ	0xFE5
  3774                           plusw1	equ	0xFE3
  3775                           fsr1h	equ	0xFE2
  3776                           fsr1l	equ	0xFE1
  3777                           indf2	equ	0xFDF
  3778                           postinc2	equ	0xFDE
  3779                           plusw2	equ	0xFDB
  3780                           fsr2h	equ	0xFDA
  3781                           fsr2l	equ	0xFD9
  3782                           status	equ	0xFD8
  3783                           
  3784 ;; *************** function i2_initializePong *****************
  3785 ;; Defined at:
  3786 ;;		line 83 in file "main.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;		None
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3800 ;;      Params:         0       0       0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0
  3803 ;;      Totals:         0       0       0       0       0       0       0
  3804 ;;Total ram usage:        0 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    3
  3807 ;; This function calls:
  3808 ;;		i2_startPong
  3809 ;; This function is called by:
  3810 ;;		_checkNextPosition
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text16
  3815  00110C                     __ptext16:
  3816                           	opt stack 0
  3817  00110C                     i2_initializePong:
  3818                           	opt stack 21
  3819                           
  3820                           ;main.c: 87: _p1.lives = 3;
  3821                           
  3822                           ;incstack = 0
  3823  00110C  0E03               	movlw	3
  3824  00110E  0101               	movlb	1	; () banked
  3825  001110  6FC9               	movwf	(__p1+4)& (0+255),b
  3826                           
  3827                           ;main.c: 88: _p2.lives = 3;
  3828  001112  0E03               	movlw	3
  3829  001114  0101               	movlb	1	; () banked
  3830  001116  6FCE               	movwf	(__p2+4)& (0+255),b
  3831                           
  3832                           ; BSR set to: 1
  3833                           ;main.c: 90: startPong();
  3834  001118  ECB0  F006         	call	i2_startPong	;wreg free
  3835                           
  3836                           ;main.c: 93: TMR0ON = 1;
  3837  00111C  8ED5               	bsf	4053,7,c	;volatile
  3838  00111E  0012               	return		;funcret
  3839  001120                     __end_ofi2_initializePong:
  3840                           	opt stack 0
  3841                           pclatu	equ	0xFFB
  3842                           pclath	equ	0xFFA
  3843                           tblptru	equ	0xFF8
  3844                           tblptrh	equ	0xFF7
  3845                           tblptrl	equ	0xFF6
  3846                           tablat	equ	0xFF5
  3847                           prodh	equ	0xFF4
  3848                           prodl	equ	0xFF3
  3849                           intcon	equ	0xFF2
  3850                           postinc0	equ	0xFEE
  3851                           fsr0h	equ	0xFEA
  3852                           fsr0l	equ	0xFE9
  3853                           wreg	equ	0xFE8
  3854                           postdec1	equ	0xFE5
  3855                           plusw1	equ	0xFE3
  3856                           fsr1h	equ	0xFE2
  3857                           fsr1l	equ	0xFE1
  3858                           indf2	equ	0xFDF
  3859                           postinc2	equ	0xFDE
  3860                           plusw2	equ	0xFDB
  3861                           fsr2h	equ	0xFDA
  3862                           fsr2l	equ	0xFD9
  3863                           status	equ	0xFD8
  3864                           
  3865 ;; *************** function i2_startPong *****************
  3866 ;; Defined at:
  3867 ;;		line 59 in file "main.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  startPong       2  121[BANK0 ] unsigned int 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3881 ;;      Params:         0       0       0       0       0       0       0
  3882 ;;      Locals:         0       2       0       0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0
  3884 ;;      Totals:         0       2       0       0       0       0       0
  3885 ;;Total ram usage:        2 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    2
  3888 ;; This function calls:
  3889 ;;		i2_drawSymbol
  3890 ;;		i2_refresh
  3891 ;;		i2_turnAllOff
  3892 ;; This function is called by:
  3893 ;;		_checkNextPosition
  3894 ;;		i2_initializePong
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text17
  3899  000D60                     __ptext17:
  3900                           	opt stack 0
  3901  000D60                     i2_startPong:
  3902                           	opt stack 22
  3903                           
  3904                           ;main.c: 61: turnAllOff();
  3905                           
  3906                           ;incstack = 0
  3907  000D60  EC8D  F007         	call	i2_turnAllOff	;wreg free
  3908                           
  3909                           ;main.c: 62: drawSymbol(_p1.lives, 0);
  3910  000D64  0E00               	movlw	0
  3911  000D66  6E05               	movwf	i2drawSymbol@offSetX,c
  3912  000D68  0101               	movlb	1	; () banked
  3913  000D6A  51C9               	movf	(__p1+4)& (0+255),w,b
  3914  000D6C  EC84  F001         	call	i2_drawSymbol
  3915                           
  3916                           ;main.c: 63: drawSymbol(_p2.lives, 8);
  3917  000D70  0E08               	movlw	8
  3918  000D72  6E05               	movwf	i2drawSymbol@offSetX,c
  3919  000D74  0101               	movlb	1	; () banked
  3920  000D76  51CE               	movf	(__p2+4)& (0+255),w,b
  3921  000D78  EC84  F001         	call	i2_drawSymbol
  3922                           
  3923                           ;main.c: 64: for (unsigned int counter = 0; counter < 800; counter++) {
  3924  000D7C  0E00               	movlw	0
  3925  000D7E  0100               	movlb	0	; () banked
  3926  000D80  6FFA               	movwf	(i2startPong@counter+1)& (0+255),b
  3927  000D82  0E00               	movlw	0
  3928  000D84  6FF9               	movwf	i2startPong@counter& (0+255),b
  3929  000D86                     i2l2700:
  3930                           
  3931                           ; BSR set to: 0
  3932  000D86  0E20               	movlw	32
  3933  000D88  0100               	movlb	0	; () banked
  3934  000D8A  5DF9               	subwf	i2startPong@counter& (0+255),w,b
  3935  000D8C  0E03               	movlw	3
  3936  000D8E  0100               	movlb	0	; () banked
  3937  000D90  59FA               	subwfb	(i2startPong@counter+1)& (0+255),w,b
  3938  000D92  B0D8               	btfsc	status,0,c
  3939  000D94  D006               	goto	i2l2710
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;main.c: 65: refresh();
  3943                           
  3944                           ; BSR set to: 0
  3945                           
  3946                           ; BSR set to: 0
  3947  000D96  EC16  F006         	call	i2_refresh	;wreg free
  3948  000D9A  0100               	movlb	0	; () banked
  3949  000D9C  4BF9               	infsnz	i2startPong@counter& (0+255),f,b
  3950  000D9E  2BFA               	incf	(i2startPong@counter+1)& (0+255),f,b
  3951  000DA0  D7F2               	goto	i2l2700
  3952  000DA2                     i2l2710:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;main.c: 66: }
  3956                           ;main.c: 67: turnAllOff();
  3957  000DA2  EC8D  F007         	call	i2_turnAllOff	;wreg free
  3958                           
  3959                           ;main.c: 72: _ball.bDirection = 3;
  3960  000DA6  0E03               	movlw	3
  3961  000DA8  0101               	movlb	1	; () banked
  3962  000DAA  6FD1               	movwf	(__ball+2)& (0+255),b
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;main.c: 74: _ball.bPos[0] = 2;
  3966  000DAC  0E02               	movlw	2
  3967  000DAE  0101               	movlb	1	; () banked
  3968  000DB0  6FCF               	movwf	__ball& (0+255),b
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;main.c: 76: _ball.bPos[1] = 4;
  3972  000DB2  0E04               	movlw	4
  3973  000DB4  0101               	movlb	1	; () banked
  3974  000DB6  6FD0               	movwf	(__ball+1)& (0+255),b
  3975                           
  3976                           ; BSR set to: 1
  3977                           ;main.c: 79: _nextPos[0] = _ball.bPos[0];
  3978  000DB8  C1CF  F1D2         	movff	__ball,__nextPos
  3979                           
  3980                           ; BSR set to: 1
  3981                           ;main.c: 80: _nextPos[1] = _ball.bPos[1];
  3982  000DBC  C1D0  F1D3         	movff	__ball+1,__nextPos+1
  3983                           
  3984                           ; BSR set to: 1
  3985  000DC0  0012               	return		;funcret
  3986  000DC2                     __end_ofi2_startPong:
  3987                           	opt stack 0
  3988                           pclatu	equ	0xFFB
  3989                           pclath	equ	0xFFA
  3990                           tblptru	equ	0xFF8
  3991                           tblptrh	equ	0xFF7
  3992                           tblptrl	equ	0xFF6
  3993                           tablat	equ	0xFF5
  3994                           prodh	equ	0xFF4
  3995                           prodl	equ	0xFF3
  3996                           intcon	equ	0xFF2
  3997                           postinc0	equ	0xFEE
  3998                           fsr0h	equ	0xFEA
  3999                           fsr0l	equ	0xFE9
  4000                           wreg	equ	0xFE8
  4001                           postdec1	equ	0xFE5
  4002                           plusw1	equ	0xFE3
  4003                           fsr1h	equ	0xFE2
  4004                           fsr1l	equ	0xFE1
  4005                           indf2	equ	0xFDF
  4006                           postinc2	equ	0xFDE
  4007                           plusw2	equ	0xFDB
  4008                           fsr2h	equ	0xFDA
  4009                           fsr2l	equ	0xFD9
  4010                           status	equ	0xFD8
  4011                           
  4012 ;; *************** function i2_turnAllOff *****************
  4013 ;; Defined at:
  4014 ;;		line 161 in file "Source/LED-API.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  turnAllOff      1    3[COMRAM] unsigned char 
  4019 ;;  turnAllOff      1    2[COMRAM] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4029 ;;      Params:         0       0       0       0       0       0       0
  4030 ;;      Locals:         2       0       0       0       0       0       0
  4031 ;;      Temps:          2       0       0       0       0       0       0
  4032 ;;      Totals:         4       0       0       0       0       0       0
  4033 ;;Total ram usage:        4 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_checkNextPosition
  4039 ;;		i2_startPong
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text18
  4044  000F1A                     __ptext18:
  4045                           	opt stack 0
  4046  000F1A                     i2_turnAllOff:
  4047                           	opt stack 24
  4048                           
  4049                           ;LED-API.c: 164: for (unsigned char i = 0; i < 8; i++) {
  4050                           
  4051                           ; BSR set to: 1
  4052                           ;incstack = 0
  4053  000F1A  0E00               	movlw	0
  4054  000F1C  6E03               	movwf	i2turnAllOff@i,c
  4055  000F1E                     i2l1850:
  4056  000F1E  0E07               	movlw	7
  4057  000F20  6403               	cpfsgt	i2turnAllOff@i,c
  4058  000F22  D001               	goto	i2l1854
  4059  000F24  0012               	return	
  4060  000F26                     i2l1854:
  4061                           
  4062                           ;LED-API.c: 165: for (unsigned char j = 0; j < 16; j++) {
  4063  000F26  0E00               	movlw	0
  4064  000F28  6E04               	movwf	i2turnAllOff@j,c
  4065  000F2A                     i2l1856:
  4066  000F2A  0E0F               	movlw	15
  4067  000F2C  6404               	cpfsgt	i2turnAllOff@j,c
  4068  000F2E  D001               	goto	i2l1860
  4069  000F30  D016               	goto	i2l1866
  4070  000F32                     i2l1860:
  4071                           
  4072                           ;LED-API.c: 166: pixels[i][j] = 0;
  4073  000F32  5003               	movf	i2turnAllOff@i,w,c
  4074  000F34  0D10               	mullw	16
  4075  000F36  0E00               	movlw	low _pixels
  4076  000F38  6E01               	movwf	??i2_turnAllOff& (0+255),c
  4077  000F3A  0E03               	movlw	high _pixels
  4078  000F3C  6E02               	movwf	(??i2_turnAllOff+1)& (0+255),c
  4079  000F3E  50F3               	movf	prodl,w,c
  4080  000F40  2601               	addwf	??i2_turnAllOff,f,c
  4081  000F42  50F4               	movf	prodh,w,c
  4082  000F44  2202               	addwfc	??i2_turnAllOff+1,f,c
  4083  000F46  5004               	movf	i2turnAllOff@j,w,c
  4084  000F48  0D01               	mullw	1
  4085  000F4A  50F3               	movf	prodl,w,c
  4086  000F4C  2401               	addwf	??i2_turnAllOff,w,c
  4087  000F4E  6ED9               	movwf	fsr2l,c
  4088  000F50  50F4               	movf	prodh,w,c
  4089  000F52  2002               	addwfc	??i2_turnAllOff+1,w,c
  4090  000F54  6EDA               	movwf	fsr2h,c
  4091  000F56  0E00               	movlw	0
  4092  000F58  6EDF               	movwf	indf2,c
  4093  000F5A  2A04               	incf	i2turnAllOff@j,f,c
  4094  000F5C  D7E6               	goto	i2l1856
  4095  000F5E                     i2l1866:
  4096  000F5E  2A03               	incf	i2turnAllOff@i,f,c
  4097  000F60  D7DE               	goto	i2l1850
  4098  000F62                     __end_ofi2_turnAllOff:
  4099                           	opt stack 0
  4100                           pclatu	equ	0xFFB
  4101                           pclath	equ	0xFFA
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           prodh	equ	0xFF4
  4107                           prodl	equ	0xFF3
  4108                           intcon	equ	0xFF2
  4109                           postinc0	equ	0xFEE
  4110                           fsr0h	equ	0xFEA
  4111                           fsr0l	equ	0xFE9
  4112                           wreg	equ	0xFE8
  4113                           postdec1	equ	0xFE5
  4114                           plusw1	equ	0xFE3
  4115                           fsr1h	equ	0xFE2
  4116                           fsr1l	equ	0xFE1
  4117                           indf2	equ	0xFDF
  4118                           postinc2	equ	0xFDE
  4119                           plusw2	equ	0xFDB
  4120                           fsr2h	equ	0xFDA
  4121                           fsr2l	equ	0xFD9
  4122                           status	equ	0xFD8
  4123                           
  4124 ;; *************** function i2_refresh *****************
  4125 ;; Defined at:
  4126 ;;		line 177 in file "Source/LED-API.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  refresh         1    7[COMRAM] unsigned char 
  4131 ;;  refresh         1    6[COMRAM] unsigned char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4141 ;;      Params:         0       0       0       0       0       0       0
  4142 ;;      Locals:         2       0       0       0       0       0       0
  4143 ;;      Temps:          3       0       0       0       0       0       0
  4144 ;;      Totals:         5       0       0       0       0       0       0
  4145 ;;Total ram usage:        5 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    1
  4148 ;; This function calls:
  4149 ;;		i2_allOff
  4150 ;;		i2_setColHigh
  4151 ;;		i2_setRowHigh
  4152 ;; This function is called by:
  4153 ;;		_checkNextPosition
  4154 ;;		i2_startPong
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text19
  4159  000C2C                     __ptext19:
  4160                           	opt stack 0
  4161  000C2C                     i2_refresh:
  4162                           	opt stack 22
  4163                           
  4164                           ;LED-API.c: 179: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  4165                           
  4166                           ;incstack = 0
  4167  000C2C  0E00               	movlw	0
  4168  000C2E  6E07               	movwf	i2refresh@theCol,c
  4169  000C30                     i2l1872:
  4170  000C30  0E07               	movlw	7
  4171  000C32  6407               	cpfsgt	i2refresh@theCol,c
  4172  000C34  D001               	goto	i2l1876
  4173  000C36  0012               	return	
  4174  000C38                     i2l1876:
  4175                           
  4176                           ;LED-API.c: 181: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  4177  000C38  0E00               	movlw	0
  4178  000C3A  6E08               	movwf	i2refresh@theRow,c
  4179  000C3C                     i2l1878:
  4180  000C3C  0E0F               	movlw	15
  4181  000C3E  6408               	cpfsgt	i2refresh@theRow,c
  4182  000C40  D001               	goto	i2l1882
  4183  000C42  D01A               	goto	i2l1890
  4184  000C44                     i2l1882:
  4185                           
  4186                           ;LED-API.c: 183: if (pixels[theCol][theRow] == 1)
  4187  000C44  5007               	movf	i2refresh@theCol,w,c
  4188  000C46  0D10               	mullw	16
  4189  000C48  0E00               	movlw	low _pixels
  4190  000C4A  6E04               	movwf	??i2_refresh& (0+255),c
  4191  000C4C  0E03               	movlw	high _pixels
  4192  000C4E  6E05               	movwf	(??i2_refresh+1)& (0+255),c
  4193  000C50  50F3               	movf	prodl,w,c
  4194  000C52  2604               	addwf	??i2_refresh,f,c
  4195  000C54  50F4               	movf	prodh,w,c
  4196  000C56  2205               	addwfc	??i2_refresh+1,f,c
  4197  000C58  5008               	movf	i2refresh@theRow,w,c
  4198  000C5A  0D01               	mullw	1
  4199  000C5C  50F3               	movf	prodl,w,c
  4200  000C5E  2404               	addwf	??i2_refresh,w,c
  4201  000C60  6ED9               	movwf	fsr2l,c
  4202  000C62  50F4               	movf	prodh,w,c
  4203  000C64  2005               	addwfc	??i2_refresh+1,w,c
  4204  000C66  6EDA               	movwf	fsr2h,c
  4205  000C68  04DE               	decf	postinc2,w,c
  4206  000C6A  A4D8               	btfss	status,2,c
  4207  000C6C  D003               	goto	i2l1886
  4208                           
  4209                           ;LED-API.c: 184: setRowHigh(theRow);
  4210  000C6E  5008               	movf	i2refresh@theRow,w,c
  4211  000C70  ECD3  F007         	call	i2_setRowHigh
  4212  000C74                     i2l1886:
  4213  000C74  2A08               	incf	i2refresh@theRow,f,c
  4214  000C76  D7E2               	goto	i2l1878
  4215  000C78                     i2l1890:
  4216                           
  4217                           ;LED-API.c: 185: }
  4218                           ;LED-API.c: 189: setColHigh(theCol);
  4219  000C78  5007               	movf	i2refresh@theCol,w,c
  4220  000C7A  EC6E  F008         	call	i2_setColHigh
  4221                           
  4222                           ;LED-API.c: 190: _delay((unsigned long)((500)*(32000000/4000000.0)));
  4223  000C7E  0E06               	movlw	6
  4224  000C80  6E04               	movwf	??i2_refresh& (0+255),c
  4225  000C82  0E30               	movlw	48
  4226  000C84                     i2u298_47:
  4227  000C84  2EE8               	decfsz	wreg,f,c
  4228  000C86  D7FE               	goto	i2u298_47
  4229  000C88  2E04               	decfsz	??i2_refresh& (0+255),f,c
  4230  000C8A  D7FC               	goto	i2u298_47
  4231  000C8C  D000               	nop2	
  4232                           
  4233                           ;LED-API.c: 191: allOff();
  4234  000C8E  ECA9  F008         	call	i2_allOff	;wreg free
  4235  000C92  2A07               	incf	i2refresh@theCol,f,c
  4236  000C94  D7CD               	goto	i2l1872
  4237  000C96                     __end_ofi2_refresh:
  4238                           	opt stack 0
  4239                           pclatu	equ	0xFFB
  4240                           pclath	equ	0xFFA
  4241                           tblptru	equ	0xFF8
  4242                           tblptrh	equ	0xFF7
  4243                           tblptrl	equ	0xFF6
  4244                           tablat	equ	0xFF5
  4245                           prodh	equ	0xFF4
  4246                           prodl	equ	0xFF3
  4247                           intcon	equ	0xFF2
  4248                           postinc0	equ	0xFEE
  4249                           fsr0h	equ	0xFEA
  4250                           fsr0l	equ	0xFE9
  4251                           wreg	equ	0xFE8
  4252                           postdec1	equ	0xFE5
  4253                           plusw1	equ	0xFE3
  4254                           fsr1h	equ	0xFE2
  4255                           fsr1l	equ	0xFE1
  4256                           indf2	equ	0xFDF
  4257                           postinc2	equ	0xFDE
  4258                           plusw2	equ	0xFDB
  4259                           fsr2h	equ	0xFDA
  4260                           fsr2l	equ	0xFD9
  4261                           status	equ	0xFD8
  4262                           
  4263 ;; *************** function i2_setRowHigh *****************
  4264 ;; Defined at:
  4265 ;;		line 24 in file "Source/LED-API.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  row             1    wreg     unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  row             1    2[COMRAM] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4279 ;;      Params:         0       0       0       0       0       0       0
  4280 ;;      Locals:         1       0       0       0       0       0       0
  4281 ;;      Temps:          2       0       0       0       0       0       0
  4282 ;;      Totals:         3       0       0       0       0       0       0
  4283 ;;Total ram usage:        3 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		i2_refresh
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text20
  4293  000FA6                     __ptext20:
  4294                           	opt stack 0
  4295  000FA6                     i2_setRowHigh:
  4296                           	opt stack 22
  4297                           
  4298                           ;incstack = 0
  4299                           ;i2setRowHigh@row stored from wreg
  4300  000FA6  6E03               	movwf	i2setRowHigh@row,c
  4301                           
  4302                           ;LED-API.c: 25: if(row < 8)
  4303  000FA8  0E08               	movlw	8
  4304  000FAA  6003               	cpfslt	i2setRowHigh@row,c
  4305  000FAC  D00D               	goto	i2l1706
  4306                           
  4307                           ;LED-API.c: 26: LATC |= (1 << row);
  4308  000FAE  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4309  000FB2  0E01               	movlw	1
  4310  000FB4  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4311  000FB6  2A01               	incf	??i2_setRowHigh,f,c
  4312  000FB8  D002               	goto	i2u115_44
  4313  000FBA                     i2u115_45:
  4314  000FBA  90D8               	bcf	status,0,c
  4315  000FBC  3602               	rlcf	??i2_setRowHigh+1,f,c
  4316  000FBE                     i2u115_44:
  4317  000FBE  2E01               	decfsz	??i2_setRowHigh,f,c
  4318  000FC0  D7FC               	goto	i2u115_45
  4319  000FC2  5002               	movf	??i2_setRowHigh+1,w,c
  4320  000FC4  128B               	iorwf	3979,f,c	;volatile
  4321  000FC6  0012               	return	
  4322  000FC8                     i2l1706:
  4323                           
  4324                           ;LED-API.c: 27: else
  4325                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  4326  000FC8  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4327  000FCC  0EF8               	movlw	-8
  4328  000FCE  2601               	addwf	??i2_setRowHigh,f,c
  4329  000FD0  0E01               	movlw	1
  4330  000FD2  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4331  000FD4  2A01               	incf	??i2_setRowHigh,f,c
  4332  000FD6  D002               	goto	i2u116_44
  4333  000FD8                     i2u116_45:
  4334  000FD8  90D8               	bcf	status,0,c
  4335  000FDA  3602               	rlcf	??i2_setRowHigh+1,f,c
  4336  000FDC                     i2u116_44:
  4337  000FDC  2E01               	decfsz	??i2_setRowHigh,f,c
  4338  000FDE  D7FC               	goto	i2u116_45
  4339  000FE0  5002               	movf	??i2_setRowHigh+1,w,c
  4340  000FE2  128C               	iorwf	3980,f,c	;volatile
  4341  000FE4  0012               	return	
  4342  000FE6                     __end_ofi2_setRowHigh:
  4343                           	opt stack 0
  4344                           pclatu	equ	0xFFB
  4345                           pclath	equ	0xFFA
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           postinc0	equ	0xFEE
  4354                           fsr0h	equ	0xFEA
  4355                           fsr0l	equ	0xFE9
  4356                           wreg	equ	0xFE8
  4357                           postdec1	equ	0xFE5
  4358                           plusw1	equ	0xFE3
  4359                           fsr1h	equ	0xFE2
  4360                           fsr1l	equ	0xFE1
  4361                           indf2	equ	0xFDF
  4362                           postinc2	equ	0xFDE
  4363                           plusw2	equ	0xFDB
  4364                           fsr2h	equ	0xFDA
  4365                           fsr2l	equ	0xFD9
  4366                           status	equ	0xFD8
  4367                           
  4368 ;; *************** function i2_setColHigh *****************
  4369 ;; Defined at:
  4370 ;;		line 20 in file "Source/LED-API.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  column          1    wreg     unsigned char 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  column          1    2[COMRAM] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4384 ;;      Params:         0       0       0       0       0       0       0
  4385 ;;      Locals:         1       0       0       0       0       0       0
  4386 ;;      Temps:          2       0       0       0       0       0       0
  4387 ;;      Totals:         3       0       0       0       0       0       0
  4388 ;;Total ram usage:        3 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		i2_refresh
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text21
  4398  0010DC                     __ptext21:
  4399                           	opt stack 0
  4400  0010DC                     i2_setColHigh:
  4401                           	opt stack 22
  4402                           
  4403                           ;incstack = 0
  4404                           ;i2setColHigh@column stored from wreg
  4405  0010DC  6E03               	movwf	i2setColHigh@column,c
  4406                           
  4407                           ;LED-API.c: 21: LATA |= (1 << column);
  4408  0010DE  C003  F001         	movff	i2setColHigh@column,??i2_setColHigh
  4409  0010E2  0E01               	movlw	1
  4410  0010E4  6E02               	movwf	(??i2_setColHigh+1)& (0+255),c
  4411  0010E6  2A01               	incf	??i2_setColHigh,f,c
  4412  0010E8  D002               	goto	i2u113_44
  4413  0010EA                     i2u113_45:
  4414  0010EA  90D8               	bcf	status,0,c
  4415  0010EC  3602               	rlcf	??i2_setColHigh+1,f,c
  4416  0010EE                     i2u113_44:
  4417  0010EE  2E01               	decfsz	??i2_setColHigh,f,c
  4418  0010F0  D7FC               	goto	i2u113_45
  4419  0010F2  5002               	movf	??i2_setColHigh+1,w,c
  4420  0010F4  1289               	iorwf	3977,f,c	;volatile
  4421  0010F6  0012               	return		;funcret
  4422  0010F8                     __end_ofi2_setColHigh:
  4423                           	opt stack 0
  4424                           pclatu	equ	0xFFB
  4425                           pclath	equ	0xFFA
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           prodh	equ	0xFF4
  4431                           prodl	equ	0xFF3
  4432                           intcon	equ	0xFF2
  4433                           postinc0	equ	0xFEE
  4434                           fsr0h	equ	0xFEA
  4435                           fsr0l	equ	0xFE9
  4436                           wreg	equ	0xFE8
  4437                           postdec1	equ	0xFE5
  4438                           plusw1	equ	0xFE3
  4439                           fsr1h	equ	0xFE2
  4440                           fsr1l	equ	0xFE1
  4441                           indf2	equ	0xFDF
  4442                           postinc2	equ	0xFDE
  4443                           plusw2	equ	0xFDB
  4444                           fsr2h	equ	0xFDA
  4445                           fsr2l	equ	0xFD9
  4446                           status	equ	0xFD8
  4447                           
  4448 ;; *************** function i2_allOff *****************
  4449 ;; Defined at:
  4450 ;;		line 171 in file "Source/LED-API.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;		None
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4464 ;;      Params:         0       0       0       0       0       0       0
  4465 ;;      Locals:         0       0       0       0       0       0       0
  4466 ;;      Temps:          0       0       0       0       0       0       0
  4467 ;;      Totals:         0       0       0       0       0       0       0
  4468 ;;Total ram usage:        0 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		i2_refresh
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text22
  4478  001152                     __ptext22:
  4479                           	opt stack 0
  4480  001152                     i2_allOff:
  4481                           	opt stack 22
  4482                           
  4483                           ;LED-API.c: 172: LATA = 0;
  4484                           
  4485                           ;incstack = 0
  4486  001152  0E00               	movlw	0
  4487  001154  6E89               	movwf	3977,c	;volatile
  4488                           
  4489                           ;LED-API.c: 173: LATC = 0;
  4490  001156  0E00               	movlw	0
  4491  001158  6E8B               	movwf	3979,c	;volatile
  4492                           
  4493                           ;LED-API.c: 174: LATD = 0;
  4494  00115A  0E00               	movlw	0
  4495  00115C  6E8C               	movwf	3980,c	;volatile
  4496  00115E  0012               	return		;funcret
  4497  001160                     __end_ofi2_allOff:
  4498                           	opt stack 0
  4499                           pclatu	equ	0xFFB
  4500                           pclath	equ	0xFFA
  4501                           tblptru	equ	0xFF8
  4502                           tblptrh	equ	0xFF7
  4503                           tblptrl	equ	0xFF6
  4504                           tablat	equ	0xFF5
  4505                           prodh	equ	0xFF4
  4506                           prodl	equ	0xFF3
  4507                           intcon	equ	0xFF2
  4508                           postinc0	equ	0xFEE
  4509                           fsr0h	equ	0xFEA
  4510                           fsr0l	equ	0xFE9
  4511                           wreg	equ	0xFE8
  4512                           postdec1	equ	0xFE5
  4513                           plusw1	equ	0xFE3
  4514                           fsr1h	equ	0xFE2
  4515                           fsr1l	equ	0xFE1
  4516                           indf2	equ	0xFDF
  4517                           postinc2	equ	0xFDE
  4518                           plusw2	equ	0xFDB
  4519                           fsr2h	equ	0xFDA
  4520                           fsr2l	equ	0xFD9
  4521                           status	equ	0xFD8
  4522                           
  4523 ;; *************** function i2_drawSymbol *****************
  4524 ;; Defined at:
  4525 ;;		line 85 in file "Source/LED-API.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  chosenSymbol    1    wreg     unsigned char 
  4528 ;;  offSetX         1    4[COMRAM] unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  chosenSymbol    1  125[COMRAM] unsigned char 
  4531 ;;  drawSymbol     68    0[BANK0 ] unsigned char [2][34]
  4532 ;;  drawSymbol     68    5[COMRAM] unsigned char [2][34]
  4533 ;;  drawSymbol     30   68[BANK0 ] unsigned char [2][15]
  4534 ;;  drawSymbol     30   73[COMRAM] unsigned char [2][15]
  4535 ;;  drawSymbol     22  103[COMRAM] unsigned char [2][11]
  4536 ;;  drawSymbol     16    0[BANK1 ] unsigned char [2][8]
  4537 ;;  drawSymbol     16   98[BANK0 ] unsigned char [2][8]
  4538 ;;  drawSymbol      1  120[BANK0 ] unsigned char 
  4539 ;;  drawSymbol      1  119[BANK0 ] unsigned char 
  4540 ;;  drawSymbol      1  118[BANK0 ] unsigned char 
  4541 ;;  drawSymbol      1  117[BANK0 ] unsigned char 
  4542 ;;  drawSymbol      1  116[BANK0 ] unsigned char 
  4543 ;;  drawSymbol      1  115[BANK0 ] unsigned char 
  4544 ;;  drawSymbol      1  114[BANK0 ] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4554 ;;      Params:         1       0       0       0       0       0       0
  4555 ;;      Locals:       121     121      16       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0
  4557 ;;      Totals:       122     121      16       0       0       0       0
  4558 ;;Total ram usage:      259 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    1
  4561 ;; This function calls:
  4562 ;;		i2_on
  4563 ;; This function is called by:
  4564 ;;		_checkNextPosition
  4565 ;;		i2_startPong
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text23
  4570  000308                     __ptext23:
  4571                           	opt stack 0
  4572  000308                     i2_drawSymbol:
  4573                           	opt stack 22
  4574                           
  4575                           ;incstack = 0
  4576                           ;i2drawSymbol@chosenSymbol stored from wreg
  4577  000308  6E7E               	movwf	i2drawSymbol@chosenSymbol,c
  4578                           
  4579                           ;LED-API.c: 87: char symbolOne[11][2] = {{2,0},{3,0}, {4,0}, {3,1}, {3,2}, {3,3}, {3,4},
      +                           {3,5}, {3,6}, {3,7}, {4,6}};
  4580  00030A  EE22  F080         	lfsr	2,drawSymbol@F3224
  4581  00030E  EE10  F068         	lfsr	1,i2drawSymbol@symbolOne
  4582  000312  0E15               	movlw	21
  4583  000314                     i2u228_41:
  4584  000314  CFDB FFE3          	movff	plusw2,plusw1
  4585  000318  06E8               	decf	wreg,f,c
  4586  00031A  E2FC               	bc	i2u228_41
  4587                           
  4588                           ;LED-API.c: 88: char symbolTwo[15][2] = {{1,0}, {2,0}, {3,0}, {4,0}, {5,0}, {5,1}, {4,2}
      +                          , {3,3}, {2,4}, {1,5}, {1,6}, {5,6}, {2,7}, {3,7}, {4,7}};
  4589  00031C  EE22  F044         	lfsr	2,drawSymbol@F3227
  4590  000320  EE10  F04A         	lfsr	1,i2drawSymbol@symbolTwo
  4591  000324  0E1D               	movlw	29
  4592  000326                     i2u229_41:
  4593  000326  CFDB FFE3          	movff	plusw2,plusw1
  4594  00032A  06E8               	decf	wreg,f,c
  4595  00032C  E2FC               	bc	i2u229_41
  4596                           
  4597                           ;LED-API.c: 89: char symbolThree[15][2] = {{2,0}, {3,0}, {4,0}, {5,1}, {1,1}, {1,2}, {1,
      +                          3}, {2,4}, {3,4}, {1,5}, {1,6}, {2,7}, {3,7}, {4,7}, {5,6}};
  4598  00032E  EE22  F062         	lfsr	2,drawSymbol@F3230
  4599  000332  EE10  F0C4         	lfsr	1,i2drawSymbol@symbolThree
  4600  000336  0E1D               	movlw	29
  4601  000338                     i2u230_41:
  4602  000338  CFDB FFE3          	movff	plusw2,plusw1
  4603  00033C  06E8               	decf	wreg,f,c
  4604  00033E  E2FC               	bc	i2u230_41
  4605                           
  4606                           ;LED-API.c: 91: char symbolPlay[34][2] = {
  4607                           ;LED-API.c: 92: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  4608                           ;LED-API.c: 93: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  4609                           ;LED-API.c: 94: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  4610                           ;LED-API.c: 95: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  4611  000340  EE22  F000         	lfsr	2,drawSymbol@F3233
  4612  000344  EE10  F006         	lfsr	1,i2drawSymbol@symbolPlay
  4613  000348  0E43               	movlw	67
  4614  00034A                     i2u231_41:
  4615  00034A  CFDB FFE3          	movff	plusw2,plusw1
  4616  00034E  06E8               	decf	wreg,f,c
  4617  000350  E2FC               	bc	i2u231_41
  4618                           
  4619                           ;LED-API.c: 97: char symbolGo[34][2] = {
  4620                           ;LED-API.c: 98: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0},
      +                          {5,0},{6,1},{5,2},{4,2},
  4621                           ;LED-API.c: 99: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},{
      +                          13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  4622  000352  EE23  F080         	lfsr	2,drawSymbol@F3236
  4623  000356  EE10  F080         	lfsr	1,i2drawSymbol@symbolGo
  4624  00035A  0E43               	movlw	67
  4625  00035C                     i2u232_41:
  4626  00035C  CFDB FFE3          	movff	plusw2,plusw1
  4627  000360  06E8               	decf	wreg,f,c
  4628  000362  E2FC               	bc	i2u232_41
  4629                           
  4630                           ;LED-API.c: 101: char symbolArrowLeft[8][2] = {{3,0}, {3,7}, {4,1}, {4,6}, {5,2}, {5,5},
      +                           {6,3}, {6,4}};
  4631  000364  EE21  F0B3         	lfsr	2,drawSymbol@F3239
  4632  000368  EE10  F0E2         	lfsr	1,i2drawSymbol@symbolArrowLeft
  4633  00036C  0E0F               	movlw	15
  4634  00036E                     i2u233_41:
  4635  00036E  CFDB FFE3          	movff	plusw2,plusw1
  4636  000372  06E8               	decf	wreg,f,c
  4637  000374  E2FC               	bc	i2u233_41
  4638                           
  4639                           ;LED-API.c: 102: char symbolArrowRight[8][2] = {{4,0}, {3,1}, {2,2}, {1,3}, {1,4}, {2,5}
      +                          , {3,6}, {4,7}};
  4640  000376  EE22  F096         	lfsr	2,drawSymbol@F3242
  4641  00037A  EE11  F000         	lfsr	1,i2drawSymbol@symbolArrowRight
  4642  00037E  0E0F               	movlw	15
  4643  000380                     i2u234_41:
  4644  000380  CFDB FFE3          	movff	plusw2,plusw1
  4645  000384  06E8               	decf	wreg,f,c
  4646  000386  E2FC               	bc	i2u234_41
  4647                           
  4648                           ;LED-API.c: 104: switch(chosenSymbol)
  4649  000388  D110               	goto	i2l2600
  4650  00038A                     i2l2514:
  4651                           
  4652                           ;LED-API.c: 109: for(unsigned char i = 0; i < 11; i++)
  4653  00038A  0E00               	movlw	0
  4654  00038C  0100               	movlb	0	; () banked
  4655  00038E  6FF2               	movwf	i2drawSymbol@i& (0+255),b
  4656  000390                     i2l2516:
  4657                           
  4658                           ; BSR set to: 0
  4659  000390  0E0A               	movlw	10
  4660  000392  0100               	movlb	0	; () banked
  4661  000394  65F2               	cpfsgt	i2drawSymbol@i& (0+255),b
  4662  000396  D001               	goto	i2l2520
  4663  000398  0012               	return	
  4664  00039A                     i2l2520:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;LED-API.c: 110: {
  4668                           ;LED-API.c: 111: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  4669  00039A  0100               	movlb	0	; () banked
  4670  00039C  51F2               	movf	i2drawSymbol@i& (0+255),w,b
  4671  00039E  0D02               	mullw	2
  4672  0003A0  0E68               	movlw	low i2drawSymbol@symbolOne
  4673  0003A2  24F3               	addwf	prodl,w,c
  4674  0003A4  6ED9               	movwf	fsr2l,c
  4675  0003A6  0E00               	movlw	high i2drawSymbol@symbolOne
  4676  0003A8  20F4               	addwfc	prodh,w,c
  4677  0003AA  6EDA               	movwf	fsr2h,c
  4678  0003AC  50DF               	movf	indf2,w,c
  4679  0003AE  2405               	addwf	i2drawSymbol@offSetX,w,c
  4680  0003B0  6E01               	movwf	i2on@row,c
  4681  0003B2  0100               	movlb	0	; () banked
  4682  0003B4  51F2               	movf	i2drawSymbol@i& (0+255),w,b
  4683  0003B6  0D02               	mullw	2
  4684  0003B8  0E01               	movlw	1
  4685  0003BA  26F3               	addwf	prodl,f,c
  4686  0003BC  0E00               	movlw	0
  4687  0003BE  22F4               	addwfc	prodh,f,c
  4688  0003C0  0E68               	movlw	low i2drawSymbol@symbolOne
  4689  0003C2  24F3               	addwf	prodl,w,c
  4690  0003C4  6ED9               	movwf	fsr2l,c
  4691  0003C6  0E00               	movlw	high i2drawSymbol@symbolOne
  4692  0003C8  20F4               	addwfc	prodh,w,c
  4693  0003CA  6EDA               	movwf	fsr2h,c
  4694  0003CC  50DF               	movf	indf2,w,c
  4695  0003CE  EC11  F008         	call	i2_on
  4696  0003D2  0100               	movlb	0	; () banked
  4697  0003D4  2BF2               	incf	i2drawSymbol@i& (0+255),f,b
  4698  0003D6  D7DC               	goto	i2l2516
  4699  0003D8                     i2l2526:
  4700                           
  4701                           ;LED-API.c: 117: for(unsigned char i = 0; i < 15; i++)
  4702  0003D8  0E00               	movlw	0
  4703  0003DA  0100               	movlb	0	; () banked
  4704  0003DC  6FF3               	movwf	i2drawSymbol@i_82& (0+255),b
  4705  0003DE                     i2l2528:
  4706                           
  4707                           ; BSR set to: 0
  4708  0003DE  0E0E               	movlw	14
  4709  0003E0  0100               	movlb	0	; () banked
  4710  0003E2  65F3               	cpfsgt	i2drawSymbol@i_82& (0+255),b
  4711  0003E4  D001               	goto	i2l2532
  4712  0003E6  0012               	return	
  4713  0003E8                     i2l2532:
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;LED-API.c: 118: {
  4717                           ;LED-API.c: 119: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  4718  0003E8  0100               	movlb	0	; () banked
  4719  0003EA  51F3               	movf	i2drawSymbol@i_82& (0+255),w,b
  4720  0003EC  0D02               	mullw	2
  4721  0003EE  0E4A               	movlw	low i2drawSymbol@symbolTwo
  4722  0003F0  24F3               	addwf	prodl,w,c
  4723  0003F2  6ED9               	movwf	fsr2l,c
  4724  0003F4  0E00               	movlw	high i2drawSymbol@symbolTwo
  4725  0003F6  20F4               	addwfc	prodh,w,c
  4726  0003F8  6EDA               	movwf	fsr2h,c
  4727  0003FA  50DF               	movf	indf2,w,c
  4728  0003FC  2405               	addwf	i2drawSymbol@offSetX,w,c
  4729  0003FE  6E01               	movwf	i2on@row,c
  4730  000400  0100               	movlb	0	; () banked
  4731  000402  51F3               	movf	i2drawSymbol@i_82& (0+255),w,b
  4732  000404  0D02               	mullw	2
  4733  000406  0E01               	movlw	1
  4734  000408  26F3               	addwf	prodl,f,c
  4735  00040A  0E00               	movlw	0
  4736  00040C  22F4               	addwfc	prodh,f,c
  4737  00040E  0E4A               	movlw	low i2drawSymbol@symbolTwo
  4738  000410  24F3               	addwf	prodl,w,c
  4739  000412  6ED9               	movwf	fsr2l,c
  4740  000414  0E00               	movlw	high i2drawSymbol@symbolTwo
  4741  000416  20F4               	addwfc	prodh,w,c
  4742  000418  6EDA               	movwf	fsr2h,c
  4743  00041A  50DF               	movf	indf2,w,c
  4744  00041C  EC11  F008         	call	i2_on
  4745  000420  0100               	movlb	0	; () banked
  4746  000422  2BF3               	incf	i2drawSymbol@i_82& (0+255),f,b
  4747  000424  D7DC               	goto	i2l2528
  4748  000426                     i2l2538:
  4749                           
  4750                           ;LED-API.c: 125: for(unsigned char i = 0; i < 15; i++)
  4751  000426  0E00               	movlw	0
  4752  000428  0100               	movlb	0	; () banked
  4753  00042A  6FF4               	movwf	i2drawSymbol@i_83& (0+255),b
  4754  00042C                     i2l2540:
  4755                           
  4756                           ; BSR set to: 0
  4757  00042C  0E0E               	movlw	14
  4758  00042E  0100               	movlb	0	; () banked
  4759  000430  65F4               	cpfsgt	i2drawSymbol@i_83& (0+255),b
  4760  000432  D001               	goto	i2l2544
  4761  000434  0012               	return	
  4762  000436                     i2l2544:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;LED-API.c: 126: {
  4766                           ;LED-API.c: 127: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  4767  000436  0100               	movlb	0	; () banked
  4768  000438  51F4               	movf	i2drawSymbol@i_83& (0+255),w,b
  4769  00043A  0D02               	mullw	2
  4770  00043C  0EC4               	movlw	low i2drawSymbol@symbolThree
  4771  00043E  24F3               	addwf	prodl,w,c
  4772  000440  6ED9               	movwf	fsr2l,c
  4773  000442  0E00               	movlw	high i2drawSymbol@symbolThree
  4774  000444  20F4               	addwfc	prodh,w,c
  4775  000446  6EDA               	movwf	fsr2h,c
  4776  000448  50DF               	movf	indf2,w,c
  4777  00044A  2405               	addwf	i2drawSymbol@offSetX,w,c
  4778  00044C  6E01               	movwf	i2on@row,c
  4779  00044E  0100               	movlb	0	; () banked
  4780  000450  51F4               	movf	i2drawSymbol@i_83& (0+255),w,b
  4781  000452  0D02               	mullw	2
  4782  000454  0E01               	movlw	1
  4783  000456  26F3               	addwf	prodl,f,c
  4784  000458  0E00               	movlw	0
  4785  00045A  22F4               	addwfc	prodh,f,c
  4786  00045C  0EC4               	movlw	low i2drawSymbol@symbolThree
  4787  00045E  24F3               	addwf	prodl,w,c
  4788  000460  6ED9               	movwf	fsr2l,c
  4789  000462  0E00               	movlw	high i2drawSymbol@symbolThree
  4790  000464  20F4               	addwfc	prodh,w,c
  4791  000466  6EDA               	movwf	fsr2h,c
  4792  000468  50DF               	movf	indf2,w,c
  4793  00046A  EC11  F008         	call	i2_on
  4794  00046E  0100               	movlb	0	; () banked
  4795  000470  2BF4               	incf	i2drawSymbol@i_83& (0+255),f,b
  4796  000472  D7DC               	goto	i2l2540
  4797  000474                     i2l2550:
  4798                           
  4799                           ;LED-API.c: 133: for(unsigned char i = 0; i < 34; i++)
  4800  000474  0E00               	movlw	0
  4801  000476  0100               	movlb	0	; () banked
  4802  000478  6FF5               	movwf	i2drawSymbol@i_84& (0+255),b
  4803  00047A                     i2l2552:
  4804                           
  4805                           ; BSR set to: 0
  4806  00047A  0E21               	movlw	33
  4807  00047C  0100               	movlb	0	; () banked
  4808  00047E  65F5               	cpfsgt	i2drawSymbol@i_84& (0+255),b
  4809  000480  D001               	goto	i2l2556
  4810  000482  0012               	return	
  4811  000484                     i2l2556:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;LED-API.c: 134: {
  4815                           ;LED-API.c: 135: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  4816  000484  0100               	movlb	0	; () banked
  4817  000486  51F5               	movf	i2drawSymbol@i_84& (0+255),w,b
  4818  000488  0D02               	mullw	2
  4819  00048A  0E06               	movlw	low i2drawSymbol@symbolPlay
  4820  00048C  24F3               	addwf	prodl,w,c
  4821  00048E  6ED9               	movwf	fsr2l,c
  4822  000490  0E00               	movlw	high i2drawSymbol@symbolPlay
  4823  000492  20F4               	addwfc	prodh,w,c
  4824  000494  6EDA               	movwf	fsr2h,c
  4825  000496  50DF               	movf	indf2,w,c
  4826  000498  2405               	addwf	i2drawSymbol@offSetX,w,c
  4827  00049A  6E01               	movwf	i2on@row,c
  4828  00049C  0100               	movlb	0	; () banked
  4829  00049E  51F5               	movf	i2drawSymbol@i_84& (0+255),w,b
  4830  0004A0  0D02               	mullw	2
  4831  0004A2  0E01               	movlw	1
  4832  0004A4  26F3               	addwf	prodl,f,c
  4833  0004A6  0E00               	movlw	0
  4834  0004A8  22F4               	addwfc	prodh,f,c
  4835  0004AA  0E06               	movlw	low i2drawSymbol@symbolPlay
  4836  0004AC  24F3               	addwf	prodl,w,c
  4837  0004AE  6ED9               	movwf	fsr2l,c
  4838  0004B0  0E00               	movlw	high i2drawSymbol@symbolPlay
  4839  0004B2  20F4               	addwfc	prodh,w,c
  4840  0004B4  6EDA               	movwf	fsr2h,c
  4841  0004B6  50DF               	movf	indf2,w,c
  4842  0004B8  EC11  F008         	call	i2_on
  4843  0004BC  0100               	movlb	0	; () banked
  4844  0004BE  2BF5               	incf	i2drawSymbol@i_84& (0+255),f,b
  4845  0004C0  D7DC               	goto	i2l2552
  4846  0004C2                     i2l2562:
  4847                           
  4848                           ;LED-API.c: 141: for(unsigned char i = 0; i < 34; i++)
  4849  0004C2  0E00               	movlw	0
  4850  0004C4  0100               	movlb	0	; () banked
  4851  0004C6  6FF6               	movwf	i2drawSymbol@i_85& (0+255),b
  4852  0004C8                     i2l2564:
  4853                           
  4854                           ; BSR set to: 0
  4855  0004C8  0E21               	movlw	33
  4856  0004CA  0100               	movlb	0	; () banked
  4857  0004CC  65F6               	cpfsgt	i2drawSymbol@i_85& (0+255),b
  4858  0004CE  D001               	goto	i2l2568
  4859  0004D0  0012               	return	
  4860  0004D2                     i2l2568:
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;LED-API.c: 142: {
  4864                           ;LED-API.c: 143: on(symbolGo[i][1], symbolGo[i][0]);
  4865  0004D2  0100               	movlb	0	; () banked
  4866  0004D4  51F6               	movf	i2drawSymbol@i_85& (0+255),w,b
  4867  0004D6  0D02               	mullw	2
  4868  0004D8  0E80               	movlw	low i2drawSymbol@symbolGo
  4869  0004DA  24F3               	addwf	prodl,w,c
  4870  0004DC  6ED9               	movwf	fsr2l,c
  4871  0004DE  0E00               	movlw	high i2drawSymbol@symbolGo
  4872  0004E0  20F4               	addwfc	prodh,w,c
  4873  0004E2  6EDA               	movwf	fsr2h,c
  4874  0004E4  50DF               	movf	indf2,w,c
  4875  0004E6  6E01               	movwf	i2on@row,c
  4876  0004E8  0100               	movlb	0	; () banked
  4877  0004EA  51F6               	movf	i2drawSymbol@i_85& (0+255),w,b
  4878  0004EC  0D02               	mullw	2
  4879  0004EE  0E01               	movlw	1
  4880  0004F0  26F3               	addwf	prodl,f,c
  4881  0004F2  0E00               	movlw	0
  4882  0004F4  22F4               	addwfc	prodh,f,c
  4883  0004F6  0E80               	movlw	low i2drawSymbol@symbolGo
  4884  0004F8  24F3               	addwf	prodl,w,c
  4885  0004FA  6ED9               	movwf	fsr2l,c
  4886  0004FC  0E00               	movlw	high i2drawSymbol@symbolGo
  4887  0004FE  20F4               	addwfc	prodh,w,c
  4888  000500  6EDA               	movwf	fsr2h,c
  4889  000502  50DF               	movf	indf2,w,c
  4890  000504  EC11  F008         	call	i2_on
  4891  000508  0100               	movlb	0	; () banked
  4892  00050A  2BF6               	incf	i2drawSymbol@i_85& (0+255),f,b
  4893  00050C  D7DD               	goto	i2l2564
  4894  00050E                     i2l2574:
  4895                           
  4896                           ;LED-API.c: 147: for(unsigned char i = 0; i < 8; i++)
  4897  00050E  0E00               	movlw	0
  4898  000510  0100               	movlb	0	; () banked
  4899  000512  6FF7               	movwf	i2drawSymbol@i_86& (0+255),b
  4900  000514                     i2l2576:
  4901                           
  4902                           ; BSR set to: 0
  4903  000514  0E07               	movlw	7
  4904  000516  0100               	movlb	0	; () banked
  4905  000518  65F7               	cpfsgt	i2drawSymbol@i_86& (0+255),b
  4906  00051A  D001               	goto	i2l2580
  4907  00051C  0012               	return	
  4908  00051E                     i2l2580:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;LED-API.c: 148: {
  4912                           ;LED-API.c: 149: on(symbolArrowLeft[i][1], symbolArrowLeft[i][0] + offSetX);
  4913  00051E  0100               	movlb	0	; () banked
  4914  000520  51F7               	movf	i2drawSymbol@i_86& (0+255),w,b
  4915  000522  0D02               	mullw	2
  4916  000524  0EE2               	movlw	low i2drawSymbol@symbolArrowLeft
  4917  000526  24F3               	addwf	prodl,w,c
  4918  000528  6ED9               	movwf	fsr2l,c
  4919  00052A  0E00               	movlw	high i2drawSymbol@symbolArrowLeft
  4920  00052C  20F4               	addwfc	prodh,w,c
  4921  00052E  6EDA               	movwf	fsr2h,c
  4922  000530  50DF               	movf	indf2,w,c
  4923  000532  2405               	addwf	i2drawSymbol@offSetX,w,c
  4924  000534  6E01               	movwf	i2on@row,c
  4925  000536  0100               	movlb	0	; () banked
  4926  000538  51F7               	movf	i2drawSymbol@i_86& (0+255),w,b
  4927  00053A  0D02               	mullw	2
  4928  00053C  0E01               	movlw	1
  4929  00053E  26F3               	addwf	prodl,f,c
  4930  000540  0E00               	movlw	0
  4931  000542  22F4               	addwfc	prodh,f,c
  4932  000544  0EE2               	movlw	low i2drawSymbol@symbolArrowLeft
  4933  000546  24F3               	addwf	prodl,w,c
  4934  000548  6ED9               	movwf	fsr2l,c
  4935  00054A  0E00               	movlw	high i2drawSymbol@symbolArrowLeft
  4936  00054C  20F4               	addwfc	prodh,w,c
  4937  00054E  6EDA               	movwf	fsr2h,c
  4938  000550  50DF               	movf	indf2,w,c
  4939  000552  EC11  F008         	call	i2_on
  4940  000556  0100               	movlb	0	; () banked
  4941  000558  2BF7               	incf	i2drawSymbol@i_86& (0+255),f,b
  4942  00055A  D7DC               	goto	i2l2576
  4943  00055C                     i2l2586:
  4944                           
  4945                           ;LED-API.c: 153: for(unsigned char i = 0; i < 8; i++)
  4946  00055C  0E00               	movlw	0
  4947  00055E  0100               	movlb	0	; () banked
  4948  000560  6FF8               	movwf	i2drawSymbol@i_87& (0+255),b
  4949  000562                     i2l2588:
  4950                           
  4951                           ; BSR set to: 0
  4952  000562  0E07               	movlw	7
  4953  000564  0100               	movlb	0	; () banked
  4954  000566  65F8               	cpfsgt	i2drawSymbol@i_87& (0+255),b
  4955  000568  D001               	goto	i2l2592
  4956  00056A  0012               	return	
  4957  00056C                     i2l2592:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;LED-API.c: 154: {
  4961                           ;LED-API.c: 155: on(symbolArrowRight[i][1], symbolArrowRight[i][0]+ offSetX);
  4962  00056C  0100               	movlb	0	; () banked
  4963  00056E  51F8               	movf	i2drawSymbol@i_87& (0+255),w,b
  4964  000570  0D02               	mullw	2
  4965  000572  0E00               	movlw	low i2drawSymbol@symbolArrowRight
  4966  000574  24F3               	addwf	prodl,w,c
  4967  000576  6ED9               	movwf	fsr2l,c
  4968  000578  0E01               	movlw	high i2drawSymbol@symbolArrowRight
  4969  00057A  20F4               	addwfc	prodh,w,c
  4970  00057C  6EDA               	movwf	fsr2h,c
  4971  00057E  50DF               	movf	indf2,w,c
  4972  000580  2405               	addwf	i2drawSymbol@offSetX,w,c
  4973  000582  6E01               	movwf	i2on@row,c
  4974  000584  0100               	movlb	0	; () banked
  4975  000586  51F8               	movf	i2drawSymbol@i_87& (0+255),w,b
  4976  000588  0D02               	mullw	2
  4977  00058A  0E01               	movlw	1
  4978  00058C  26F3               	addwf	prodl,f,c
  4979  00058E  0E00               	movlw	0
  4980  000590  22F4               	addwfc	prodh,f,c
  4981  000592  0E00               	movlw	low i2drawSymbol@symbolArrowRight
  4982  000594  24F3               	addwf	prodl,w,c
  4983  000596  6ED9               	movwf	fsr2l,c
  4984  000598  0E01               	movlw	high i2drawSymbol@symbolArrowRight
  4985  00059A  20F4               	addwfc	prodh,w,c
  4986  00059C  6EDA               	movwf	fsr2h,c
  4987  00059E  50DF               	movf	indf2,w,c
  4988  0005A0  EC11  F008         	call	i2_on
  4989  0005A4  0100               	movlb	0	; () banked
  4990  0005A6  2BF8               	incf	i2drawSymbol@i_87& (0+255),f,b
  4991  0005A8  D7DC               	goto	i2l2588
  4992  0005AA                     i2l2600:
  4993  0005AA  507E               	movf	i2drawSymbol@chosenSymbol,w,c
  4994                           
  4995                           ; Switch size 1, requested type "space"
  4996                           ; Number of cases is 7, Range of values is 1 to 7
  4997                           ; switch strategies available:
  4998                           ; Name         Instructions Cycles
  4999                           ; simple_byte           22    12 (average)
  5000                           ;	Chosen strategy is simple_byte
  5001  0005AC  0A01               	xorlw	1	; case 1
  5002  0005AE  B4D8               	btfsc	status,2,c
  5003  0005B0  D6EC               	goto	i2l2514
  5004  0005B2  0A03               	xorlw	3	; case 2
  5005  0005B4  B4D8               	btfsc	status,2,c
  5006  0005B6  D710               	goto	i2l2526
  5007  0005B8  0A01               	xorlw	1	; case 3
  5008  0005BA  B4D8               	btfsc	status,2,c
  5009  0005BC  D734               	goto	i2l2538
  5010  0005BE  0A07               	xorlw	7	; case 4
  5011  0005C0  B4D8               	btfsc	status,2,c
  5012  0005C2  D758               	goto	i2l2550
  5013  0005C4  0A01               	xorlw	1	; case 5
  5014  0005C6  B4D8               	btfsc	status,2,c
  5015  0005C8  D77C               	goto	i2l2562
  5016  0005CA  0A03               	xorlw	3	; case 6
  5017  0005CC  B4D8               	btfsc	status,2,c
  5018  0005CE  D79F               	goto	i2l2574
  5019  0005D0  0A01               	xorlw	1	; case 7
  5020  0005D2  A4D8               	btfss	status,2,c
  5021  0005D4  0012               	return	
  5022  0005D6  D7C2               	goto	i2l2586
  5023  0005D8                     __end_ofi2_drawSymbol:
  5024                           	opt stack 0
  5025                           pclatu	equ	0xFFB
  5026                           pclath	equ	0xFFA
  5027                           tblptru	equ	0xFF8
  5028                           tblptrh	equ	0xFF7
  5029                           tblptrl	equ	0xFF6
  5030                           tablat	equ	0xFF5
  5031                           prodh	equ	0xFF4
  5032                           prodl	equ	0xFF3
  5033                           intcon	equ	0xFF2
  5034                           postinc0	equ	0xFEE
  5035                           fsr0h	equ	0xFEA
  5036                           fsr0l	equ	0xFE9
  5037                           wreg	equ	0xFE8
  5038                           postdec1	equ	0xFE5
  5039                           plusw1	equ	0xFE3
  5040                           fsr1h	equ	0xFE2
  5041                           fsr1l	equ	0xFE1
  5042                           indf2	equ	0xFDF
  5043                           postinc2	equ	0xFDE
  5044                           plusw2	equ	0xFDB
  5045                           fsr2h	equ	0xFDA
  5046                           fsr2l	equ	0xFD9
  5047                           status	equ	0xFD8
  5048                           
  5049 ;; *************** function i2_on *****************
  5050 ;; Defined at:
  5051 ;;		line 43 in file "Source/LED-API.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  column          1    wreg     unsigned char 
  5054 ;;  row             1    0[COMRAM] unsigned char 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  column          1    3[COMRAM] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5066 ;;      Params:         1       0       0       0       0       0       0
  5067 ;;      Locals:         1       0       0       0       0       0       0
  5068 ;;      Temps:          2       0       0       0       0       0       0
  5069 ;;      Totals:         4       0       0       0       0       0       0
  5070 ;;Total ram usage:        4 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_writePong
  5076 ;;		i2_drawSymbol
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text24
  5081  001022                     __ptext24:
  5082                           	opt stack 0
  5083  001022                     i2_on:
  5084                           	opt stack 24
  5085                           
  5086                           ;incstack = 0
  5087                           ;i2on@column stored from wreg
  5088  001022  6E04               	movwf	i2on@column,c
  5089                           
  5090                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  5091  001024  0E0F               	movlw	15
  5092  001026  6401               	cpfsgt	i2on@row,c
  5093  001028  D001               	goto	i2l2496
  5094  00102A  0012               	return	
  5095  00102C                     i2l2496:
  5096                           
  5097                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  5098  00102C  0E07               	movlw	7
  5099  00102E  6404               	cpfsgt	i2on@column,c
  5100  001030  D001               	goto	i2l2500
  5101  001032  0012               	return	
  5102  001034                     i2l2500:
  5103                           
  5104                           ;LED-API.c: 50: pixels[column][row] = 1;
  5105  001034  5004               	movf	i2on@column,w,c
  5106  001036  0D10               	mullw	16
  5107  001038  0E00               	movlw	low _pixels
  5108  00103A  6E02               	movwf	??i2_on& (0+255),c
  5109  00103C  0E03               	movlw	high _pixels
  5110  00103E  6E03               	movwf	(??i2_on+1)& (0+255),c
  5111  001040  50F3               	movf	prodl,w,c
  5112  001042  2602               	addwf	??i2_on,f,c
  5113  001044  50F4               	movf	prodh,w,c
  5114  001046  2203               	addwfc	??i2_on+1,f,c
  5115  001048  5001               	movf	i2on@row,w,c
  5116  00104A  0D01               	mullw	1
  5117  00104C  50F3               	movf	prodl,w,c
  5118  00104E  2402               	addwf	??i2_on,w,c
  5119  001050  6ED9               	movwf	fsr2l,c
  5120  001052  50F4               	movf	prodh,w,c
  5121  001054  2003               	addwfc	??i2_on+1,w,c
  5122  001056  6EDA               	movwf	fsr2h,c
  5123  001058  0E01               	movlw	1
  5124  00105A  6EDF               	movwf	indf2,c
  5125  00105C  0012               	return		;funcret
  5126  00105E                     __end_ofi2_on:
  5127                           	opt stack 0
  5128                           pclatu	equ	0xFFB
  5129                           pclath	equ	0xFFA
  5130                           tblptru	equ	0xFF8
  5131                           tblptrh	equ	0xFF7
  5132                           tblptrl	equ	0xFF6
  5133                           tablat	equ	0xFF5
  5134                           prodh	equ	0xFF4
  5135                           prodl	equ	0xFF3
  5136                           intcon	equ	0xFF2
  5137                           postinc0	equ	0xFEE
  5138                           fsr0h	equ	0xFEA
  5139                           fsr0l	equ	0xFE9
  5140                           wreg	equ	0xFE8
  5141                           postdec1	equ	0xFE5
  5142                           plusw1	equ	0xFE3
  5143                           fsr1h	equ	0xFE2
  5144                           fsr1l	equ	0xFE1
  5145                           indf2	equ	0xFDF
  5146                           postinc2	equ	0xFDE
  5147                           plusw2	equ	0xFDB
  5148                           fsr2h	equ	0xFDA
  5149                           fsr2l	equ	0xFD9
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function _checkWallCollision *****************
  5153 ;; Defined at:
  5154 ;;		line 207 in file "main.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5168 ;;      Params:         0       0       0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0
  5171 ;;      Totals:         0       0       0       0       0       0       0
  5172 ;;Total ram usage:        0 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    2
  5175 ;; This function calls:
  5176 ;;		_handleWallCollision
  5177 ;; This function is called by:
  5178 ;;		_checkNextPosition
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text25
  5183  001160                     __ptext25:
  5184                           	opt stack 0
  5185  001160                     _checkWallCollision:
  5186                           	opt stack 22
  5187                           
  5188                           ;main.c: 208: if (_nextPos[1] < 0 || _nextPos[1] > 7) {
  5189                           
  5190                           ;incstack = 0
  5191  001160  0E07               	movlw	7
  5192  001162  0101               	movlb	1	; () banked
  5193  001164  65D3               	cpfsgt	(__nextPos+1)& (0+255),b
  5194  001166  0012               	return	
  5195                           
  5196                           ; BSR set to: 1
  5197                           ;main.c: 209: handleWallCollision();
  5198  001168  EC2F  F008         	call	_handleWallCollision	;wreg free
  5199  00116C  0012               	return	
  5200  00116E                     __end_of_checkWallCollision:
  5201                           	opt stack 0
  5202                           pclatu	equ	0xFFB
  5203                           pclath	equ	0xFFA
  5204                           tblptru	equ	0xFF8
  5205                           tblptrh	equ	0xFF7
  5206                           tblptrl	equ	0xFF6
  5207                           tablat	equ	0xFF5
  5208                           prodh	equ	0xFF4
  5209                           prodl	equ	0xFF3
  5210                           intcon	equ	0xFF2
  5211                           postinc0	equ	0xFEE
  5212                           fsr0h	equ	0xFEA
  5213                           fsr0l	equ	0xFE9
  5214                           wreg	equ	0xFE8
  5215                           postdec1	equ	0xFE5
  5216                           plusw1	equ	0xFE3
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           plusw2	equ	0xFDB
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           
  5226 ;; *************** function _handleWallCollision *****************
  5227 ;; Defined at:
  5228 ;;		line 189 in file "main.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1    wreg      void 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0, cstack
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5242 ;;      Params:         0       0       0       0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0
  5245 ;;      Totals:         0       0       0       0       0       0       0
  5246 ;;Total ram usage:        0 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    1
  5249 ;; This function calls:
  5250 ;;		_getNextPosition
  5251 ;; This function is called by:
  5252 ;;		_checkWallCollision
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text26
  5257  00105E                     __ptext26:
  5258                           	opt stack 0
  5259  00105E                     _handleWallCollision:
  5260                           	opt stack 22
  5261                           
  5262                           ;main.c: 190: switch (_ball.bDirection) {
  5263                           
  5264                           ;incstack = 0
  5265  00105E  D00A               	goto	i2l2054
  5266  001060                     i2l2044:
  5267                           
  5268                           ;main.c: 192: _ball.bDirection = 3;
  5269  001060  0E03               	movlw	3
  5270  001062  D005               	goto	L12
  5271  001064                     i2l2046:
  5272                           
  5273                           ; BSR set to: 1
  5274                           ;main.c: 195: _ball.bDirection = 1;
  5275  001064  0E01               	movlw	1
  5276  001066  D003               	goto	L12
  5277  001068                     i2l2048:
  5278                           
  5279                           ; BSR set to: 1
  5280                           ;main.c: 198: _ball.bDirection = 6;
  5281  001068  0E06               	movlw	6
  5282  00106A  D001               	goto	L12
  5283  00106C                     i2l2050:
  5284                           
  5285                           ; BSR set to: 1
  5286                           ;main.c: 201: _ball.bDirection = 4;
  5287  00106C  0E04               	movlw	4
  5288  00106E                     L12:
  5289  00106E  0101               	movlb	1	; () banked
  5290  001070  6FD1               	movwf	(__ball+2)& (0+255),b
  5291                           
  5292                           ; BSR set to: 1
  5293                           ;main.c: 203: }
  5294                           
  5295                           ;main.c: 202: break;
  5296  001072  D00E               	goto	i2l2056
  5297  001074                     i2l2054:
  5298  001074  0101               	movlb	1	; () banked
  5299  001076  51D1               	movf	(__ball+2)& (0+255),w,b
  5300                           
  5301                           ; Switch size 1, requested type "space"
  5302                           ; Number of cases is 4, Range of values is 1 to 6
  5303                           ; switch strategies available:
  5304                           ; Name         Instructions Cycles
  5305                           ; simple_byte           13     7 (average)
  5306                           ;	Chosen strategy is simple_byte
  5307  001078  0A01               	xorlw	1	; case 1
  5308  00107A  B4D8               	btfsc	status,2,c
  5309  00107C  D7F1               	goto	i2l2044
  5310  00107E  0A02               	xorlw	2	; case 3
  5311  001080  B4D8               	btfsc	status,2,c
  5312  001082  D7F0               	goto	i2l2046
  5313  001084  0A07               	xorlw	7	; case 4
  5314  001086  B4D8               	btfsc	status,2,c
  5315  001088  D7EF               	goto	i2l2048
  5316  00108A  0A02               	xorlw	2	; case 6
  5317  00108C  B4D8               	btfsc	status,2,c
  5318  00108E  D7EE               	goto	i2l2050
  5319  001090                     i2l2056:
  5320                           
  5321                           ; BSR set to: 1
  5322                           ;main.c: 204: getNextPosition();
  5323  001090  EC4E  F005         	call	_getNextPosition	;wreg free
  5324  001094  0012               	return		;funcret
  5325  001096                     __end_of_handleWallCollision:
  5326                           	opt stack 0
  5327                           pclatu	equ	0xFFB
  5328                           pclath	equ	0xFFA
  5329                           tblptru	equ	0xFF8
  5330                           tblptrh	equ	0xFF7
  5331                           tblptrl	equ	0xFF6
  5332                           tablat	equ	0xFF5
  5333                           prodh	equ	0xFF4
  5334                           prodl	equ	0xFF3
  5335                           intcon	equ	0xFF2
  5336                           postinc0	equ	0xFEE
  5337                           fsr0h	equ	0xFEA
  5338                           fsr0l	equ	0xFE9
  5339                           wreg	equ	0xFE8
  5340                           postdec1	equ	0xFE5
  5341                           plusw1	equ	0xFE3
  5342                           fsr1h	equ	0xFE2
  5343                           fsr1l	equ	0xFE1
  5344                           indf2	equ	0xFDF
  5345                           postinc2	equ	0xFDE
  5346                           plusw2	equ	0xFDB
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _getNextPosition *****************
  5352 ;; Defined at:
  5353 ;;		line 162 in file "main.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5367 ;;      Params:         0       0       0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0
  5370 ;;      Totals:         0       0       0       0       0       0       0
  5371 ;;Total ram usage:        0 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_handleWallCollision
  5377 ;;		_checkNextPosition
  5378 ;;		_handlePaddleCollision
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text27
  5383  000A9C                     __ptext27:
  5384                           	opt stack 0
  5385  000A9C                     _getNextPosition:
  5386                           	opt stack 24
  5387                           
  5388                           ;main.c: 163: switch (_ball.bDirection) {
  5389                           
  5390                           ;incstack = 0
  5391  000A9C  D02E               	goto	i2l1756
  5392  000A9E                     i2l1742:
  5393                           
  5394                           ;main.c: 165: _nextPos[0] = _ball.bPos[0] + 1;
  5395  000A9E  0101               	movlb	1	; () banked
  5396  000AA0  29CF               	incf	__ball& (0+255),w,b
  5397  000AA2  0101               	movlb	1	; () banked
  5398  000AA4  6FD2               	movwf	__nextPos& (0+255),b
  5399                           
  5400                           ;main.c: 166: _nextPos[1] = _ball.bPos[1] + 1;
  5401  000AA6  0101               	movlb	1	; () banked
  5402  000AA8  29D0               	incf	(__ball+1)& (0+255),w,b
  5403  000AAA  0101               	movlb	1	; () banked
  5404  000AAC  6FD3               	movwf	(__nextPos+1)& (0+255),b
  5405                           
  5406                           ;main.c: 167: break;
  5407  000AAE  0012               	return	
  5408  000AB0                     i2l1744:
  5409                           
  5410                           ; BSR set to: 1
  5411                           ;main.c: 169: _nextPos[0] = _ball.bPos[0] + 1;
  5412  000AB0  0101               	movlb	1	; () banked
  5413  000AB2  29CF               	incf	__ball& (0+255),w,b
  5414  000AB4  0101               	movlb	1	; () banked
  5415  000AB6  6FD2               	movwf	__nextPos& (0+255),b
  5416                           
  5417                           ;main.c: 170: break;
  5418  000AB8  0012               	return	
  5419  000ABA                     i2l1746:
  5420                           
  5421                           ; BSR set to: 1
  5422                           ;main.c: 172: _nextPos[0] = _ball.bPos[0] + 1;
  5423  000ABA  0101               	movlb	1	; () banked
  5424  000ABC  29CF               	incf	__ball& (0+255),w,b
  5425  000ABE  0101               	movlb	1	; () banked
  5426  000AC0  6FD2               	movwf	__nextPos& (0+255),b
  5427                           
  5428                           ;main.c: 173: _nextPos[1] = _ball.bPos[1] - 1;
  5429  000AC2  0101               	movlb	1	; () banked
  5430  000AC4  05D0               	decf	(__ball+1)& (0+255),w,b
  5431  000AC6  0101               	movlb	1	; () banked
  5432  000AC8  6FD3               	movwf	(__nextPos+1)& (0+255),b
  5433                           
  5434                           ;main.c: 174: break;
  5435  000ACA  0012               	return	
  5436  000ACC                     i2l1748:
  5437                           
  5438                           ; BSR set to: 1
  5439                           ;main.c: 176: _nextPos[0] = _ball.bPos[0] - 1;
  5440  000ACC  0101               	movlb	1	; () banked
  5441  000ACE  05CF               	decf	__ball& (0+255),w,b
  5442  000AD0  0101               	movlb	1	; () banked
  5443  000AD2  6FD2               	movwf	__nextPos& (0+255),b
  5444                           
  5445                           ;main.c: 177: _nextPos[1] = _ball.bPos[1] - 1;
  5446  000AD4  0101               	movlb	1	; () banked
  5447  000AD6  05D0               	decf	(__ball+1)& (0+255),w,b
  5448  000AD8  0101               	movlb	1	; () banked
  5449  000ADA  6FD3               	movwf	(__nextPos+1)& (0+255),b
  5450                           
  5451                           ;main.c: 178: break;
  5452  000ADC  0012               	return	
  5453  000ADE                     i2l1750:
  5454                           
  5455                           ; BSR set to: 1
  5456                           ;main.c: 180: _nextPos[0] = _ball.bPos[0] - 1;
  5457  000ADE  0101               	movlb	1	; () banked
  5458  000AE0  05CF               	decf	__ball& (0+255),w,b
  5459  000AE2  0101               	movlb	1	; () banked
  5460  000AE4  6FD2               	movwf	__nextPos& (0+255),b
  5461                           
  5462                           ;main.c: 181: break;
  5463  000AE6  0012               	return	
  5464  000AE8                     i2l1752:
  5465                           
  5466                           ; BSR set to: 1
  5467                           ;main.c: 183: _nextPos[0] = _ball.bPos[0] - 1;
  5468  000AE8  0101               	movlb	1	; () banked
  5469  000AEA  05CF               	decf	__ball& (0+255),w,b
  5470  000AEC  0101               	movlb	1	; () banked
  5471  000AEE  6FD2               	movwf	__nextPos& (0+255),b
  5472                           
  5473                           ;main.c: 184: _nextPos[1] = _ball.bPos[1] + 1;
  5474  000AF0  0101               	movlb	1	; () banked
  5475  000AF2  29D0               	incf	(__ball+1)& (0+255),w,b
  5476  000AF4  0101               	movlb	1	; () banked
  5477  000AF6  6FD3               	movwf	(__nextPos+1)& (0+255),b
  5478                           
  5479                           ; BSR set to: 1
  5480                           ;main.c: 186: }
  5481                           
  5482                           ;main.c: 185: break;
  5483  000AF8  0012               	return	
  5484  000AFA                     i2l1756:
  5485  000AFA  0101               	movlb	1	; () banked
  5486  000AFC  51D1               	movf	(__ball+2)& (0+255),w,b
  5487                           
  5488                           ; Switch size 1, requested type "space"
  5489                           ; Number of cases is 6, Range of values is 1 to 6
  5490                           ; switch strategies available:
  5491                           ; Name         Instructions Cycles
  5492                           ; simple_byte           19    10 (average)
  5493                           ;	Chosen strategy is simple_byte
  5494  000AFE  0A01               	xorlw	1	; case 1
  5495  000B00  B4D8               	btfsc	status,2,c
  5496  000B02  D7CD               	goto	i2l1742
  5497  000B04  0A03               	xorlw	3	; case 2
  5498  000B06  B4D8               	btfsc	status,2,c
  5499  000B08  D7D3               	goto	i2l1744
  5500  000B0A  0A01               	xorlw	1	; case 3
  5501  000B0C  B4D8               	btfsc	status,2,c
  5502  000B0E  D7D5               	goto	i2l1746
  5503  000B10  0A07               	xorlw	7	; case 4
  5504  000B12  B4D8               	btfsc	status,2,c
  5505  000B14  D7DB               	goto	i2l1748
  5506  000B16  0A01               	xorlw	1	; case 5
  5507  000B18  B4D8               	btfsc	status,2,c
  5508  000B1A  D7E1               	goto	i2l1750
  5509  000B1C  0A03               	xorlw	3	; case 6
  5510  000B1E  A4D8               	btfss	status,2,c
  5511  000B20  0012               	return	
  5512  000B22  D7E2               	goto	i2l1752
  5513  000B24                     __end_of_getNextPosition:
  5514                           	opt stack 0
  5515                           pclatu	equ	0xFFB
  5516                           pclath	equ	0xFFA
  5517                           tblptru	equ	0xFF8
  5518                           tblptrh	equ	0xFF7
  5519                           tblptrl	equ	0xFF6
  5520                           tablat	equ	0xFF5
  5521                           prodh	equ	0xFF4
  5522                           prodl	equ	0xFF3
  5523                           intcon	equ	0xFF2
  5524                           postinc0	equ	0xFEE
  5525                           fsr0h	equ	0xFEA
  5526                           fsr0l	equ	0xFE9
  5527                           wreg	equ	0xFE8
  5528                           postdec1	equ	0xFE5
  5529                           plusw1	equ	0xFE3
  5530                           fsr1h	equ	0xFE2
  5531                           fsr1l	equ	0xFE1
  5532                           indf2	equ	0xFDF
  5533                           postinc2	equ	0xFDE
  5534                           plusw2	equ	0xFDB
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8
  5538                           
  5539 ;; *************** function _checkPaddleCollision *****************
  5540 ;; Defined at:
  5541 ;;		line 219 in file "main.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5555 ;;      Params:         0       0       0       0       0       0       0
  5556 ;;      Locals:         0       0       0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0
  5558 ;;      Totals:         0       0       0       0       0       0       0
  5559 ;;Total ram usage:        0 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_checkNextPosition
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text28
  5569  00116E                     __ptext28:
  5570                           	opt stack 0
  5571  00116E                     _checkPaddleCollision:
  5572                           	opt stack 24
  5573                           
  5574                           ;main.c: 225: }
  5575                           ;main.c: 226: }
  5576                           
  5577                           ; BSR set to: 1
  5578                           ;incstack = 0
  5579  00116E  0012               	return	
  5580  001170                     __end_of_checkPaddleCollision:
  5581                           	opt stack 0
  5582                           pclatu	equ	0xFFB
  5583                           pclath	equ	0xFFA
  5584                           tblptru	equ	0xFF8
  5585                           tblptrh	equ	0xFF7
  5586                           tblptrl	equ	0xFF6
  5587                           tablat	equ	0xFF5
  5588                           prodh	equ	0xFF4
  5589                           prodl	equ	0xFF3
  5590                           intcon	equ	0xFF2
  5591                           postinc0	equ	0xFEE
  5592                           fsr0h	equ	0xFEA
  5593                           fsr0l	equ	0xFE9
  5594                           wreg	equ	0xFE8
  5595                           postdec1	equ	0xFE5
  5596                           plusw1	equ	0xFE3
  5597                           fsr1h	equ	0xFE2
  5598                           fsr1l	equ	0xFE1
  5599                           indf2	equ	0xFDF
  5600                           postinc2	equ	0xFDE
  5601                           plusw2	equ	0xFDB
  5602                           fsr2h	equ	0xFDA
  5603                           fsr2l	equ	0xFD9
  5604                           status	equ	0xFD8
  5605                           
  5606 ;; *************** function ___lwdiv *****************
  5607 ;; Defined at:
  5608 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  dividend        2    0[COMRAM] unsigned int 
  5611 ;;  divisor         2    2[COMRAM] unsigned int 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  quotient        2    4[COMRAM] unsigned int 
  5614 ;;  counter         1    6[COMRAM] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  2    0[COMRAM] unsigned int 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5624 ;;      Params:         4       0       0       0       0       0       0
  5625 ;;      Locals:         3       0       0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0
  5627 ;;      Totals:         7       0       0       0       0       0       0
  5628 ;;Total ram usage:        7 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_ISR
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text29
  5638  000EC8                     __ptext29:
  5639                           	opt stack 0
  5640  000EC8                     ___lwdiv:
  5641                           	opt stack 25
  5642                           
  5643                           ;incstack = 0
  5644  000EC8  0E00               	movlw	0
  5645  000ECA  6E06               	movwf	___lwdiv@quotient+1,c
  5646  000ECC  0E00               	movlw	0
  5647  000ECE  6E05               	movwf	___lwdiv@quotient,c
  5648  000ED0  5003               	movf	___lwdiv@divisor,w,c
  5649  000ED2  1004               	iorwf	___lwdiv@divisor+1,w,c
  5650  000ED4  B4D8               	btfsc	status,2,c
  5651  000ED6  D01C               	goto	i2l705
  5652  000ED8  0E01               	movlw	1
  5653  000EDA  6E07               	movwf	___lwdiv@counter,c
  5654  000EDC  D004               	goto	i2l2388
  5655  000EDE                     i2l2386:
  5656  000EDE  90D8               	bcf	status,0,c
  5657  000EE0  3603               	rlcf	___lwdiv@divisor,f,c
  5658  000EE2  3604               	rlcf	___lwdiv@divisor+1,f,c
  5659  000EE4  2A07               	incf	___lwdiv@counter,f,c
  5660  000EE6                     i2l2388:
  5661  000EE6  AE04               	btfss	___lwdiv@divisor+1,7,c
  5662  000EE8  D7FA               	goto	i2l2386
  5663  000EEA                     i2l2390:
  5664  000EEA  90D8               	bcf	status,0,c
  5665  000EEC  3605               	rlcf	___lwdiv@quotient,f,c
  5666  000EEE  3606               	rlcf	___lwdiv@quotient+1,f,c
  5667  000EF0  5003               	movf	___lwdiv@divisor,w,c
  5668  000EF2  5C01               	subwf	___lwdiv@dividend,w,c
  5669  000EF4  5004               	movf	___lwdiv@divisor+1,w,c
  5670  000EF6  5802               	subwfb	___lwdiv@dividend+1,w,c
  5671  000EF8  A0D8               	btfss	status,0,c
  5672  000EFA  D005               	goto	i2l2398
  5673  000EFC  5003               	movf	___lwdiv@divisor,w,c
  5674  000EFE  5E01               	subwf	___lwdiv@dividend,f,c
  5675  000F00  5004               	movf	___lwdiv@divisor+1,w,c
  5676  000F02  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5677  000F04  8005               	bsf	___lwdiv@quotient,0,c
  5678  000F06                     i2l2398:
  5679  000F06  90D8               	bcf	status,0,c
  5680  000F08  3204               	rrcf	___lwdiv@divisor+1,f,c
  5681  000F0A  3203               	rrcf	___lwdiv@divisor,f,c
  5682  000F0C  2E07               	decfsz	___lwdiv@counter,f,c
  5683  000F0E  D7ED               	goto	i2l2390
  5684  000F10                     i2l705:
  5685  000F10  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5686  000F14  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5687  000F18  0012               	return		;funcret
  5688  000F1A                     __end_of___lwdiv:
  5689                           	opt stack 0
  5690  0000                     pclatu	equ	0xFFB
  5691                           pclath	equ	0xFFA
  5692                           tblptru	equ	0xFF8
  5693                           tblptrh	equ	0xFF7
  5694                           tblptrl	equ	0xFF6
  5695                           tablat	equ	0xFF5
  5696                           prodh	equ	0xFF4
  5697                           prodl	equ	0xFF3
  5698                           intcon	equ	0xFF2
  5699                           postinc0	equ	0xFEE
  5700                           fsr0h	equ	0xFEA
  5701                           fsr0l	equ	0xFE9
  5702                           wreg	equ	0xFE8
  5703                           postdec1	equ	0xFE5
  5704                           plusw1	equ	0xFE3
  5705                           fsr1h	equ	0xFE2
  5706                           fsr1l	equ	0xFE1
  5707                           indf2	equ	0xFDF
  5708                           postinc2	equ	0xFDE
  5709                           plusw2	equ	0xFDB
  5710                           fsr2h	equ	0xFDA
  5711                           fsr2l	equ	0xFD9
  5712                           status	equ	0xFD8
  5713                           pclatu	equ	0xFFB
  5714                           pclath	equ	0xFFA
  5715                           tblptru	equ	0xFF8
  5716                           tblptrh	equ	0xFF7
  5717                           tblptrl	equ	0xFF6
  5718                           tablat	equ	0xFF5
  5719                           prodh	equ	0xFF4
  5720                           prodl	equ	0xFF3
  5721                           intcon	equ	0xFF2
  5722                           postinc0	equ	0xFEE
  5723                           fsr0h	equ	0xFEA
  5724                           fsr0l	equ	0xFE9
  5725                           wreg	equ	0xFE8
  5726                           postdec1	equ	0xFE5
  5727                           plusw1	equ	0xFE3
  5728                           fsr1h	equ	0xFE2
  5729                           fsr1l	equ	0xFE1
  5730                           indf2	equ	0xFDF
  5731                           postinc2	equ	0xFDE
  5732                           plusw2	equ	0xFDB
  5733                           fsr2h	equ	0xFDA
  5734                           fsr2l	equ	0xFD9
  5735                           status	equ	0xFD8
  5736                           
  5737                           	psect	rparam
  5738  0000                     pclatu	equ	0xFFB
  5739                           pclath	equ	0xFFA
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           prodh	equ	0xFF4
  5745                           prodl	equ	0xFF3
  5746                           intcon	equ	0xFF2
  5747                           postinc0	equ	0xFEE
  5748                           fsr0h	equ	0xFEA
  5749                           fsr0l	equ	0xFE9
  5750                           wreg	equ	0xFE8
  5751                           postdec1	equ	0xFE5
  5752                           plusw1	equ	0xFE3
  5753                           fsr1h	equ	0xFE2
  5754                           fsr1l	equ	0xFE1
  5755                           indf2	equ	0xFDF
  5756                           postinc2	equ	0xFDE
  5757                           plusw2	equ	0xFDB
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762                           	psect	temp
  5763  00007F                     btemp:
  5764                           	opt stack 0
  5765  00007F                     	ds	1
  5766  0000                     int$flags	set	btemp
  5767                           pclatu	equ	0xFFB
  5768                           pclath	equ	0xFFA
  5769                           tblptru	equ	0xFF8
  5770                           tblptrh	equ	0xFF7
  5771                           tblptrl	equ	0xFF6
  5772                           tablat	equ	0xFF5
  5773                           prodh	equ	0xFF4
  5774                           prodl	equ	0xFF3
  5775                           intcon	equ	0xFF2
  5776                           postinc0	equ	0xFEE
  5777                           fsr0h	equ	0xFEA
  5778                           fsr0l	equ	0xFE9
  5779                           wreg	equ	0xFE8
  5780                           postdec1	equ	0xFE5
  5781                           plusw1	equ	0xFE3
  5782                           fsr1h	equ	0xFE2
  5783                           fsr1l	equ	0xFE1
  5784                           indf2	equ	0xFDF
  5785                           postinc2	equ	0xFDE
  5786                           plusw2	equ	0xFDB
  5787                           fsr2h	equ	0xFDA
  5788                           fsr2l	equ	0xFD9
  5789                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        252
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128    127     127
    BANK1           256    179     214
    BANK2           256     87     253
    BANK3           256     32     228
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _writePong->_off
    _writePong->i2_on
    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol
    i2_refresh->i2_setColHigh
    i2_refresh->i2_setRowHigh
    i2_drawSymbol->i2_on

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_checkNextPosition
    _checkNextPosition->i2_startPong
    i2_initializePong->i2_startPong
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK1

    _initializePong->_startPong
    _startPong->_drawSymbol
    _refresh->_setColHigh
    _refresh->_setRowHigh
    _drawSymbol->_on
    _initializeLED->_turnAllOff

Critical Paths under _ISR in BANK1

    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK2

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3323
                         _initialize
                      _initializeLED
                     _initializePong
                            _refresh
 ---------------------------------------------------------------------------------
 (1) _initializePong                                       0     0      0    2919
                          _startPong
 ---------------------------------------------------------------------------------
 (2) _startPong                                            2     2      0    2919
                                            177 BANK1      2     2      0
                         _drawSymbol
                            _refresh
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (1) _refresh                                              5     5      0     268
                                             36 BANK1      5     5      0
                             _allOff
                         _setColHigh
                         _setRowHigh
 ---------------------------------------------------------------------------------
 (2) _setRowHigh                                           3     3      0      66
                                             33 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setColHigh                                           3     3      0      22
                                             33 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _allOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drawSymbol                                         259   258      1    2447
                                             37 BANK1    140   139      1
                                              0 BANK2     87    87      0
                                              0 BANK3     32    32      0
                                 _on
 ---------------------------------------------------------------------------------
 (4) _on                                                   4     3      1     597
                                             33 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _initializeLED                                        0     0      0     136
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _turnAllOff                                           4     4      0     136
                                             33 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 17    17      0    9748
                                             16 BANK1     17    17      0
                            ___lwdiv
                  _checkNextPosition
                          _writePong
 ---------------------------------------------------------------------------------
 (6) _writePong                                            0     0      0     847
                                _off
                               i2_on
 ---------------------------------------------------------------------------------
 (7) _off                                                  4     3      1     303
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _checkNextPosition                                    4     4      0    8492
                                            123 BANK0      4     4      0
               _checkPaddleCollision
                 _checkWallCollision
                    _getNextPosition
                       i2_drawSymbol
                   i2_initializePong
                          i2_refresh
                        i2_startPong
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_initializePong                                     0     0      0    2808
                        i2_startPong
 ---------------------------------------------------------------------------------
 (7) i2_startPong                                          2     2      0    2808
                                            121 BANK0      2     2      0
                       i2_drawSymbol
                          i2_refresh
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_turnAllOff                                         4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (8) i2_refresh                                            5     5      0     268
                                              3 COMRAM     5     5      0
                           i2_allOff
                       i2_setColHigh
                       i2_setRowHigh
 ---------------------------------------------------------------------------------
 (9) i2_setRowHigh                                         3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_setColHigh                                         3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_allOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_drawSymbol                                       259   258      1    2336
                                              4 COMRAM   122   121      1
                                              0 BANK0    121   121      0
                                              0 BANK1     16    16      0
                               i2_on
 ---------------------------------------------------------------------------------
 (7) i2_on                                                 4     3      1     544
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) _checkWallCollision                                   0     0      0       0
                _handleWallCollision
 ---------------------------------------------------------------------------------
 (8) _handleWallCollision                                  0     0      0       0
                    _getNextPosition
 ---------------------------------------------------------------------------------
 (7) _getNextPosition                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _checkPaddleCollision                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _initializeLED
     _turnAllOff
   _initializePong
     _startPong
       _drawSymbol
         _on
       _refresh
         _allOff
         _setColHigh
         _setRowHigh
       _turnAllOff
   _refresh
     _allOff
     _setColHigh
     _setRowHigh

 _ISR (ROOT)
   ___lwdiv
   _checkNextPosition
     _checkPaddleCollision
     _checkWallCollision
       _handleWallCollision
         _getNextPosition
     _getNextPosition
     i2_drawSymbol
       i2_on
     i2_initializePong
       i2_startPong
         i2_drawSymbol
           i2_on
         i2_refresh
           i2_allOff
           i2_setColHigh
           i2_setRowHigh
         i2_turnAllOff
     i2_refresh
       i2_allOff
       i2_setColHigh
       i2_setRowHigh
     i2_startPong
       i2_drawSymbol
         i2_on
       i2_refresh
         i2_allOff
         i2_setColHigh
         i2_setRowHigh
       i2_turnAllOff
     i2_turnAllOff
   _writePong
     _off
     i2_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     20      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     57      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B3      D6       7       83.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3B4      15        0.0%
DATA                 0      0     3B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Apr 05 11:06:51 2016

         __end_ofi2_setColHigh 10F8             drawSymbol@symbolGo 016A              ?i2_initializePong 0001  
                           _on 0E76                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
           ??i2_initializePong 007F            drawSymbol@symbolOne 02E2           __end_ofi2_setRowHigh 0FE6  
                          ?_on 0121            drawSymbol@symbolTwo 02A6                            _GIE 007F97  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000                            _ISR 0008  
                          _PSA 007EAB                            __p1 01C5                            __p2 01CA  
                          _off 0FE6                            prod 000FF3                            wreg 000FE8  
          __end_ofi2_startPong 0DC2                           ??_on 0122                   __CFG_LVP$OFF 000000  
                         ?_ISR 0001                   __CFG_WDT$OFF 000000           drawSymbol@symbolPlay 0126  
                         l2020 0A26                           l2014 0A16                           l2032 0A78  
                         l2024 0A30                           l2018 0A20                           l2028 0A72  
                         l2510 0E8E                           l2506 0E84                           l2610 00AE  
                         l2604 009E                           l1902 0D02                           l2630 0148  
                         l2622 0100                           l2606 00A4                           l1726 0DF2  
                         l1912 0D1C                           l2640 0194                           l2616 00F0  
                         l1906 0D0C                           l2642 019A                           l2634 0152  
                         l2618 00F6                           l2730 0CC0                           l1908 0D12  
                         l2652 01E6                           l2628 0142                           l2740 0CDC  
                         l1918 0D5A                           l2670 0244                           l2654 01EC  
                         l2646 01A4                           l2664 0234                           l2682 0296  
                         l2666 023A                           l2658 01F6                           l2690 02D8  
                         l2676 0286                           l2678 028C                           ?_off 0001  
                         l2988 113E                           _ADIE 007CEE                           _ADIF 007CF6  
                         _T0CS 007EAD                           u1214 0DE4                           u1215 0DDE  
                         u1224 0E0E                           u1225 0E08                           _LATA 000F89  
                         _LATC 000F8B                           _LATD 000F8C                           u1194 10B0  
                         u1195 10AA                           u2501 003A                           u2511 004C  
                         u2521 005E                           u2531 0070                           u2541 0082  
                         u2551 0094                           u2491 0028                           _PEIE 007F96  
                         u2977 0A88                           i2_on 1022               ??_initializePong 01B3  
                         _main 1132         ??_checkPaddleCollision 0001                    drawSymbol@i 01AF  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 007F                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
                        ??_ISR 0110                          ??_off 0002                          ?i2_on 0001  
                   i2on@column 0004          drawSymbol@symbolThree 02C4                          ?_main 0001  
                        _ADRES 000FC3                          _T0PS0 007EA8                          _T0PS1 007EA9  
                        _T0PS2 007EAA                __end_of___lwdiv 0F1A                          i2l296 092E  
                        i2l705 0F10                          _PLLEN 007CDE                          _TRISA 000F92  
                        _TRISC 000F94                          _TRISD 000F95                  __CFG_PWRT$OFF 000000  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000           __end_ofi2_turnAllOff 0F62                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                        __ball 01CF                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
              __end_of_refresh 0A9C                          on@row 0121                 __CFG_BOREN$OFF 000000  
                        tablat 000FF5               __end_ofi2_allOff 1160                          plusw1 000FE3  
                        plusw2 000FDB                          status 000FD8          __size_ofi2_drawSymbol 02D0  
                 __end_ofi2_on 105E                __initialization 0B24                   __end_of_main 1144  
          _handleWallCollision 105E                         ??i2_on 0002                _getNextPosition 0A9C  
           __size_ofi2_refresh 006A                         ??_main 01B3                    i2_startPong 0D60  
                __activetblptr 000002           ?_handleWallCollision 0001                   i2_drawSymbol 0308  
                       _T08BIT 007EAE       checkNextPosition@counter 00FB                         i2l2050 106C  
                       i2l2044 1060                         i2l2046 1064                         i2l2054 1074  
                       i2l2048 1068                         i2l2056 1090                         i2l2500 1034  
                       i2l2092 0FF0                         i2l2520 039A                         i2l2600 05AA  
                       i2l2096 0FF8                         i2l2514 038A                         i2l1706 0FC8  
                       i2l2540 042C                         i2l2532 03E8                         i2l2516 0390  
                       i2l2700 0D86                         i2l2390 0EEA                         i2l1750 0ADE  
                       i2l1742 0A9E                         i2l2550 0474                         i2l2526 03D8  
                       i2l2710 0DA2                         i2l1752 0AE8                         i2l1744 0AB0  
                       i2l2552 047A                         i2l2544 0436                         i2l2528 03DE  
                       i2l2800 0678                         i2l2386 0EDE                         i2l1746 0ABA  
                       i2l2562 04C2                         i2l2538 0426                         i2l1850 0F1E  
                       i2l2810 069A                         i2l2388 0EE6                         i2l1748 0ACC  
                       i2l1756 0AFA                         i2l2580 051E                         i2l2564 04C8  
                       i2l2556 0484                         i2l1860 0F32                         i2l2804 0680  
                       i2l2398 0F06                         i2l2574 050E                         i2l1854 0F26  
                       i2l2814 06A0                         i2l2496 102C                         i2l2592 056C  
                       i2l2576 0514                         i2l2568 04D2                         i2l1872 0C30  
                       i2l1856 0F2A                         i2l2920 0824                         i2l2912 0810  
                       i2l2840 06F4                         i2l2808 0684                         i2l2586 055C  
                       i2l1890 0C78                         i2l1882 0C44                         i2l1866 0F5E  
                       i2l2922 0828                         i2l2930 0850                         i2l2850 0736  
                       i2l2914 0816                         i2l2826 06CE                         i2l2842 06FA  
                       i2l2588 0562                         i2l1876 0C38                         i2l2924 082C  
                       i2l2908 0806                         i2l2852 073A                         i2l2860 075C  
                       i2l2836 06EA                         i2l1886 0C74                         i2l1878 0C3C  
                       i2l2918 0820                         i2l2854 073E                         i2l2782 061E  
                       i2l2928 0834                         i2l2880 07A0                         i2l2784 0622  
                       i2l2952 08BE                         i2l2874 0794                         i2l2882 07B6  
                       i2l2858 0746                         i2l2866 0762                         i2l2786 062A  
                       i2l2794 0646                         i2l2946 08B2                         i2l2876 0798  
                       i2l2788 0640                         i2l2972 0912                         i2l2886 07BC  
                       i2l2898 07EA                         _TMR0IE 007F95                         _TMR0IF 007F92  
                       _TMR0ON 007EAF            i2drawSymbol@offSetX 0005          __size_ofi2_setColHigh 001C  
               __CFG_XINST$OFF 000000                         _allOff 1144                 __CFG_STVREN$ON 000000  
        __size_ofi2_setRowHigh 0040                         __speed 01C3                      ??___lwdiv 0005  
                       clear_0 0B2A                         clear_1 0B36                         _pixels 0300  
                       off@row 0001                      ??_refresh 0124                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8         __size_of_initializeLED 001E  
        ??_handleWallCollision 0001                   i2_setColHigh 10DC     __end_of_checkWallCollision 116E  
                   __accesstop 0080        __end_of__initialization 0B9C             i2setColHigh@column 0003  
            __end_ofi2_refresh 0C96                __CFG_PBADEN$OFF 000000                   i2_setRowHigh 0FA6  
                ___rparam_used 000001        __end_of_getNextPosition 0B24                 __pcstackCOMRAM 0001  
             i2drawSymbol@i_82 00F3               i2drawSymbol@i_83 00F4               i2drawSymbol@i_84 00F5  
             i2drawSymbol@i_85 00F6               i2drawSymbol@i_86 00F7               i2drawSymbol@i_87 00F8  
                 __pidataBANK1 1120                   __pidataBANK2 096A                   __pidataBANK3 0F62  
      i2drawSymbol@symbolThree 00C4                     __end_of_on 0EC8          __size_ofi2_turnAllOff 0048  
                    ?i2_allOff 0001                  i2turnAllOff@i 0003                  i2turnAllOff@j 0004  
             startPong@counter 01B1      __size_ofi2_initializePong 0014                     __pbssBANK1 01C5  
                   __pbssBANK3 0300                  _initializeLED 10BE                   i2_turnAllOff 0F1A  
 i2drawSymbol@symbolArrowRight 0100                        ?_allOff 0001                     ??i2_allOff 0001  
                   _drawSymbol 001A    i2drawSymbol@symbolArrowLeft 00E2             __size_of_startPong 0066  
                      i2on@row 0001             __size_of_writePong 0082  __size_of_checkPaddleCollision 0002  
               ?_initializeLED 0001                        __Hparam 0000                        __Lparam 0000  
             ?_getNextPosition 0001                  refresh@theCol 0127                  refresh@theRow 0128  
              __size_of_allOff 000E           i2drawSymbol@symbolGo 0080                        ___lwdiv 0EC8  
   drawSymbol@symbolArrowRight 03D4                        __pcinit 0B24         drawSymbol@chosenSymbol 01AE  
                      __ramtop 0600                     _initialize 0E1C                        __ptext0 1132  
                      __ptext1 10F8                        __ptext2 0C96                        __ptext3 0A10  
                      __ptext4 0DC2                        __ptext5 1096                        __ptext6 1144  
                      __ptext7 001A                        __ptext8 0E76                        __ptext9 10BE  
                 ?i2_startPong 0001                   __size_of_ISR 0962                   __size_of_off 003C  
                      _refresh 0A10                 drawSymbol@i_82 01B0                 drawSymbol@i_83 02F8  
               drawSymbol@i_84 02F9                 drawSymbol@i_85 02FA                 drawSymbol@i_86 02FB  
               drawSymbol@i_87 02FC                     _setColHigh 1096                 __pintcode_body 0856  
         end_of_initialization 0B9C                  __Lmediumconst 0000                        int_func 0856  
                   _setRowHigh 0DC2                        postdec1 000FE5                        postinc0 000FEE  
                      postinc2 000FDE        __size_of_initializePong 0014              __end_of_startPong 0CFC  
            drawSymbol@offSetX 0125              __end_of_writePong 0C2C                      _TRISBbits 000F93  
                  ?_drawSymbol 0125               i2_initializePong 110C                ??_initializeLED 0125  
                    i2_refresh 0C2C                     _turnAllOff 0CFC             _checkWallCollision 1160  
                setRowHigh@row 0123                 __end_of_allOff 1152            ?_checkWallCollision 0001  
                  ?_initialize 0001    __end_of_handleWallCollision 1096            start_initialization 0B24  
                  __end_of_ISR 096A              __size_ofi2_allOff 000E                    ?_setColHigh 0001  
                  __end_of_off 1022           ??_checkWallCollision 0001                     ISR@ADvalue 011E  
                  ?_setRowHigh 0001               __CFG_OSC$INTIO67 000000                     ?i2_refresh 0001  
                     ??_allOff 0121            __size_of_drawSymbol 02EE                    __pdataBANK1 01B3  
                  __pdataBANK2 0200                    __pdataBANK3 0380               __CFG_LPT1OSC$OFF 000000  
         __size_ofi2_startPong 0062                  __pcstackBANK0 0080                  __pcstackBANK1 0100  
                __pcstackBANK2 02A6                  __pcstackBANK3 03C4         i2drawSymbol@symbolPlay 0006  
           i2startPong@counter 00F9            __size_of_initialize 005A                  i2drawSymbol@i 00F2  
                     ISR@value 0120               ___lwdiv@dividend 0001                    ?_turnAllOff 0001  
            __CFG_CCP2MX$PORTC 000000                      __pintcode 0008                 _initializePong 10F8  
          __size_of_setColHigh 0028                       ?___lwdiv 0001   __end_of_checkPaddleCollision 1170  
          __size_of_setRowHigh 005A                    turnAllOff@i 0123                    turnAllOff@j 0124  
            _checkNextPosition 05D8                       ?_refresh 0001             ?_checkNextPosition 0001  
             ___lwdiv@quotient 0005                  ?i2_drawSymbol 0005                    __size_of_on 0052  
          ??_checkNextPosition 007F         __end_of_initializePong 110C                       i2u113_44 10EE  
                     i2u113_45 10EA                       i2u115_44 0FBE                       i2u115_45 0FBA  
                     i2u116_44 0FDC                       i2u116_45 0FD8                    ??i2_refresh 0004  
                     i2u230_41 0338                       i2u231_41 034A                       i2u232_41 035C  
                     i2u233_41 036E                       i2u234_41 0380                       i2u228_41 0314  
                     i2u229_41 0326                       i2u284_40 0720                       i2u276_40 0608  
                     i2u286_40 077E                       i2u278_40 0662                       i2u298_47 0C84  
             __CFG_WDTPS$32768 000000       __end_ofi2_initializePong 1120                     _ADCON0bits 000FC2  
                   _ADCON1bits 000FC1                     _ADCON2bits 000FC0      __end_of_checkNextPosition 0856  
                    _startPong 0C96       __size_of_getNextPosition 0088                       i2_allOff 1152  
                    off@column 0004                 ??i2_drawSymbol 0006            __size_of_turnAllOff 0064  
                ?i2_setColHigh 0001                   ??_drawSymbol 0126                      _writePong 0BAA  
                    copy_data0 0B50                      copy_data1 0B70                      copy_data2 0B90  
                __timerCounter 01D4                  ?i2_setRowHigh 0001                       __Hrparam 0000  
              ?_initializePong 0001                       __Lrparam 0000       i2drawSymbol@chosenSymbol 007E  
           __end_of_drawSymbol 0308               __size_of___lwdiv 0052                   ??_initialize 0121  
        i2drawSymbol@symbolOne 0068          i2drawSymbol@symbolTwo 004A                     ?_startPong 0001  
              i2refresh@theCol 0007                i2refresh@theRow 0008                       __nextPos 01D2  
               ??i2_setColHigh 0001                ___lwdiv@divisor 0003                   ??_setColHigh 0121  
             __size_of_refresh 008C                ___lwdiv@counter 0007                       __ptext10 0CFC  
                     __ptext11 0E1C                       __ptext20 0FA6                       __ptext21 10DC  
                     __ptext13 0BAA                       __ptext22 1152                       __ptext14 0FE6  
                     __ptext23 0308                       __ptext15 05D8                       __ptext24 1022  
                     __ptext16 110C                       __ptext25 1160                       __ptext17 0D60  
                     __ptext26 105E                       __ptext18 0F1A                       __ptext27 0A9C  
                     __ptext19 0C2C                       __ptext28 116E                       __ptext29 0EC8  
                   ?_writePong 0001                  __size_ofi2_on 003C                drawSymbol@F3230 0262  
              drawSymbol@F3224 0280                drawSymbol@F3233 0200                drawSymbol@F3242 0296  
              drawSymbol@F3227 0244                drawSymbol@F3236 0380                drawSymbol@F3239 01B3  
               ??i2_setRowHigh 0001                   ??_setRowHigh 0121                  __size_of_main 0012  
           __end_of_initialize 0E76          __end_of_initializeLED 10DC           _checkPaddleCollision 116E  
                ?i2_turnAllOff 0001                       int$flags 007F             __end_of_setColHigh 10BE  
                     on@column 0124     __size_of_checkNextPosition 027E                    _OSCTUNEbits 000F9B  
           __end_of_setRowHigh 0E1C               setColHigh@column 0123              ??_getNextPosition 0001  
 __size_of_handleWallCollision 0038      drawSymbol@symbolArrowLeft 03C4                       intlevel2 0000  
  __size_of_checkWallCollision 000E   checkNextPosition@counter_439 00FD          ?_checkPaddleCollision 0001  
               ??i2_turnAllOff 0001                     _OSCCONbits 000FD3                   ??_turnAllOff 0121  
         __end_ofi2_drawSymbol 05D8                  ??i2_startPong 007F                    ??_startPong 01B1  
              i2setRowHigh@row 0003                    ??_writePong 0005             __end_of_turnAllOff 0D60  
