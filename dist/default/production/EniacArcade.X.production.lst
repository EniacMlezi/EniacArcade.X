

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Apr 04 11:55:19 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	idataBANK1
    52  0010F4                     __pidataBANK1:
    53                           	opt stack 0
    54                           
    55                           ;initializer for drawSymbol@F3239
    56  0010F4  03                 	db	3
    57  0010F5  00                 	db	0
    58  0010F6  03                 	db	3
    59  0010F7  07                 	db	7
    60  0010F8  04                 	db	4
    61  0010F9  01                 	db	1
    62  0010FA  04                 	db	4
    63  0010FB  06                 	db	6
    64  0010FC  05                 	db	5
    65  0010FD  02                 	db	2
    66  0010FE  05                 	db	5
    67  0010FF  05                 	db	5
    68  001100  06                 	db	6
    69  001101  03                 	db	3
    70  001102  06                 	db	6
    71  001103  04                 	db	4
    72                           
    73                           ;initializer for __speed
    74  001104  0096               	dw	150
    75                           
    76                           	psect	idataBANK2
    77  000962                     __pidataBANK2:
    78                           	opt stack 0
    79                           
    80                           ;initializer for drawSymbol@F3233
    81  000962  01                 	db	1
    82  000963  01                 	db	1
    83  000964  01                 	db	1
    84  000965  02                 	db	2
    85  000966  01                 	db	1
    86  000967  03                 	db	3
    87  000968  01                 	db	1
    88  000969  04                 	db	4
    89  00096A  01                 	db	1
    90  00096B  05                 	db	5
    91  00096C  01                 	db	1
    92  00096D  06                 	db	6
    93  00096E  02                 	db	2
    94  00096F  06                 	db	6
    95  000970  03                 	db	3
    96  000971  06                 	db	6
    97  000972  03                 	db	3
    98  000973  05                 	db	5
    99  000974  03                 	db	3
   100  000975  04                 	db	4
   101  000976  02                 	db	2
   102  000977  04                 	db	4
   103  000978  05                 	db	5
   104  000979  06                 	db	6
   105  00097A  05                 	db	5
   106  00097B  05                 	db	5
   107  00097C  05                 	db	5
   108  00097D  04                 	db	4
   109  00097E  05                 	db	5
   110  00097F  03                 	db	3
   111  000980  05                 	db	5
   112  000981  02                 	db	2
   113  000982  05                 	db	5
   114  000983  01                 	db	1
   115  000984  06                 	db	6
   116  000985  01                 	db	1
   117  000986  08                 	db	8
   118  000987  01                 	db	1
   119  000988  08                 	db	8
   120  000989  02                 	db	2
   121  00098A  08                 	db	8
   122  00098B  03                 	db	3
   123  00098C  09                 	db	9
   124  00098D  04                 	db	4
   125  00098E  0A                 	db	10
   126  00098F  04                 	db	4
   127  000990  0B                 	db	11
   128  000991  03                 	db	3
   129  000992  0B                 	db	11
   130  000993  02                 	db	2
   131  000994  0B                 	db	11
   132  000995  01                 	db	1
   133  000996  0D                 	db	13
   134  000997  01                 	db	1
   135  000998  0D                 	db	13
   136  000999  02                 	db	2
   137  00099A  0D                 	db	13
   138  00099B  03                 	db	3
   139  00099C  0D                 	db	13
   140  00099D  04                 	db	4
   141  00099E  0C                 	db	12
   142  00099F  05                 	db	5
   143  0009A0  0B                 	db	11
   144  0009A1  06                 	db	6
   145  0009A2  0E                 	db	14
   146  0009A3  05                 	db	5
   147  0009A4  0E                 	db	14
   148  0009A5  06                 	db	6
   149                           
   150                           ;initializer for drawSymbol@F3227
   151  0009A6  01                 	db	1
   152  0009A7  00                 	db	0
   153  0009A8  02                 	db	2
   154  0009A9  00                 	db	0
   155  0009AA  03                 	db	3
   156  0009AB  00                 	db	0
   157  0009AC  04                 	db	4
   158  0009AD  00                 	db	0
   159  0009AE  05                 	db	5
   160  0009AF  00                 	db	0
   161  0009B0  05                 	db	5
   162  0009B1  01                 	db	1
   163  0009B2  04                 	db	4
   164  0009B3  02                 	db	2
   165  0009B4  03                 	db	3
   166  0009B5  03                 	db	3
   167  0009B6  02                 	db	2
   168  0009B7  04                 	db	4
   169  0009B8  01                 	db	1
   170  0009B9  05                 	db	5
   171  0009BA  01                 	db	1
   172  0009BB  06                 	db	6
   173  0009BC  05                 	db	5
   174  0009BD  06                 	db	6
   175  0009BE  02                 	db	2
   176  0009BF  07                 	db	7
   177  0009C0  03                 	db	3
   178  0009C1  07                 	db	7
   179  0009C2  04                 	db	4
   180  0009C3  07                 	db	7
   181                           
   182                           ;initializer for drawSymbol@F3230
   183  0009C4  02                 	db	2
   184  0009C5  00                 	db	0
   185  0009C6  03                 	db	3
   186  0009C7  00                 	db	0
   187  0009C8  04                 	db	4
   188  0009C9  00                 	db	0
   189  0009CA  05                 	db	5
   190  0009CB  01                 	db	1
   191  0009CC  01                 	db	1
   192  0009CD  01                 	db	1
   193  0009CE  01                 	db	1
   194  0009CF  02                 	db	2
   195  0009D0  01                 	db	1
   196  0009D1  03                 	db	3
   197  0009D2  02                 	db	2
   198  0009D3  04                 	db	4
   199  0009D4  03                 	db	3
   200  0009D5  04                 	db	4
   201  0009D6  01                 	db	1
   202  0009D7  05                 	db	5
   203  0009D8  01                 	db	1
   204  0009D9  06                 	db	6
   205  0009DA  02                 	db	2
   206  0009DB  07                 	db	7
   207  0009DC  03                 	db	3
   208  0009DD  07                 	db	7
   209  0009DE  04                 	db	4
   210  0009DF  07                 	db	7
   211  0009E0  05                 	db	5
   212  0009E1  06                 	db	6
   213                           
   214                           ;initializer for drawSymbol@F3224
   215  0009E2  02                 	db	2
   216  0009E3  00                 	db	0
   217  0009E4  03                 	db	3
   218  0009E5  00                 	db	0
   219  0009E6  04                 	db	4
   220  0009E7  00                 	db	0
   221  0009E8  03                 	db	3
   222  0009E9  01                 	db	1
   223  0009EA  03                 	db	3
   224  0009EB  02                 	db	2
   225  0009EC  03                 	db	3
   226  0009ED  03                 	db	3
   227  0009EE  03                 	db	3
   228  0009EF  04                 	db	4
   229  0009F0  03                 	db	3
   230  0009F1  05                 	db	5
   231  0009F2  03                 	db	3
   232  0009F3  06                 	db	6
   233  0009F4  03                 	db	3
   234  0009F5  07                 	db	7
   235  0009F6  04                 	db	4
   236  0009F7  06                 	db	6
   237                           
   238                           ;initializer for drawSymbol@F3242
   239  0009F8  04                 	db	4
   240  0009F9  00                 	db	0
   241  0009FA  03                 	db	3
   242  0009FB  01                 	db	1
   243  0009FC  02                 	db	2
   244  0009FD  02                 	db	2
   245  0009FE  01                 	db	1
   246  0009FF  03                 	db	3
   247  000A00  01                 	db	1
   248  000A01  04                 	db	4
   249  000A02  02                 	db	2
   250  000A03  05                 	db	5
   251  000A04  03                 	db	3
   252  000A05  06                 	db	6
   253  000A06  04                 	db	4
   254  000A07  07                 	db	7
   255                           
   256                           	psect	idataBANK3
   257  000F6E                     __pidataBANK3:
   258                           	opt stack 0
   259                           
   260                           ;initializer for drawSymbol@F3236
   261  000F6E  06                 	db	6
   262  000F6F  06                 	db	6
   263  000F70  05                 	db	5
   264  000F71  07                 	db	7
   265  000F72  04                 	db	4
   266  000F73  07                 	db	7
   267  000F74  03                 	db	3
   268  000F75  07                 	db	7
   269  000F76  02                 	db	2
   270  000F77  06                 	db	6
   271  000F78  02                 	db	2
   272  000F79  05                 	db	5
   273  000F7A  02                 	db	2
   274  000F7B  04                 	db	4
   275  000F7C  02                 	db	2
   276  000F7D  03                 	db	3
   277  000F7E  02                 	db	2
   278  000F7F  02                 	db	2
   279  000F80  02                 	db	2
   280  000F81  01                 	db	1
   281  000F82  03                 	db	3
   282  000F83  00                 	db	0
   283  000F84  04                 	db	4
   284  000F85  00                 	db	0
   285  000F86  05                 	db	5
   286  000F87  00                 	db	0
   287  000F88  06                 	db	6
   288  000F89  01                 	db	1
   289  000F8A  05                 	db	5
   290  000F8B  02                 	db	2
   291  000F8C  04                 	db	4
   292  000F8D  02                 	db	2
   293  000F8E  09                 	db	9
   294  000F8F  06                 	db	6
   295  000F90  09                 	db	9
   296  000F91  05                 	db	5
   297  000F92  09                 	db	9
   298  000F93  04                 	db	4
   299  000F94  09                 	db	9
   300  000F95  03                 	db	3
   301  000F96  09                 	db	9
   302  000F97  02                 	db	2
   303  000F98  09                 	db	9
   304  000F99  01                 	db	1
   305  000F9A  0A                 	db	10
   306  000F9B  00                 	db	0
   307  000F9C  0B                 	db	11
   308  000F9D  00                 	db	0
   309  000F9E  0C                 	db	12
   310  000F9F  00                 	db	0
   311  000FA0  0D                 	db	13
   312  000FA1  01                 	db	1
   313  000FA2  0D                 	db	13
   314  000FA3  02                 	db	2
   315  000FA4  0D                 	db	13
   316  000FA5  04                 	db	4
   317  000FA6  0D                 	db	13
   318  000FA7  05                 	db	5
   319  000FA8  0D                 	db	13
   320  000FA9  06                 	db	6
   321  000FAA  0C                 	db	12
   322  000FAB  07                 	db	7
   323  000FAC  0B                 	db	11
   324  000FAD  07                 	db	7
   325  000FAE  0A                 	db	10
   326  000FAF  07                 	db	7
   327  000FB0  00                 	db	0
   328  000FB1  00                 	db	0
   329  0000                     _ADRES	set	4035
   330  0000                     _ADCON0bits	set	4034
   331  0000                     _ADCON1bits	set	4033
   332  0000                     _ADCON2bits	set	4032
   333  0000                     _LATA	set	3977
   334  0000                     _LATC	set	3979
   335  0000                     _LATD	set	3980
   336  0000                     _OSCCONbits	set	4051
   337  0000                     _OSCTUNEbits	set	3995
   338  0000                     _TRISA	set	3986
   339  0000                     _TRISBbits	set	3987
   340  0000                     _TRISC	set	3988
   341  0000                     _TRISD	set	3989
   342  0000                     _ADIE	set	31982
   343  0000                     _ADIF	set	31990
   344  0000                     _GIE	set	32663
   345  0000                     _PEIE	set	32662
   346  0000                     _PLLEN	set	31966
   347  0000                     _PSA	set	32427
   348  0000                     _T08BIT	set	32430
   349  0000                     _T0CS	set	32429
   350  0000                     _T0PS0	set	32424
   351  0000                     _T0PS1	set	32425
   352  0000                     _T0PS2	set	32426
   353  0000                     _TMR0IE	set	32661
   354  0000                     _TMR0IF	set	32658
   355  0000                     _TMR0ON	set	32431
   356                           
   357                           ; #config settings
   358  0000                     
   359                           	psect	cinit
   360  000B1C                     __pcinit:
   361                           	opt stack 0
   362  000B1C                     start_initialization:
   363                           	opt stack 0
   364  000B1C                     __initialization:
   365                           	opt stack 0
   366                           
   367                           ; Clear objects allocated to BANK3 (128 bytes)
   368  000B1C  EE03  F000         	lfsr	0,__pbssBANK3
   369  000B20  0E80               	movlw	128
   370  000B22                     clear_0:
   371  000B22  6AEE               	clrf	postinc0,c
   372  000B24  06E8               	decf	wreg,f,c
   373  000B26  E1FD               	bnz	clear_0
   374                           
   375                           ; Clear objects allocated to BANK1 (17 bytes)
   376  000B28  EE01  F0C5         	lfsr	0,__pbssBANK1
   377  000B2C  0E11               	movlw	17
   378  000B2E                     clear_1:
   379  000B2E  6AEE               	clrf	postinc0,c
   380  000B30  06E8               	decf	wreg,f,c
   381  000B32  E1FD               	bnz	clear_1
   382                           
   383                           ; Initialize objects allocated to BANK3 (68 bytes)
   384                           ; load TBLPTR registers with __pidataBANK3
   385  000B34  0E6E               	movlw	low __pidataBANK3
   386  000B36  6EF6               	movwf	tblptrl,c
   387  000B38  0E0F               	movlw	high __pidataBANK3
   388  000B3A  6EF7               	movwf	tblptrh,c
   389  000B3C  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   390  000B3E  6EF8               	movwf	tblptru,c
   391  000B40  EE03  F080         	lfsr	0,__pdataBANK3
   392  000B44  EE10 F044          	lfsr	1,68
   393  000B48                     copy_data0:
   394  000B48  0009               	tblrd		*+
   395  000B4A  CFF5 FFEE          	movff	tablat,postinc0
   396  000B4E  50E5               	movf	postdec1,w,c
   397  000B50  50E1               	movf	fsr1l,w,c
   398  000B52  E1FA               	bnz	copy_data0
   399                           
   400                           ; Initialize objects allocated to BANK2 (166 bytes)
   401                           ; load TBLPTR registers with __pidataBANK2
   402  000B54  0E62               	movlw	low __pidataBANK2
   403  000B56  6EF6               	movwf	tblptrl,c
   404  000B58  0E09               	movlw	high __pidataBANK2
   405  000B5A  6EF7               	movwf	tblptrh,c
   406  000B5C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   407  000B5E  6EF8               	movwf	tblptru,c
   408  000B60  EE02  F000         	lfsr	0,__pdataBANK2
   409  000B64  EE10 F0A6          	lfsr	1,166
   410  000B68                     copy_data1:
   411  000B68  0009               	tblrd		*+
   412  000B6A  CFF5 FFEE          	movff	tablat,postinc0
   413  000B6E  50E5               	movf	postdec1,w,c
   414  000B70  50E1               	movf	fsr1l,w,c
   415  000B72  E1FA               	bnz	copy_data1
   416                           
   417                           ; Initialize objects allocated to BANK1 (18 bytes)
   418                           ; load TBLPTR registers with __pidataBANK1
   419  000B74  0EF4               	movlw	low __pidataBANK1
   420  000B76  6EF6               	movwf	tblptrl,c
   421  000B78  0E10               	movlw	high __pidataBANK1
   422  000B7A  6EF7               	movwf	tblptrh,c
   423  000B7C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   424  000B7E  6EF8               	movwf	tblptru,c
   425  000B80  EE01  F0B3         	lfsr	0,__pdataBANK1
   426  000B84  EE10 F012          	lfsr	1,18
   427  000B88                     copy_data2:
   428  000B88  0009               	tblrd		*+
   429  000B8A  CFF5 FFEE          	movff	tablat,postinc0
   430  000B8E  50E5               	movf	postdec1,w,c
   431  000B90  50E1               	movf	fsr1l,w,c
   432  000B92  E1FA               	bnz	copy_data2
   433  000B94                     end_of_initialization:
   434                           	opt stack 0
   435  000B94                     __end_of__initialization:
   436                           	opt stack 0
   437  000B94  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   438  000B96  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   439  000B98  0E00               	movlw	low (__Lmediumconst shr (0+16))
   440  000B9A  6EF8               	movwf	tblptru,c
   441  000B9C  0100               	movlb	0
   442  000B9E  EF83  F008         	goto	_main	;jump to C main() function
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	bssBANK1
   453  0001C5                     __pbssBANK1:
   454                           	opt stack 0
   455  0001C5                     __p1:
   456                           	opt stack 0
   457  0001C5                     	ds	5
   458  0001CA                     __p2:
   459                           	opt stack 0
   460  0001CA                     	ds	5
   461  0001CF                     __ball:
   462                           	opt stack 0
   463  0001CF                     	ds	3
   464  0001D2                     __nextPos:
   465                           	opt stack 0
   466  0001D2                     	ds	2
   467  0001D4                     __timerCounter:
   468                           	opt stack 0
   469  0001D4                     	ds	2
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	dataBANK1
   480  0001B3                     __pdataBANK1:
   481                           	opt stack 0
   482  0001B3                     drawSymbol@F3239:
   483                           	opt stack 0
   484  0001B3                     	ds	16
   485  0001C3                     __speed:
   486                           	opt stack 0
   487  0001C3                     	ds	2
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497                           	psect	dataBANK2
   498  000200                     __pdataBANK2:
   499                           	opt stack 0
   500  000200                     drawSymbol@F3233:
   501                           	opt stack 0
   502  000200                     	ds	68
   503  000244                     drawSymbol@F3227:
   504                           	opt stack 0
   505  000244                     	ds	30
   506  000262                     drawSymbol@F3230:
   507                           	opt stack 0
   508  000262                     	ds	30
   509  000280                     drawSymbol@F3224:
   510                           	opt stack 0
   511  000280                     	ds	22
   512  000296                     drawSymbol@F3242:
   513                           	opt stack 0
   514  000296                     	ds	16
   515                           tblptru	equ	0xFF8
   516                           tblptrh	equ	0xFF7
   517                           tblptrl	equ	0xFF6
   518                           tablat	equ	0xFF5
   519                           postinc0	equ	0xFEE
   520                           wreg	equ	0xFE8
   521                           postdec1	equ	0xFE5
   522                           fsr1l	equ	0xFE1
   523                           
   524                           	psect	bssBANK3
   525  000300                     __pbssBANK3:
   526                           	opt stack 0
   527  000300                     _pixels:
   528                           	opt stack 0
   529  000300                     	ds	128
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           postdec1	equ	0xFE5
   537                           fsr1l	equ	0xFE1
   538                           
   539                           	psect	dataBANK3
   540  000380                     __pdataBANK3:
   541                           	opt stack 0
   542  000380                     drawSymbol@F3236:
   543                           	opt stack 0
   544  000380                     	ds	68
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           postdec1	equ	0xFE5
   552                           fsr1l	equ	0xFE1
   553                           
   554                           	psect	cstackBANK3
   555  0003C4                     __pcstackBANK3:
   556                           	opt stack 0
   557  0003C4                     drawSymbol@symbolArrowLeft:
   558                           	opt stack 0
   559                           
   560                           ; 16 bytes @ 0x0
   561  0003C4                     	ds	16
   562  0003D4                     drawSymbol@symbolArrowRight:
   563                           	opt stack 0
   564                           
   565                           ; 16 bytes @ 0x10
   566  0003D4                     	ds	16
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           
   576                           	psect	cstackBANK2
   577  0002A6                     __pcstackBANK2:
   578                           	opt stack 0
   579  0002A6                     drawSymbol@symbolTwo:
   580                           	opt stack 0
   581                           
   582                           ; 30 bytes @ 0x0
   583  0002A6                     	ds	30
   584  0002C4                     drawSymbol@symbolThree:
   585                           	opt stack 0
   586                           
   587                           ; 30 bytes @ 0x1E
   588  0002C4                     	ds	30
   589  0002E2                     drawSymbol@symbolOne:
   590                           	opt stack 0
   591                           
   592                           ; 22 bytes @ 0x3C
   593  0002E2                     	ds	22
   594  0002F8                     drawSymbol@i_83:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x52
   598  0002F8                     	ds	1
   599  0002F9                     drawSymbol@i_84:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x53
   603  0002F9                     	ds	1
   604  0002FA                     drawSymbol@i_85:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x54
   608  0002FA                     	ds	1
   609  0002FB                     drawSymbol@i_86:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x55
   613  0002FB                     	ds	1
   614  0002FC                     drawSymbol@i_87:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x56
   618  0002FC                     	ds	1
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           
   628                           	psect	cstackBANK1
   629  000100                     __pcstackBANK1:
   630                           	opt stack 0
   631  000100                     i2drawSymbol@symbolArrowRight:
   632                           	opt stack 0
   633                           
   634                           ; 16 bytes @ 0x0
   635  000100                     	ds	16
   636  000110                     ??_ISR:
   637                           
   638                           ; 1 bytes @ 0x10
   639  000110                     	ds	14
   640  00011E                     ISR@ADvalue:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x1E
   644  00011E                     	ds	2
   645  000120                     ISR@value:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x20
   649  000120                     	ds	1
   650  000121                     ??_turnAllOff:
   651  000121                     ??_setColHigh:
   652  000121                     ??_setRowHigh:
   653  000121                     on@row:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x21
   657  000121                     	ds	1
   658  000122                     ??_on:
   659                           
   660                           ; 1 bytes @ 0x22
   661  000122                     	ds	1
   662  000123                     setColHigh@column:
   663                           	opt stack 0
   664  000123                     setRowHigh@row:
   665                           	opt stack 0
   666  000123                     turnAllOff@i:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x23
   670  000123                     	ds	1
   671  000124                     ??_refresh:
   672  000124                     on@column:
   673                           	opt stack 0
   674  000124                     turnAllOff@j:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x24
   678  000124                     	ds	1
   679  000125                     drawSymbol@offSetX:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x25
   683  000125                     	ds	1
   684  000126                     drawSymbol@symbolPlay:
   685                           	opt stack 0
   686                           
   687                           ; 68 bytes @ 0x26
   688  000126                     	ds	1
   689  000127                     refresh@theCol:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x27
   693  000127                     	ds	1
   694  000128                     refresh@theRow:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x28
   698  000128                     	ds	66
   699  00016A                     drawSymbol@symbolGo:
   700                           	opt stack 0
   701                           
   702                           ; 68 bytes @ 0x6A
   703  00016A                     	ds	68
   704  0001AE                     drawSymbol@chosenSymbol:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0xAE
   708  0001AE                     	ds	1
   709  0001AF                     drawSymbol@i:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0xAF
   713  0001AF                     	ds	1
   714  0001B0                     drawSymbol@i_82:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0xB0
   718  0001B0                     	ds	1
   719  0001B1                     startPong@counter:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0xB1
   723  0001B1                     	ds	2
   724  0001B3                     tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           postdec1	equ	0xFE5
   731                           fsr1l	equ	0xFE1
   732                           
   733                           ; 1 bytes @ 0xB3
   734                           
   735                           	psect	cstackBANK0
   736  000080                     __pcstackBANK0:
   737                           	opt stack 0
   738  000080                     i2drawSymbol@symbolGo:
   739                           	opt stack 0
   740                           
   741                           ; 68 bytes @ 0x0
   742  000080                     	ds	68
   743  0000C4                     i2drawSymbol@symbolThree:
   744                           	opt stack 0
   745                           
   746                           ; 30 bytes @ 0x44
   747  0000C4                     	ds	30
   748  0000E2                     i2drawSymbol@symbolArrowLeft:
   749                           	opt stack 0
   750                           
   751                           ; 16 bytes @ 0x62
   752  0000E2                     	ds	16
   753  0000F2                     i2drawSymbol@i:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x72
   757  0000F2                     	ds	1
   758  0000F3                     i2drawSymbol@i_82:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x73
   762  0000F3                     	ds	1
   763  0000F4                     i2drawSymbol@i_83:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x74
   767  0000F4                     	ds	1
   768  0000F5                     i2drawSymbol@i_84:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x75
   772  0000F5                     	ds	1
   773  0000F6                     i2drawSymbol@i_85:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x76
   777  0000F6                     	ds	1
   778  0000F7                     i2drawSymbol@i_86:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x77
   782  0000F7                     	ds	1
   783  0000F8                     i2drawSymbol@i_87:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x78
   787  0000F8                     	ds	1
   788  0000F9                     i2startPong@counter:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x79
   792  0000F9                     	ds	2
   793  0000FB                     checkNextPosition@counter:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x7B
   797  0000FB                     	ds	2
   798  0000FD                     checkNextPosition@counter_430:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x7D
   802  0000FD                     	ds	2
   803                           tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           postdec1	equ	0xFE5
   810                           fsr1l	equ	0xFE1
   811                           
   812                           	psect	cstackCOMRAM
   813  000001                     __pcstackCOMRAM:
   814                           	opt stack 0
   815  000001                     ??i2_setColHigh:
   816  000001                     ??i2_setRowHigh:
   817  000001                     ??i2_turnAllOff:
   818  000001                     ?___lwdiv:
   819                           	opt stack 0
   820  000001                     off@row:
   821                           	opt stack 0
   822  000001                     i2on@row:
   823                           	opt stack 0
   824  000001                     ___lwdiv@dividend:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x0
   828  000001                     	ds	1
   829  000002                     ??_off:
   830  000002                     ??i2_on:
   831                           
   832                           ; 1 bytes @ 0x1
   833  000002                     	ds	1
   834  000003                     i2setColHigh@column:
   835                           	opt stack 0
   836  000003                     i2setRowHigh@row:
   837                           	opt stack 0
   838  000003                     i2turnAllOff@i:
   839                           	opt stack 0
   840  000003                     ___lwdiv@divisor:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x2
   844  000003                     	ds	1
   845  000004                     ??i2_refresh:
   846  000004                     off@column:
   847                           	opt stack 0
   848  000004                     i2on@column:
   849                           	opt stack 0
   850  000004                     i2turnAllOff@j:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x3
   854  000004                     	ds	1
   855  000005                     i2drawSymbol@offSetX:
   856                           	opt stack 0
   857  000005                     ___lwdiv@quotient:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x4
   861  000005                     	ds	1
   862  000006                     i2drawSymbol@symbolPlay:
   863                           	opt stack 0
   864                           
   865                           ; 68 bytes @ 0x5
   866  000006                     	ds	1
   867  000007                     ___lwdiv@counter:
   868                           	opt stack 0
   869  000007                     i2refresh@theCol:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x6
   873  000007                     	ds	1
   874  000008                     i2refresh@theRow:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x7
   878  000008                     	ds	66
   879  00004A                     i2drawSymbol@symbolTwo:
   880                           	opt stack 0
   881                           
   882                           ; 30 bytes @ 0x49
   883  00004A                     	ds	30
   884  000068                     i2drawSymbol@symbolOne:
   885                           	opt stack 0
   886                           
   887                           ; 22 bytes @ 0x67
   888  000068                     	ds	22
   889  00007E                     i2drawSymbol@chosenSymbol:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0x7D
   893  00007E                     	ds	1
   894  00007F                     tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           postinc0	equ	0xFEE
   899                           wreg	equ	0xFE8
   900                           postdec1	equ	0xFE5
   901                           fsr1l	equ	0xFE1
   902                           
   903                           ; 1 bytes @ 0x7E
   904 ;;
   905 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   906 ;;
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 409 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   923 ;;      Params:         0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels required when called:   10
   929 ;; This function calls:
   930 ;;		_initialize
   931 ;;		_initializeLED
   932 ;;		_initializePong
   933 ;;		_refresh
   934 ;; This function is called by:
   935 ;;		Startup code after reset
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text0
   940  001106                     __ptext0:
   941                           	opt stack 0
   942  001106                     _main:
   943                           	opt stack 21
   944                           
   945                           ;main.c: 411: initialize();
   946                           
   947                           ;incstack = 0
   948  001106  EC14  F007         	call	_initialize	;wreg free
   949                           
   950                           ;main.c: 412: initializeLED();
   951  00110A  EC49  F008         	call	_initializeLED	;wreg free
   952                           
   953                           ;main.c: 413: initializePong();
   954  00110E  EC66  F008         	call	_initializePong	;wreg free
   955  001112                     l2904:
   956  001112  EC04  F005         	call	_refresh	;wreg free
   957  001116  D7FD               	goto	l2904
   958  001118                     __end_of_main:
   959                           	opt stack 0
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           postdec1	equ	0xFE5
   967                           fsr1l	equ	0xFE1
   968                           
   969 ;; *************** function _initializePong *****************
   970 ;; Defined at:
   971 ;;		line 88 in file "main.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   985 ;;      Params:         0       0       0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    9
   992 ;; This function calls:
   993 ;;		_startPong
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text1
  1000  0010CC                     __ptext1:
  1001                           	opt stack 0
  1002  0010CC                     _initializePong:
  1003                           	opt stack 21
  1004                           
  1005                           ;main.c: 93: _p1.lives = 3;
  1006                           
  1007                           ;incstack = 0
  1008  0010CC  0E03               	movlw	3
  1009  0010CE  0101               	movlb	1	; () banked
  1010  0010D0  6FC9               	movwf	(__p1+4)& (0+255),b
  1011                           
  1012                           ;main.c: 94: _p2.lives = 3;
  1013  0010D2  0E03               	movlw	3
  1014  0010D4  0101               	movlb	1	; () banked
  1015  0010D6  6FCE               	movwf	(__p2+4)& (0+255),b
  1016                           
  1017                           ; BSR set to: 1
  1018                           ;main.c: 96: startPong();
  1019  0010D8  EC12  F006         	call	_startPong	;wreg free
  1020                           
  1021                           ;main.c: 99: TMR0ON = 1;
  1022  0010DC  8ED5               	bsf	4053,7,c	;volatile
  1023  0010DE  0012               	return		;funcret
  1024  0010E0                     __end_of_initializePong:
  1025                           	opt stack 0
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           postdec1	equ	0xFE5
  1033                           fsr1l	equ	0xFE1
  1034                           
  1035 ;; *************** function _startPong *****************
  1036 ;; Defined at:
  1037 ;;		line 59 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  counter         2  177[BANK1 ] unsigned int 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1051 ;;      Params:         0       0       0       0       0       0       0
  1052 ;;      Locals:         0       0       2       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0
  1054 ;;      Totals:         0       0       2       0       0       0       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    8
  1058 ;; This function calls:
  1059 ;;		_drawSymbol
  1060 ;;		_refresh
  1061 ;;		_turnAllOff
  1062 ;; This function is called by:
  1063 ;;		_initializePong
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text2
  1068  000C24                     __ptext2:
  1069                           	opt stack 0
  1070  000C24                     _startPong:
  1071                           	opt stack 21
  1072                           
  1073                           ;main.c: 61: _speed = 150;
  1074                           
  1075                           ;incstack = 0
  1076  000C24  0E00               	movlw	0
  1077  000C26  0101               	movlb	1	; () banked
  1078  000C28  6FC4               	movwf	(__speed+1)& (0+255),b
  1079  000C2A  0E96               	movlw	150
  1080  000C2C  6FC3               	movwf	__speed& (0+255),b
  1081                           
  1082                           ; BSR set to: 1
  1083                           ;main.c: 64: turnAllOff();
  1084  000C2E  ECB5  F006         	call	_turnAllOff	;wreg free
  1085                           
  1086                           ;main.c: 65: drawSymbol(_p1.lives, 0);
  1087  000C32  0E00               	movlw	0
  1088  000C34  0101               	movlb	1	; () banked
  1089  000C36  6F25               	movwf	drawSymbol@offSetX& (0+255),b
  1090  000C38  0101               	movlb	1	; () banked
  1091  000C3A  51C9               	movf	(__p1+4)& (0+255),w,b
  1092  000C3C  EC0D  F000         	call	_drawSymbol
  1093                           
  1094                           ;main.c: 66: drawSymbol(_p2.lives, 8);
  1095  000C40  0E08               	movlw	8
  1096  000C42  0101               	movlb	1	; () banked
  1097  000C44  6F25               	movwf	drawSymbol@offSetX& (0+255),b
  1098  000C46  0101               	movlb	1	; () banked
  1099  000C48  51CE               	movf	(__p2+4)& (0+255),w,b
  1100  000C4A  EC0D  F000         	call	_drawSymbol
  1101                           
  1102                           ;main.c: 67: for(unsigned int counter = 0; counter < 800; counter ++)
  1103  000C4E  0E00               	movlw	0
  1104  000C50  0101               	movlb	1	; () banked
  1105  000C52  6FB2               	movwf	(startPong@counter+1)& (0+255),b
  1106  000C54  0E00               	movlw	0
  1107  000C56  6FB1               	movwf	startPong@counter& (0+255),b
  1108  000C58                     l2646:
  1109                           
  1110                           ; BSR set to: 1
  1111  000C58  0E20               	movlw	32
  1112  000C5A  0101               	movlb	1	; () banked
  1113  000C5C  5DB1               	subwf	startPong@counter& (0+255),w,b
  1114  000C5E  0E03               	movlw	3
  1115  000C60  0101               	movlb	1	; () banked
  1116  000C62  59B2               	subwfb	(startPong@counter+1)& (0+255),w,b
  1117  000C64  B0D8               	btfsc	status,0,c
  1118  000C66  D006               	goto	l2656
  1119                           
  1120                           ; BSR set to: 1
  1121                           ;main.c: 68: {
  1122                           ;main.c: 69: refresh();
  1123                           
  1124                           ; BSR set to: 1
  1125                           
  1126                           ; BSR set to: 1
  1127  000C68  EC04  F005         	call	_refresh	;wreg free
  1128  000C6C  0101               	movlb	1	; () banked
  1129  000C6E  4BB1               	infsnz	startPong@counter& (0+255),f,b
  1130  000C70  2BB2               	incf	(startPong@counter+1)& (0+255),f,b
  1131  000C72  D7F2               	goto	l2646
  1132  000C74                     l2656:
  1133                           
  1134                           ; BSR set to: 1
  1135                           ;main.c: 70: }
  1136                           ;main.c: 71: turnAllOff();
  1137  000C74  ECB5  F006         	call	_turnAllOff	;wreg free
  1138                           
  1139                           ;main.c: 76: _ball.bDirection = 3;
  1140  000C78  0E03               	movlw	3
  1141  000C7A  0101               	movlb	1	; () banked
  1142  000C7C  6FD1               	movwf	(__ball+2)& (0+255),b
  1143                           
  1144                           ; BSR set to: 1
  1145                           ;main.c: 78: _ball.bPos[0] = 2;
  1146  000C7E  0E02               	movlw	2
  1147  000C80  0101               	movlb	1	; () banked
  1148  000C82  6FCF               	movwf	__ball& (0+255),b
  1149                           
  1150                           ; BSR set to: 1
  1151                           ;main.c: 80: _ball.bPos[1] = 4;
  1152  000C84  0E04               	movlw	4
  1153  000C86  0101               	movlb	1	; () banked
  1154  000C88  6FD0               	movwf	(__ball+1)& (0+255),b
  1155                           
  1156                           ; BSR set to: 1
  1157                           ;main.c: 83: _nextPos[0] = _ball.bPos[0];
  1158  000C8A  C1CF  F1D2         	movff	__ball,__nextPos
  1159                           
  1160                           ; BSR set to: 1
  1161                           ;main.c: 84: _nextPos[1] = _ball.bPos[1];
  1162  000C8E  C1D0  F1D3         	movff	__ball+1,__nextPos+1
  1163                           
  1164                           ; BSR set to: 1
  1165  000C92  0012               	return		;funcret
  1166  000C94                     __end_of_startPong:
  1167                           	opt stack 0
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           postdec1	equ	0xFE5
  1175                           fsr1l	equ	0xFE1
  1176                           status	equ	0xFD8
  1177                           
  1178 ;; *************** function _refresh *****************
  1179 ;; Defined at:
  1180 ;;		line 177 in file "Source/LED-API.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  theRow          1   40[BANK1 ] unsigned char 
  1185 ;;  theCol          1   39[BANK1 ] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1195 ;;      Params:         0       0       0       0       0       0       0
  1196 ;;      Locals:         0       0       2       0       0       0       0
  1197 ;;      Temps:          0       0       3       0       0       0       0
  1198 ;;      Totals:         0       0       5       0       0       0       0
  1199 ;;Total ram usage:        5 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    7
  1202 ;; This function calls:
  1203 ;;		_allOff
  1204 ;;		_setColHigh
  1205 ;;		_setRowHigh
  1206 ;; This function is called by:
  1207 ;;		_startPong
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text3
  1213  000A08                     __ptext3:
  1214                           	opt stack 0
  1215  000A08                     _refresh:
  1216                           	opt stack 23
  1217                           
  1218                           ;LED-API.c: 179: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  1219                           
  1220                           ; BSR set to: 1
  1221                           ;incstack = 0
  1222  000A08  0E00               	movlw	0
  1223  000A0A  0101               	movlb	1	; () banked
  1224  000A0C  6F27               	movwf	refresh@theCol& (0+255),b
  1225  000A0E                     l1938:
  1226                           
  1227                           ; BSR set to: 1
  1228  000A0E  0E07               	movlw	7
  1229  000A10  0101               	movlb	1	; () banked
  1230  000A12  6527               	cpfsgt	refresh@theCol& (0+255),b
  1231  000A14  D001               	goto	l1942
  1232  000A16  0012               	return	
  1233  000A18                     l1942:
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;LED-API.c: 181: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  1237  000A18  0E00               	movlw	0
  1238  000A1A  0101               	movlb	1	; () banked
  1239  000A1C  6F28               	movwf	refresh@theRow& (0+255),b
  1240  000A1E                     l1944:
  1241                           
  1242                           ; BSR set to: 1
  1243  000A1E  0E0F               	movlw	15
  1244  000A20  0101               	movlb	1	; () banked
  1245  000A22  6528               	cpfsgt	refresh@theRow& (0+255),b
  1246  000A24  D001               	goto	l1948
  1247  000A26  D024               	goto	l1956
  1248  000A28                     l1948:
  1249                           
  1250                           ; BSR set to: 1
  1251                           ;LED-API.c: 183: if (pixels[theCol][theRow] == 1)
  1252  000A28  0101               	movlb	1	; () banked
  1253  000A2A  5127               	movf	refresh@theCol& (0+255),w,b
  1254  000A2C  0D10               	mullw	16
  1255  000A2E  0E00               	movlw	low _pixels
  1256  000A30  0101               	movlb	1	; () banked
  1257  000A32  6F24               	movwf	??_refresh& (0+255),b
  1258  000A34  0E03               	movlw	high _pixels
  1259  000A36  0101               	movlb	1	; () banked
  1260  000A38  6F25               	movwf	(??_refresh+1)& (0+255),b
  1261  000A3A  50F3               	movf	prodl,w,c
  1262  000A3C  0101               	movlb	1	; () banked
  1263  000A3E  2724               	addwf	??_refresh& (0+255),f,b
  1264  000A40  50F4               	movf	prodh,w,c
  1265  000A42  0101               	movlb	1	; () banked
  1266  000A44  2325               	addwfc	(??_refresh+1)& (0+255),f,b
  1267  000A46  0101               	movlb	1	; () banked
  1268  000A48  5128               	movf	refresh@theRow& (0+255),w,b
  1269  000A4A  0D01               	mullw	1
  1270  000A4C  50F3               	movf	prodl,w,c
  1271  000A4E  0101               	movlb	1	; () banked
  1272  000A50  2524               	addwf	??_refresh& (0+255),w,b
  1273  000A52  6ED9               	movwf	fsr2l,c
  1274  000A54  50F4               	movf	prodh,w,c
  1275  000A56  0101               	movlb	1	; () banked
  1276  000A58  2125               	addwfc	(??_refresh+1)& (0+255),w,b
  1277  000A5A  6EDA               	movwf	fsr2h,c
  1278  000A5C  04DE               	decf	postinc2,w,c
  1279  000A5E  A4D8               	btfss	status,2,c
  1280  000A60  D004               	goto	l1952
  1281                           
  1282                           ; BSR set to: 1
  1283                           ;LED-API.c: 184: setRowHigh(theRow);
  1284  000A62  0101               	movlb	1	; () banked
  1285  000A64  5128               	movf	refresh@theRow& (0+255),w,b
  1286  000A66  ECE7  F006         	call	_setRowHigh
  1287  000A6A                     l1952:
  1288  000A6A  0101               	movlb	1	; () banked
  1289  000A6C  2B28               	incf	refresh@theRow& (0+255),f,b
  1290  000A6E  D7D7               	goto	l1944
  1291  000A70                     l1956:
  1292                           
  1293                           ; BSR set to: 1
  1294                           ;LED-API.c: 185: }
  1295                           ;LED-API.c: 189: setColHigh(theCol);
  1296  000A70  0101               	movlb	1	; () banked
  1297  000A72  5127               	movf	refresh@theCol& (0+255),w,b
  1298  000A74  EC35  F008         	call	_setColHigh
  1299                           
  1300                           ;LED-API.c: 190: _delay((unsigned long)((500)*(32000000/4000000.0)));
  1301  000A78  0E06               	movlw	6
  1302  000A7A  0101               	movlb	1	; () banked
  1303  000A7C  6F24               	movwf	??_refresh& (0+255),b
  1304  000A7E  0E30               	movlw	48
  1305  000A80                     u2957:
  1306  000A80  2EE8               	decfsz	wreg,f,c
  1307  000A82  D7FE               	goto	u2957
  1308  000A84  2F24               	decfsz	??_refresh& (0+255),f,b
  1309  000A86  D7FC               	goto	u2957
  1310  000A88  D000               	nop2	
  1311                           
  1312                           ;LED-API.c: 191: allOff();
  1313  000A8A  EC8C  F008         	call	_allOff	;wreg free
  1314  000A8E  0101               	movlb	1	; () banked
  1315  000A90  2B27               	incf	refresh@theCol& (0+255),f,b
  1316  000A92  D7BD               	goto	l1938
  1317  000A94                     __end_of_refresh:
  1318                           	opt stack 0
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           prodh	equ	0xFF4
  1324                           prodl	equ	0xFF3
  1325                           postinc0	equ	0xFEE
  1326                           wreg	equ	0xFE8
  1327                           postdec1	equ	0xFE5
  1328                           fsr1l	equ	0xFE1
  1329                           postinc2	equ	0xFDE
  1330                           fsr2h	equ	0xFDA
  1331                           fsr2l	equ	0xFD9
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function _setRowHigh *****************
  1335 ;; Defined at:
  1336 ;;		line 24 in file "Source/LED-API.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  row             1    wreg     unsigned char 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  row             1   35[BANK1 ] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1350 ;;      Params:         0       0       0       0       0       0       0
  1351 ;;      Locals:         0       0       1       0       0       0       0
  1352 ;;      Temps:          0       0       2       0       0       0       0
  1353 ;;      Totals:         0       0       3       0       0       0       0
  1354 ;;Total ram usage:        3 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    6
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_refresh
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text4
  1365  000DCE                     __ptext4:
  1366                           	opt stack 0
  1367  000DCE                     _setRowHigh:
  1368                           	opt stack 23
  1369                           
  1370                           ; BSR set to: 1
  1371                           ;incstack = 0
  1372                           ;setRowHigh@row stored from wreg
  1373  000DCE  0101               	movlb	1	; () banked
  1374  000DD0  6F23               	movwf	setRowHigh@row& (0+255),b
  1375                           
  1376                           ;LED-API.c: 25: if(row < 8)
  1377  000DD2  0E08               	movlw	8
  1378  000DD4  0101               	movlb	1	; () banked
  1379  000DD6  6123               	cpfslt	setRowHigh@row& (0+255),b
  1380  000DD8  D012               	goto	l1668
  1381                           
  1382                           ; BSR set to: 1
  1383                           ;LED-API.c: 26: LATC |= (1 << row);
  1384  000DDA  C123  F121         	movff	setRowHigh@row,??_setRowHigh
  1385  000DDE  0E01               	movlw	1
  1386  000DE0  0101               	movlb	1	; () banked
  1387  000DE2  6F22               	movwf	(??_setRowHigh+1)& (0+255),b
  1388  000DE4  0101               	movlb	1	; () banked
  1389  000DE6  2B21               	incf	??_setRowHigh& (0+255),f,b
  1390  000DE8  D003               	goto	u1204
  1391  000DEA                     u1205:
  1392  000DEA  0101               	movlb	1	; () banked
  1393  000DEC  90D8               	bcf	status,0,c
  1394  000DEE  3722               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1395  000DF0                     u1204:
  1396  000DF0  0101               	movlb	1	; () banked
  1397  000DF2  2F21               	decfsz	??_setRowHigh& (0+255),f,b
  1398  000DF4  D7FA               	goto	u1205
  1399  000DF6  0101               	movlb	1	; () banked
  1400  000DF8  5122               	movf	(??_setRowHigh+1)& (0+255),w,b
  1401  000DFA  128B               	iorwf	3979,f,c	;volatile
  1402  000DFC  0012               	return	
  1403  000DFE                     l1668:
  1404                           
  1405                           ; BSR set to: 1
  1406                           ;LED-API.c: 27: else
  1407                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  1408  000DFE  C123  F121         	movff	setRowHigh@row,??_setRowHigh
  1409  000E02  0EF8               	movlw	-8
  1410  000E04  0101               	movlb	1	; () banked
  1411  000E06  2721               	addwf	??_setRowHigh& (0+255),f,b
  1412  000E08  0E01               	movlw	1
  1413  000E0A  0101               	movlb	1	; () banked
  1414  000E0C  6F22               	movwf	(??_setRowHigh+1)& (0+255),b
  1415  000E0E  0101               	movlb	1	; () banked
  1416  000E10  2B21               	incf	??_setRowHigh& (0+255),f,b
  1417  000E12  D003               	goto	u1214
  1418  000E14                     u1215:
  1419  000E14  0101               	movlb	1	; () banked
  1420  000E16  90D8               	bcf	status,0,c
  1421  000E18  3722               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1422  000E1A                     u1214:
  1423  000E1A  0101               	movlb	1	; () banked
  1424  000E1C  2F21               	decfsz	??_setRowHigh& (0+255),f,b
  1425  000E1E  D7FA               	goto	u1215
  1426  000E20  0101               	movlb	1	; () banked
  1427  000E22  5122               	movf	(??_setRowHigh+1)& (0+255),w,b
  1428  000E24  128C               	iorwf	3980,f,c	;volatile
  1429  000E26  0012               	return	
  1430  000E28                     __end_of_setRowHigh:
  1431                           	opt stack 0
  1432                           tblptru	equ	0xFF8
  1433                           tblptrh	equ	0xFF7
  1434                           tblptrl	equ	0xFF6
  1435                           tablat	equ	0xFF5
  1436                           prodh	equ	0xFF4
  1437                           prodl	equ	0xFF3
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           postdec1	equ	0xFE5
  1441                           fsr1l	equ	0xFE1
  1442                           postinc2	equ	0xFDE
  1443                           fsr2h	equ	0xFDA
  1444                           fsr2l	equ	0xFD9
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _setColHigh *****************
  1448 ;; Defined at:
  1449 ;;		line 20 in file "Source/LED-API.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  column          1    wreg     unsigned char 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  column          1   35[BANK1 ] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1463 ;;      Params:         0       0       0       0       0       0       0
  1464 ;;      Locals:         0       0       1       0       0       0       0
  1465 ;;      Temps:          0       0       2       0       0       0       0
  1466 ;;      Totals:         0       0       3       0       0       0       0
  1467 ;;Total ram usage:        3 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    6
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_refresh
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text5
  1478  00106A                     __ptext5:
  1479                           	opt stack 0
  1480  00106A                     _setColHigh:
  1481                           	opt stack 23
  1482                           
  1483                           ; BSR set to: 1
  1484                           ;incstack = 0
  1485                           ;setColHigh@column stored from wreg
  1486  00106A  0101               	movlb	1	; () banked
  1487  00106C  6F23               	movwf	setColHigh@column& (0+255),b
  1488                           
  1489                           ;LED-API.c: 21: LATA |= (1 << column);
  1490  00106E  C123  F121         	movff	setColHigh@column,??_setColHigh
  1491  001072  0E01               	movlw	1
  1492  001074  0101               	movlb	1	; () banked
  1493  001076  6F22               	movwf	(??_setColHigh+1)& (0+255),b
  1494  001078  0101               	movlb	1	; () banked
  1495  00107A  2B21               	incf	??_setColHigh& (0+255),f,b
  1496  00107C  D003               	goto	u1184
  1497  00107E                     u1185:
  1498  00107E  0101               	movlb	1	; () banked
  1499  001080  90D8               	bcf	status,0,c
  1500  001082  3722               	rlcf	(??_setColHigh+1)& (0+255),f,b
  1501  001084                     u1184:
  1502  001084  0101               	movlb	1	; () banked
  1503  001086  2F21               	decfsz	??_setColHigh& (0+255),f,b
  1504  001088  D7FA               	goto	u1185
  1505  00108A  0101               	movlb	1	; () banked
  1506  00108C  5122               	movf	(??_setColHigh+1)& (0+255),w,b
  1507  00108E  1289               	iorwf	3977,f,c	;volatile
  1508                           
  1509                           ; BSR set to: 1
  1510  001090  0012               	return		;funcret
  1511  001092                     __end_of_setColHigh:
  1512                           	opt stack 0
  1513                           tblptru	equ	0xFF8
  1514                           tblptrh	equ	0xFF7
  1515                           tblptrl	equ	0xFF6
  1516                           tablat	equ	0xFF5
  1517                           prodh	equ	0xFF4
  1518                           prodl	equ	0xFF3
  1519                           postinc0	equ	0xFEE
  1520                           wreg	equ	0xFE8
  1521                           postdec1	equ	0xFE5
  1522                           fsr1l	equ	0xFE1
  1523                           postinc2	equ	0xFDE
  1524                           fsr2h	equ	0xFDA
  1525                           fsr2l	equ	0xFD9
  1526                           status	equ	0xFD8
  1527                           
  1528 ;; *************** function _allOff *****************
  1529 ;; Defined at:
  1530 ;;		line 171 in file "Source/LED-API.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1544 ;;      Params:         0       0       0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    6
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_refresh
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text6
  1559  001118                     __ptext6:
  1560                           	opt stack 0
  1561  001118                     _allOff:
  1562                           	opt stack 23
  1563                           
  1564                           ;LED-API.c: 172: LATA = 0;
  1565                           
  1566                           ; BSR set to: 1
  1567                           ;incstack = 0
  1568  001118  0E00               	movlw	0
  1569  00111A  6E89               	movwf	3977,c	;volatile
  1570                           
  1571                           ;LED-API.c: 173: LATC = 0;
  1572  00111C  0E00               	movlw	0
  1573  00111E  6E8B               	movwf	3979,c	;volatile
  1574                           
  1575                           ;LED-API.c: 174: LATD = 0;
  1576  001120  0E00               	movlw	0
  1577  001122  6E8C               	movwf	3980,c	;volatile
  1578  001124  0012               	return		;funcret
  1579  001126                     __end_of_allOff:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           prodh	equ	0xFF4
  1586                           prodl	equ	0xFF3
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           postdec1	equ	0xFE5
  1590                           fsr1l	equ	0xFE1
  1591                           postinc2	equ	0xFDE
  1592                           fsr2h	equ	0xFDA
  1593                           fsr2l	equ	0xFD9
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _drawSymbol *****************
  1597 ;; Defined at:
  1598 ;;		line 85 in file "Source/LED-API.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  chosenSymbol    1    wreg     unsigned char 
  1601 ;;  offSetX         1   37[BANK1 ] unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  chosenSymbol    1  174[BANK1 ] unsigned char 
  1604 ;;  i               1   86[BANK2 ] unsigned char 
  1605 ;;  i               1   85[BANK2 ] unsigned char 
  1606 ;;  i               1   84[BANK2 ] unsigned char 
  1607 ;;  i               1   83[BANK2 ] unsigned char 
  1608 ;;  i               1   82[BANK2 ] unsigned char 
  1609 ;;  i               1  176[BANK1 ] unsigned char 
  1610 ;;  i               1  175[BANK1 ] unsigned char 
  1611 ;;  symbolGo       68  106[BANK1 ] unsigned char [2][34]
  1612 ;;  symbolPlay     68   38[BANK1 ] unsigned char [2][34]
  1613 ;;  symbolThree    30   30[BANK2 ] unsigned char [2][15]
  1614 ;;  symbolTwo      30    0[BANK2 ] unsigned char [2][15]
  1615 ;;  symbolOne      22   60[BANK2 ] unsigned char [2][11]
  1616 ;;  symbolArrowR   16   16[BANK3 ] unsigned char [2][8]
  1617 ;;  symbolArrowL   16    0[BANK3 ] unsigned char [2][8]
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1627 ;;      Params:         0       0       1       0       0       0       0
  1628 ;;      Locals:         0       0     139      87      32       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0
  1630 ;;      Totals:         0       0     140      87      32       0       0
  1631 ;;Total ram usage:      259 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    7
  1634 ;; This function calls:
  1635 ;;		_on
  1636 ;; This function is called by:
  1637 ;;		_startPong
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text7
  1642  00001A                     __ptext7:
  1643                           	opt stack 0
  1644  00001A                     _drawSymbol:
  1645                           	opt stack 21
  1646                           
  1647                           ;incstack = 0
  1648                           ;drawSymbol@chosenSymbol stored from wreg
  1649  00001A  0101               	movlb	1	; () banked
  1650  00001C  6FAE               	movwf	drawSymbol@chosenSymbol& (0+255),b
  1651                           
  1652                           ;LED-API.c: 87: char symbolOne[11][2] = {{2,0},{3,0}, {4,0}, {3,1}, {3,2}, {3,3}, {3,4},
      +                           {3,5}, {3,6}, {3,7}, {4,6}};
  1653  00001E  EE22  F080         	lfsr	2,drawSymbol@F3224
  1654  000022  EE12  F0E2         	lfsr	1,drawSymbol@symbolOne
  1655  000026  0E15               	movlw	21
  1656  000028                     u2471:
  1657  000028  CFDB FFE3          	movff	plusw2,plusw1
  1658  00002C  06E8               	decf	wreg,f,c
  1659  00002E  E2FC               	bc	u2471
  1660                           
  1661                           ;LED-API.c: 88: char symbolTwo[15][2] = {{1,0}, {2,0}, {3,0}, {4,0}, {5,0}, {5,1}, {4,2}
      +                          , {3,3}, {2,4}, {1,5}, {1,6}, {5,6}, {2,7}, {3,7}, {4,7}};
  1662  000030  EE22  F044         	lfsr	2,drawSymbol@F3227
  1663  000034  EE12  F0A6         	lfsr	1,drawSymbol@symbolTwo
  1664  000038  0E1D               	movlw	29
  1665  00003A                     u2481:
  1666  00003A  CFDB FFE3          	movff	plusw2,plusw1
  1667  00003E  06E8               	decf	wreg,f,c
  1668  000040  E2FC               	bc	u2481
  1669                           
  1670                           ;LED-API.c: 89: char symbolThree[15][2] = {{2,0}, {3,0}, {4,0}, {5,1}, {1,1}, {1,2}, {1,
      +                          3}, {2,4}, {3,4}, {1,5}, {1,6}, {2,7}, {3,7}, {4,7}, {5,6}};
  1671  000042  EE22  F062         	lfsr	2,drawSymbol@F3230
  1672  000046  EE12  F0C4         	lfsr	1,drawSymbol@symbolThree
  1673  00004A  0E1D               	movlw	29
  1674  00004C                     u2491:
  1675  00004C  CFDB FFE3          	movff	plusw2,plusw1
  1676  000050  06E8               	decf	wreg,f,c
  1677  000052  E2FC               	bc	u2491
  1678                           
  1679                           ;LED-API.c: 91: char symbolPlay[34][2] = {
  1680                           ;LED-API.c: 92: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  1681                           ;LED-API.c: 93: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  1682                           ;LED-API.c: 94: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  1683                           ;LED-API.c: 95: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  1684  000054  EE22  F000         	lfsr	2,drawSymbol@F3233
  1685  000058  EE11  F026         	lfsr	1,drawSymbol@symbolPlay
  1686  00005C  0E43               	movlw	67
  1687  00005E                     u2501:
  1688  00005E  CFDB FFE3          	movff	plusw2,plusw1
  1689  000062  06E8               	decf	wreg,f,c
  1690  000064  E2FC               	bc	u2501
  1691                           
  1692                           ;LED-API.c: 97: char symbolGo[34][2] = {
  1693                           ;LED-API.c: 98: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0},
      +                          {5,0},{6,1},{5,2},{4,2},
  1694                           ;LED-API.c: 99: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},{
      +                          13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  1695  000066  EE23  F080         	lfsr	2,drawSymbol@F3236
  1696  00006A  EE11  F06A         	lfsr	1,drawSymbol@symbolGo
  1697  00006E  0E43               	movlw	67
  1698  000070                     u2511:
  1699  000070  CFDB FFE3          	movff	plusw2,plusw1
  1700  000074  06E8               	decf	wreg,f,c
  1701  000076  E2FC               	bc	u2511
  1702                           
  1703                           ;LED-API.c: 101: char symbolArrowLeft[8][2] = {{3,0}, {3,7}, {4,1}, {4,6}, {5,2}, {5,5},
      +                           {6,3}, {6,4}};
  1704  000078  EE21  F0B3         	lfsr	2,drawSymbol@F3239
  1705  00007C  EE13  F0C4         	lfsr	1,drawSymbol@symbolArrowLeft
  1706  000080  0E0F               	movlw	15
  1707  000082                     u2521:
  1708  000082  CFDB FFE3          	movff	plusw2,plusw1
  1709  000086  06E8               	decf	wreg,f,c
  1710  000088  E2FC               	bc	u2521
  1711                           
  1712                           ;LED-API.c: 102: char symbolArrowRight[8][2] = {{4,0}, {3,1}, {2,2}, {1,3}, {1,4}, {2,5}
      +                          , {3,6}, {4,7}};
  1713  00008A  EE22  F096         	lfsr	2,drawSymbol@F3242
  1714  00008E  EE13  F0D4         	lfsr	1,drawSymbol@symbolArrowRight
  1715  000092  0E0F               	movlw	15
  1716  000094                     u2531:
  1717  000094  CFDB FFE3          	movff	plusw2,plusw1
  1718  000098  06E8               	decf	wreg,f,c
  1719  00009A  E2FC               	bc	u2531
  1720                           
  1721                           ;LED-API.c: 104: switch(chosenSymbol)
  1722  00009C  D11D               	goto	l2602
  1723  00009E                     l2516:
  1724                           
  1725                           ;LED-API.c: 109: for(unsigned char i = 0; i < 11; i++)
  1726  00009E  0E00               	movlw	0
  1727  0000A0  0101               	movlb	1	; () banked
  1728  0000A2  6FAF               	movwf	drawSymbol@i& (0+255),b
  1729  0000A4                     l2518:
  1730                           
  1731                           ; BSR set to: 1
  1732  0000A4  0E0A               	movlw	10
  1733  0000A6  0101               	movlb	1	; () banked
  1734  0000A8  65AF               	cpfsgt	drawSymbol@i& (0+255),b
  1735  0000AA  D001               	goto	l2522
  1736  0000AC  0012               	return	
  1737  0000AE                     l2522:
  1738                           
  1739                           ; BSR set to: 1
  1740                           ;LED-API.c: 110: {
  1741                           ;LED-API.c: 111: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  1742  0000AE  0101               	movlb	1	; () banked
  1743  0000B0  51AF               	movf	drawSymbol@i& (0+255),w,b
  1744  0000B2  0D02               	mullw	2
  1745  0000B4  0EE2               	movlw	low drawSymbol@symbolOne
  1746  0000B6  24F3               	addwf	prodl,w,c
  1747  0000B8  6ED9               	movwf	fsr2l,c
  1748  0000BA  0E02               	movlw	high drawSymbol@symbolOne
  1749  0000BC  20F4               	addwfc	prodh,w,c
  1750  0000BE  6EDA               	movwf	fsr2h,c
  1751  0000C0  50DF               	movf	indf2,w,c
  1752  0000C2  0101               	movlb	1	; () banked
  1753  0000C4  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  1754  0000C6  0101               	movlb	1	; () banked
  1755  0000C8  6F21               	movwf	on@row& (0+255),b
  1756  0000CA  0101               	movlb	1	; () banked
  1757  0000CC  51AF               	movf	drawSymbol@i& (0+255),w,b
  1758  0000CE  0D02               	mullw	2
  1759  0000D0  0E01               	movlw	1
  1760  0000D2  26F3               	addwf	prodl,f,c
  1761  0000D4  0E00               	movlw	0
  1762  0000D6  22F4               	addwfc	prodh,f,c
  1763  0000D8  0EE2               	movlw	low drawSymbol@symbolOne
  1764  0000DA  24F3               	addwf	prodl,w,c
  1765  0000DC  6ED9               	movwf	fsr2l,c
  1766  0000DE  0E02               	movlw	high drawSymbol@symbolOne
  1767  0000E0  20F4               	addwfc	prodh,w,c
  1768  0000E2  6EDA               	movwf	fsr2h,c
  1769  0000E4  50DF               	movf	indf2,w,c
  1770  0000E6  EC41  F007         	call	_on
  1771  0000EA  0101               	movlb	1	; () banked
  1772  0000EC  2BAF               	incf	drawSymbol@i& (0+255),f,b
  1773  0000EE  D7DA               	goto	l2518
  1774  0000F0                     l2528:
  1775                           
  1776                           ; BSR set to: 1
  1777                           ;LED-API.c: 117: for(unsigned char i = 0; i < 15; i++)
  1778  0000F0  0E00               	movlw	0
  1779  0000F2  0101               	movlb	1	; () banked
  1780  0000F4  6FB0               	movwf	drawSymbol@i_82& (0+255),b
  1781  0000F6                     l2530:
  1782                           
  1783                           ; BSR set to: 1
  1784  0000F6  0E0E               	movlw	14
  1785  0000F8  0101               	movlb	1	; () banked
  1786  0000FA  65B0               	cpfsgt	drawSymbol@i_82& (0+255),b
  1787  0000FC  D001               	goto	l2534
  1788  0000FE  0012               	return	
  1789  000100                     l2534:
  1790                           
  1791                           ; BSR set to: 1
  1792                           ;LED-API.c: 118: {
  1793                           ;LED-API.c: 119: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  1794  000100  0101               	movlb	1	; () banked
  1795  000102  51B0               	movf	drawSymbol@i_82& (0+255),w,b
  1796  000104  0D02               	mullw	2
  1797  000106  0EA6               	movlw	low drawSymbol@symbolTwo
  1798  000108  24F3               	addwf	prodl,w,c
  1799  00010A  6ED9               	movwf	fsr2l,c
  1800  00010C  0E02               	movlw	high drawSymbol@symbolTwo
  1801  00010E  20F4               	addwfc	prodh,w,c
  1802  000110  6EDA               	movwf	fsr2h,c
  1803  000112  50DF               	movf	indf2,w,c
  1804  000114  0101               	movlb	1	; () banked
  1805  000116  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  1806  000118  0101               	movlb	1	; () banked
  1807  00011A  6F21               	movwf	on@row& (0+255),b
  1808  00011C  0101               	movlb	1	; () banked
  1809  00011E  51B0               	movf	drawSymbol@i_82& (0+255),w,b
  1810  000120  0D02               	mullw	2
  1811  000122  0E01               	movlw	1
  1812  000124  26F3               	addwf	prodl,f,c
  1813  000126  0E00               	movlw	0
  1814  000128  22F4               	addwfc	prodh,f,c
  1815  00012A  0EA6               	movlw	low drawSymbol@symbolTwo
  1816  00012C  24F3               	addwf	prodl,w,c
  1817  00012E  6ED9               	movwf	fsr2l,c
  1818  000130  0E02               	movlw	high drawSymbol@symbolTwo
  1819  000132  20F4               	addwfc	prodh,w,c
  1820  000134  6EDA               	movwf	fsr2h,c
  1821  000136  50DF               	movf	indf2,w,c
  1822  000138  EC41  F007         	call	_on
  1823  00013C  0101               	movlb	1	; () banked
  1824  00013E  2BB0               	incf	drawSymbol@i_82& (0+255),f,b
  1825  000140  D7DA               	goto	l2530
  1826  000142                     l2540:
  1827                           
  1828                           ; BSR set to: 1
  1829                           ;LED-API.c: 125: for(unsigned char i = 0; i < 15; i++)
  1830  000142  0E00               	movlw	0
  1831  000144  0102               	movlb	2	; () banked
  1832  000146  6FF8               	movwf	drawSymbol@i_83& (0+255),b
  1833  000148                     l2542:
  1834                           
  1835                           ; BSR set to: 2
  1836  000148  0E0E               	movlw	14
  1837  00014A  0102               	movlb	2	; () banked
  1838  00014C  65F8               	cpfsgt	drawSymbol@i_83& (0+255),b
  1839  00014E  D001               	goto	l2546
  1840  000150  0012               	return	
  1841  000152                     l2546:
  1842                           
  1843                           ; BSR set to: 2
  1844                           ;LED-API.c: 126: {
  1845                           ;LED-API.c: 127: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  1846  000152  0102               	movlb	2	; () banked
  1847  000154  51F8               	movf	drawSymbol@i_83& (0+255),w,b
  1848  000156  0D02               	mullw	2
  1849  000158  0EC4               	movlw	low drawSymbol@symbolThree
  1850  00015A  24F3               	addwf	prodl,w,c
  1851  00015C  6ED9               	movwf	fsr2l,c
  1852  00015E  0E02               	movlw	high drawSymbol@symbolThree
  1853  000160  20F4               	addwfc	prodh,w,c
  1854  000162  6EDA               	movwf	fsr2h,c
  1855  000164  50DF               	movf	indf2,w,c
  1856  000166  0101               	movlb	1	; () banked
  1857  000168  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  1858  00016A  0101               	movlb	1	; () banked
  1859  00016C  6F21               	movwf	on@row& (0+255),b
  1860  00016E  0102               	movlb	2	; () banked
  1861  000170  51F8               	movf	drawSymbol@i_83& (0+255),w,b
  1862  000172  0D02               	mullw	2
  1863  000174  0E01               	movlw	1
  1864  000176  26F3               	addwf	prodl,f,c
  1865  000178  0E00               	movlw	0
  1866  00017A  22F4               	addwfc	prodh,f,c
  1867  00017C  0EC4               	movlw	low drawSymbol@symbolThree
  1868  00017E  24F3               	addwf	prodl,w,c
  1869  000180  6ED9               	movwf	fsr2l,c
  1870  000182  0E02               	movlw	high drawSymbol@symbolThree
  1871  000184  20F4               	addwfc	prodh,w,c
  1872  000186  6EDA               	movwf	fsr2h,c
  1873  000188  50DF               	movf	indf2,w,c
  1874  00018A  EC41  F007         	call	_on
  1875  00018E  0102               	movlb	2	; () banked
  1876  000190  2BF8               	incf	drawSymbol@i_83& (0+255),f,b
  1877  000192  D7DA               	goto	l2542
  1878  000194                     l2552:
  1879                           
  1880                           ;LED-API.c: 133: for(unsigned char i = 0; i < 34; i++)
  1881  000194  0E00               	movlw	0
  1882  000196  0102               	movlb	2	; () banked
  1883  000198  6FF9               	movwf	drawSymbol@i_84& (0+255),b
  1884  00019A                     l2554:
  1885                           
  1886                           ; BSR set to: 2
  1887  00019A  0E21               	movlw	33
  1888  00019C  0102               	movlb	2	; () banked
  1889  00019E  65F9               	cpfsgt	drawSymbol@i_84& (0+255),b
  1890  0001A0  D001               	goto	l2558
  1891  0001A2  0012               	return	
  1892  0001A4                     l2558:
  1893                           
  1894                           ; BSR set to: 2
  1895                           ;LED-API.c: 134: {
  1896                           ;LED-API.c: 135: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  1897  0001A4  0102               	movlb	2	; () banked
  1898  0001A6  51F9               	movf	drawSymbol@i_84& (0+255),w,b
  1899  0001A8  0D02               	mullw	2
  1900  0001AA  0E26               	movlw	low drawSymbol@symbolPlay
  1901  0001AC  24F3               	addwf	prodl,w,c
  1902  0001AE  6ED9               	movwf	fsr2l,c
  1903  0001B0  0E01               	movlw	high drawSymbol@symbolPlay
  1904  0001B2  20F4               	addwfc	prodh,w,c
  1905  0001B4  6EDA               	movwf	fsr2h,c
  1906  0001B6  50DF               	movf	indf2,w,c
  1907  0001B8  0101               	movlb	1	; () banked
  1908  0001BA  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  1909  0001BC  0101               	movlb	1	; () banked
  1910  0001BE  6F21               	movwf	on@row& (0+255),b
  1911  0001C0  0102               	movlb	2	; () banked
  1912  0001C2  51F9               	movf	drawSymbol@i_84& (0+255),w,b
  1913  0001C4  0D02               	mullw	2
  1914  0001C6  0E01               	movlw	1
  1915  0001C8  26F3               	addwf	prodl,f,c
  1916  0001CA  0E00               	movlw	0
  1917  0001CC  22F4               	addwfc	prodh,f,c
  1918  0001CE  0E26               	movlw	low drawSymbol@symbolPlay
  1919  0001D0  24F3               	addwf	prodl,w,c
  1920  0001D2  6ED9               	movwf	fsr2l,c
  1921  0001D4  0E01               	movlw	high drawSymbol@symbolPlay
  1922  0001D6  20F4               	addwfc	prodh,w,c
  1923  0001D8  6EDA               	movwf	fsr2h,c
  1924  0001DA  50DF               	movf	indf2,w,c
  1925  0001DC  EC41  F007         	call	_on
  1926  0001E0  0102               	movlb	2	; () banked
  1927  0001E2  2BF9               	incf	drawSymbol@i_84& (0+255),f,b
  1928  0001E4  D7DA               	goto	l2554
  1929  0001E6                     l2564:
  1930                           
  1931                           ;LED-API.c: 141: for(unsigned char i = 0; i < 34; i++)
  1932  0001E6  0E00               	movlw	0
  1933  0001E8  0102               	movlb	2	; () banked
  1934  0001EA  6FFA               	movwf	drawSymbol@i_85& (0+255),b
  1935  0001EC                     l2566:
  1936                           
  1937                           ; BSR set to: 2
  1938  0001EC  0E21               	movlw	33
  1939  0001EE  0102               	movlb	2	; () banked
  1940  0001F0  65FA               	cpfsgt	drawSymbol@i_85& (0+255),b
  1941  0001F2  D001               	goto	l2570
  1942  0001F4  0012               	return	
  1943  0001F6                     l2570:
  1944                           
  1945                           ; BSR set to: 2
  1946                           ;LED-API.c: 142: {
  1947                           ;LED-API.c: 143: on(symbolGo[i][1], symbolGo[i][0]);
  1948  0001F6  0102               	movlb	2	; () banked
  1949  0001F8  51FA               	movf	drawSymbol@i_85& (0+255),w,b
  1950  0001FA  0D02               	mullw	2
  1951  0001FC  0E6A               	movlw	low drawSymbol@symbolGo
  1952  0001FE  24F3               	addwf	prodl,w,c
  1953  000200  6ED9               	movwf	fsr2l,c
  1954  000202  0E01               	movlw	high drawSymbol@symbolGo
  1955  000204  20F4               	addwfc	prodh,w,c
  1956  000206  6EDA               	movwf	fsr2h,c
  1957  000208  50DF               	movf	indf2,w,c
  1958  00020A  0101               	movlb	1	; () banked
  1959  00020C  6F21               	movwf	on@row& (0+255),b
  1960  00020E  0102               	movlb	2	; () banked
  1961  000210  51FA               	movf	drawSymbol@i_85& (0+255),w,b
  1962  000212  0D02               	mullw	2
  1963  000214  0E01               	movlw	1
  1964  000216  26F3               	addwf	prodl,f,c
  1965  000218  0E00               	movlw	0
  1966  00021A  22F4               	addwfc	prodh,f,c
  1967  00021C  0E6A               	movlw	low drawSymbol@symbolGo
  1968  00021E  24F3               	addwf	prodl,w,c
  1969  000220  6ED9               	movwf	fsr2l,c
  1970  000222  0E01               	movlw	high drawSymbol@symbolGo
  1971  000224  20F4               	addwfc	prodh,w,c
  1972  000226  6EDA               	movwf	fsr2h,c
  1973  000228  50DF               	movf	indf2,w,c
  1974  00022A  EC41  F007         	call	_on
  1975  00022E  0102               	movlb	2	; () banked
  1976  000230  2BFA               	incf	drawSymbol@i_85& (0+255),f,b
  1977  000232  D7DC               	goto	l2566
  1978  000234                     l2576:
  1979                           
  1980                           ;LED-API.c: 147: for(unsigned char i = 0; i < 8; i++)
  1981  000234  0E00               	movlw	0
  1982  000236  0102               	movlb	2	; () banked
  1983  000238  6FFB               	movwf	drawSymbol@i_86& (0+255),b
  1984  00023A                     l2578:
  1985                           
  1986                           ; BSR set to: 2
  1987  00023A  0E07               	movlw	7
  1988  00023C  0102               	movlb	2	; () banked
  1989  00023E  65FB               	cpfsgt	drawSymbol@i_86& (0+255),b
  1990  000240  D001               	goto	l2582
  1991  000242  0012               	return	
  1992  000244                     l2582:
  1993                           
  1994                           ; BSR set to: 2
  1995                           ;LED-API.c: 148: {
  1996                           ;LED-API.c: 149: on(symbolArrowLeft[i][1], symbolArrowLeft[i][0] + offSetX);
  1997  000244  0102               	movlb	2	; () banked
  1998  000246  51FB               	movf	drawSymbol@i_86& (0+255),w,b
  1999  000248  0D02               	mullw	2
  2000  00024A  0EC4               	movlw	low drawSymbol@symbolArrowLeft
  2001  00024C  24F3               	addwf	prodl,w,c
  2002  00024E  6ED9               	movwf	fsr2l,c
  2003  000250  0E03               	movlw	high drawSymbol@symbolArrowLeft
  2004  000252  20F4               	addwfc	prodh,w,c
  2005  000254  6EDA               	movwf	fsr2h,c
  2006  000256  50DF               	movf	indf2,w,c
  2007  000258  0101               	movlb	1	; () banked
  2008  00025A  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  2009  00025C  0101               	movlb	1	; () banked
  2010  00025E  6F21               	movwf	on@row& (0+255),b
  2011  000260  0102               	movlb	2	; () banked
  2012  000262  51FB               	movf	drawSymbol@i_86& (0+255),w,b
  2013  000264  0D02               	mullw	2
  2014  000266  0E01               	movlw	1
  2015  000268  26F3               	addwf	prodl,f,c
  2016  00026A  0E00               	movlw	0
  2017  00026C  22F4               	addwfc	prodh,f,c
  2018  00026E  0EC4               	movlw	low drawSymbol@symbolArrowLeft
  2019  000270  24F3               	addwf	prodl,w,c
  2020  000272  6ED9               	movwf	fsr2l,c
  2021  000274  0E03               	movlw	high drawSymbol@symbolArrowLeft
  2022  000276  20F4               	addwfc	prodh,w,c
  2023  000278  6EDA               	movwf	fsr2h,c
  2024  00027A  50DF               	movf	indf2,w,c
  2025  00027C  EC41  F007         	call	_on
  2026  000280  0102               	movlb	2	; () banked
  2027  000282  2BFB               	incf	drawSymbol@i_86& (0+255),f,b
  2028  000284  D7DA               	goto	l2578
  2029  000286                     l2588:
  2030                           
  2031                           ;LED-API.c: 153: for(unsigned char i = 0; i < 8; i++)
  2032  000286  0E00               	movlw	0
  2033  000288  0102               	movlb	2	; () banked
  2034  00028A  6FFC               	movwf	drawSymbol@i_87& (0+255),b
  2035  00028C                     l2590:
  2036                           
  2037                           ; BSR set to: 2
  2038  00028C  0E07               	movlw	7
  2039  00028E  0102               	movlb	2	; () banked
  2040  000290  65FC               	cpfsgt	drawSymbol@i_87& (0+255),b
  2041  000292  D001               	goto	l2594
  2042  000294  0012               	return	
  2043  000296                     l2594:
  2044                           
  2045                           ; BSR set to: 2
  2046                           ;LED-API.c: 154: {
  2047                           ;LED-API.c: 155: on(symbolArrowRight[i][1], symbolArrowRight[i][0]+ offSetX);
  2048  000296  0102               	movlb	2	; () banked
  2049  000298  51FC               	movf	drawSymbol@i_87& (0+255),w,b
  2050  00029A  0D02               	mullw	2
  2051  00029C  0ED4               	movlw	low drawSymbol@symbolArrowRight
  2052  00029E  24F3               	addwf	prodl,w,c
  2053  0002A0  6ED9               	movwf	fsr2l,c
  2054  0002A2  0E03               	movlw	high drawSymbol@symbolArrowRight
  2055  0002A4  20F4               	addwfc	prodh,w,c
  2056  0002A6  6EDA               	movwf	fsr2h,c
  2057  0002A8  50DF               	movf	indf2,w,c
  2058  0002AA  0101               	movlb	1	; () banked
  2059  0002AC  2525               	addwf	drawSymbol@offSetX& (0+255),w,b
  2060  0002AE  0101               	movlb	1	; () banked
  2061  0002B0  6F21               	movwf	on@row& (0+255),b
  2062  0002B2  0102               	movlb	2	; () banked
  2063  0002B4  51FC               	movf	drawSymbol@i_87& (0+255),w,b
  2064  0002B6  0D02               	mullw	2
  2065  0002B8  0E01               	movlw	1
  2066  0002BA  26F3               	addwf	prodl,f,c
  2067  0002BC  0E00               	movlw	0
  2068  0002BE  22F4               	addwfc	prodh,f,c
  2069  0002C0  0ED4               	movlw	low drawSymbol@symbolArrowRight
  2070  0002C2  24F3               	addwf	prodl,w,c
  2071  0002C4  6ED9               	movwf	fsr2l,c
  2072  0002C6  0E03               	movlw	high drawSymbol@symbolArrowRight
  2073  0002C8  20F4               	addwfc	prodh,w,c
  2074  0002CA  6EDA               	movwf	fsr2h,c
  2075  0002CC  50DF               	movf	indf2,w,c
  2076  0002CE  EC41  F007         	call	_on
  2077  0002D2  0102               	movlb	2	; () banked
  2078  0002D4  2BFC               	incf	drawSymbol@i_87& (0+255),f,b
  2079  0002D6  D7DA               	goto	l2590
  2080  0002D8                     l2602:
  2081  0002D8  0101               	movlb	1	; () banked
  2082  0002DA  51AE               	movf	drawSymbol@chosenSymbol& (0+255),w,b
  2083                           
  2084                           ; Switch size 1, requested type "space"
  2085                           ; Number of cases is 7, Range of values is 1 to 7
  2086                           ; switch strategies available:
  2087                           ; Name         Instructions Cycles
  2088                           ; simple_byte           22    12 (average)
  2089                           ;	Chosen strategy is simple_byte
  2090  0002DC  0A01               	xorlw	1	; case 1
  2091  0002DE  B4D8               	btfsc	status,2,c
  2092  0002E0  D6DE               	goto	l2516
  2093  0002E2  0A03               	xorlw	3	; case 2
  2094  0002E4  B4D8               	btfsc	status,2,c
  2095  0002E6  D704               	goto	l2528
  2096  0002E8  0A01               	xorlw	1	; case 3
  2097  0002EA  B4D8               	btfsc	status,2,c
  2098  0002EC  D72A               	goto	l2540
  2099  0002EE  0A07               	xorlw	7	; case 4
  2100  0002F0  B4D8               	btfsc	status,2,c
  2101  0002F2  D750               	goto	l2552
  2102  0002F4  0A01               	xorlw	1	; case 5
  2103  0002F6  B4D8               	btfsc	status,2,c
  2104  0002F8  D776               	goto	l2564
  2105  0002FA  0A03               	xorlw	3	; case 6
  2106  0002FC  B4D8               	btfsc	status,2,c
  2107  0002FE  D79A               	goto	l2576
  2108  000300  0A01               	xorlw	1	; case 7
  2109  000302  A4D8               	btfss	status,2,c
  2110  000304  0012               	return	
  2111  000306  D7BF               	goto	l2588
  2112  000308                     __end_of_drawSymbol:
  2113                           	opt stack 0
  2114                           tblptru	equ	0xFF8
  2115                           tblptrh	equ	0xFF7
  2116                           tblptrl	equ	0xFF6
  2117                           tablat	equ	0xFF5
  2118                           prodh	equ	0xFF4
  2119                           prodl	equ	0xFF3
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           postdec1	equ	0xFE5
  2123                           plusw1	equ	0xFE3
  2124                           fsr1l	equ	0xFE1
  2125                           indf2	equ	0xFDF
  2126                           postinc2	equ	0xFDE
  2127                           plusw2	equ	0xFDB
  2128                           fsr2h	equ	0xFDA
  2129                           fsr2l	equ	0xFD9
  2130                           status	equ	0xFD8
  2131                           
  2132 ;; *************** function _on *****************
  2133 ;; Defined at:
  2134 ;;		line 43 in file "Source/LED-API.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  column          1    wreg     unsigned char 
  2137 ;;  row             1   33[BANK1 ] unsigned char 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  column          1   36[BANK1 ] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:         0       0       1       0       0       0       0
  2150 ;;      Locals:         0       0       1       0       0       0       0
  2151 ;;      Temps:          0       0       2       0       0       0       0
  2152 ;;      Totals:         0       0       4       0       0       0       0
  2153 ;;Total ram usage:        4 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    6
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_drawSymbol
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text8
  2164  000E82                     __ptext8:
  2165                           	opt stack 0
  2166  000E82                     _on:
  2167                           	opt stack 21
  2168                           
  2169                           ;incstack = 0
  2170                           ;on@column stored from wreg
  2171  000E82  0101               	movlb	1	; () banked
  2172  000E84  6F24               	movwf	on@column& (0+255),b
  2173                           
  2174                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  2175  000E86  0E0F               	movlw	15
  2176  000E88  0101               	movlb	1	; () banked
  2177  000E8A  6521               	cpfsgt	on@row& (0+255),b
  2178  000E8C  D001               	goto	l2418
  2179  000E8E  0012               	return	
  2180  000E90                     l2418:
  2181                           
  2182                           ; BSR set to: 1
  2183                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  2184  000E90  0E07               	movlw	7
  2185  000E92  0101               	movlb	1	; () banked
  2186  000E94  6524               	cpfsgt	on@column& (0+255),b
  2187  000E96  D001               	goto	l2422
  2188  000E98  0012               	return	
  2189  000E9A                     l2422:
  2190                           
  2191                           ; BSR set to: 1
  2192                           ;LED-API.c: 50: pixels[column][row] = 1;
  2193  000E9A  0101               	movlb	1	; () banked
  2194  000E9C  5124               	movf	on@column& (0+255),w,b
  2195  000E9E  0D10               	mullw	16
  2196  000EA0  0E00               	movlw	low _pixels
  2197  000EA2  0101               	movlb	1	; () banked
  2198  000EA4  6F22               	movwf	??_on& (0+255),b
  2199  000EA6  0E03               	movlw	high _pixels
  2200  000EA8  0101               	movlb	1	; () banked
  2201  000EAA  6F23               	movwf	(??_on+1)& (0+255),b
  2202  000EAC  50F3               	movf	prodl,w,c
  2203  000EAE  0101               	movlb	1	; () banked
  2204  000EB0  2722               	addwf	??_on& (0+255),f,b
  2205  000EB2  50F4               	movf	prodh,w,c
  2206  000EB4  0101               	movlb	1	; () banked
  2207  000EB6  2323               	addwfc	(??_on+1)& (0+255),f,b
  2208  000EB8  0101               	movlb	1	; () banked
  2209  000EBA  5121               	movf	on@row& (0+255),w,b
  2210  000EBC  0D01               	mullw	1
  2211  000EBE  50F3               	movf	prodl,w,c
  2212  000EC0  0101               	movlb	1	; () banked
  2213  000EC2  2522               	addwf	??_on& (0+255),w,b
  2214  000EC4  6ED9               	movwf	fsr2l,c
  2215  000EC6  50F4               	movf	prodh,w,c
  2216  000EC8  0101               	movlb	1	; () banked
  2217  000ECA  2123               	addwfc	(??_on+1)& (0+255),w,b
  2218  000ECC  6EDA               	movwf	fsr2h,c
  2219  000ECE  0E01               	movlw	1
  2220  000ED0  6EDF               	movwf	indf2,c
  2221                           
  2222                           ; BSR set to: 1
  2223  000ED2  0012               	return		;funcret
  2224  000ED4                     __end_of_on:
  2225                           	opt stack 0
  2226                           tblptru	equ	0xFF8
  2227                           tblptrh	equ	0xFF7
  2228                           tblptrl	equ	0xFF6
  2229                           tablat	equ	0xFF5
  2230                           prodh	equ	0xFF4
  2231                           prodl	equ	0xFF3
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           postdec1	equ	0xFE5
  2235                           plusw1	equ	0xFE3
  2236                           fsr1l	equ	0xFE1
  2237                           indf2	equ	0xFDF
  2238                           postinc2	equ	0xFDE
  2239                           plusw2	equ	0xFDB
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _initializeLED *****************
  2245 ;; Defined at:
  2246 ;;		line 31 in file "Source/LED-API.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2260 ;;      Params:         0       0       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    7
  2267 ;; This function calls:
  2268 ;;		_turnAllOff
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text9
  2275  001092                     __ptext9:
  2276                           	opt stack 0
  2277  001092                     _initializeLED:
  2278                           	opt stack 23
  2279                           
  2280                           ;LED-API.c: 32: TRISA = 0b00000000;
  2281                           
  2282                           ; BSR set to: 1
  2283                           ;incstack = 0
  2284  001092  0E00               	movlw	0
  2285  001094  6E92               	movwf	3986,c	;volatile
  2286                           
  2287                           ;LED-API.c: 33: TRISC = 0b00000000;
  2288  001096  0E00               	movlw	0
  2289  001098  6E94               	movwf	3988,c	;volatile
  2290                           
  2291                           ;LED-API.c: 34: TRISD = 0b00000000;
  2292  00109A  0E00               	movlw	0
  2293  00109C  6E95               	movwf	3989,c	;volatile
  2294                           
  2295                           ;LED-API.c: 35: LATA = 0b00000000;
  2296  00109E  0E00               	movlw	0
  2297  0010A0  6E89               	movwf	3977,c	;volatile
  2298                           
  2299                           ;LED-API.c: 36: LATC = 0b00000000;
  2300  0010A2  0E00               	movlw	0
  2301  0010A4  6E8B               	movwf	3979,c	;volatile
  2302                           
  2303                           ;LED-API.c: 37: LATD = 0b00000000;
  2304  0010A6  0E00               	movlw	0
  2305  0010A8  6E8C               	movwf	3980,c	;volatile
  2306                           
  2307                           ;LED-API.c: 40: turnAllOff();
  2308  0010AA  ECB5  F006         	call	_turnAllOff	;wreg free
  2309  0010AE  0012               	return		;funcret
  2310  0010B0                     __end_of_initializeLED:
  2311                           	opt stack 0
  2312                           tblptru	equ	0xFF8
  2313                           tblptrh	equ	0xFF7
  2314                           tblptrl	equ	0xFF6
  2315                           tablat	equ	0xFF5
  2316                           prodh	equ	0xFF4
  2317                           prodl	equ	0xFF3
  2318                           postinc0	equ	0xFEE
  2319                           wreg	equ	0xFE8
  2320                           postdec1	equ	0xFE5
  2321                           plusw1	equ	0xFE3
  2322                           fsr1l	equ	0xFE1
  2323                           indf2	equ	0xFDF
  2324                           postinc2	equ	0xFDE
  2325                           plusw2	equ	0xFDB
  2326                           fsr2h	equ	0xFDA
  2327                           fsr2l	equ	0xFD9
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _turnAllOff *****************
  2331 ;; Defined at:
  2332 ;;		line 161 in file "Source/LED-API.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  j               1   36[BANK1 ] unsigned char 
  2337 ;;  i               1   35[BANK1 ] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2347 ;;      Params:         0       0       0       0       0       0       0
  2348 ;;      Locals:         0       0       2       0       0       0       0
  2349 ;;      Temps:          0       0       2       0       0       0       0
  2350 ;;      Totals:         0       0       4       0       0       0       0
  2351 ;;Total ram usage:        4 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    6
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_initializeLED
  2358 ;;		_startPong
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text10
  2363  000D6A                     __ptext10:
  2364                           	opt stack 0
  2365  000D6A                     _turnAllOff:
  2366                           	opt stack 22
  2367                           
  2368                           ;LED-API.c: 164: for (unsigned char i = 0; i < 8; i++) {
  2369                           
  2370                           ;incstack = 0
  2371  000D6A  0E00               	movlw	0
  2372  000D6C  0101               	movlb	1	; () banked
  2373  000D6E  6F23               	movwf	turnAllOff@i& (0+255),b
  2374  000D70                     l1826:
  2375                           
  2376                           ; BSR set to: 1
  2377  000D70  0E07               	movlw	7
  2378  000D72  0101               	movlb	1	; () banked
  2379  000D74  6523               	cpfsgt	turnAllOff@i& (0+255),b
  2380  000D76  D001               	goto	l1830
  2381  000D78  0012               	return	
  2382  000D7A                     l1830:
  2383                           
  2384                           ; BSR set to: 1
  2385                           ;LED-API.c: 165: for (unsigned char j = 0; j < 16; j++) {
  2386  000D7A  0E00               	movlw	0
  2387  000D7C  0101               	movlb	1	; () banked
  2388  000D7E  6F24               	movwf	turnAllOff@j& (0+255),b
  2389  000D80                     l1832:
  2390                           
  2391                           ; BSR set to: 1
  2392  000D80  0E0F               	movlw	15
  2393  000D82  0101               	movlb	1	; () banked
  2394  000D84  6524               	cpfsgt	turnAllOff@j& (0+255),b
  2395  000D86  D001               	goto	l1836
  2396  000D88  D01F               	goto	l1842
  2397  000D8A                     l1836:
  2398                           
  2399                           ; BSR set to: 1
  2400                           ;LED-API.c: 166: pixels[i][j] = 0;
  2401  000D8A  0101               	movlb	1	; () banked
  2402  000D8C  5123               	movf	turnAllOff@i& (0+255),w,b
  2403  000D8E  0D10               	mullw	16
  2404  000D90  0E00               	movlw	low _pixels
  2405  000D92  0101               	movlb	1	; () banked
  2406  000D94  6F21               	movwf	??_turnAllOff& (0+255),b
  2407  000D96  0E03               	movlw	high _pixels
  2408  000D98  0101               	movlb	1	; () banked
  2409  000D9A  6F22               	movwf	(??_turnAllOff+1)& (0+255),b
  2410  000D9C  50F3               	movf	prodl,w,c
  2411  000D9E  0101               	movlb	1	; () banked
  2412  000DA0  2721               	addwf	??_turnAllOff& (0+255),f,b
  2413  000DA2  50F4               	movf	prodh,w,c
  2414  000DA4  0101               	movlb	1	; () banked
  2415  000DA6  2322               	addwfc	(??_turnAllOff+1)& (0+255),f,b
  2416  000DA8  0101               	movlb	1	; () banked
  2417  000DAA  5124               	movf	turnAllOff@j& (0+255),w,b
  2418  000DAC  0D01               	mullw	1
  2419  000DAE  50F3               	movf	prodl,w,c
  2420  000DB0  0101               	movlb	1	; () banked
  2421  000DB2  2521               	addwf	??_turnAllOff& (0+255),w,b
  2422  000DB4  6ED9               	movwf	fsr2l,c
  2423  000DB6  50F4               	movf	prodh,w,c
  2424  000DB8  0101               	movlb	1	; () banked
  2425  000DBA  2122               	addwfc	(??_turnAllOff+1)& (0+255),w,b
  2426  000DBC  6EDA               	movwf	fsr2h,c
  2427  000DBE  0E00               	movlw	0
  2428  000DC0  6EDF               	movwf	indf2,c
  2429                           
  2430                           ; BSR set to: 1
  2431  000DC2  0101               	movlb	1	; () banked
  2432  000DC4  2B24               	incf	turnAllOff@j& (0+255),f,b
  2433  000DC6  D7DC               	goto	l1832
  2434  000DC8                     l1842:
  2435                           
  2436                           ; BSR set to: 1
  2437  000DC8  0101               	movlb	1	; () banked
  2438  000DCA  2B23               	incf	turnAllOff@i& (0+255),f,b
  2439  000DCC  D7D1               	goto	l1826
  2440  000DCE                     __end_of_turnAllOff:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           postdec1	equ	0xFE5
  2451                           plusw1	equ	0xFE3
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           postinc2	equ	0xFDE
  2455                           plusw2	equ	0xFDB
  2456                           fsr2h	equ	0xFDA
  2457                           fsr2l	equ	0xFD9
  2458                           status	equ	0xFD8
  2459                           
  2460 ;; *************** function _initialize *****************
  2461 ;; Defined at:
  2462 ;;		line 102 in file "main.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2476 ;;      Params:         0       0       0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    6
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_main
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text11
  2491  000E28                     __ptext11:
  2492                           	opt stack 0
  2493  000E28                     _initialize:
  2494                           	opt stack 24
  2495                           
  2496                           ;main.c: 105: OSCTUNEbits.PLLEN = 1;
  2497                           
  2498                           ; BSR set to: 1
  2499                           ;incstack = 0
  2500  000E28  8C9B               	bsf	3995,6,c	;volatile
  2501                           
  2502                           ;main.c: 106: OSCTUNEbits.TUN = 011111;
  2503  000E2A  809B               	bsf	3995,0,c	;volatile
  2504  000E2C  929B               	bcf	3995,1,c	;volatile
  2505  000E2E  949B               	bcf	3995,2,c	;volatile
  2506  000E30  869B               	bsf	3995,3,c	;volatile
  2507  000E32  989B               	bcf	3995,4,c	;volatile
  2508                           
  2509                           ;main.c: 108: OSCCONbits.SCS = 00;
  2510  000E34  0EFC               	movlw	-4
  2511  000E36  16D3               	andwf	4051,f,c	;volatile
  2512                           
  2513                           ;main.c: 109: OSCCONbits.IRCF = 111;
  2514  000E38  88D3               	bsf	4051,4,c	;volatile
  2515  000E3A  8AD3               	bsf	4051,5,c	;volatile
  2516  000E3C  8CD3               	bsf	4051,6,c	;volatile
  2517                           
  2518                           ;main.c: 111: PLLEN = 1;
  2519  000E3E  8C9B               	bsf	3995,6,c	;volatile
  2520                           
  2521                           ;main.c: 114: GIE = 1;
  2522  000E40  8EF2               	bsf	intcon,7,c	;volatile
  2523                           
  2524                           ;main.c: 115: PEIE=1;
  2525  000E42  8CF2               	bsf	intcon,6,c	;volatile
  2526                           
  2527                           ;main.c: 118: TRISBbits.TRISB0 = 1;
  2528  000E44  8093               	bsf	3987,0,c	;volatile
  2529                           
  2530                           ;main.c: 119: TRISBbits.TRISB1 = 1;
  2531  000E46  8293               	bsf	3987,1,c	;volatile
  2532                           
  2533                           ;main.c: 120: ADCON2bits.ADFM = 1;
  2534  000E48  8EC0               	bsf	4032,7,c	;volatile
  2535                           
  2536                           ;main.c: 121: ADCON2bits.ADCS = 010;
  2537  000E4A  90C0               	bcf	4032,0,c	;volatile
  2538  000E4C  92C0               	bcf	4032,1,c	;volatile
  2539  000E4E  94C0               	bcf	4032,2,c	;volatile
  2540                           
  2541                           ;main.c: 122: ADCON2bits.ACQT = 111;
  2542  000E50  86C0               	bsf	4032,3,c	;volatile
  2543  000E52  88C0               	bsf	4032,4,c	;volatile
  2544  000E54  8AC0               	bsf	4032,5,c	;volatile
  2545                           
  2546                           ;main.c: 123: ADCON1bits.VCFG0 = 0;
  2547  000E56  98C1               	bcf	4033,4,c	;volatile
  2548                           
  2549                           ;main.c: 124: ADCON1bits.VCFG1 = 0;
  2550  000E58  9AC1               	bcf	4033,5,c	;volatile
  2551                           
  2552                           ;main.c: 125: ADCON1bits.PCFG = 0000;
  2553  000E5A  90C1               	bcf	4033,0,c	;volatile
  2554  000E5C  92C1               	bcf	4033,1,c	;volatile
  2555  000E5E  94C1               	bcf	4033,2,c	;volatile
  2556  000E60  96C1               	bcf	4033,3,c	;volatile
  2557                           
  2558                           ;main.c: 126: ADCON0bits.CHS = 1100;
  2559  000E62  50C2               	movf	4034,w,c	;volatile
  2560  000E64  0BC3               	andlw	-61
  2561  000E66  0930               	iorlw	48
  2562  000E68  6EC2               	movwf	4034,c	;volatile
  2563                           
  2564                           ;main.c: 127: ADCON0bits.ADON = 1;
  2565  000E6A  80C2               	bsf	4034,0,c	;volatile
  2566                           
  2567                           ;main.c: 128: ADIE = 1;
  2568  000E6C  8C9D               	bsf	3997,6,c	;volatile
  2569                           
  2570                           ;main.c: 131: T0PS0 = 1;
  2571  000E6E  80D5               	bsf	4053,0,c	;volatile
  2572                           
  2573                           ;main.c: 132: T0PS1 = 0;
  2574  000E70  92D5               	bcf	4053,1,c	;volatile
  2575                           
  2576                           ;main.c: 133: T0PS2 = 1;
  2577  000E72  84D5               	bsf	4053,2,c	;volatile
  2578                           
  2579                           ;main.c: 134: PSA = 0;
  2580  000E74  96D5               	bcf	4053,3,c	;volatile
  2581                           
  2582                           ;main.c: 135: T0CS = 0;
  2583  000E76  9AD5               	bcf	4053,5,c	;volatile
  2584                           
  2585                           ;main.c: 136: T08BIT = 1;
  2586  000E78  8CD5               	bsf	4053,6,c	;volatile
  2587                           
  2588                           ;main.c: 137: TMR0IE = 1;
  2589  000E7A  8AF2               	bsf	intcon,5,c	;volatile
  2590                           
  2591                           ;main.c: 138: TMR0IF = 0;
  2592  000E7C  94F2               	bcf	intcon,2,c	;volatile
  2593                           
  2594                           ;main.c: 140: TMR0ON = 0;
  2595  000E7E  9ED5               	bcf	4053,7,c	;volatile
  2596  000E80  0012               	return		;funcret
  2597  000E82                     __end_of_initialize:
  2598                           	opt stack 0
  2599                           tblptru	equ	0xFF8
  2600                           tblptrh	equ	0xFF7
  2601                           tblptrl	equ	0xFF6
  2602                           tablat	equ	0xFF5
  2603                           prodh	equ	0xFF4
  2604                           prodl	equ	0xFF3
  2605                           intcon	equ	0xFF2
  2606                           postinc0	equ	0xFEE
  2607                           wreg	equ	0xFE8
  2608                           postdec1	equ	0xFE5
  2609                           plusw1	equ	0xFE3
  2610                           fsr1l	equ	0xFE1
  2611                           indf2	equ	0xFDF
  2612                           postinc2	equ	0xFDE
  2613                           plusw2	equ	0xFDB
  2614                           fsr2h	equ	0xFDA
  2615                           fsr2l	equ	0xFD9
  2616                           status	equ	0xFD8
  2617                           
  2618 ;; *************** function _ISR *****************
  2619 ;; Defined at:
  2620 ;;		line 354 in file "main.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  ADvalue         2   30[BANK1 ] unsigned short 
  2625 ;;  value           1   32[BANK1 ] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2635 ;;      Params:         0       0       0       0       0       0       0
  2636 ;;      Locals:         0       0       3       0       0       0       0
  2637 ;;      Temps:          0       0      14       0       0       0       0
  2638 ;;      Totals:         0       0      17       0       0       0       0
  2639 ;;Total ram usage:       17 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    5
  2642 ;; This function calls:
  2643 ;;		___lwdiv
  2644 ;;		_checkNextPosition
  2645 ;;		_writePong
  2646 ;; This function is called by:
  2647 ;;		Interrupt level 2
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	intcode
  2652  000008                     __pintcode:
  2653                           	opt stack 0
  2654  000008                     _ISR:
  2655                           	opt stack 21
  2656                           
  2657                           ;incstack = 0
  2658  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2659  00000A  CFFA F110          	movff	pclath,??_ISR
  2660  00000E  CFFB F111          	movff	pclatu,??_ISR+1
  2661  000012  ED27  F004         	call	int_func,f	;refresh shadow registers
  2662                           pclatu	equ	0xFFB
  2663                           pclath	equ	0xFFA
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           prodh	equ	0xFF4
  2669                           prodl	equ	0xFF3
  2670                           intcon	equ	0xFF2
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           postdec1	equ	0xFE5
  2674                           plusw1	equ	0xFE3
  2675                           fsr1l	equ	0xFE1
  2676                           indf2	equ	0xFDF
  2677                           postinc2	equ	0xFDE
  2678                           plusw2	equ	0xFDB
  2679                           fsr2h	equ	0xFDA
  2680                           fsr2l	equ	0xFD9
  2681                           status	equ	0xFD8
  2682                           
  2683                           	psect	intcode_body
  2684  00084E                     __pintcode_body:
  2685                           	opt stack 21
  2686  00084E                     int_func:
  2687                           	opt stack 21
  2688  00084E  0006               	pop		; remove dummy address from shadow register refresh
  2689  000850  CFE9 F112          	movff	fsr0l,??_ISR+2
  2690  000854  CFEA F113          	movff	fsr0h,??_ISR+3
  2691  000858  CFE1 F114          	movff	fsr1l,??_ISR+4
  2692  00085C  CFE2 F115          	movff	fsr1h,??_ISR+5
  2693  000860  CFD9 F116          	movff	fsr2l,??_ISR+6
  2694  000864  CFDA F117          	movff	fsr2h,??_ISR+7
  2695  000868  CFF3 F118          	movff	prodl,??_ISR+8
  2696  00086C  CFF4 F119          	movff	prodh,??_ISR+9
  2697  000870  CFF6 F11A          	movff	tblptrl,??_ISR+10
  2698  000874  CFF7 F11B          	movff	tblptrh,??_ISR+11
  2699  000878  CFF8 F11C          	movff	tblptru,??_ISR+12
  2700  00087C  CFF5 F11D          	movff	tablat,??_ISR+13
  2701                           
  2702                           ;main.c: 356: if(TMR0IE && TMR0IF)
  2703  000880  BAF2               	btfsc	intcon,5,c	;volatile
  2704  000882  A4F2               	btfss	intcon,2,c	;volatile
  2705  000884  D018               	goto	i2l2868
  2706                           
  2707                           ;main.c: 357: {
  2708                           ;main.c: 359: TMR0IF = 0;
  2709  000886  94F2               	bcf	intcon,2,c	;volatile
  2710                           
  2711                           ;main.c: 361: if(_timerCounter > _speed)
  2712  000888  0101               	movlb	1	; () banked
  2713  00088A  51D4               	movf	__timerCounter& (0+255),w,b
  2714  00088C  0101               	movlb	1	; () banked
  2715  00088E  5DC3               	subwf	__speed& (0+255),w,b
  2716  000890  0101               	movlb	1	; () banked
  2717  000892  51D5               	movf	(__timerCounter+1)& (0+255),w,b
  2718  000894  0101               	movlb	1	; () banked
  2719  000896  59C4               	subwfb	(__speed+1)& (0+255),w,b
  2720  000898  B0D8               	btfsc	status,0,c
  2721  00089A  D007               	goto	i2l2862
  2722                           
  2723                           ; BSR set to: 1
  2724                           ;main.c: 362: {
  2725                           ;main.c: 363: checkNextPosition();
  2726  00089C  ECEC  F002         	call	_checkNextPosition	;wreg free
  2727                           
  2728                           ;main.c: 364: _timerCounter = 0;
  2729  0008A0  0E00               	movlw	0
  2730  0008A2  0101               	movlb	1	; () banked
  2731  0008A4  6FD5               	movwf	(__timerCounter+1)& (0+255),b
  2732  0008A6  0E00               	movlw	0
  2733  0008A8  6FD4               	movwf	__timerCounter& (0+255),b
  2734  0008AA                     i2l2862:
  2735                           
  2736                           ; BSR set to: 1
  2737                           ;main.c: 365: }
  2738                           ;main.c: 367: _timerCounter++;
  2739  0008AA  0101               	movlb	1	; () banked
  2740  0008AC  4BD4               	infsnz	__timerCounter& (0+255),f,b
  2741  0008AE  2BD5               	incf	(__timerCounter+1)& (0+255),f,b
  2742                           
  2743                           ; BSR set to: 1
  2744                           ;main.c: 368: writePong();
  2745  0008B0  ECD1  F005         	call	_writePong	;wreg free
  2746                           
  2747                           ;main.c: 371: ADCON0bits.GODONE = 1;
  2748  0008B4  82C2               	bsf	4034,1,c	;volatile
  2749  0008B6                     i2l2868:
  2750                           
  2751                           ;main.c: 373: }
  2752                           ;main.c: 375: if(ADIE && ADIF)
  2753  0008B6  BC9D               	btfsc	3997,6,c	;volatile
  2754  0008B8  AC9E               	btfss	3998,6,c	;volatile
  2755  0008BA  D035               	goto	i2l268
  2756                           
  2757                           ;main.c: 376: {
  2758                           ;main.c: 378: ADIF = 0;
  2759  0008BC  9C9E               	bcf	3998,6,c	;volatile
  2760                           
  2761                           ;main.c: 380: unsigned short ADvalue = ADRES;
  2762  0008BE  CFC3 F11E          	movff	4035,ISR@ADvalue	;volatile
  2763  0008C2  CFC4 F11F          	movff	4036,ISR@ADvalue+1	;volatile
  2764                           
  2765                           ;main.c: 381: unsigned char value = (ADvalue / 85);
  2766  0008C6  C11E  F001         	movff	ISR@ADvalue,___lwdiv@dividend
  2767  0008CA  C11F  F002         	movff	ISR@ADvalue+1,___lwdiv@dividend+1
  2768  0008CE  0E00               	movlw	0
  2769  0008D0  6E04               	movwf	___lwdiv@divisor+1,c
  2770  0008D2  0E55               	movlw	85
  2771  0008D4  6E03               	movwf	___lwdiv@divisor,c
  2772  0008D6  EC6A  F007         	call	___lwdiv	;wreg free
  2773  0008DA  5001               	movf	?___lwdiv,w,c
  2774  0008DC  0101               	movlb	1	; () banked
  2775  0008DE  6F20               	movwf	ISR@value& (0+255),b
  2776                           
  2777                           ; BSR set to: 1
  2778                           ;main.c: 384: if(ADCON0bits.CHS == 12)
  2779  0008E0  30C2               	rrcf	4034,w,c	;volatile
  2780  0008E2  32E8               	rrcf	wreg,f,c
  2781  0008E4  0B0F               	andlw	15
  2782  0008E6  0A0C               	xorlw	12
  2783  0008E8  A4D8               	btfss	status,2,c
  2784  0008EA  D00F               	goto	i2l2888
  2785                           
  2786                           ; BSR set to: 1
  2787                           ;main.c: 385: {
  2788                           ;main.c: 386: ADCON0bits.CHS = 10;
  2789  0008EC  50C2               	movf	4034,w,c	;volatile
  2790  0008EE  0BC3               	andlw	-61
  2791  0008F0  0928               	iorlw	40
  2792  0008F2  6EC2               	movwf	4034,c	;volatile
  2793                           
  2794                           ; BSR set to: 1
  2795                           ;main.c: 389: _p2.paddlePosOld[0] = _p2.paddlePos[0];
  2796  0008F4  C1CC  F1CA         	movff	__p2+2,__p2
  2797                           
  2798                           ; BSR set to: 1
  2799                           ;main.c: 390: _p2.paddlePos[0] = value;
  2800  0008F8  C120  F1CC         	movff	ISR@value,__p2+2
  2801                           
  2802                           ; BSR set to: 1
  2803                           ;main.c: 392: _p2.paddlePosOld[1] = _p2.paddlePos[1];
  2804  0008FC  C1CD  F1CB         	movff	__p2+3,__p2+1
  2805                           
  2806                           ; BSR set to: 1
  2807                           ;main.c: 393: _p2.paddlePos[1] = value + 1;
  2808  000900  0101               	movlb	1	; () banked
  2809  000902  2920               	incf	ISR@value& (0+255),w,b
  2810  000904  0101               	movlb	1	; () banked
  2811  000906  6FCD               	movwf	(__p2+3)& (0+255),b
  2812                           
  2813                           ;main.c: 394: }
  2814  000908  D00E               	goto	i2l268
  2815  00090A                     i2l2888:
  2816                           
  2817                           ; BSR set to: 1
  2818                           ;main.c: 395: else
  2819                           ;main.c: 396: {
  2820                           ;main.c: 397: ADCON0bits.CHS = 12;
  2821  00090A  50C2               	movf	4034,w,c	;volatile
  2822  00090C  0BC3               	andlw	-61
  2823  00090E  0930               	iorlw	48
  2824  000910  6EC2               	movwf	4034,c	;volatile
  2825                           
  2826                           ; BSR set to: 1
  2827                           ;main.c: 400: _p1.paddlePosOld[0] = _p1.paddlePos[0];
  2828  000912  C1C7  F1C5         	movff	__p1+2,__p1
  2829                           
  2830                           ; BSR set to: 1
  2831                           ;main.c: 401: _p1.paddlePos[0] = value;
  2832  000916  C120  F1C7         	movff	ISR@value,__p1+2
  2833                           
  2834                           ; BSR set to: 1
  2835                           ;main.c: 403: _p1.paddlePosOld[1] = _p1.paddlePos[1];
  2836  00091A  C1C8  F1C6         	movff	__p1+3,__p1+1
  2837                           
  2838                           ; BSR set to: 1
  2839                           ;main.c: 404: _p1.paddlePos[1] = value + 1;
  2840  00091E  0101               	movlb	1	; () banked
  2841  000920  2920               	incf	ISR@value& (0+255),w,b
  2842  000922  0101               	movlb	1	; () banked
  2843  000924  6FC8               	movwf	(__p1+3)& (0+255),b
  2844  000926                     i2l268:
  2845  000926  C11D  FFF5         	movff	??_ISR+13,tablat
  2846  00092A  C11C  FFF8         	movff	??_ISR+12,tblptru
  2847  00092E  C11B  FFF7         	movff	??_ISR+11,tblptrh
  2848  000932  C11A  FFF6         	movff	??_ISR+10,tblptrl
  2849  000936  C119  FFF4         	movff	??_ISR+9,prodh
  2850  00093A  C118  FFF3         	movff	??_ISR+8,prodl
  2851  00093E  C117  FFDA         	movff	??_ISR+7,fsr2h
  2852  000942  C116  FFD9         	movff	??_ISR+6,fsr2l
  2853  000946  C115  FFE2         	movff	??_ISR+5,fsr1h
  2854  00094A  C114  FFE1         	movff	??_ISR+4,fsr1l
  2855  00094E  C113  FFEA         	movff	??_ISR+3,fsr0h
  2856  000952  C112  FFE9         	movff	??_ISR+2,fsr0l
  2857  000956  C111  FFFB         	movff	??_ISR+1,pclatu
  2858  00095A  C110  FFFA         	movff	??_ISR,pclath
  2859  00095E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2860  000960  0011               	retfie		f
  2861  000962                     __end_of_ISR:
  2862                           	opt stack 0
  2863                           pclatu	equ	0xFFB
  2864                           pclath	equ	0xFFA
  2865                           tblptru	equ	0xFF8
  2866                           tblptrh	equ	0xFF7
  2867                           tblptrl	equ	0xFF6
  2868                           tablat	equ	0xFF5
  2869                           prodh	equ	0xFF4
  2870                           prodl	equ	0xFF3
  2871                           intcon	equ	0xFF2
  2872                           postinc0	equ	0xFEE
  2873                           fsr0h	equ	0xFEA
  2874                           fsr0l	equ	0xFE9
  2875                           wreg	equ	0xFE8
  2876                           postdec1	equ	0xFE5
  2877                           plusw1	equ	0xFE3
  2878                           fsr1h	equ	0xFE2
  2879                           fsr1l	equ	0xFE1
  2880                           indf2	equ	0xFDF
  2881                           postinc2	equ	0xFDE
  2882                           plusw2	equ	0xFDB
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           
  2887 ;; *************** function _writePong *****************
  2888 ;; Defined at:
  2889 ;;		line 144 in file "main.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2903 ;;      Params:         0       0       0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0
  2906 ;;      Totals:         0       0       0       0       0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    1
  2910 ;; This function calls:
  2911 ;;		_off
  2912 ;;		i2_on
  2913 ;; This function is called by:
  2914 ;;		_ISR
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text13
  2919  000BA2                     __ptext13:
  2920                           	opt stack 0
  2921  000BA2                     _writePong:
  2922                           	opt stack 24
  2923                           
  2924                           ;main.c: 149: off(_ball.bPos[1], _ball.bPos[0]);
  2925                           
  2926                           ;incstack = 0
  2927  000BA2  C1CF  F001         	movff	__ball,off@row
  2928  000BA6  0101               	movlb	1	; () banked
  2929  000BA8  51D0               	movf	(__ball+1)& (0+255),w,b
  2930  000BAA  ECF9  F007         	call	_off
  2931                           
  2932                           ;main.c: 150: _ball.bPos[0] = _nextPos[0];
  2933  000BAE  C1D2  F1CF         	movff	__nextPos,__ball
  2934                           
  2935                           ;main.c: 151: _ball.bPos[1] = _nextPos[1];
  2936  000BB2  C1D3  F1D0         	movff	__nextPos+1,__ball+1
  2937                           
  2938                           ;main.c: 152: on(_ball.bPos[1], _ball.bPos[0]);
  2939  000BB6  C1CF  F001         	movff	__ball,i2on@row
  2940  000BBA  0101               	movlb	1	; () banked
  2941  000BBC  51D0               	movf	(__ball+1)& (0+255),w,b
  2942  000BBE  EC17  F008         	call	i2_on
  2943                           
  2944                           ;main.c: 155: off(_p1.paddlePosOld[0], 0);
  2945  000BC2  0E00               	movlw	0
  2946  000BC4  6E01               	movwf	off@row,c
  2947  000BC6  0101               	movlb	1	; () banked
  2948  000BC8  51C5               	movf	__p1& (0+255),w,b
  2949  000BCA  ECF9  F007         	call	_off
  2950                           
  2951                           ;main.c: 156: off(_p1.paddlePosOld[1], 0);
  2952  000BCE  0E00               	movlw	0
  2953  000BD0  6E01               	movwf	off@row,c
  2954  000BD2  0101               	movlb	1	; () banked
  2955  000BD4  51C6               	movf	(__p1+1)& (0+255),w,b
  2956  000BD6  ECF9  F007         	call	_off
  2957                           
  2958                           ;main.c: 158: off(_p2.paddlePosOld[0], 15);
  2959  000BDA  0E0F               	movlw	15
  2960  000BDC  6E01               	movwf	off@row,c
  2961  000BDE  0101               	movlb	1	; () banked
  2962  000BE0  51CA               	movf	__p2& (0+255),w,b
  2963  000BE2  ECF9  F007         	call	_off
  2964                           
  2965                           ;main.c: 159: off(_p2.paddlePosOld[1], 15);
  2966  000BE6  0E0F               	movlw	15
  2967  000BE8  6E01               	movwf	off@row,c
  2968  000BEA  0101               	movlb	1	; () banked
  2969  000BEC  51CB               	movf	(__p2+1)& (0+255),w,b
  2970  000BEE  ECF9  F007         	call	_off
  2971                           
  2972                           ;main.c: 161: on(_p1.paddlePos[0], 0);
  2973  000BF2  0E00               	movlw	0
  2974  000BF4  6E01               	movwf	i2on@row,c
  2975  000BF6  0101               	movlb	1	; () banked
  2976  000BF8  51C7               	movf	(__p1+2)& (0+255),w,b
  2977  000BFA  EC17  F008         	call	i2_on
  2978                           
  2979                           ;main.c: 162: on(_p1.paddlePos[1], 0);
  2980  000BFE  0E00               	movlw	0
  2981  000C00  6E01               	movwf	i2on@row,c
  2982  000C02  0101               	movlb	1	; () banked
  2983  000C04  51C8               	movf	(__p1+3)& (0+255),w,b
  2984  000C06  EC17  F008         	call	i2_on
  2985                           
  2986                           ;main.c: 163: on(_p2.paddlePos[0], 15);
  2987  000C0A  0E0F               	movlw	15
  2988  000C0C  6E01               	movwf	i2on@row,c
  2989  000C0E  0101               	movlb	1	; () banked
  2990  000C10  51CC               	movf	(__p2+2)& (0+255),w,b
  2991  000C12  EC17  F008         	call	i2_on
  2992                           
  2993                           ;main.c: 164: on(_p2.paddlePos[1], 15);
  2994  000C16  0E0F               	movlw	15
  2995  000C18  6E01               	movwf	i2on@row,c
  2996  000C1A  0101               	movlb	1	; () banked
  2997  000C1C  51CD               	movf	(__p2+3)& (0+255),w,b
  2998  000C1E  EC17  F008         	call	i2_on
  2999  000C22  0012               	return		;funcret
  3000  000C24                     __end_of_writePong:
  3001                           	opt stack 0
  3002                           pclatu	equ	0xFFB
  3003                           pclath	equ	0xFFA
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           prodh	equ	0xFF4
  3009                           prodl	equ	0xFF3
  3010                           intcon	equ	0xFF2
  3011                           postinc0	equ	0xFEE
  3012                           fsr0h	equ	0xFEA
  3013                           fsr0l	equ	0xFE9
  3014                           wreg	equ	0xFE8
  3015                           postdec1	equ	0xFE5
  3016                           plusw1	equ	0xFE3
  3017                           fsr1h	equ	0xFE2
  3018                           fsr1l	equ	0xFE1
  3019                           indf2	equ	0xFDF
  3020                           postinc2	equ	0xFDE
  3021                           plusw2	equ	0xFDB
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _off *****************
  3027 ;; Defined at:
  3028 ;;		line 64 in file "Source/LED-API.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  column          1    wreg     unsigned char 
  3031 ;;  row             1    0[COMRAM] unsigned char 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  column          1    3[COMRAM] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3043 ;;      Params:         1       0       0       0       0       0       0
  3044 ;;      Locals:         1       0       0       0       0       0       0
  3045 ;;      Temps:          2       0       0       0       0       0       0
  3046 ;;      Totals:         4       0       0       0       0       0       0
  3047 ;;Total ram usage:        4 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_writePong
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text14
  3057  000FF2                     __ptext14:
  3058                           	opt stack 0
  3059  000FF2                     _off:
  3060                           	opt stack 24
  3061                           
  3062                           ;incstack = 0
  3063                           ;off@column stored from wreg
  3064  000FF2  6E04               	movwf	off@column,c
  3065                           
  3066                           ;LED-API.c: 66: if (row < 0 || row > 16)
  3067  000FF4  0E10               	movlw	16
  3068  000FF6  6401               	cpfsgt	off@row,c
  3069  000FF8  D001               	goto	i2l2002
  3070  000FFA  0012               	return	
  3071  000FFC                     i2l2002:
  3072                           
  3073                           ;LED-API.c: 68: if (column < 0 || column > 8)
  3074  000FFC  0E08               	movlw	8
  3075  000FFE  6404               	cpfsgt	off@column,c
  3076  001000  D001               	goto	i2l2006
  3077  001002  0012               	return	
  3078  001004                     i2l2006:
  3079                           
  3080                           ;LED-API.c: 71: pixels[column][row] = 0;
  3081  001004  5004               	movf	off@column,w,c
  3082  001006  0D10               	mullw	16
  3083  001008  0E00               	movlw	low _pixels
  3084  00100A  6E02               	movwf	??_off& (0+255),c
  3085  00100C  0E03               	movlw	high _pixels
  3086  00100E  6E03               	movwf	(??_off+1)& (0+255),c
  3087  001010  50F3               	movf	prodl,w,c
  3088  001012  2602               	addwf	??_off,f,c
  3089  001014  50F4               	movf	prodh,w,c
  3090  001016  2203               	addwfc	??_off+1,f,c
  3091  001018  5001               	movf	off@row,w,c
  3092  00101A  0D01               	mullw	1
  3093  00101C  50F3               	movf	prodl,w,c
  3094  00101E  2402               	addwf	??_off,w,c
  3095  001020  6ED9               	movwf	fsr2l,c
  3096  001022  50F4               	movf	prodh,w,c
  3097  001024  2003               	addwfc	??_off+1,w,c
  3098  001026  6EDA               	movwf	fsr2h,c
  3099  001028  0E00               	movlw	0
  3100  00102A  6EDF               	movwf	indf2,c
  3101  00102C  0012               	return		;funcret
  3102  00102E                     __end_of_off:
  3103                           	opt stack 0
  3104                           pclatu	equ	0xFFB
  3105                           pclath	equ	0xFFA
  3106                           tblptru	equ	0xFF8
  3107                           tblptrh	equ	0xFF7
  3108                           tblptrl	equ	0xFF6
  3109                           tablat	equ	0xFF5
  3110                           prodh	equ	0xFF4
  3111                           prodl	equ	0xFF3
  3112                           intcon	equ	0xFF2
  3113                           postinc0	equ	0xFEE
  3114                           fsr0h	equ	0xFEA
  3115                           fsr0l	equ	0xFE9
  3116                           wreg	equ	0xFE8
  3117                           postdec1	equ	0xFE5
  3118                           plusw1	equ	0xFE3
  3119                           fsr1h	equ	0xFE2
  3120                           fsr1l	equ	0xFE1
  3121                           indf2	equ	0xFDF
  3122                           postinc2	equ	0xFDE
  3123                           plusw2	equ	0xFDB
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8
  3127                           
  3128 ;; *************** function _checkNextPosition *****************
  3129 ;; Defined at:
  3130 ;;		line 197 in file "main.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  counter         2  125[BANK0 ] unsigned int 
  3135 ;;  counter         2  123[BANK0 ] unsigned int 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3145 ;;      Params:         0       0       0       0       0       0       0
  3146 ;;      Locals:         0       4       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0
  3148 ;;      Totals:         0       4       0       0       0       0       0
  3149 ;;Total ram usage:        4 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    4
  3152 ;; This function calls:
  3153 ;;		_getNextPosition
  3154 ;;		i2_drawSymbol
  3155 ;;		i2_initializePong
  3156 ;;		i2_refresh
  3157 ;;		i2_startPong
  3158 ;;		i2_turnAllOff
  3159 ;; This function is called by:
  3160 ;;		_ISR
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text15
  3165  0005D8                     __ptext15:
  3166                           	opt stack 0
  3167  0005D8                     _checkNextPosition:
  3168                           	opt stack 21
  3169                           
  3170                           ;main.c: 199: getNextPosition();
  3171                           
  3172                           ;incstack = 0
  3173  0005D8  EC4A  F005         	call	_getNextPosition	;wreg free
  3174                           
  3175                           ;main.c: 200: if(_nextPos[0] == 0)
  3176  0005DC  0101               	movlb	1	; () banked
  3177  0005DE  51D2               	movf	__nextPos& (0+255),w,b
  3178  0005E0  A4D8               	btfss	status,2,c
  3179  0005E2  D087               	goto	i2l2758
  3180                           
  3181                           ; BSR set to: 1
  3182                           ;main.c: 201: {
  3183                           ;main.c: 202: if(_p1.paddlePos[0] == _nextPos[1])
  3184  0005E4  0101               	movlb	1	; () banked
  3185  0005E6  51D3               	movf	(__nextPos+1)& (0+255),w,b
  3186  0005E8  0101               	movlb	1	; () banked
  3187  0005EA  19C7               	xorwf	(__p1+2)& (0+255),w,b
  3188  0005EC  A4D8               	btfss	status,2,c
  3189  0005EE  D027               	goto	i2l2710
  3190                           
  3191                           ; BSR set to: 1
  3192                           ;main.c: 203: {
  3193                           ;main.c: 205: if(_speed > 30)
  3194  0005F0  0101               	movlb	1	; () banked
  3195  0005F2  51C4               	movf	(__speed+1)& (0+255),w,b
  3196  0005F4  E105               	bnz	i2u274_40
  3197  0005F6  0E1F               	movlw	31
  3198  0005F8  0101               	movlb	1	; () banked
  3199  0005FA  5DC3               	subwf	__speed& (0+255),w,b
  3200  0005FC  A0D8               	btfss	status,0,c
  3201  0005FE  D011               	goto	i2l2702
  3202  000600                     i2u274_40:
  3203                           
  3204                           ; BSR set to: 1
  3205                           ;main.c: 206: _speed = _speed - 10;
  3206  000600  0EF6               	movlw	246
  3207  000602  0101               	movlb	1	; () banked
  3208  000604  25C3               	addwf	__speed& (0+255),w,b
  3209  000606  0101               	movlb	1	; () banked
  3210  000608  6FC3               	movwf	__speed& (0+255),b
  3211  00060A  0EFF               	movlw	255
  3212  00060C  0101               	movlb	1	; () banked
  3213  00060E  21C4               	addwfc	(__speed+1)& (0+255),w,b
  3214  000610  0101               	movlb	1	; () banked
  3215  000612  6FC4               	movwf	(__speed+1)& (0+255),b
  3216                           
  3217                           ; BSR set to: 1
  3218                           ;main.c: 207: switch(_ball.bDirection)
  3219  000614  D006               	goto	i2l2702
  3220  000616                     i2l2698:
  3221                           
  3222                           ; BSR set to: 1
  3223                           ;main.c: 214: _ball.bDirection = 1;
  3224  000616  0E01               	movlw	1
  3225  000618  D001               	goto	L2
  3226  00061A                     i2l2700:
  3227                           
  3228                           ; BSR set to: 1
  3229                           ;main.c: 217: _ball.bDirection = 2;
  3230  00061A  0E02               	movlw	2
  3231  00061C                     L2:
  3232  00061C  0101               	movlb	1	; () banked
  3233  00061E  6FD1               	movwf	(__ball+2)& (0+255),b
  3234                           
  3235                           ;main.c: 218: }
  3236  000620  D00B               	goto	i2l2704
  3237  000622                     i2l2702:
  3238                           
  3239                           ; BSR set to: 1
  3240  000622  0101               	movlb	1	; () banked
  3241  000624  51D1               	movf	(__ball+2)& (0+255),w,b
  3242                           
  3243                           ; Switch size 1, requested type "space"
  3244                           ; Number of cases is 3, Range of values is 4 to 6
  3245                           ; switch strategies available:
  3246                           ; Name         Instructions Cycles
  3247                           ; simple_byte           10     6 (average)
  3248                           ;	Chosen strategy is simple_byte
  3249  000626  0A04               	xorlw	4	; case 4
  3250  000628  B4D8               	btfsc	status,2,c
  3251  00062A  D7F7               	goto	i2l2700
  3252  00062C  0A01               	xorlw	1	; case 5
  3253  00062E  B4D8               	btfsc	status,2,c
  3254  000630  D7F2               	goto	i2l2698
  3255  000632  0A03               	xorlw	3	; case 6
  3256  000634  B4D8               	btfsc	status,2,c
  3257  000636  D7F1               	goto	i2l2700
  3258  000638                     i2l2704:
  3259                           
  3260                           ; BSR set to: 1
  3261                           ;main.c: 219: getNextPosition();
  3262  000638  EC4A  F005         	call	_getNextPosition	;wreg free
  3263                           
  3264                           ;main.c: 220: return;
  3265  00063C  0012               	return	
  3266  00063E                     i2l2710:
  3267                           
  3268                           ;main.c: 222: else if(_p1.paddlePos[1] == _nextPos[1])
  3269  00063E  0101               	movlb	1	; () banked
  3270  000640  51D3               	movf	(__nextPos+1)& (0+255),w,b
  3271  000642  0101               	movlb	1	; () banked
  3272  000644  19C8               	xorwf	(__p1+3)& (0+255),w,b
  3273  000646  A4D8               	btfss	status,2,c
  3274  000648  D027               	goto	i2l2730
  3275                           
  3276                           ; BSR set to: 1
  3277                           ;main.c: 223: {
  3278                           ;main.c: 226: if(_speed > 30)
  3279  00064A  0101               	movlb	1	; () banked
  3280  00064C  51C4               	movf	(__speed+1)& (0+255),w,b
  3281  00064E  E105               	bnz	i2u276_40
  3282  000650  0E1F               	movlw	31
  3283  000652  0101               	movlb	1	; () banked
  3284  000654  5DC3               	subwf	__speed& (0+255),w,b
  3285  000656  A0D8               	btfss	status,0,c
  3286  000658  D011               	goto	i2l2724
  3287  00065A                     i2u276_40:
  3288                           
  3289                           ; BSR set to: 1
  3290                           ;main.c: 227: _speed = _speed - 10;
  3291  00065A  0EF6               	movlw	246
  3292  00065C  0101               	movlb	1	; () banked
  3293  00065E  25C3               	addwf	__speed& (0+255),w,b
  3294  000660  0101               	movlb	1	; () banked
  3295  000662  6FC3               	movwf	__speed& (0+255),b
  3296  000664  0EFF               	movlw	255
  3297  000666  0101               	movlb	1	; () banked
  3298  000668  21C4               	addwfc	(__speed+1)& (0+255),w,b
  3299  00066A  0101               	movlb	1	; () banked
  3300  00066C  6FC4               	movwf	(__speed+1)& (0+255),b
  3301                           
  3302                           ; BSR set to: 1
  3303                           ;main.c: 228: switch(_ball.bDirection)
  3304  00066E  D006               	goto	i2l2724
  3305  000670                     i2l2716:
  3306                           
  3307                           ; BSR set to: 1
  3308                           ;main.c: 232: _ball.bDirection = 1;
  3309  000670  0E01               	movlw	1
  3310  000672                     L3:
  3311  000672  0101               	movlb	1	; () banked
  3312  000674  6FD1               	movwf	(__ball+2)& (0+255),b
  3313                           
  3314                           ;main.c: 236: break;
  3315  000676  D00D               	goto	i2l2726
  3316  000678                     i2l2720:
  3317                           
  3318                           ; BSR set to: 1
  3319                           ;main.c: 238: _ball.bDirection = 3;
  3320  000678  0E03               	movlw	3
  3321  00067A  D7FB               	goto	L3
  3322  00067C                     i2l2724:
  3323                           
  3324                           ; BSR set to: 1
  3325  00067C  0101               	movlb	1	; () banked
  3326  00067E  51D1               	movf	(__ball+2)& (0+255),w,b
  3327                           
  3328                           ; Switch size 1, requested type "space"
  3329                           ; Number of cases is 3, Range of values is 4 to 6
  3330                           ; switch strategies available:
  3331                           ; Name         Instructions Cycles
  3332                           ; simple_byte           10     6 (average)
  3333                           ;	Chosen strategy is simple_byte
  3334  000680  0A04               	xorlw	4	; case 4
  3335  000682  B4D8               	btfsc	status,2,c
  3336  000684  D7F5               	goto	i2l2716
  3337  000686  0A01               	xorlw	1	; case 5
  3338  000688  B4D8               	btfsc	status,2,c
  3339  00068A  D7F6               	goto	i2l2720
  3340  00068C  0A03               	xorlw	3	; case 6
  3341  00068E  B4D8               	btfsc	status,2,c
  3342  000690  D7F3               	goto	i2l2720
  3343  000692                     i2l2726:
  3344                           
  3345                           ; BSR set to: 1
  3346                           ;main.c: 241: getNextPosition();
  3347  000692  EC4A  F005         	call	_getNextPosition	;wreg free
  3348                           
  3349                           ;main.c: 242: return;
  3350  000696  0012               	return	
  3351  000698                     i2l2730:
  3352                           
  3353                           ;main.c: 243: }
  3354                           ;main.c: 246: _p1.lives--;
  3355  000698  0101               	movlb	1	; () banked
  3356  00069A  07C9               	decf	(__p1+4)& (0+255),f,b
  3357                           
  3358                           ; BSR set to: 1
  3359                           ;main.c: 247: if(_p1.lives == 0)
  3360  00069C  0101               	movlb	1	; () banked
  3361  00069E  51C9               	movf	(__p1+4)& (0+255),w,b
  3362  0006A0  A4D8               	btfss	status,2,c
  3363  0006A2  D024               	goto	i2l2756
  3364                           
  3365                           ; BSR set to: 1
  3366                           ;main.c: 248: {
  3367                           ;main.c: 250: turnAllOff();
  3368  0006A4  EC93  F007         	call	i2_turnAllOff	;wreg free
  3369                           
  3370                           ;main.c: 251: drawSymbol(6, 0);
  3371  0006A8  0E00               	movlw	0
  3372  0006AA  6E05               	movwf	i2drawSymbol@offSetX,c
  3373  0006AC  0E06               	movlw	6
  3374  0006AE  EC84  F001         	call	i2_drawSymbol
  3375                           
  3376                           ;main.c: 252: drawSymbol(6, 8);
  3377  0006B2  0E08               	movlw	8
  3378  0006B4  6E05               	movwf	i2drawSymbol@offSetX,c
  3379  0006B6  0E06               	movlw	6
  3380  0006B8  EC84  F001         	call	i2_drawSymbol
  3381                           
  3382                           ;main.c: 253: for(unsigned int counter = 0; counter < 800; counter ++)
  3383  0006BC  0E00               	movlw	0
  3384  0006BE  0100               	movlb	0	; () banked
  3385  0006C0  6FFC               	movwf	(checkNextPosition@counter+1)& (0+255),b
  3386  0006C2  0E00               	movlw	0
  3387  0006C4  6FFB               	movwf	checkNextPosition@counter& (0+255),b
  3388  0006C6                     i2l2742:
  3389                           
  3390                           ; BSR set to: 0
  3391  0006C6  0E20               	movlw	32
  3392  0006C8  0100               	movlb	0	; () banked
  3393  0006CA  5DFB               	subwf	checkNextPosition@counter& (0+255),w,b
  3394  0006CC  0E03               	movlw	3
  3395  0006CE  0100               	movlb	0	; () banked
  3396  0006D0  59FC               	subwfb	(checkNextPosition@counter+1)& (0+255),w,b
  3397  0006D2  B0D8               	btfsc	status,0,c
  3398  0006D4  D006               	goto	i2l2752
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;main.c: 254: {
  3402                           ;main.c: 255: refresh();
  3403                           
  3404                           ; BSR set to: 0
  3405                           
  3406                           ; BSR set to: 0
  3407  0006D6  EC80  F006         	call	i2_refresh	;wreg free
  3408  0006DA  0100               	movlb	0	; () banked
  3409  0006DC  4BFB               	infsnz	checkNextPosition@counter& (0+255),f,b
  3410  0006DE  2BFC               	incf	(checkNextPosition@counter+1)& (0+255),f,b
  3411  0006E0  D7F2               	goto	i2l2742
  3412  0006E2                     i2l2752:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;main.c: 256: }
  3416                           ;main.c: 257: turnAllOff();
  3417  0006E2  EC93  F007         	call	i2_turnAllOff	;wreg free
  3418                           
  3419                           ;main.c: 260: initializePong();
  3420  0006E6  EC70  F008         	call	i2_initializePong	;wreg free
  3421                           
  3422                           ;main.c: 261: }
  3423  0006EA  0012               	return	
  3424  0006EC                     i2l2756:
  3425                           
  3426                           ;main.c: 262: else
  3427                           ;main.c: 263: {
  3428                           ;main.c: 264: startPong();
  3429  0006EC  EC4A  F006         	call	i2_startPong	;wreg free
  3430                           
  3431                           ;main.c: 265: }
  3432                           ;main.c: 266: }
  3433  0006F0  0012               	return	
  3434  0006F2                     i2l2758:
  3435                           
  3436                           ;main.c: 267: else if(_nextPos[0] == 15)
  3437  0006F2  0E0F               	movlw	15
  3438  0006F4  0101               	movlb	1	; () banked
  3439  0006F6  19D2               	xorwf	__nextPos& (0+255),w,b
  3440  0006F8  A4D8               	btfss	status,2,c
  3441  0006FA  D089               	goto	i2l2830
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;main.c: 268: {
  3445                           ;main.c: 269: if(_p2.paddlePos[0] == _nextPos[1])
  3446  0006FC  0101               	movlb	1	; () banked
  3447  0006FE  51D3               	movf	(__nextPos+1)& (0+255),w,b
  3448  000700  0101               	movlb	1	; () banked
  3449  000702  19CC               	xorwf	(__p2+2)& (0+255),w,b
  3450  000704  A4D8               	btfss	status,2,c
  3451  000706  D029               	goto	i2l2782
  3452                           
  3453                           ; BSR set to: 1
  3454                           ;main.c: 270: {
  3455                           ;main.c: 271: if(_speed > 30)
  3456  000708  0101               	movlb	1	; () banked
  3457  00070A  51C4               	movf	(__speed+1)& (0+255),w,b
  3458  00070C  E105               	bnz	i2u282_40
  3459  00070E  0E1F               	movlw	31
  3460  000710  0101               	movlb	1	; () banked
  3461  000712  5DC3               	subwf	__speed& (0+255),w,b
  3462  000714  A0D8               	btfss	status,0,c
  3463  000716  D013               	goto	i2l2774
  3464  000718                     i2u282_40:
  3465                           
  3466                           ; BSR set to: 1
  3467                           ;main.c: 272: _speed = _speed - 10;
  3468  000718  0EF6               	movlw	246
  3469  00071A  0101               	movlb	1	; () banked
  3470  00071C  25C3               	addwf	__speed& (0+255),w,b
  3471  00071E  0101               	movlb	1	; () banked
  3472  000720  6FC3               	movwf	__speed& (0+255),b
  3473  000722  0EFF               	movlw	255
  3474  000724  0101               	movlb	1	; () banked
  3475  000726  21C4               	addwfc	(__speed+1)& (0+255),w,b
  3476  000728  0101               	movlb	1	; () banked
  3477  00072A  6FC4               	movwf	(__speed+1)& (0+255),b
  3478                           
  3479                           ; BSR set to: 1
  3480                           ;main.c: 273: switch(_ball.bDirection)
  3481  00072C  D008               	goto	i2l2774
  3482  00072E                     i2l2766:
  3483                           
  3484                           ; BSR set to: 1
  3485                           ;main.c: 277: _ball.bDirection = 4;
  3486  00072E  0E04               	movlw	4
  3487  000730  D003               	goto	L5
  3488  000732                     i2l2768:
  3489                           
  3490                           ; BSR set to: 1
  3491                           ;main.c: 280: _ball.bDirection = 6;
  3492  000732  0E06               	movlw	6
  3493  000734  D001               	goto	L5
  3494  000736                     i2l2770:
  3495                           
  3496                           ; BSR set to: 1
  3497                           ;main.c: 283: _ball.bDirection = 5;
  3498  000736  0E05               	movlw	5
  3499  000738                     L5:
  3500  000738  0101               	movlb	1	; () banked
  3501  00073A  6FD1               	movwf	(__ball+2)& (0+255),b
  3502                           
  3503                           ; BSR set to: 1
  3504                           ;main.c: 285: }
  3505                           
  3506                           ;main.c: 284: break;
  3507  00073C  D00B               	goto	i2l2776
  3508  00073E                     i2l2774:
  3509                           
  3510                           ; BSR set to: 1
  3511  00073E  0101               	movlb	1	; () banked
  3512  000740  51D1               	movf	(__ball+2)& (0+255),w,b
  3513                           
  3514                           ; Switch size 1, requested type "space"
  3515                           ; Number of cases is 3, Range of values is 1 to 3
  3516                           ; switch strategies available:
  3517                           ; Name         Instructions Cycles
  3518                           ; simple_byte           10     6 (average)
  3519                           ;	Chosen strategy is simple_byte
  3520  000742  0A01               	xorlw	1	; case 1
  3521  000744  B4D8               	btfsc	status,2,c
  3522  000746  D7F3               	goto	i2l2766
  3523  000748  0A03               	xorlw	3	; case 2
  3524  00074A  B4D8               	btfsc	status,2,c
  3525  00074C  D7F2               	goto	i2l2768
  3526  00074E  0A01               	xorlw	1	; case 3
  3527  000750  B4D8               	btfsc	status,2,c
  3528  000752  D7F1               	goto	i2l2770
  3529  000754                     i2l2776:
  3530                           
  3531                           ; BSR set to: 1
  3532                           ;main.c: 286: getNextPosition();
  3533  000754  EC4A  F005         	call	_getNextPosition	;wreg free
  3534                           
  3535                           ;main.c: 287: return;
  3536  000758  0012               	return	
  3537  00075A                     i2l2782:
  3538                           
  3539                           ;main.c: 289: else if( _p2.paddlePos[1] == _nextPos[1])
  3540  00075A  0101               	movlb	1	; () banked
  3541  00075C  51D3               	movf	(__nextPos+1)& (0+255),w,b
  3542  00075E  0101               	movlb	1	; () banked
  3543  000760  19CD               	xorwf	(__p2+3)& (0+255),w,b
  3544  000762  A4D8               	btfss	status,2,c
  3545  000764  D027               	goto	i2l2802
  3546                           
  3547                           ; BSR set to: 1
  3548                           ;main.c: 290: {
  3549                           ;main.c: 292: if(_speed > 30)
  3550  000766  0101               	movlb	1	; () banked
  3551  000768  51C4               	movf	(__speed+1)& (0+255),w,b
  3552  00076A  E105               	bnz	i2u284_40
  3553  00076C  0E1F               	movlw	31
  3554  00076E  0101               	movlb	1	; () banked
  3555  000770  5DC3               	subwf	__speed& (0+255),w,b
  3556  000772  A0D8               	btfss	status,0,c
  3557  000774  D011               	goto	i2l2796
  3558  000776                     i2u284_40:
  3559                           
  3560                           ; BSR set to: 1
  3561                           ;main.c: 293: _speed = _speed - 10;
  3562  000776  0EF6               	movlw	246
  3563  000778  0101               	movlb	1	; () banked
  3564  00077A  25C3               	addwf	__speed& (0+255),w,b
  3565  00077C  0101               	movlb	1	; () banked
  3566  00077E  6FC3               	movwf	__speed& (0+255),b
  3567  000780  0EFF               	movlw	255
  3568  000782  0101               	movlb	1	; () banked
  3569  000784  21C4               	addwfc	(__speed+1)& (0+255),w,b
  3570  000786  0101               	movlb	1	; () banked
  3571  000788  6FC4               	movwf	(__speed+1)& (0+255),b
  3572                           
  3573                           ; BSR set to: 1
  3574                           ;main.c: 294: switch(_ball.bDirection)
  3575  00078A  D006               	goto	i2l2796
  3576  00078C                     i2l2790:
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;main.c: 300: _ball.bDirection = 4;
  3580  00078C  0E04               	movlw	4
  3581  00078E  D001               	goto	L6
  3582  000790                     i2l2792:
  3583                           
  3584                           ; BSR set to: 1
  3585                           ;main.c: 303: _ball.bDirection = 6;
  3586  000790  0E06               	movlw	6
  3587  000792                     L6:
  3588  000792  0101               	movlb	1	; () banked
  3589  000794  6FD1               	movwf	(__ball+2)& (0+255),b
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;main.c: 305: }
  3593                           
  3594                           ;main.c: 304: break;
  3595  000796  D00B               	goto	i2l2798
  3596  000798                     i2l2796:
  3597                           
  3598                           ; BSR set to: 1
  3599  000798  0101               	movlb	1	; () banked
  3600  00079A  51D1               	movf	(__ball+2)& (0+255),w,b
  3601                           
  3602                           ; Switch size 1, requested type "space"
  3603                           ; Number of cases is 3, Range of values is 1 to 3
  3604                           ; switch strategies available:
  3605                           ; Name         Instructions Cycles
  3606                           ; simple_byte           10     6 (average)
  3607                           ;	Chosen strategy is simple_byte
  3608  00079C  0A01               	xorlw	1	; case 1
  3609  00079E  B4D8               	btfsc	status,2,c
  3610  0007A0  D7F5               	goto	i2l2790
  3611  0007A2  0A03               	xorlw	3	; case 2
  3612  0007A4  B4D8               	btfsc	status,2,c
  3613  0007A6  D7F2               	goto	i2l2790
  3614  0007A8  0A01               	xorlw	1	; case 3
  3615  0007AA  B4D8               	btfsc	status,2,c
  3616  0007AC  D7F1               	goto	i2l2792
  3617  0007AE                     i2l2798:
  3618                           
  3619                           ; BSR set to: 1
  3620                           ;main.c: 306: getNextPosition();
  3621  0007AE  EC4A  F005         	call	_getNextPosition	;wreg free
  3622                           
  3623                           ;main.c: 307: return;
  3624  0007B2  0012               	return	
  3625  0007B4                     i2l2802:
  3626                           
  3627                           ;main.c: 308: }
  3628                           ;main.c: 310: _p2.lives--;
  3629  0007B4  0101               	movlb	1	; () banked
  3630  0007B6  07CE               	decf	(__p2+4)& (0+255),f,b
  3631                           
  3632                           ; BSR set to: 1
  3633                           ;main.c: 311: if(_p2.lives == 0)
  3634  0007B8  0101               	movlb	1	; () banked
  3635  0007BA  51CE               	movf	(__p2+4)& (0+255),w,b
  3636  0007BC  A4D8               	btfss	status,2,c
  3637  0007BE  D024               	goto	i2l2828
  3638                           
  3639                           ; BSR set to: 1
  3640                           ;main.c: 312: {
  3641                           ;main.c: 314: turnAllOff();
  3642  0007C0  EC93  F007         	call	i2_turnAllOff	;wreg free
  3643                           
  3644                           ;main.c: 315: drawSymbol(7, 0);
  3645  0007C4  0E00               	movlw	0
  3646  0007C6  6E05               	movwf	i2drawSymbol@offSetX,c
  3647  0007C8  0E07               	movlw	7
  3648  0007CA  EC84  F001         	call	i2_drawSymbol
  3649                           
  3650                           ;main.c: 316: drawSymbol(7, 8);
  3651  0007CE  0E08               	movlw	8
  3652  0007D0  6E05               	movwf	i2drawSymbol@offSetX,c
  3653  0007D2  0E07               	movlw	7
  3654  0007D4  EC84  F001         	call	i2_drawSymbol
  3655                           
  3656                           ;main.c: 317: for(unsigned int counter = 0; counter < 800; counter ++)
  3657  0007D8  0E00               	movlw	0
  3658  0007DA  0100               	movlb	0	; () banked
  3659  0007DC  6FFE               	movwf	(checkNextPosition@counter_430+1)& (0+255),b
  3660  0007DE  0E00               	movlw	0
  3661  0007E0  6FFD               	movwf	checkNextPosition@counter_430& (0+255),b
  3662  0007E2                     i2l2814:
  3663                           
  3664                           ; BSR set to: 0
  3665  0007E2  0E20               	movlw	32
  3666  0007E4  0100               	movlb	0	; () banked
  3667  0007E6  5DFD               	subwf	checkNextPosition@counter_430& (0+255),w,b
  3668  0007E8  0E03               	movlw	3
  3669  0007EA  0100               	movlb	0	; () banked
  3670  0007EC  59FE               	subwfb	(checkNextPosition@counter_430+1)& (0+255),w,b
  3671  0007EE  B0D8               	btfsc	status,0,c
  3672  0007F0  D006               	goto	i2l2824
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;main.c: 318: {
  3676                           ;main.c: 319: refresh();
  3677                           
  3678                           ; BSR set to: 0
  3679                           
  3680                           ; BSR set to: 0
  3681  0007F2  EC80  F006         	call	i2_refresh	;wreg free
  3682  0007F6  0100               	movlb	0	; () banked
  3683  0007F8  4BFD               	infsnz	checkNextPosition@counter_430& (0+255),f,b
  3684  0007FA  2BFE               	incf	(checkNextPosition@counter_430+1)& (0+255),f,b
  3685  0007FC  D7F2               	goto	i2l2814
  3686  0007FE                     i2l2824:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;main.c: 320: }
  3690                           ;main.c: 321: turnAllOff();
  3691  0007FE  EC93  F007         	call	i2_turnAllOff	;wreg free
  3692                           
  3693                           ;main.c: 324: initializePong();
  3694  000802  EC70  F008         	call	i2_initializePong	;wreg free
  3695                           
  3696                           ;main.c: 325: }
  3697  000806  0012               	return	
  3698  000808                     i2l2828:
  3699                           
  3700                           ;main.c: 326: else
  3701                           ;main.c: 327: {
  3702                           ;main.c: 328: startPong();
  3703  000808  EC4A  F006         	call	i2_startPong	;wreg free
  3704                           
  3705                           ;main.c: 329: }
  3706                           ;main.c: 330: }
  3707  00080C  0012               	return	
  3708  00080E                     i2l2830:
  3709                           
  3710                           ;main.c: 331: else if(_nextPos[1] < 0 || _nextPos[1] > 7)
  3711  00080E  0E07               	movlw	7
  3712  000810  0101               	movlb	1	; () banked
  3713  000812  65D3               	cpfsgt	(__nextPos+1)& (0+255),b
  3714  000814  0012               	return	
  3715  000816  D00A               	goto	i2l2844
  3716  000818                     i2l2834:
  3717                           
  3718                           ; BSR set to: 1
  3719                           ;main.c: 336: _ball.bDirection = 3;
  3720  000818  0E03               	movlw	3
  3721  00081A  D005               	goto	L9
  3722  00081C                     i2l2836:
  3723                           
  3724                           ; BSR set to: 1
  3725                           ;main.c: 339: _ball.bDirection = 1;
  3726  00081C  0E01               	movlw	1
  3727  00081E  D003               	goto	L9
  3728  000820                     i2l2838:
  3729                           
  3730                           ; BSR set to: 1
  3731                           ;main.c: 342: _ball.bDirection = 6;
  3732  000820  0E06               	movlw	6
  3733  000822  D001               	goto	L9
  3734  000824                     i2l2840:
  3735                           
  3736                           ; BSR set to: 1
  3737                           ;main.c: 345: _ball.bDirection = 4;
  3738  000824  0E04               	movlw	4
  3739  000826                     L9:
  3740  000826  0101               	movlb	1	; () banked
  3741  000828  6FD1               	movwf	(__ball+2)& (0+255),b
  3742                           
  3743                           ; BSR set to: 1
  3744                           ;main.c: 347: }
  3745                           
  3746                           ;main.c: 346: break;
  3747  00082A  D00E               	goto	i2l2846
  3748  00082C                     i2l2844:
  3749                           
  3750                           ; BSR set to: 1
  3751  00082C  0101               	movlb	1	; () banked
  3752  00082E  51D1               	movf	(__ball+2)& (0+255),w,b
  3753                           
  3754                           ; Switch size 1, requested type "space"
  3755                           ; Number of cases is 4, Range of values is 1 to 6
  3756                           ; switch strategies available:
  3757                           ; Name         Instructions Cycles
  3758                           ; simple_byte           13     7 (average)
  3759                           ;	Chosen strategy is simple_byte
  3760  000830  0A01               	xorlw	1	; case 1
  3761  000832  B4D8               	btfsc	status,2,c
  3762  000834  D7F1               	goto	i2l2834
  3763  000836  0A02               	xorlw	2	; case 3
  3764  000838  B4D8               	btfsc	status,2,c
  3765  00083A  D7F0               	goto	i2l2836
  3766  00083C  0A07               	xorlw	7	; case 4
  3767  00083E  B4D8               	btfsc	status,2,c
  3768  000840  D7EF               	goto	i2l2838
  3769  000842  0A02               	xorlw	2	; case 6
  3770  000844  B4D8               	btfsc	status,2,c
  3771  000846  D7EE               	goto	i2l2840
  3772  000848                     i2l2846:
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;main.c: 348: getNextPosition();
  3776  000848  EC4A  F005         	call	_getNextPosition	;wreg free
  3777                           
  3778                           ;main.c: 349: return;
  3779  00084C  0012               	return	
  3780  00084E                     __end_of_checkNextPosition:
  3781                           	opt stack 0
  3782                           pclatu	equ	0xFFB
  3783                           pclath	equ	0xFFA
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           prodh	equ	0xFF4
  3789                           prodl	equ	0xFF3
  3790                           intcon	equ	0xFF2
  3791                           postinc0	equ	0xFEE
  3792                           fsr0h	equ	0xFEA
  3793                           fsr0l	equ	0xFE9
  3794                           wreg	equ	0xFE8
  3795                           postdec1	equ	0xFE5
  3796                           plusw1	equ	0xFE3
  3797                           fsr1h	equ	0xFE2
  3798                           fsr1l	equ	0xFE1
  3799                           indf2	equ	0xFDF
  3800                           postinc2	equ	0xFDE
  3801                           plusw2	equ	0xFDB
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function i2_initializePong *****************
  3807 ;; Defined at:
  3808 ;;		line 88 in file "main.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3822 ;;      Params:         0       0       0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0
  3825 ;;      Totals:         0       0       0       0       0       0       0
  3826 ;;Total ram usage:        0 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    3
  3829 ;; This function calls:
  3830 ;;		i2_startPong
  3831 ;; This function is called by:
  3832 ;;		_checkNextPosition
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text16
  3837  0010E0                     __ptext16:
  3838                           	opt stack 0
  3839  0010E0                     i2_initializePong:
  3840                           	opt stack 21
  3841                           
  3842                           ;main.c: 93: _p1.lives = 3;
  3843                           
  3844                           ;incstack = 0
  3845  0010E0  0E03               	movlw	3
  3846  0010E2  0101               	movlb	1	; () banked
  3847  0010E4  6FC9               	movwf	(__p1+4)& (0+255),b
  3848                           
  3849                           ;main.c: 94: _p2.lives = 3;
  3850  0010E6  0E03               	movlw	3
  3851  0010E8  0101               	movlb	1	; () banked
  3852  0010EA  6FCE               	movwf	(__p2+4)& (0+255),b
  3853                           
  3854                           ; BSR set to: 1
  3855                           ;main.c: 96: startPong();
  3856  0010EC  EC4A  F006         	call	i2_startPong	;wreg free
  3857                           
  3858                           ;main.c: 99: TMR0ON = 1;
  3859  0010F0  8ED5               	bsf	4053,7,c	;volatile
  3860  0010F2  0012               	return		;funcret
  3861  0010F4                     __end_ofi2_initializePong:
  3862                           	opt stack 0
  3863                           pclatu	equ	0xFFB
  3864                           pclath	equ	0xFFA
  3865                           tblptru	equ	0xFF8
  3866                           tblptrh	equ	0xFF7
  3867                           tblptrl	equ	0xFF6
  3868                           tablat	equ	0xFF5
  3869                           prodh	equ	0xFF4
  3870                           prodl	equ	0xFF3
  3871                           intcon	equ	0xFF2
  3872                           postinc0	equ	0xFEE
  3873                           fsr0h	equ	0xFEA
  3874                           fsr0l	equ	0xFE9
  3875                           wreg	equ	0xFE8
  3876                           postdec1	equ	0xFE5
  3877                           plusw1	equ	0xFE3
  3878                           fsr1h	equ	0xFE2
  3879                           fsr1l	equ	0xFE1
  3880                           indf2	equ	0xFDF
  3881                           postinc2	equ	0xFDE
  3882                           plusw2	equ	0xFDB
  3883                           fsr2h	equ	0xFDA
  3884                           fsr2l	equ	0xFD9
  3885                           status	equ	0xFD8
  3886                           
  3887 ;; *************** function i2_startPong *****************
  3888 ;; Defined at:
  3889 ;;		line 59 in file "main.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  startPong       2  121[BANK0 ] unsigned int 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3903 ;;      Params:         0       0       0       0       0       0       0
  3904 ;;      Locals:         0       2       0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0
  3906 ;;      Totals:         0       2       0       0       0       0       0
  3907 ;;Total ram usage:        2 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    2
  3910 ;; This function calls:
  3911 ;;		i2_drawSymbol
  3912 ;;		i2_refresh
  3913 ;;		i2_turnAllOff
  3914 ;; This function is called by:
  3915 ;;		_checkNextPosition
  3916 ;;		i2_initializePong
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text17
  3921  000C94                     __ptext17:
  3922                           	opt stack 0
  3923  000C94                     i2_startPong:
  3924                           	opt stack 22
  3925                           
  3926                           ;main.c: 61: _speed = 150;
  3927                           
  3928                           ;incstack = 0
  3929  000C94  0E00               	movlw	0
  3930  000C96  0101               	movlb	1	; () banked
  3931  000C98  6FC4               	movwf	(__speed+1)& (0+255),b
  3932  000C9A  0E96               	movlw	150
  3933  000C9C  6FC3               	movwf	__speed& (0+255),b
  3934                           
  3935                           ; BSR set to: 1
  3936                           ;main.c: 64: turnAllOff();
  3937  000C9E  EC93  F007         	call	i2_turnAllOff	;wreg free
  3938                           
  3939                           ;main.c: 65: drawSymbol(_p1.lives, 0);
  3940  000CA2  0E00               	movlw	0
  3941  000CA4  6E05               	movwf	i2drawSymbol@offSetX,c
  3942  000CA6  0101               	movlb	1	; () banked
  3943  000CA8  51C9               	movf	(__p1+4)& (0+255),w,b
  3944  000CAA  EC84  F001         	call	i2_drawSymbol
  3945                           
  3946                           ;main.c: 66: drawSymbol(_p2.lives, 8);
  3947  000CAE  0E08               	movlw	8
  3948  000CB0  6E05               	movwf	i2drawSymbol@offSetX,c
  3949  000CB2  0101               	movlb	1	; () banked
  3950  000CB4  51CE               	movf	(__p2+4)& (0+255),w,b
  3951  000CB6  EC84  F001         	call	i2_drawSymbol
  3952                           
  3953                           ;main.c: 67: for(unsigned int counter = 0; counter < 800; counter ++)
  3954  000CBA  0E00               	movlw	0
  3955  000CBC  0100               	movlb	0	; () banked
  3956  000CBE  6FFA               	movwf	(i2startPong@counter+1)& (0+255),b
  3957  000CC0  0E00               	movlw	0
  3958  000CC2  6FF9               	movwf	i2startPong@counter& (0+255),b
  3959  000CC4                     i2l2614:
  3960                           
  3961                           ; BSR set to: 0
  3962  000CC4  0E20               	movlw	32
  3963  000CC6  0100               	movlb	0	; () banked
  3964  000CC8  5DF9               	subwf	i2startPong@counter& (0+255),w,b
  3965  000CCA  0E03               	movlw	3
  3966  000CCC  0100               	movlb	0	; () banked
  3967  000CCE  59FA               	subwfb	(i2startPong@counter+1)& (0+255),w,b
  3968  000CD0  B0D8               	btfsc	status,0,c
  3969  000CD2  D006               	goto	i2l2624
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;main.c: 68: {
  3973                           ;main.c: 69: refresh();
  3974                           
  3975                           ; BSR set to: 0
  3976                           
  3977                           ; BSR set to: 0
  3978  000CD4  EC80  F006         	call	i2_refresh	;wreg free
  3979  000CD8  0100               	movlb	0	; () banked
  3980  000CDA  4BF9               	infsnz	i2startPong@counter& (0+255),f,b
  3981  000CDC  2BFA               	incf	(i2startPong@counter+1)& (0+255),f,b
  3982  000CDE  D7F2               	goto	i2l2614
  3983  000CE0                     i2l2624:
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;main.c: 70: }
  3987                           ;main.c: 71: turnAllOff();
  3988  000CE0  EC93  F007         	call	i2_turnAllOff	;wreg free
  3989                           
  3990                           ;main.c: 76: _ball.bDirection = 3;
  3991  000CE4  0E03               	movlw	3
  3992  000CE6  0101               	movlb	1	; () banked
  3993  000CE8  6FD1               	movwf	(__ball+2)& (0+255),b
  3994                           
  3995                           ; BSR set to: 1
  3996                           ;main.c: 78: _ball.bPos[0] = 2;
  3997  000CEA  0E02               	movlw	2
  3998  000CEC  0101               	movlb	1	; () banked
  3999  000CEE  6FCF               	movwf	__ball& (0+255),b
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;main.c: 80: _ball.bPos[1] = 4;
  4003  000CF0  0E04               	movlw	4
  4004  000CF2  0101               	movlb	1	; () banked
  4005  000CF4  6FD0               	movwf	(__ball+1)& (0+255),b
  4006                           
  4007                           ; BSR set to: 1
  4008                           ;main.c: 83: _nextPos[0] = _ball.bPos[0];
  4009  000CF6  C1CF  F1D2         	movff	__ball,__nextPos
  4010                           
  4011                           ; BSR set to: 1
  4012                           ;main.c: 84: _nextPos[1] = _ball.bPos[1];
  4013  000CFA  C1D0  F1D3         	movff	__ball+1,__nextPos+1
  4014                           
  4015                           ; BSR set to: 1
  4016  000CFE  0012               	return		;funcret
  4017  000D00                     __end_ofi2_startPong:
  4018                           	opt stack 0
  4019                           pclatu	equ	0xFFB
  4020                           pclath	equ	0xFFA
  4021                           tblptru	equ	0xFF8
  4022                           tblptrh	equ	0xFF7
  4023                           tblptrl	equ	0xFF6
  4024                           tablat	equ	0xFF5
  4025                           prodh	equ	0xFF4
  4026                           prodl	equ	0xFF3
  4027                           intcon	equ	0xFF2
  4028                           postinc0	equ	0xFEE
  4029                           fsr0h	equ	0xFEA
  4030                           fsr0l	equ	0xFE9
  4031                           wreg	equ	0xFE8
  4032                           postdec1	equ	0xFE5
  4033                           plusw1	equ	0xFE3
  4034                           fsr1h	equ	0xFE2
  4035                           fsr1l	equ	0xFE1
  4036                           indf2	equ	0xFDF
  4037                           postinc2	equ	0xFDE
  4038                           plusw2	equ	0xFDB
  4039                           fsr2h	equ	0xFDA
  4040                           fsr2l	equ	0xFD9
  4041                           status	equ	0xFD8
  4042                           
  4043 ;; *************** function i2_turnAllOff *****************
  4044 ;; Defined at:
  4045 ;;		line 161 in file "Source/LED-API.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  turnAllOff      1    3[COMRAM] unsigned char 
  4050 ;;  turnAllOff      1    2[COMRAM] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4060 ;;      Params:         0       0       0       0       0       0       0
  4061 ;;      Locals:         2       0       0       0       0       0       0
  4062 ;;      Temps:          2       0       0       0       0       0       0
  4063 ;;      Totals:         4       0       0       0       0       0       0
  4064 ;;Total ram usage:        4 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_checkNextPosition
  4070 ;;		i2_startPong
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text18
  4075  000F26                     __ptext18:
  4076                           	opt stack 0
  4077  000F26                     i2_turnAllOff:
  4078                           	opt stack 24
  4079                           
  4080                           ;LED-API.c: 164: for (unsigned char i = 0; i < 8; i++) {
  4081                           
  4082                           ; BSR set to: 1
  4083                           ;incstack = 0
  4084  000F26  0E00               	movlw	0
  4085  000F28  6E03               	movwf	i2turnAllOff@i,c
  4086  000F2A                     i2l1774:
  4087  000F2A  0E07               	movlw	7
  4088  000F2C  6403               	cpfsgt	i2turnAllOff@i,c
  4089  000F2E  D001               	goto	i2l1778
  4090  000F30  0012               	return	
  4091  000F32                     i2l1778:
  4092                           
  4093                           ;LED-API.c: 165: for (unsigned char j = 0; j < 16; j++) {
  4094  000F32  0E00               	movlw	0
  4095  000F34  6E04               	movwf	i2turnAllOff@j,c
  4096  000F36                     i2l1780:
  4097  000F36  0E0F               	movlw	15
  4098  000F38  6404               	cpfsgt	i2turnAllOff@j,c
  4099  000F3A  D001               	goto	i2l1784
  4100  000F3C  D016               	goto	i2l1790
  4101  000F3E                     i2l1784:
  4102                           
  4103                           ;LED-API.c: 166: pixels[i][j] = 0;
  4104  000F3E  5003               	movf	i2turnAllOff@i,w,c
  4105  000F40  0D10               	mullw	16
  4106  000F42  0E00               	movlw	low _pixels
  4107  000F44  6E01               	movwf	??i2_turnAllOff& (0+255),c
  4108  000F46  0E03               	movlw	high _pixels
  4109  000F48  6E02               	movwf	(??i2_turnAllOff+1)& (0+255),c
  4110  000F4A  50F3               	movf	prodl,w,c
  4111  000F4C  2601               	addwf	??i2_turnAllOff,f,c
  4112  000F4E  50F4               	movf	prodh,w,c
  4113  000F50  2202               	addwfc	??i2_turnAllOff+1,f,c
  4114  000F52  5004               	movf	i2turnAllOff@j,w,c
  4115  000F54  0D01               	mullw	1
  4116  000F56  50F3               	movf	prodl,w,c
  4117  000F58  2401               	addwf	??i2_turnAllOff,w,c
  4118  000F5A  6ED9               	movwf	fsr2l,c
  4119  000F5C  50F4               	movf	prodh,w,c
  4120  000F5E  2002               	addwfc	??i2_turnAllOff+1,w,c
  4121  000F60  6EDA               	movwf	fsr2h,c
  4122  000F62  0E00               	movlw	0
  4123  000F64  6EDF               	movwf	indf2,c
  4124  000F66  2A04               	incf	i2turnAllOff@j,f,c
  4125  000F68  D7E6               	goto	i2l1780
  4126  000F6A                     i2l1790:
  4127  000F6A  2A03               	incf	i2turnAllOff@i,f,c
  4128  000F6C  D7DE               	goto	i2l1774
  4129  000F6E                     __end_ofi2_turnAllOff:
  4130                           	opt stack 0
  4131                           pclatu	equ	0xFFB
  4132                           pclath	equ	0xFFA
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           prodh	equ	0xFF4
  4138                           prodl	equ	0xFF3
  4139                           intcon	equ	0xFF2
  4140                           postinc0	equ	0xFEE
  4141                           fsr0h	equ	0xFEA
  4142                           fsr0l	equ	0xFE9
  4143                           wreg	equ	0xFE8
  4144                           postdec1	equ	0xFE5
  4145                           plusw1	equ	0xFE3
  4146                           fsr1h	equ	0xFE2
  4147                           fsr1l	equ	0xFE1
  4148                           indf2	equ	0xFDF
  4149                           postinc2	equ	0xFDE
  4150                           plusw2	equ	0xFDB
  4151                           fsr2h	equ	0xFDA
  4152                           fsr2l	equ	0xFD9
  4153                           status	equ	0xFD8
  4154                           
  4155 ;; *************** function i2_refresh *****************
  4156 ;; Defined at:
  4157 ;;		line 177 in file "Source/LED-API.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  refresh         1    7[COMRAM] unsigned char 
  4162 ;;  refresh         1    6[COMRAM] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4172 ;;      Params:         0       0       0       0       0       0       0
  4173 ;;      Locals:         2       0       0       0       0       0       0
  4174 ;;      Temps:          3       0       0       0       0       0       0
  4175 ;;      Totals:         5       0       0       0       0       0       0
  4176 ;;Total ram usage:        5 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    1
  4179 ;; This function calls:
  4180 ;;		i2_allOff
  4181 ;;		i2_setColHigh
  4182 ;;		i2_setRowHigh
  4183 ;; This function is called by:
  4184 ;;		_checkNextPosition
  4185 ;;		i2_startPong
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text19
  4190  000D00                     __ptext19:
  4191                           	opt stack 0
  4192  000D00                     i2_refresh:
  4193                           	opt stack 22
  4194                           
  4195                           ;LED-API.c: 179: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  4196                           
  4197                           ;incstack = 0
  4198  000D00  0E00               	movlw	0
  4199  000D02  6E07               	movwf	i2refresh@theCol,c
  4200  000D04                     i2l1796:
  4201  000D04  0E07               	movlw	7
  4202  000D06  6407               	cpfsgt	i2refresh@theCol,c
  4203  000D08  D001               	goto	i2l1800
  4204  000D0A  0012               	return	
  4205  000D0C                     i2l1800:
  4206                           
  4207                           ;LED-API.c: 181: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  4208  000D0C  0E00               	movlw	0
  4209  000D0E  6E08               	movwf	i2refresh@theRow,c
  4210  000D10                     i2l1802:
  4211  000D10  0E0F               	movlw	15
  4212  000D12  6408               	cpfsgt	i2refresh@theRow,c
  4213  000D14  D001               	goto	i2l1806
  4214  000D16  D01A               	goto	i2l1814
  4215  000D18                     i2l1806:
  4216                           
  4217                           ;LED-API.c: 183: if (pixels[theCol][theRow] == 1)
  4218  000D18  5007               	movf	i2refresh@theCol,w,c
  4219  000D1A  0D10               	mullw	16
  4220  000D1C  0E00               	movlw	low _pixels
  4221  000D1E  6E04               	movwf	??i2_refresh& (0+255),c
  4222  000D20  0E03               	movlw	high _pixels
  4223  000D22  6E05               	movwf	(??i2_refresh+1)& (0+255),c
  4224  000D24  50F3               	movf	prodl,w,c
  4225  000D26  2604               	addwf	??i2_refresh,f,c
  4226  000D28  50F4               	movf	prodh,w,c
  4227  000D2A  2205               	addwfc	??i2_refresh+1,f,c
  4228  000D2C  5008               	movf	i2refresh@theRow,w,c
  4229  000D2E  0D01               	mullw	1
  4230  000D30  50F3               	movf	prodl,w,c
  4231  000D32  2404               	addwf	??i2_refresh,w,c
  4232  000D34  6ED9               	movwf	fsr2l,c
  4233  000D36  50F4               	movf	prodh,w,c
  4234  000D38  2005               	addwfc	??i2_refresh+1,w,c
  4235  000D3A  6EDA               	movwf	fsr2h,c
  4236  000D3C  04DE               	decf	postinc2,w,c
  4237  000D3E  A4D8               	btfss	status,2,c
  4238  000D40  D003               	goto	i2l1810
  4239                           
  4240                           ;LED-API.c: 184: setRowHigh(theRow);
  4241  000D42  5008               	movf	i2refresh@theRow,w,c
  4242  000D44  ECD9  F007         	call	i2_setRowHigh
  4243  000D48                     i2l1810:
  4244  000D48  2A08               	incf	i2refresh@theRow,f,c
  4245  000D4A  D7E2               	goto	i2l1802
  4246  000D4C                     i2l1814:
  4247                           
  4248                           ;LED-API.c: 185: }
  4249                           ;LED-API.c: 189: setColHigh(theCol);
  4250  000D4C  5007               	movf	i2refresh@theCol,w,c
  4251  000D4E  EC58  F008         	call	i2_setColHigh
  4252                           
  4253                           ;LED-API.c: 190: _delay((unsigned long)((500)*(32000000/4000000.0)));
  4254  000D52  0E06               	movlw	6
  4255  000D54  6E04               	movwf	??i2_refresh& (0+255),c
  4256  000D56  0E30               	movlw	48
  4257  000D58                     i2u296_47:
  4258  000D58  2EE8               	decfsz	wreg,f,c
  4259  000D5A  D7FE               	goto	i2u296_47
  4260  000D5C  2E04               	decfsz	??i2_refresh& (0+255),f,c
  4261  000D5E  D7FC               	goto	i2u296_47
  4262  000D60  D000               	nop2	
  4263                           
  4264                           ;LED-API.c: 191: allOff();
  4265  000D62  EC93  F008         	call	i2_allOff	;wreg free
  4266  000D66  2A07               	incf	i2refresh@theCol,f,c
  4267  000D68  D7CD               	goto	i2l1796
  4268  000D6A                     __end_ofi2_refresh:
  4269                           	opt stack 0
  4270                           pclatu	equ	0xFFB
  4271                           pclath	equ	0xFFA
  4272                           tblptru	equ	0xFF8
  4273                           tblptrh	equ	0xFF7
  4274                           tblptrl	equ	0xFF6
  4275                           tablat	equ	0xFF5
  4276                           prodh	equ	0xFF4
  4277                           prodl	equ	0xFF3
  4278                           intcon	equ	0xFF2
  4279                           postinc0	equ	0xFEE
  4280                           fsr0h	equ	0xFEA
  4281                           fsr0l	equ	0xFE9
  4282                           wreg	equ	0xFE8
  4283                           postdec1	equ	0xFE5
  4284                           plusw1	equ	0xFE3
  4285                           fsr1h	equ	0xFE2
  4286                           fsr1l	equ	0xFE1
  4287                           indf2	equ	0xFDF
  4288                           postinc2	equ	0xFDE
  4289                           plusw2	equ	0xFDB
  4290                           fsr2h	equ	0xFDA
  4291                           fsr2l	equ	0xFD9
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function i2_setRowHigh *****************
  4295 ;; Defined at:
  4296 ;;		line 24 in file "Source/LED-API.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  row             1    wreg     unsigned char 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  row             1    2[COMRAM] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4310 ;;      Params:         0       0       0       0       0       0       0
  4311 ;;      Locals:         1       0       0       0       0       0       0
  4312 ;;      Temps:          2       0       0       0       0       0       0
  4313 ;;      Totals:         3       0       0       0       0       0       0
  4314 ;;Total ram usage:        3 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		i2_refresh
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text20
  4324  000FB2                     __ptext20:
  4325                           	opt stack 0
  4326  000FB2                     i2_setRowHigh:
  4327                           	opt stack 22
  4328                           
  4329                           ;incstack = 0
  4330                           ;i2setRowHigh@row stored from wreg
  4331  000FB2  6E03               	movwf	i2setRowHigh@row,c
  4332                           
  4333                           ;LED-API.c: 25: if(row < 8)
  4334  000FB4  0E08               	movlw	8
  4335  000FB6  6003               	cpfslt	i2setRowHigh@row,c
  4336  000FB8  D00D               	goto	i2l1648
  4337                           
  4338                           ;LED-API.c: 26: LATC |= (1 << row);
  4339  000FBA  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4340  000FBE  0E01               	movlw	1
  4341  000FC0  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4342  000FC2  2A01               	incf	??i2_setRowHigh,f,c
  4343  000FC4  D002               	goto	i2u114_44
  4344  000FC6                     i2u114_45:
  4345  000FC6  90D8               	bcf	status,0,c
  4346  000FC8  3602               	rlcf	??i2_setRowHigh+1,f,c
  4347  000FCA                     i2u114_44:
  4348  000FCA  2E01               	decfsz	??i2_setRowHigh,f,c
  4349  000FCC  D7FC               	goto	i2u114_45
  4350  000FCE  5002               	movf	??i2_setRowHigh+1,w,c
  4351  000FD0  128B               	iorwf	3979,f,c	;volatile
  4352  000FD2  0012               	return	
  4353  000FD4                     i2l1648:
  4354                           
  4355                           ;LED-API.c: 27: else
  4356                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  4357  000FD4  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4358  000FD8  0EF8               	movlw	-8
  4359  000FDA  2601               	addwf	??i2_setRowHigh,f,c
  4360  000FDC  0E01               	movlw	1
  4361  000FDE  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4362  000FE0  2A01               	incf	??i2_setRowHigh,f,c
  4363  000FE2  D002               	goto	i2u115_44
  4364  000FE4                     i2u115_45:
  4365  000FE4  90D8               	bcf	status,0,c
  4366  000FE6  3602               	rlcf	??i2_setRowHigh+1,f,c
  4367  000FE8                     i2u115_44:
  4368  000FE8  2E01               	decfsz	??i2_setRowHigh,f,c
  4369  000FEA  D7FC               	goto	i2u115_45
  4370  000FEC  5002               	movf	??i2_setRowHigh+1,w,c
  4371  000FEE  128C               	iorwf	3980,f,c	;volatile
  4372  000FF0  0012               	return	
  4373  000FF2                     __end_ofi2_setRowHigh:
  4374                           	opt stack 0
  4375                           pclatu	equ	0xFFB
  4376                           pclath	equ	0xFFA
  4377                           tblptru	equ	0xFF8
  4378                           tblptrh	equ	0xFF7
  4379                           tblptrl	equ	0xFF6
  4380                           tablat	equ	0xFF5
  4381                           prodh	equ	0xFF4
  4382                           prodl	equ	0xFF3
  4383                           intcon	equ	0xFF2
  4384                           postinc0	equ	0xFEE
  4385                           fsr0h	equ	0xFEA
  4386                           fsr0l	equ	0xFE9
  4387                           wreg	equ	0xFE8
  4388                           postdec1	equ	0xFE5
  4389                           plusw1	equ	0xFE3
  4390                           fsr1h	equ	0xFE2
  4391                           fsr1l	equ	0xFE1
  4392                           indf2	equ	0xFDF
  4393                           postinc2	equ	0xFDE
  4394                           plusw2	equ	0xFDB
  4395                           fsr2h	equ	0xFDA
  4396                           fsr2l	equ	0xFD9
  4397                           status	equ	0xFD8
  4398                           
  4399 ;; *************** function i2_setColHigh *****************
  4400 ;; Defined at:
  4401 ;;		line 20 in file "Source/LED-API.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  column          1    wreg     unsigned char 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  column          1    2[COMRAM] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4415 ;;      Params:         0       0       0       0       0       0       0
  4416 ;;      Locals:         1       0       0       0       0       0       0
  4417 ;;      Temps:          2       0       0       0       0       0       0
  4418 ;;      Totals:         3       0       0       0       0       0       0
  4419 ;;Total ram usage:        3 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		i2_refresh
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text21
  4429  0010B0                     __ptext21:
  4430                           	opt stack 0
  4431  0010B0                     i2_setColHigh:
  4432                           	opt stack 22
  4433                           
  4434                           ;incstack = 0
  4435                           ;i2setColHigh@column stored from wreg
  4436  0010B0  6E03               	movwf	i2setColHigh@column,c
  4437                           
  4438                           ;LED-API.c: 21: LATA |= (1 << column);
  4439  0010B2  C003  F001         	movff	i2setColHigh@column,??i2_setColHigh
  4440  0010B6  0E01               	movlw	1
  4441  0010B8  6E02               	movwf	(??i2_setColHigh+1)& (0+255),c
  4442  0010BA  2A01               	incf	??i2_setColHigh,f,c
  4443  0010BC  D002               	goto	i2u112_44
  4444  0010BE                     i2u112_45:
  4445  0010BE  90D8               	bcf	status,0,c
  4446  0010C0  3602               	rlcf	??i2_setColHigh+1,f,c
  4447  0010C2                     i2u112_44:
  4448  0010C2  2E01               	decfsz	??i2_setColHigh,f,c
  4449  0010C4  D7FC               	goto	i2u112_45
  4450  0010C6  5002               	movf	??i2_setColHigh+1,w,c
  4451  0010C8  1289               	iorwf	3977,f,c	;volatile
  4452  0010CA  0012               	return		;funcret
  4453  0010CC                     __end_ofi2_setColHigh:
  4454                           	opt stack 0
  4455                           pclatu	equ	0xFFB
  4456                           pclath	equ	0xFFA
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           prodh	equ	0xFF4
  4462                           prodl	equ	0xFF3
  4463                           intcon	equ	0xFF2
  4464                           postinc0	equ	0xFEE
  4465                           fsr0h	equ	0xFEA
  4466                           fsr0l	equ	0xFE9
  4467                           wreg	equ	0xFE8
  4468                           postdec1	equ	0xFE5
  4469                           plusw1	equ	0xFE3
  4470                           fsr1h	equ	0xFE2
  4471                           fsr1l	equ	0xFE1
  4472                           indf2	equ	0xFDF
  4473                           postinc2	equ	0xFDE
  4474                           plusw2	equ	0xFDB
  4475                           fsr2h	equ	0xFDA
  4476                           fsr2l	equ	0xFD9
  4477                           status	equ	0xFD8
  4478                           
  4479 ;; *************** function i2_allOff *****************
  4480 ;; Defined at:
  4481 ;;		line 171 in file "Source/LED-API.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4495 ;;      Params:         0       0       0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		i2_refresh
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text22
  4509  001126                     __ptext22:
  4510                           	opt stack 0
  4511  001126                     i2_allOff:
  4512                           	opt stack 22
  4513                           
  4514                           ;LED-API.c: 172: LATA = 0;
  4515                           
  4516                           ;incstack = 0
  4517  001126  0E00               	movlw	0
  4518  001128  6E89               	movwf	3977,c	;volatile
  4519                           
  4520                           ;LED-API.c: 173: LATC = 0;
  4521  00112A  0E00               	movlw	0
  4522  00112C  6E8B               	movwf	3979,c	;volatile
  4523                           
  4524                           ;LED-API.c: 174: LATD = 0;
  4525  00112E  0E00               	movlw	0
  4526  001130  6E8C               	movwf	3980,c	;volatile
  4527  001132  0012               	return		;funcret
  4528  001134                     __end_ofi2_allOff:
  4529                           	opt stack 0
  4530                           pclatu	equ	0xFFB
  4531                           pclath	equ	0xFFA
  4532                           tblptru	equ	0xFF8
  4533                           tblptrh	equ	0xFF7
  4534                           tblptrl	equ	0xFF6
  4535                           tablat	equ	0xFF5
  4536                           prodh	equ	0xFF4
  4537                           prodl	equ	0xFF3
  4538                           intcon	equ	0xFF2
  4539                           postinc0	equ	0xFEE
  4540                           fsr0h	equ	0xFEA
  4541                           fsr0l	equ	0xFE9
  4542                           wreg	equ	0xFE8
  4543                           postdec1	equ	0xFE5
  4544                           plusw1	equ	0xFE3
  4545                           fsr1h	equ	0xFE2
  4546                           fsr1l	equ	0xFE1
  4547                           indf2	equ	0xFDF
  4548                           postinc2	equ	0xFDE
  4549                           plusw2	equ	0xFDB
  4550                           fsr2h	equ	0xFDA
  4551                           fsr2l	equ	0xFD9
  4552                           status	equ	0xFD8
  4553                           
  4554 ;; *************** function i2_drawSymbol *****************
  4555 ;; Defined at:
  4556 ;;		line 85 in file "Source/LED-API.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  chosenSymbol    1    wreg     unsigned char 
  4559 ;;  offSetX         1    4[COMRAM] unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  chosenSymbol    1  125[COMRAM] unsigned char 
  4562 ;;  drawSymbol     68    0[BANK0 ] unsigned char [2][34]
  4563 ;;  drawSymbol     68    5[COMRAM] unsigned char [2][34]
  4564 ;;  drawSymbol     30   68[BANK0 ] unsigned char [2][15]
  4565 ;;  drawSymbol     30   73[COMRAM] unsigned char [2][15]
  4566 ;;  drawSymbol     22  103[COMRAM] unsigned char [2][11]
  4567 ;;  drawSymbol     16    0[BANK1 ] unsigned char [2][8]
  4568 ;;  drawSymbol     16   98[BANK0 ] unsigned char [2][8]
  4569 ;;  drawSymbol      1  120[BANK0 ] unsigned char 
  4570 ;;  drawSymbol      1  119[BANK0 ] unsigned char 
  4571 ;;  drawSymbol      1  118[BANK0 ] unsigned char 
  4572 ;;  drawSymbol      1  117[BANK0 ] unsigned char 
  4573 ;;  drawSymbol      1  116[BANK0 ] unsigned char 
  4574 ;;  drawSymbol      1  115[BANK0 ] unsigned char 
  4575 ;;  drawSymbol      1  114[BANK0 ] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4585 ;;      Params:         1       0       0       0       0       0       0
  4586 ;;      Locals:       121     121      16       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0
  4588 ;;      Totals:       122     121      16       0       0       0       0
  4589 ;;Total ram usage:      259 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    1
  4592 ;; This function calls:
  4593 ;;		i2_on
  4594 ;; This function is called by:
  4595 ;;		_checkNextPosition
  4596 ;;		i2_startPong
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text23
  4601  000308                     __ptext23:
  4602                           	opt stack 0
  4603  000308                     i2_drawSymbol:
  4604                           	opt stack 22
  4605                           
  4606                           ;incstack = 0
  4607                           ;i2drawSymbol@chosenSymbol stored from wreg
  4608  000308  6E7E               	movwf	i2drawSymbol@chosenSymbol,c
  4609                           
  4610                           ;LED-API.c: 87: char symbolOne[11][2] = {{2,0},{3,0}, {4,0}, {3,1}, {3,2}, {3,3}, {3,4},
      +                           {3,5}, {3,6}, {3,7}, {4,6}};
  4611  00030A  EE22  F080         	lfsr	2,drawSymbol@F3224
  4612  00030E  EE10  F068         	lfsr	1,i2drawSymbol@symbolOne
  4613  000312  0E15               	movlw	21
  4614  000314                     i2u226_41:
  4615  000314  CFDB FFE3          	movff	plusw2,plusw1
  4616  000318  06E8               	decf	wreg,f,c
  4617  00031A  E2FC               	bc	i2u226_41
  4618                           
  4619                           ;LED-API.c: 88: char symbolTwo[15][2] = {{1,0}, {2,0}, {3,0}, {4,0}, {5,0}, {5,1}, {4,2}
      +                          , {3,3}, {2,4}, {1,5}, {1,6}, {5,6}, {2,7}, {3,7}, {4,7}};
  4620  00031C  EE22  F044         	lfsr	2,drawSymbol@F3227
  4621  000320  EE10  F04A         	lfsr	1,i2drawSymbol@symbolTwo
  4622  000324  0E1D               	movlw	29
  4623  000326                     i2u227_41:
  4624  000326  CFDB FFE3          	movff	plusw2,plusw1
  4625  00032A  06E8               	decf	wreg,f,c
  4626  00032C  E2FC               	bc	i2u227_41
  4627                           
  4628                           ;LED-API.c: 89: char symbolThree[15][2] = {{2,0}, {3,0}, {4,0}, {5,1}, {1,1}, {1,2}, {1,
      +                          3}, {2,4}, {3,4}, {1,5}, {1,6}, {2,7}, {3,7}, {4,7}, {5,6}};
  4629  00032E  EE22  F062         	lfsr	2,drawSymbol@F3230
  4630  000332  EE10  F0C4         	lfsr	1,i2drawSymbol@symbolThree
  4631  000336  0E1D               	movlw	29
  4632  000338                     i2u228_41:
  4633  000338  CFDB FFE3          	movff	plusw2,plusw1
  4634  00033C  06E8               	decf	wreg,f,c
  4635  00033E  E2FC               	bc	i2u228_41
  4636                           
  4637                           ;LED-API.c: 91: char symbolPlay[34][2] = {
  4638                           ;LED-API.c: 92: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  4639                           ;LED-API.c: 93: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  4640                           ;LED-API.c: 94: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  4641                           ;LED-API.c: 95: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  4642  000340  EE22  F000         	lfsr	2,drawSymbol@F3233
  4643  000344  EE10  F006         	lfsr	1,i2drawSymbol@symbolPlay
  4644  000348  0E43               	movlw	67
  4645  00034A                     i2u229_41:
  4646  00034A  CFDB FFE3          	movff	plusw2,plusw1
  4647  00034E  06E8               	decf	wreg,f,c
  4648  000350  E2FC               	bc	i2u229_41
  4649                           
  4650                           ;LED-API.c: 97: char symbolGo[34][2] = {
  4651                           ;LED-API.c: 98: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0},
      +                          {5,0},{6,1},{5,2},{4,2},
  4652                           ;LED-API.c: 99: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},{
      +                          13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  4653  000352  EE23  F080         	lfsr	2,drawSymbol@F3236
  4654  000356  EE10  F080         	lfsr	1,i2drawSymbol@symbolGo
  4655  00035A  0E43               	movlw	67
  4656  00035C                     i2u230_41:
  4657  00035C  CFDB FFE3          	movff	plusw2,plusw1
  4658  000360  06E8               	decf	wreg,f,c
  4659  000362  E2FC               	bc	i2u230_41
  4660                           
  4661                           ;LED-API.c: 101: char symbolArrowLeft[8][2] = {{3,0}, {3,7}, {4,1}, {4,6}, {5,2}, {5,5},
      +                           {6,3}, {6,4}};
  4662  000364  EE21  F0B3         	lfsr	2,drawSymbol@F3239
  4663  000368  EE10  F0E2         	lfsr	1,i2drawSymbol@symbolArrowLeft
  4664  00036C  0E0F               	movlw	15
  4665  00036E                     i2u231_41:
  4666  00036E  CFDB FFE3          	movff	plusw2,plusw1
  4667  000372  06E8               	decf	wreg,f,c
  4668  000374  E2FC               	bc	i2u231_41
  4669                           
  4670                           ;LED-API.c: 102: char symbolArrowRight[8][2] = {{4,0}, {3,1}, {2,2}, {1,3}, {1,4}, {2,5}
      +                          , {3,6}, {4,7}};
  4671  000376  EE22  F096         	lfsr	2,drawSymbol@F3242
  4672  00037A  EE11  F000         	lfsr	1,i2drawSymbol@symbolArrowRight
  4673  00037E  0E0F               	movlw	15
  4674  000380                     i2u232_41:
  4675  000380  CFDB FFE3          	movff	plusw2,plusw1
  4676  000384  06E8               	decf	wreg,f,c
  4677  000386  E2FC               	bc	i2u232_41
  4678                           
  4679                           ;LED-API.c: 104: switch(chosenSymbol)
  4680  000388  D110               	goto	i2l2512
  4681  00038A                     i2l2426:
  4682                           
  4683                           ;LED-API.c: 109: for(unsigned char i = 0; i < 11; i++)
  4684  00038A  0E00               	movlw	0
  4685  00038C  0100               	movlb	0	; () banked
  4686  00038E  6FF2               	movwf	i2drawSymbol@i& (0+255),b
  4687  000390                     i2l2428:
  4688                           
  4689                           ; BSR set to: 0
  4690  000390  0E0A               	movlw	10
  4691  000392  0100               	movlb	0	; () banked
  4692  000394  65F2               	cpfsgt	i2drawSymbol@i& (0+255),b
  4693  000396  D001               	goto	i2l2432
  4694  000398  0012               	return	
  4695  00039A                     i2l2432:
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;LED-API.c: 110: {
  4699                           ;LED-API.c: 111: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  4700  00039A  0100               	movlb	0	; () banked
  4701  00039C  51F2               	movf	i2drawSymbol@i& (0+255),w,b
  4702  00039E  0D02               	mullw	2
  4703  0003A0  0E68               	movlw	low i2drawSymbol@symbolOne
  4704  0003A2  24F3               	addwf	prodl,w,c
  4705  0003A4  6ED9               	movwf	fsr2l,c
  4706  0003A6  0E00               	movlw	high i2drawSymbol@symbolOne
  4707  0003A8  20F4               	addwfc	prodh,w,c
  4708  0003AA  6EDA               	movwf	fsr2h,c
  4709  0003AC  50DF               	movf	indf2,w,c
  4710  0003AE  2405               	addwf	i2drawSymbol@offSetX,w,c
  4711  0003B0  6E01               	movwf	i2on@row,c
  4712  0003B2  0100               	movlb	0	; () banked
  4713  0003B4  51F2               	movf	i2drawSymbol@i& (0+255),w,b
  4714  0003B6  0D02               	mullw	2
  4715  0003B8  0E01               	movlw	1
  4716  0003BA  26F3               	addwf	prodl,f,c
  4717  0003BC  0E00               	movlw	0
  4718  0003BE  22F4               	addwfc	prodh,f,c
  4719  0003C0  0E68               	movlw	low i2drawSymbol@symbolOne
  4720  0003C2  24F3               	addwf	prodl,w,c
  4721  0003C4  6ED9               	movwf	fsr2l,c
  4722  0003C6  0E00               	movlw	high i2drawSymbol@symbolOne
  4723  0003C8  20F4               	addwfc	prodh,w,c
  4724  0003CA  6EDA               	movwf	fsr2h,c
  4725  0003CC  50DF               	movf	indf2,w,c
  4726  0003CE  EC17  F008         	call	i2_on
  4727  0003D2  0100               	movlb	0	; () banked
  4728  0003D4  2BF2               	incf	i2drawSymbol@i& (0+255),f,b
  4729  0003D6  D7DC               	goto	i2l2428
  4730  0003D8                     i2l2438:
  4731                           
  4732                           ;LED-API.c: 117: for(unsigned char i = 0; i < 15; i++)
  4733  0003D8  0E00               	movlw	0
  4734  0003DA  0100               	movlb	0	; () banked
  4735  0003DC  6FF3               	movwf	i2drawSymbol@i_82& (0+255),b
  4736  0003DE                     i2l2440:
  4737                           
  4738                           ; BSR set to: 0
  4739  0003DE  0E0E               	movlw	14
  4740  0003E0  0100               	movlb	0	; () banked
  4741  0003E2  65F3               	cpfsgt	i2drawSymbol@i_82& (0+255),b
  4742  0003E4  D001               	goto	i2l2444
  4743  0003E6  0012               	return	
  4744  0003E8                     i2l2444:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;LED-API.c: 118: {
  4748                           ;LED-API.c: 119: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  4749  0003E8  0100               	movlb	0	; () banked
  4750  0003EA  51F3               	movf	i2drawSymbol@i_82& (0+255),w,b
  4751  0003EC  0D02               	mullw	2
  4752  0003EE  0E4A               	movlw	low i2drawSymbol@symbolTwo
  4753  0003F0  24F3               	addwf	prodl,w,c
  4754  0003F2  6ED9               	movwf	fsr2l,c
  4755  0003F4  0E00               	movlw	high i2drawSymbol@symbolTwo
  4756  0003F6  20F4               	addwfc	prodh,w,c
  4757  0003F8  6EDA               	movwf	fsr2h,c
  4758  0003FA  50DF               	movf	indf2,w,c
  4759  0003FC  2405               	addwf	i2drawSymbol@offSetX,w,c
  4760  0003FE  6E01               	movwf	i2on@row,c
  4761  000400  0100               	movlb	0	; () banked
  4762  000402  51F3               	movf	i2drawSymbol@i_82& (0+255),w,b
  4763  000404  0D02               	mullw	2
  4764  000406  0E01               	movlw	1
  4765  000408  26F3               	addwf	prodl,f,c
  4766  00040A  0E00               	movlw	0
  4767  00040C  22F4               	addwfc	prodh,f,c
  4768  00040E  0E4A               	movlw	low i2drawSymbol@symbolTwo
  4769  000410  24F3               	addwf	prodl,w,c
  4770  000412  6ED9               	movwf	fsr2l,c
  4771  000414  0E00               	movlw	high i2drawSymbol@symbolTwo
  4772  000416  20F4               	addwfc	prodh,w,c
  4773  000418  6EDA               	movwf	fsr2h,c
  4774  00041A  50DF               	movf	indf2,w,c
  4775  00041C  EC17  F008         	call	i2_on
  4776  000420  0100               	movlb	0	; () banked
  4777  000422  2BF3               	incf	i2drawSymbol@i_82& (0+255),f,b
  4778  000424  D7DC               	goto	i2l2440
  4779  000426                     i2l2450:
  4780                           
  4781                           ;LED-API.c: 125: for(unsigned char i = 0; i < 15; i++)
  4782  000426  0E00               	movlw	0
  4783  000428  0100               	movlb	0	; () banked
  4784  00042A  6FF4               	movwf	i2drawSymbol@i_83& (0+255),b
  4785  00042C                     i2l2452:
  4786                           
  4787                           ; BSR set to: 0
  4788  00042C  0E0E               	movlw	14
  4789  00042E  0100               	movlb	0	; () banked
  4790  000430  65F4               	cpfsgt	i2drawSymbol@i_83& (0+255),b
  4791  000432  D001               	goto	i2l2456
  4792  000434  0012               	return	
  4793  000436                     i2l2456:
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;LED-API.c: 126: {
  4797                           ;LED-API.c: 127: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  4798  000436  0100               	movlb	0	; () banked
  4799  000438  51F4               	movf	i2drawSymbol@i_83& (0+255),w,b
  4800  00043A  0D02               	mullw	2
  4801  00043C  0EC4               	movlw	low i2drawSymbol@symbolThree
  4802  00043E  24F3               	addwf	prodl,w,c
  4803  000440  6ED9               	movwf	fsr2l,c
  4804  000442  0E00               	movlw	high i2drawSymbol@symbolThree
  4805  000444  20F4               	addwfc	prodh,w,c
  4806  000446  6EDA               	movwf	fsr2h,c
  4807  000448  50DF               	movf	indf2,w,c
  4808  00044A  2405               	addwf	i2drawSymbol@offSetX,w,c
  4809  00044C  6E01               	movwf	i2on@row,c
  4810  00044E  0100               	movlb	0	; () banked
  4811  000450  51F4               	movf	i2drawSymbol@i_83& (0+255),w,b
  4812  000452  0D02               	mullw	2
  4813  000454  0E01               	movlw	1
  4814  000456  26F3               	addwf	prodl,f,c
  4815  000458  0E00               	movlw	0
  4816  00045A  22F4               	addwfc	prodh,f,c
  4817  00045C  0EC4               	movlw	low i2drawSymbol@symbolThree
  4818  00045E  24F3               	addwf	prodl,w,c
  4819  000460  6ED9               	movwf	fsr2l,c
  4820  000462  0E00               	movlw	high i2drawSymbol@symbolThree
  4821  000464  20F4               	addwfc	prodh,w,c
  4822  000466  6EDA               	movwf	fsr2h,c
  4823  000468  50DF               	movf	indf2,w,c
  4824  00046A  EC17  F008         	call	i2_on
  4825  00046E  0100               	movlb	0	; () banked
  4826  000470  2BF4               	incf	i2drawSymbol@i_83& (0+255),f,b
  4827  000472  D7DC               	goto	i2l2452
  4828  000474                     i2l2462:
  4829                           
  4830                           ;LED-API.c: 133: for(unsigned char i = 0; i < 34; i++)
  4831  000474  0E00               	movlw	0
  4832  000476  0100               	movlb	0	; () banked
  4833  000478  6FF5               	movwf	i2drawSymbol@i_84& (0+255),b
  4834  00047A                     i2l2464:
  4835                           
  4836                           ; BSR set to: 0
  4837  00047A  0E21               	movlw	33
  4838  00047C  0100               	movlb	0	; () banked
  4839  00047E  65F5               	cpfsgt	i2drawSymbol@i_84& (0+255),b
  4840  000480  D001               	goto	i2l2468
  4841  000482  0012               	return	
  4842  000484                     i2l2468:
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;LED-API.c: 134: {
  4846                           ;LED-API.c: 135: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  4847  000484  0100               	movlb	0	; () banked
  4848  000486  51F5               	movf	i2drawSymbol@i_84& (0+255),w,b
  4849  000488  0D02               	mullw	2
  4850  00048A  0E06               	movlw	low i2drawSymbol@symbolPlay
  4851  00048C  24F3               	addwf	prodl,w,c
  4852  00048E  6ED9               	movwf	fsr2l,c
  4853  000490  0E00               	movlw	high i2drawSymbol@symbolPlay
  4854  000492  20F4               	addwfc	prodh,w,c
  4855  000494  6EDA               	movwf	fsr2h,c
  4856  000496  50DF               	movf	indf2,w,c
  4857  000498  2405               	addwf	i2drawSymbol@offSetX,w,c
  4858  00049A  6E01               	movwf	i2on@row,c
  4859  00049C  0100               	movlb	0	; () banked
  4860  00049E  51F5               	movf	i2drawSymbol@i_84& (0+255),w,b
  4861  0004A0  0D02               	mullw	2
  4862  0004A2  0E01               	movlw	1
  4863  0004A4  26F3               	addwf	prodl,f,c
  4864  0004A6  0E00               	movlw	0
  4865  0004A8  22F4               	addwfc	prodh,f,c
  4866  0004AA  0E06               	movlw	low i2drawSymbol@symbolPlay
  4867  0004AC  24F3               	addwf	prodl,w,c
  4868  0004AE  6ED9               	movwf	fsr2l,c
  4869  0004B0  0E00               	movlw	high i2drawSymbol@symbolPlay
  4870  0004B2  20F4               	addwfc	prodh,w,c
  4871  0004B4  6EDA               	movwf	fsr2h,c
  4872  0004B6  50DF               	movf	indf2,w,c
  4873  0004B8  EC17  F008         	call	i2_on
  4874  0004BC  0100               	movlb	0	; () banked
  4875  0004BE  2BF5               	incf	i2drawSymbol@i_84& (0+255),f,b
  4876  0004C0  D7DC               	goto	i2l2464
  4877  0004C2                     i2l2474:
  4878                           
  4879                           ;LED-API.c: 141: for(unsigned char i = 0; i < 34; i++)
  4880  0004C2  0E00               	movlw	0
  4881  0004C4  0100               	movlb	0	; () banked
  4882  0004C6  6FF6               	movwf	i2drawSymbol@i_85& (0+255),b
  4883  0004C8                     i2l2476:
  4884                           
  4885                           ; BSR set to: 0
  4886  0004C8  0E21               	movlw	33
  4887  0004CA  0100               	movlb	0	; () banked
  4888  0004CC  65F6               	cpfsgt	i2drawSymbol@i_85& (0+255),b
  4889  0004CE  D001               	goto	i2l2480
  4890  0004D0  0012               	return	
  4891  0004D2                     i2l2480:
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;LED-API.c: 142: {
  4895                           ;LED-API.c: 143: on(symbolGo[i][1], symbolGo[i][0]);
  4896  0004D2  0100               	movlb	0	; () banked
  4897  0004D4  51F6               	movf	i2drawSymbol@i_85& (0+255),w,b
  4898  0004D6  0D02               	mullw	2
  4899  0004D8  0E80               	movlw	low i2drawSymbol@symbolGo
  4900  0004DA  24F3               	addwf	prodl,w,c
  4901  0004DC  6ED9               	movwf	fsr2l,c
  4902  0004DE  0E00               	movlw	high i2drawSymbol@symbolGo
  4903  0004E0  20F4               	addwfc	prodh,w,c
  4904  0004E2  6EDA               	movwf	fsr2h,c
  4905  0004E4  50DF               	movf	indf2,w,c
  4906  0004E6  6E01               	movwf	i2on@row,c
  4907  0004E8  0100               	movlb	0	; () banked
  4908  0004EA  51F6               	movf	i2drawSymbol@i_85& (0+255),w,b
  4909  0004EC  0D02               	mullw	2
  4910  0004EE  0E01               	movlw	1
  4911  0004F0  26F3               	addwf	prodl,f,c
  4912  0004F2  0E00               	movlw	0
  4913  0004F4  22F4               	addwfc	prodh,f,c
  4914  0004F6  0E80               	movlw	low i2drawSymbol@symbolGo
  4915  0004F8  24F3               	addwf	prodl,w,c
  4916  0004FA  6ED9               	movwf	fsr2l,c
  4917  0004FC  0E00               	movlw	high i2drawSymbol@symbolGo
  4918  0004FE  20F4               	addwfc	prodh,w,c
  4919  000500  6EDA               	movwf	fsr2h,c
  4920  000502  50DF               	movf	indf2,w,c
  4921  000504  EC17  F008         	call	i2_on
  4922  000508  0100               	movlb	0	; () banked
  4923  00050A  2BF6               	incf	i2drawSymbol@i_85& (0+255),f,b
  4924  00050C  D7DD               	goto	i2l2476
  4925  00050E                     i2l2486:
  4926                           
  4927                           ;LED-API.c: 147: for(unsigned char i = 0; i < 8; i++)
  4928  00050E  0E00               	movlw	0
  4929  000510  0100               	movlb	0	; () banked
  4930  000512  6FF7               	movwf	i2drawSymbol@i_86& (0+255),b
  4931  000514                     i2l2488:
  4932                           
  4933                           ; BSR set to: 0
  4934  000514  0E07               	movlw	7
  4935  000516  0100               	movlb	0	; () banked
  4936  000518  65F7               	cpfsgt	i2drawSymbol@i_86& (0+255),b
  4937  00051A  D001               	goto	i2l2492
  4938  00051C  0012               	return	
  4939  00051E                     i2l2492:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;LED-API.c: 148: {
  4943                           ;LED-API.c: 149: on(symbolArrowLeft[i][1], symbolArrowLeft[i][0] + offSetX);
  4944  00051E  0100               	movlb	0	; () banked
  4945  000520  51F7               	movf	i2drawSymbol@i_86& (0+255),w,b
  4946  000522  0D02               	mullw	2
  4947  000524  0EE2               	movlw	low i2drawSymbol@symbolArrowLeft
  4948  000526  24F3               	addwf	prodl,w,c
  4949  000528  6ED9               	movwf	fsr2l,c
  4950  00052A  0E00               	movlw	high i2drawSymbol@symbolArrowLeft
  4951  00052C  20F4               	addwfc	prodh,w,c
  4952  00052E  6EDA               	movwf	fsr2h,c
  4953  000530  50DF               	movf	indf2,w,c
  4954  000532  2405               	addwf	i2drawSymbol@offSetX,w,c
  4955  000534  6E01               	movwf	i2on@row,c
  4956  000536  0100               	movlb	0	; () banked
  4957  000538  51F7               	movf	i2drawSymbol@i_86& (0+255),w,b
  4958  00053A  0D02               	mullw	2
  4959  00053C  0E01               	movlw	1
  4960  00053E  26F3               	addwf	prodl,f,c
  4961  000540  0E00               	movlw	0
  4962  000542  22F4               	addwfc	prodh,f,c
  4963  000544  0EE2               	movlw	low i2drawSymbol@symbolArrowLeft
  4964  000546  24F3               	addwf	prodl,w,c
  4965  000548  6ED9               	movwf	fsr2l,c
  4966  00054A  0E00               	movlw	high i2drawSymbol@symbolArrowLeft
  4967  00054C  20F4               	addwfc	prodh,w,c
  4968  00054E  6EDA               	movwf	fsr2h,c
  4969  000550  50DF               	movf	indf2,w,c
  4970  000552  EC17  F008         	call	i2_on
  4971  000556  0100               	movlb	0	; () banked
  4972  000558  2BF7               	incf	i2drawSymbol@i_86& (0+255),f,b
  4973  00055A  D7DC               	goto	i2l2488
  4974  00055C                     i2l2498:
  4975                           
  4976                           ;LED-API.c: 153: for(unsigned char i = 0; i < 8; i++)
  4977  00055C  0E00               	movlw	0
  4978  00055E  0100               	movlb	0	; () banked
  4979  000560  6FF8               	movwf	i2drawSymbol@i_87& (0+255),b
  4980  000562                     i2l2500:
  4981                           
  4982                           ; BSR set to: 0
  4983  000562  0E07               	movlw	7
  4984  000564  0100               	movlb	0	; () banked
  4985  000566  65F8               	cpfsgt	i2drawSymbol@i_87& (0+255),b
  4986  000568  D001               	goto	i2l2504
  4987  00056A  0012               	return	
  4988  00056C                     i2l2504:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;LED-API.c: 154: {
  4992                           ;LED-API.c: 155: on(symbolArrowRight[i][1], symbolArrowRight[i][0]+ offSetX);
  4993  00056C  0100               	movlb	0	; () banked
  4994  00056E  51F8               	movf	i2drawSymbol@i_87& (0+255),w,b
  4995  000570  0D02               	mullw	2
  4996  000572  0E00               	movlw	low i2drawSymbol@symbolArrowRight
  4997  000574  24F3               	addwf	prodl,w,c
  4998  000576  6ED9               	movwf	fsr2l,c
  4999  000578  0E01               	movlw	high i2drawSymbol@symbolArrowRight
  5000  00057A  20F4               	addwfc	prodh,w,c
  5001  00057C  6EDA               	movwf	fsr2h,c
  5002  00057E  50DF               	movf	indf2,w,c
  5003  000580  2405               	addwf	i2drawSymbol@offSetX,w,c
  5004  000582  6E01               	movwf	i2on@row,c
  5005  000584  0100               	movlb	0	; () banked
  5006  000586  51F8               	movf	i2drawSymbol@i_87& (0+255),w,b
  5007  000588  0D02               	mullw	2
  5008  00058A  0E01               	movlw	1
  5009  00058C  26F3               	addwf	prodl,f,c
  5010  00058E  0E00               	movlw	0
  5011  000590  22F4               	addwfc	prodh,f,c
  5012  000592  0E00               	movlw	low i2drawSymbol@symbolArrowRight
  5013  000594  24F3               	addwf	prodl,w,c
  5014  000596  6ED9               	movwf	fsr2l,c
  5015  000598  0E01               	movlw	high i2drawSymbol@symbolArrowRight
  5016  00059A  20F4               	addwfc	prodh,w,c
  5017  00059C  6EDA               	movwf	fsr2h,c
  5018  00059E  50DF               	movf	indf2,w,c
  5019  0005A0  EC17  F008         	call	i2_on
  5020  0005A4  0100               	movlb	0	; () banked
  5021  0005A6  2BF8               	incf	i2drawSymbol@i_87& (0+255),f,b
  5022  0005A8  D7DC               	goto	i2l2500
  5023  0005AA                     i2l2512:
  5024  0005AA  507E               	movf	i2drawSymbol@chosenSymbol,w,c
  5025                           
  5026                           ; Switch size 1, requested type "space"
  5027                           ; Number of cases is 7, Range of values is 1 to 7
  5028                           ; switch strategies available:
  5029                           ; Name         Instructions Cycles
  5030                           ; simple_byte           22    12 (average)
  5031                           ;	Chosen strategy is simple_byte
  5032  0005AC  0A01               	xorlw	1	; case 1
  5033  0005AE  B4D8               	btfsc	status,2,c
  5034  0005B0  D6EC               	goto	i2l2426
  5035  0005B2  0A03               	xorlw	3	; case 2
  5036  0005B4  B4D8               	btfsc	status,2,c
  5037  0005B6  D710               	goto	i2l2438
  5038  0005B8  0A01               	xorlw	1	; case 3
  5039  0005BA  B4D8               	btfsc	status,2,c
  5040  0005BC  D734               	goto	i2l2450
  5041  0005BE  0A07               	xorlw	7	; case 4
  5042  0005C0  B4D8               	btfsc	status,2,c
  5043  0005C2  D758               	goto	i2l2462
  5044  0005C4  0A01               	xorlw	1	; case 5
  5045  0005C6  B4D8               	btfsc	status,2,c
  5046  0005C8  D77C               	goto	i2l2474
  5047  0005CA  0A03               	xorlw	3	; case 6
  5048  0005CC  B4D8               	btfsc	status,2,c
  5049  0005CE  D79F               	goto	i2l2486
  5050  0005D0  0A01               	xorlw	1	; case 7
  5051  0005D2  A4D8               	btfss	status,2,c
  5052  0005D4  0012               	return	
  5053  0005D6  D7C2               	goto	i2l2498
  5054  0005D8                     __end_ofi2_drawSymbol:
  5055                           	opt stack 0
  5056                           pclatu	equ	0xFFB
  5057                           pclath	equ	0xFFA
  5058                           tblptru	equ	0xFF8
  5059                           tblptrh	equ	0xFF7
  5060                           tblptrl	equ	0xFF6
  5061                           tablat	equ	0xFF5
  5062                           prodh	equ	0xFF4
  5063                           prodl	equ	0xFF3
  5064                           intcon	equ	0xFF2
  5065                           postinc0	equ	0xFEE
  5066                           fsr0h	equ	0xFEA
  5067                           fsr0l	equ	0xFE9
  5068                           wreg	equ	0xFE8
  5069                           postdec1	equ	0xFE5
  5070                           plusw1	equ	0xFE3
  5071                           fsr1h	equ	0xFE2
  5072                           fsr1l	equ	0xFE1
  5073                           indf2	equ	0xFDF
  5074                           postinc2	equ	0xFDE
  5075                           plusw2	equ	0xFDB
  5076                           fsr2h	equ	0xFDA
  5077                           fsr2l	equ	0xFD9
  5078                           status	equ	0xFD8
  5079                           
  5080 ;; *************** function i2_on *****************
  5081 ;; Defined at:
  5082 ;;		line 43 in file "Source/LED-API.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  column          1    wreg     unsigned char 
  5085 ;;  row             1    0[COMRAM] unsigned char 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  column          1    3[COMRAM] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5097 ;;      Params:         1       0       0       0       0       0       0
  5098 ;;      Locals:         1       0       0       0       0       0       0
  5099 ;;      Temps:          2       0       0       0       0       0       0
  5100 ;;      Totals:         4       0       0       0       0       0       0
  5101 ;;Total ram usage:        4 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_writePong
  5107 ;;		i2_drawSymbol
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text24
  5112  00102E                     __ptext24:
  5113                           	opt stack 0
  5114  00102E                     i2_on:
  5115                           	opt stack 24
  5116                           
  5117                           ;incstack = 0
  5118                           ;i2on@column stored from wreg
  5119  00102E  6E04               	movwf	i2on@column,c
  5120                           
  5121                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  5122  001030  0E0F               	movlw	15
  5123  001032  6401               	cpfsgt	i2on@row,c
  5124  001034  D001               	goto	i2l2408
  5125  001036  0012               	return	
  5126  001038                     i2l2408:
  5127                           
  5128                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  5129  001038  0E07               	movlw	7
  5130  00103A  6404               	cpfsgt	i2on@column,c
  5131  00103C  D001               	goto	i2l2412
  5132  00103E  0012               	return	
  5133  001040                     i2l2412:
  5134                           
  5135                           ;LED-API.c: 50: pixels[column][row] = 1;
  5136  001040  5004               	movf	i2on@column,w,c
  5137  001042  0D10               	mullw	16
  5138  001044  0E00               	movlw	low _pixels
  5139  001046  6E02               	movwf	??i2_on& (0+255),c
  5140  001048  0E03               	movlw	high _pixels
  5141  00104A  6E03               	movwf	(??i2_on+1)& (0+255),c
  5142  00104C  50F3               	movf	prodl,w,c
  5143  00104E  2602               	addwf	??i2_on,f,c
  5144  001050  50F4               	movf	prodh,w,c
  5145  001052  2203               	addwfc	??i2_on+1,f,c
  5146  001054  5001               	movf	i2on@row,w,c
  5147  001056  0D01               	mullw	1
  5148  001058  50F3               	movf	prodl,w,c
  5149  00105A  2402               	addwf	??i2_on,w,c
  5150  00105C  6ED9               	movwf	fsr2l,c
  5151  00105E  50F4               	movf	prodh,w,c
  5152  001060  2003               	addwfc	??i2_on+1,w,c
  5153  001062  6EDA               	movwf	fsr2h,c
  5154  001064  0E01               	movlw	1
  5155  001066  6EDF               	movwf	indf2,c
  5156  001068  0012               	return		;funcret
  5157  00106A                     __end_ofi2_on:
  5158                           	opt stack 0
  5159                           pclatu	equ	0xFFB
  5160                           pclath	equ	0xFFA
  5161                           tblptru	equ	0xFF8
  5162                           tblptrh	equ	0xFF7
  5163                           tblptrl	equ	0xFF6
  5164                           tablat	equ	0xFF5
  5165                           prodh	equ	0xFF4
  5166                           prodl	equ	0xFF3
  5167                           intcon	equ	0xFF2
  5168                           postinc0	equ	0xFEE
  5169                           fsr0h	equ	0xFEA
  5170                           fsr0l	equ	0xFE9
  5171                           wreg	equ	0xFE8
  5172                           postdec1	equ	0xFE5
  5173                           plusw1	equ	0xFE3
  5174                           fsr1h	equ	0xFE2
  5175                           fsr1l	equ	0xFE1
  5176                           indf2	equ	0xFDF
  5177                           postinc2	equ	0xFDE
  5178                           plusw2	equ	0xFDB
  5179                           fsr2h	equ	0xFDA
  5180                           fsr2l	equ	0xFD9
  5181                           status	equ	0xFD8
  5182                           
  5183 ;; *************** function _getNextPosition *****************
  5184 ;; Defined at:
  5185 ;;		line 168 in file "main.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;		None
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;		None
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5199 ;;      Params:         0       0       0       0       0       0       0
  5200 ;;      Locals:         0       0       0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0
  5202 ;;      Totals:         0       0       0       0       0       0       0
  5203 ;;Total ram usage:        0 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_checkNextPosition
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text25
  5213  000A94                     __ptext25:
  5214                           	opt stack 0
  5215  000A94                     _getNextPosition:
  5216                           	opt stack 24
  5217                           
  5218                           ;main.c: 170: switch(_ball.bDirection)
  5219                           
  5220                           ;incstack = 0
  5221  000A94  D02E               	goto	i2l2056
  5222  000A96                     i2l2042:
  5223                           
  5224                           ;main.c: 173: _nextPos[0] = _ball.bPos[0] + 1;
  5225  000A96  0101               	movlb	1	; () banked
  5226  000A98  29CF               	incf	__ball& (0+255),w,b
  5227  000A9A  0101               	movlb	1	; () banked
  5228  000A9C  6FD2               	movwf	__nextPos& (0+255),b
  5229                           
  5230                           ;main.c: 174: _nextPos[1] = _ball.bPos[1] + 1;
  5231  000A9E  0101               	movlb	1	; () banked
  5232  000AA0  29D0               	incf	(__ball+1)& (0+255),w,b
  5233  000AA2  0101               	movlb	1	; () banked
  5234  000AA4  6FD3               	movwf	(__nextPos+1)& (0+255),b
  5235                           
  5236                           ;main.c: 175: break;
  5237  000AA6  0012               	return	
  5238  000AA8                     i2l2044:
  5239                           
  5240                           ; BSR set to: 1
  5241                           ;main.c: 177: _nextPos[0] = _ball.bPos[0] + 1;
  5242  000AA8  0101               	movlb	1	; () banked
  5243  000AAA  29CF               	incf	__ball& (0+255),w,b
  5244  000AAC  0101               	movlb	1	; () banked
  5245  000AAE  6FD2               	movwf	__nextPos& (0+255),b
  5246                           
  5247                           ;main.c: 178: break;
  5248  000AB0  0012               	return	
  5249  000AB2                     i2l2046:
  5250                           
  5251                           ; BSR set to: 1
  5252                           ;main.c: 180: _nextPos[0] = _ball.bPos[0] + 1;
  5253  000AB2  0101               	movlb	1	; () banked
  5254  000AB4  29CF               	incf	__ball& (0+255),w,b
  5255  000AB6  0101               	movlb	1	; () banked
  5256  000AB8  6FD2               	movwf	__nextPos& (0+255),b
  5257                           
  5258                           ;main.c: 181: _nextPos[1] = _ball.bPos[1] - 1;
  5259  000ABA  0101               	movlb	1	; () banked
  5260  000ABC  05D0               	decf	(__ball+1)& (0+255),w,b
  5261  000ABE  0101               	movlb	1	; () banked
  5262  000AC0  6FD3               	movwf	(__nextPos+1)& (0+255),b
  5263                           
  5264                           ;main.c: 182: break;
  5265  000AC2  0012               	return	
  5266  000AC4                     i2l2048:
  5267                           
  5268                           ; BSR set to: 1
  5269                           ;main.c: 184: _nextPos[0] = _ball.bPos[0] - 1;
  5270  000AC4  0101               	movlb	1	; () banked
  5271  000AC6  05CF               	decf	__ball& (0+255),w,b
  5272  000AC8  0101               	movlb	1	; () banked
  5273  000ACA  6FD2               	movwf	__nextPos& (0+255),b
  5274                           
  5275                           ;main.c: 185: _nextPos[1] = _ball.bPos[1] - 1;
  5276  000ACC  0101               	movlb	1	; () banked
  5277  000ACE  05D0               	decf	(__ball+1)& (0+255),w,b
  5278  000AD0  0101               	movlb	1	; () banked
  5279  000AD2  6FD3               	movwf	(__nextPos+1)& (0+255),b
  5280                           
  5281                           ;main.c: 186: break;
  5282  000AD4  0012               	return	
  5283  000AD6                     i2l2050:
  5284                           
  5285                           ; BSR set to: 1
  5286                           ;main.c: 188: _nextPos[0] = _ball.bPos[0] - 1;
  5287  000AD6  0101               	movlb	1	; () banked
  5288  000AD8  05CF               	decf	__ball& (0+255),w,b
  5289  000ADA  0101               	movlb	1	; () banked
  5290  000ADC  6FD2               	movwf	__nextPos& (0+255),b
  5291                           
  5292                           ;main.c: 189: break;
  5293  000ADE  0012               	return	
  5294  000AE0                     i2l2052:
  5295                           
  5296                           ; BSR set to: 1
  5297                           ;main.c: 191: _nextPos[0] = _ball.bPos[0] - 1;
  5298  000AE0  0101               	movlb	1	; () banked
  5299  000AE2  05CF               	decf	__ball& (0+255),w,b
  5300  000AE4  0101               	movlb	1	; () banked
  5301  000AE6  6FD2               	movwf	__nextPos& (0+255),b
  5302                           
  5303                           ;main.c: 192: _nextPos[1] = _ball.bPos[1] + 1;
  5304  000AE8  0101               	movlb	1	; () banked
  5305  000AEA  29D0               	incf	(__ball+1)& (0+255),w,b
  5306  000AEC  0101               	movlb	1	; () banked
  5307  000AEE  6FD3               	movwf	(__nextPos+1)& (0+255),b
  5308                           
  5309                           ; BSR set to: 1
  5310                           ;main.c: 194: }
  5311                           
  5312                           ;main.c: 193: break;
  5313  000AF0  0012               	return	
  5314  000AF2                     i2l2056:
  5315  000AF2  0101               	movlb	1	; () banked
  5316  000AF4  51D1               	movf	(__ball+2)& (0+255),w,b
  5317                           
  5318                           ; Switch size 1, requested type "space"
  5319                           ; Number of cases is 6, Range of values is 1 to 6
  5320                           ; switch strategies available:
  5321                           ; Name         Instructions Cycles
  5322                           ; simple_byte           19    10 (average)
  5323                           ;	Chosen strategy is simple_byte
  5324  000AF6  0A01               	xorlw	1	; case 1
  5325  000AF8  B4D8               	btfsc	status,2,c
  5326  000AFA  D7CD               	goto	i2l2042
  5327  000AFC  0A03               	xorlw	3	; case 2
  5328  000AFE  B4D8               	btfsc	status,2,c
  5329  000B00  D7D3               	goto	i2l2044
  5330  000B02  0A01               	xorlw	1	; case 3
  5331  000B04  B4D8               	btfsc	status,2,c
  5332  000B06  D7D5               	goto	i2l2046
  5333  000B08  0A07               	xorlw	7	; case 4
  5334  000B0A  B4D8               	btfsc	status,2,c
  5335  000B0C  D7DB               	goto	i2l2048
  5336  000B0E  0A01               	xorlw	1	; case 5
  5337  000B10  B4D8               	btfsc	status,2,c
  5338  000B12  D7E1               	goto	i2l2050
  5339  000B14  0A03               	xorlw	3	; case 6
  5340  000B16  A4D8               	btfss	status,2,c
  5341  000B18  0012               	return	
  5342  000B1A  D7E2               	goto	i2l2052
  5343  000B1C                     __end_of_getNextPosition:
  5344                           	opt stack 0
  5345                           pclatu	equ	0xFFB
  5346                           pclath	equ	0xFFA
  5347                           tblptru	equ	0xFF8
  5348                           tblptrh	equ	0xFF7
  5349                           tblptrl	equ	0xFF6
  5350                           tablat	equ	0xFF5
  5351                           prodh	equ	0xFF4
  5352                           prodl	equ	0xFF3
  5353                           intcon	equ	0xFF2
  5354                           postinc0	equ	0xFEE
  5355                           fsr0h	equ	0xFEA
  5356                           fsr0l	equ	0xFE9
  5357                           wreg	equ	0xFE8
  5358                           postdec1	equ	0xFE5
  5359                           plusw1	equ	0xFE3
  5360                           fsr1h	equ	0xFE2
  5361                           fsr1l	equ	0xFE1
  5362                           indf2	equ	0xFDF
  5363                           postinc2	equ	0xFDE
  5364                           plusw2	equ	0xFDB
  5365                           fsr2h	equ	0xFDA
  5366                           fsr2l	equ	0xFD9
  5367                           status	equ	0xFD8
  5368                           
  5369 ;; *************** function ___lwdiv *****************
  5370 ;; Defined at:
  5371 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  dividend        2    0[COMRAM] unsigned int 
  5374 ;;  divisor         2    2[COMRAM] unsigned int 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  quotient        2    4[COMRAM] unsigned int 
  5377 ;;  counter         1    6[COMRAM] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  2    0[COMRAM] unsigned int 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5387 ;;      Params:         4       0       0       0       0       0       0
  5388 ;;      Locals:         3       0       0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0
  5390 ;;      Totals:         7       0       0       0       0       0       0
  5391 ;;Total ram usage:        7 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_ISR
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text26
  5401  000ED4                     __ptext26:
  5402                           	opt stack 0
  5403  000ED4                     ___lwdiv:
  5404                           	opt stack 25
  5405                           
  5406                           ; BSR set to: 1
  5407                           ;incstack = 0
  5408  000ED4  0E00               	movlw	0
  5409  000ED6  6E06               	movwf	___lwdiv@quotient+1,c
  5410  000ED8  0E00               	movlw	0
  5411  000EDA  6E05               	movwf	___lwdiv@quotient,c
  5412  000EDC  5003               	movf	___lwdiv@divisor,w,c
  5413  000EDE  1004               	iorwf	___lwdiv@divisor+1,w,c
  5414  000EE0  B4D8               	btfsc	status,2,c
  5415  000EE2  D01C               	goto	i2l677
  5416  000EE4  0E01               	movlw	1
  5417  000EE6  6E07               	movwf	___lwdiv@counter,c
  5418  000EE8  D004               	goto	i2l2302
  5419  000EEA                     i2l2300:
  5420  000EEA  90D8               	bcf	status,0,c
  5421  000EEC  3603               	rlcf	___lwdiv@divisor,f,c
  5422  000EEE  3604               	rlcf	___lwdiv@divisor+1,f,c
  5423  000EF0  2A07               	incf	___lwdiv@counter,f,c
  5424  000EF2                     i2l2302:
  5425  000EF2  AE04               	btfss	___lwdiv@divisor+1,7,c
  5426  000EF4  D7FA               	goto	i2l2300
  5427  000EF6                     i2l2304:
  5428  000EF6  90D8               	bcf	status,0,c
  5429  000EF8  3605               	rlcf	___lwdiv@quotient,f,c
  5430  000EFA  3606               	rlcf	___lwdiv@quotient+1,f,c
  5431  000EFC  5003               	movf	___lwdiv@divisor,w,c
  5432  000EFE  5C01               	subwf	___lwdiv@dividend,w,c
  5433  000F00  5004               	movf	___lwdiv@divisor+1,w,c
  5434  000F02  5802               	subwfb	___lwdiv@dividend+1,w,c
  5435  000F04  A0D8               	btfss	status,0,c
  5436  000F06  D005               	goto	i2l2312
  5437  000F08  5003               	movf	___lwdiv@divisor,w,c
  5438  000F0A  5E01               	subwf	___lwdiv@dividend,f,c
  5439  000F0C  5004               	movf	___lwdiv@divisor+1,w,c
  5440  000F0E  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5441  000F10  8005               	bsf	___lwdiv@quotient,0,c
  5442  000F12                     i2l2312:
  5443  000F12  90D8               	bcf	status,0,c
  5444  000F14  3204               	rrcf	___lwdiv@divisor+1,f,c
  5445  000F16  3203               	rrcf	___lwdiv@divisor,f,c
  5446  000F18  2E07               	decfsz	___lwdiv@counter,f,c
  5447  000F1A  D7ED               	goto	i2l2304
  5448  000F1C                     i2l677:
  5449  000F1C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5450  000F20  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5451  000F24  0012               	return		;funcret
  5452  000F26                     __end_of___lwdiv:
  5453                           	opt stack 0
  5454  0000                     pclatu	equ	0xFFB
  5455                           pclath	equ	0xFFA
  5456                           tblptru	equ	0xFF8
  5457                           tblptrh	equ	0xFF7
  5458                           tblptrl	equ	0xFF6
  5459                           tablat	equ	0xFF5
  5460                           prodh	equ	0xFF4
  5461                           prodl	equ	0xFF3
  5462                           intcon	equ	0xFF2
  5463                           postinc0	equ	0xFEE
  5464                           fsr0h	equ	0xFEA
  5465                           fsr0l	equ	0xFE9
  5466                           wreg	equ	0xFE8
  5467                           postdec1	equ	0xFE5
  5468                           plusw1	equ	0xFE3
  5469                           fsr1h	equ	0xFE2
  5470                           fsr1l	equ	0xFE1
  5471                           indf2	equ	0xFDF
  5472                           postinc2	equ	0xFDE
  5473                           plusw2	equ	0xFDB
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           pclatu	equ	0xFFB
  5478                           pclath	equ	0xFFA
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           intcon	equ	0xFF2
  5486                           postinc0	equ	0xFEE
  5487                           fsr0h	equ	0xFEA
  5488                           fsr0l	equ	0xFE9
  5489                           wreg	equ	0xFE8
  5490                           postdec1	equ	0xFE5
  5491                           plusw1	equ	0xFE3
  5492                           fsr1h	equ	0xFE2
  5493                           fsr1l	equ	0xFE1
  5494                           indf2	equ	0xFDF
  5495                           postinc2	equ	0xFDE
  5496                           plusw2	equ	0xFDB
  5497                           fsr2h	equ	0xFDA
  5498                           fsr2l	equ	0xFD9
  5499                           status	equ	0xFD8
  5500                           
  5501                           	psect	rparam
  5502  0000                     pclatu	equ	0xFFB
  5503                           pclath	equ	0xFFA
  5504                           tblptru	equ	0xFF8
  5505                           tblptrh	equ	0xFF7
  5506                           tblptrl	equ	0xFF6
  5507                           tablat	equ	0xFF5
  5508                           prodh	equ	0xFF4
  5509                           prodl	equ	0xFF3
  5510                           intcon	equ	0xFF2
  5511                           postinc0	equ	0xFEE
  5512                           fsr0h	equ	0xFEA
  5513                           fsr0l	equ	0xFE9
  5514                           wreg	equ	0xFE8
  5515                           postdec1	equ	0xFE5
  5516                           plusw1	equ	0xFE3
  5517                           fsr1h	equ	0xFE2
  5518                           fsr1l	equ	0xFE1
  5519                           indf2	equ	0xFDF
  5520                           postinc2	equ	0xFDE
  5521                           plusw2	equ	0xFDB
  5522                           fsr2h	equ	0xFDA
  5523                           fsr2l	equ	0xFD9
  5524                           status	equ	0xFD8
  5525                           
  5526                           	psect	temp
  5527  00007F                     btemp:
  5528                           	opt stack 0
  5529  00007F                     	ds	1
  5530  0000                     int$flags	set	btemp
  5531                           pclatu	equ	0xFFB
  5532                           pclath	equ	0xFFA
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           prodh	equ	0xFF4
  5538                           prodl	equ	0xFF3
  5539                           intcon	equ	0xFF2
  5540                           postinc0	equ	0xFEE
  5541                           fsr0h	equ	0xFEA
  5542                           fsr0l	equ	0xFE9
  5543                           wreg	equ	0xFE8
  5544                           postdec1	equ	0xFE5
  5545                           plusw1	equ	0xFE3
  5546                           fsr1h	equ	0xFE2
  5547                           fsr1l	equ	0xFE1
  5548                           indf2	equ	0xFDF
  5549                           postinc2	equ	0xFDE
  5550                           plusw2	equ	0xFDB
  5551                           fsr2h	equ	0xFDA
  5552                           fsr2l	equ	0xFD9
  5553                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        252
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128    127     127
    BANK1           256    179     214
    BANK2           256     87     253
    BANK3           256     32     228
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _writePong->_off
    _writePong->i2_on
    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol
    i2_refresh->i2_setColHigh
    i2_refresh->i2_setRowHigh
    i2_drawSymbol->i2_on

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_checkNextPosition
    _checkNextPosition->i2_startPong
    i2_initializePong->i2_startPong
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK1

    _initializePong->_startPong
    _startPong->_drawSymbol
    _refresh->_setColHigh
    _refresh->_setRowHigh
    _drawSymbol->_on
    _initializeLED->_turnAllOff

Critical Paths under _ISR in BANK1

    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK2

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3323
                         _initialize
                      _initializeLED
                     _initializePong
                            _refresh
 ---------------------------------------------------------------------------------
 (1) _initializePong                                       0     0      0    2919
                          _startPong
 ---------------------------------------------------------------------------------
 (2) _startPong                                            2     2      0    2919
                                            177 BANK1      2     2      0
                         _drawSymbol
                            _refresh
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (1) _refresh                                              5     5      0     268
                                             36 BANK1      5     5      0
                             _allOff
                         _setColHigh
                         _setRowHigh
 ---------------------------------------------------------------------------------
 (2) _setRowHigh                                           3     3      0      66
                                             33 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setColHigh                                           3     3      0      22
                                             33 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _allOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drawSymbol                                         259   258      1    2447
                                             37 BANK1    140   139      1
                                              0 BANK2     87    87      0
                                              0 BANK3     32    32      0
                                 _on
 ---------------------------------------------------------------------------------
 (4) _on                                                   4     3      1     597
                                             33 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _initializeLED                                        0     0      0     136
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _turnAllOff                                           4     4      0     136
                                             33 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 17    17      0    9748
                                             16 BANK1     17    17      0
                            ___lwdiv
                  _checkNextPosition
                          _writePong
 ---------------------------------------------------------------------------------
 (6) _writePong                                            0     0      0     847
                                _off
                               i2_on
 ---------------------------------------------------------------------------------
 (7) _off                                                  4     3      1     303
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _checkNextPosition                                    4     4      0    8492
                                            123 BANK0      4     4      0
                    _getNextPosition
                       i2_drawSymbol
                   i2_initializePong
                          i2_refresh
                        i2_startPong
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_initializePong                                     0     0      0    2808
                        i2_startPong
 ---------------------------------------------------------------------------------
 (7) i2_startPong                                          2     2      0    2808
                                            121 BANK0      2     2      0
                       i2_drawSymbol
                          i2_refresh
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_turnAllOff                                         4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (8) i2_refresh                                            5     5      0     268
                                              3 COMRAM     5     5      0
                           i2_allOff
                       i2_setColHigh
                       i2_setRowHigh
 ---------------------------------------------------------------------------------
 (9) i2_setRowHigh                                         3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_setColHigh                                         3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_allOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_drawSymbol                                       259   258      1    2336
                                              4 COMRAM   122   121      1
                                              0 BANK0    121   121      0
                                              0 BANK1     16    16      0
                               i2_on
 ---------------------------------------------------------------------------------
 (7) i2_on                                                 4     3      1     544
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) _getNextPosition                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _initializeLED
     _turnAllOff
   _initializePong
     _startPong
       _drawSymbol
         _on
       _refresh
         _allOff
         _setColHigh
         _setRowHigh
       _turnAllOff
   _refresh
     _allOff
     _setColHigh
     _setRowHigh

 _ISR (ROOT)
   ___lwdiv
   _checkNextPosition
     _getNextPosition
     i2_drawSymbol
       i2_on
     i2_initializePong
       i2_startPong
         i2_drawSymbol
           i2_on
         i2_refresh
           i2_allOff
           i2_setColHigh
           i2_setRowHigh
         i2_turnAllOff
     i2_refresh
       i2_allOff
       i2_setColHigh
       i2_setRowHigh
     i2_startPong
       i2_drawSymbol
         i2_on
       i2_refresh
         i2_allOff
         i2_setColHigh
         i2_setRowHigh
       i2_turnAllOff
     i2_turnAllOff
   _writePong
     _off
     i2_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     20      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     57      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B3      D6       7       83.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3B4      15        0.0%
DATA                 0      0     3B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Apr 04 11:55:19 2016

        __end_ofi2_setColHigh 10CC            drawSymbol@symbolGo 016A             ?i2_initializePong 0001  
                          _on 0E82                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
          ??i2_initializePong 007F           drawSymbol@symbolOne 02E2          __end_ofi2_setRowHigh 0FF2  
                         ?_on 0121           drawSymbol@symbolTwo 02A6                           _GIE 007F97  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _ISR 0008  
                         _PSA 007EAB                           __p1 01C5                           __p2 01CA  
                         _off 0FF2                           prod 000FF3                           wreg 000FE8  
         __end_ofi2_startPong 0D00                          ??_on 0122                  __CFG_LVP$OFF 000000  
                        ?_ISR 0001                  __CFG_WDT$OFF 000000          drawSymbol@symbolPlay 0126  
                        l2422 0E9A                          l2418 0E90                          l2530 00F6  
                        l2522 00AE                          l2602 02D8                          l2540 0142  
                        l2516 009E                          l1830 0D7A                          l2542 0148  
                        l2534 0100                          l2518 00A4                          l1832 0D80  
                        l2552 0194                          l2528 00F0                          l1842 0DC8  
                        l1826 0D70                          l2570 01F6                          l2554 019A  
                        l2546 0152                          l1836 0D8A                          l2564 01E6  
                        l1668 0DFE                          l2590 028C                          l2582 0244  
                        l2566 01EC                          l2558 01A4                          l1942 0A18  
                        l2646 0C58                          l2576 0234                          l1952 0A6A  
                        l1944 0A1E                          l2656 0C74                          l2904 1112  
                        l2594 0296                          l2578 023A                          l1938 0A0E  
                        l2588 0286                          l1956 0A70                          l1948 0A28  
                        ?_off 0001                          _ADIE 007CEE                          _ADIF 007CF6  
                        _T0CS 007EAD                          u1204 0DF0                          u1205 0DEA  
                        u1214 0E1A                          u1215 0E14                          _LATA 000F89  
                        _LATC 000F8B                          u1184 1084                          _LATD 000F8C  
                        u1185 107E                          u2501 005E                          u2511 0070  
                        u2521 0082                          u2531 0094                          u2471 0028  
                        u2481 003A                          u2491 004C                          _PEIE 007F96  
                        u2957 0A80                          i2_on 102E              ??_initializePong 01B3  
                        _main 1106                   drawSymbol@i 01AF                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 007F                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 0016                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010                         ??_ISR 0110  
                       ??_off 0002                         ?i2_on 0001                    i2on@column 0004  
       drawSymbol@symbolThree 02C4                         ?_main 0001                         _ADRES 000FC3  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
             __end_of___lwdiv 0F26                         i2l268 0926                         i2l677 0F1C  
                       _PLLEN 007CDE                         _TRISA 000F92                         _TRISC 000F94  
                       _TRISD 000F95                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
        __end_ofi2_turnAllOff 0F6E                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                         __ball 01CF  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               __end_of_refresh 0A94  
                       on@row 0121                __CFG_BOREN$OFF 000000                         tablat 000FF5  
            __end_ofi2_allOff 1134                         plusw1 000FE3                         plusw2 000FDB  
                       status 000FD8         __size_ofi2_drawSymbol 02D0                  __end_ofi2_on 106A  
             __initialization 0B1C                  __end_of_main 1118                        ??i2_on 0002  
             _getNextPosition 0A94            __size_ofi2_refresh 006A                        ??_main 01B3  
                 i2_startPong 0C94                 __activetblptr 000002                  i2_drawSymbol 0308  
                      _T08BIT 007EAE      checkNextPosition@counter 00FB                        i2l2002 0FFC  
                      i2l2006 1004                        i2l2050 0AD6                        i2l2042 0A96  
                      i2l2300 0EEA                        i2l2052 0AE0                        i2l2044 0AA8  
                      i2l2302 0EF2                        i2l2046 0AB2                        i2l2312 0F12  
                      i2l2304 0EF6                        i2l2048 0AC4                        i2l2056 0AF2  
                      i2l2412 1040                        i2l2500 0562                        i2l2408 1038  
                      i2l2504 056C                        i2l2440 03DE                        i2l2432 039A  
                      i2l2512 05AA                        i2l1800 0D0C                        i2l2450 0426  
                      i2l2426 038A                        i2l1810 0D48                        i2l1802 0D10  
                      i2l2452 042C                        i2l2444 03E8                        i2l2428 0390  
                      i2l2700 061A                        i2l2462 0474                        i2l2438 03D8  
                      i2l1814 0D4C                        i2l1806 0D18                        i2l2614 0CC4  
                      i2l2702 0622                        i2l2710 063E                        i2l2480 04D2  
                      i2l2464 047A                        i2l2456 0436                        i2l1648 0FD4  
                      i2l2624 0CE0                        i2l2720 0678                        i2l2704 0638  
                      i2l2474 04C2                        i2l2802 07B4                        i2l2730 0698  
                      i2l2492 051E                        i2l2476 04C8                        i2l2468 0484  
                      i2l1780 0F36                        i2l2716 0670                        i2l2724 067C  
                      i2l2486 050E                        i2l1790 0F6A                        i2l1774 0F2A  
                      i2l2814 07E2                        i2l2830 080E                        i2l2742 06C6  
                      i2l2726 0692                        i2l2488 0514                        i2l1784 0F3E  
                      i2l2840 0824                        i2l2824 07FE                        i2l2752 06E2  
                      i2l2498 055C                        i2l1778 0F32                        i2l2834 0818  
                      i2l2770 0736                        i2l1796 0D04                        i2l2836 081C  
                      i2l2844 082C                        i2l2828 0808                        i2l2756 06EC  
                      i2l2838 0820                        i2l2846 0848                        i2l2790 078C  
                      i2l2766 072E                        i2l2774 073E                        i2l2782 075A  
                      i2l2758 06F2                        i2l2862 08AA                        i2l2792 0790  
                      i2l2768 0732                        i2l2776 0754                        i2l2698 0616  
                      i2l2796 0798                        i2l2868 08B6                        i2l2798 07AE  
                      i2l2888 090A                        _TMR0IE 007F95                        _TMR0IF 007F92  
                      _TMR0ON 007EAF           i2drawSymbol@offSetX 0005         __size_ofi2_setColHigh 001C  
              __CFG_XINST$OFF 000000                        _allOff 1118                __CFG_STVREN$ON 000000  
       __size_ofi2_setRowHigh 0040                        __speed 01C3                     ??___lwdiv 0005  
                      clear_0 0B22                        clear_1 0B2E                        _pixels 0300  
                      off@row 0001                     ??_refresh 0124                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8        __size_of_initializeLED 001E  
                i2_setColHigh 10B0                    __accesstop 0080       __end_of__initialization 0B94  
          i2setColHigh@column 0003             __end_ofi2_refresh 0D6A               __CFG_PBADEN$OFF 000000  
                i2_setRowHigh 0FB2                 ___rparam_used 000001       __end_of_getNextPosition 0B1C  
              __pcstackCOMRAM 0001              i2drawSymbol@i_82 00F3              i2drawSymbol@i_83 00F4  
            i2drawSymbol@i_84 00F5              i2drawSymbol@i_85 00F6              i2drawSymbol@i_86 00F7  
            i2drawSymbol@i_87 00F8                  __pidataBANK1 10F4                  __pidataBANK2 0962  
                __pidataBANK3 0F6E       i2drawSymbol@symbolThree 00C4                    __end_of_on 0ED4  
       __size_ofi2_turnAllOff 0048                     ?i2_allOff 0001                 i2turnAllOff@i 0003  
               i2turnAllOff@j 0004              startPong@counter 01B1     __size_ofi2_initializePong 0014  
                  __pbssBANK1 01C5                    __pbssBANK3 0300                 _initializeLED 1092  
                i2_turnAllOff 0F26  i2drawSymbol@symbolArrowRight 0100                       ?_allOff 0001  
                  ??i2_allOff 0001                    _drawSymbol 001A   i2drawSymbol@symbolArrowLeft 00E2  
          __size_of_startPong 0070                       i2on@row 0001            __size_of_writePong 0082  
              ?_initializeLED 0001                       __Hparam 0000                       __Lparam 0000  
            ?_getNextPosition 0001                 refresh@theCol 0127                 refresh@theRow 0128  
             __size_of_allOff 000E          i2drawSymbol@symbolGo 0080                       ___lwdiv 0ED4  
  drawSymbol@symbolArrowRight 03D4                       __pcinit 0B1C        drawSymbol@chosenSymbol 01AE  
                     __ramtop 0600                    _initialize 0E28                       __ptext0 1106  
                     __ptext1 10CC                       __ptext2 0C24                       __ptext3 0A08  
                     __ptext4 0DCE                       __ptext5 106A                       __ptext6 1118  
                     __ptext7 001A                       __ptext8 0E82                       __ptext9 1092  
                ?i2_startPong 0001                  __size_of_ISR 095A                  __size_of_off 003C  
                     _refresh 0A08                drawSymbol@i_82 01B0                drawSymbol@i_83 02F8  
              drawSymbol@i_84 02F9                drawSymbol@i_85 02FA                drawSymbol@i_86 02FB  
              drawSymbol@i_87 02FC                    _setColHigh 106A                __pintcode_body 084E  
        end_of_initialization 0B94                 __Lmediumconst 0000                       int_func 084E  
                  _setRowHigh 0DCE                       postdec1 000FE5                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initializePong 0014             __end_of_startPong 0C94  
           drawSymbol@offSetX 0125             __end_of_writePong 0C24                     _TRISBbits 000F93  
                 ?_drawSymbol 0125              i2_initializePong 10E0               ??_initializeLED 0125  
                   i2_refresh 0D00                    _turnAllOff 0D6A                 setRowHigh@row 0123  
              __end_of_allOff 1126                   ?_initialize 0001           start_initialization 0B1C  
                 __end_of_ISR 0962             __size_ofi2_allOff 000E                   ?_setColHigh 0001  
                 __end_of_off 102E                    ISR@ADvalue 011E                   ?_setRowHigh 0001  
            __CFG_OSC$INTIO67 000000                    ?i2_refresh 0001                      ??_allOff 0121  
         __size_of_drawSymbol 02EE                   __pdataBANK1 01B3                   __pdataBANK2 0200  
                 __pdataBANK3 0380              __CFG_LPT1OSC$OFF 000000          __size_ofi2_startPong 006C  
               __pcstackBANK0 0080                 __pcstackBANK1 0100                 __pcstackBANK2 02A6  
               __pcstackBANK3 03C4        i2drawSymbol@symbolPlay 0006            i2startPong@counter 00F9  
         __size_of_initialize 005A                 i2drawSymbol@i 00F2                      ISR@value 0120  
            ___lwdiv@dividend 0001                   ?_turnAllOff 0001             __CFG_CCP2MX$PORTC 000000  
                   __pintcode 0008                _initializePong 10CC           __size_of_setColHigh 0028  
                    ?___lwdiv 0001           __size_of_setRowHigh 005A                   turnAllOff@i 0123  
                 turnAllOff@j 0124             _checkNextPosition 05D8                      ?_refresh 0001  
          ?_checkNextPosition 0001              ___lwdiv@quotient 0005                 ?i2_drawSymbol 0005  
                 __size_of_on 0052           ??_checkNextPosition 007F        __end_of_initializePong 10E0  
                    i2u112_44 10C2                      i2u112_45 10BE                      i2u114_44 0FCA  
                    i2u114_45 0FC6                      i2u115_44 0FE8                      i2u115_45 0FE4  
                 ??i2_refresh 0004                      i2u230_41 035C                      i2u231_41 036E  
                    i2u232_41 0380                      i2u226_41 0314                      i2u227_41 0326  
                    i2u228_41 0338                      i2u229_41 034A                      i2u282_40 0718  
                    i2u274_40 0600                      i2u284_40 0776                      i2u276_40 065A  
                    i2u296_47 0D58              __CFG_WDTPS$32768 000000      __end_ofi2_initializePong 10F4  
                  _ADCON0bits 000FC2                    _ADCON1bits 000FC1                    _ADCON2bits 000FC0  
   __end_of_checkNextPosition 084E                     _startPong 0C24      __size_of_getNextPosition 0088  
                    i2_allOff 1126                     off@column 0004                ??i2_drawSymbol 0006  
         __size_of_turnAllOff 0064                 ?i2_setColHigh 0001                  ??_drawSymbol 0126  
                   _writePong 0BA2                     copy_data0 0B48                     copy_data1 0B68  
                   copy_data2 0B88                 __timerCounter 01D4                 ?i2_setRowHigh 0001  
                    __Hrparam 0000               ?_initializePong 0001                      __Lrparam 0000  
    i2drawSymbol@chosenSymbol 007E            __end_of_drawSymbol 0308              __size_of___lwdiv 0052  
                ??_initialize 0121         i2drawSymbol@symbolOne 0068         i2drawSymbol@symbolTwo 004A  
                  ?_startPong 0001               i2refresh@theCol 0007               i2refresh@theRow 0008  
                    __nextPos 01D2                ??i2_setColHigh 0001               ___lwdiv@divisor 0003  
                ??_setColHigh 0121              __size_of_refresh 008C               ___lwdiv@counter 0007  
                    __ptext10 0D6A                      __ptext11 0E28                      __ptext20 0FB2  
                    __ptext21 10B0                      __ptext13 0BA2                      __ptext22 1126  
                    __ptext14 0FF2                      __ptext23 0308                      __ptext15 05D8  
                    __ptext24 102E                      __ptext16 10E0                      __ptext25 0A94  
                    __ptext17 0C94                      __ptext26 0ED4                      __ptext18 0F26  
                    __ptext19 0D00                    ?_writePong 0001                 __size_ofi2_on 003C  
             drawSymbol@F3230 0262               drawSymbol@F3224 0280               drawSymbol@F3233 0200  
             drawSymbol@F3242 0296               drawSymbol@F3227 0244               drawSymbol@F3236 0380  
             drawSymbol@F3239 01B3                ??i2_setRowHigh 0001                  ??_setRowHigh 0121  
               __size_of_main 0012            __end_of_initialize 0E82         __end_of_initializeLED 10B0  
               ?i2_turnAllOff 0001                      int$flags 007F            __end_of_setColHigh 1092  
                    on@column 0124    __size_of_checkNextPosition 0276                   _OSCTUNEbits 000F9B  
          __end_of_setRowHigh 0E28              setColHigh@column 0123             ??_getNextPosition 0001  
   drawSymbol@symbolArrowLeft 03C4                      intlevel2 0000  checkNextPosition@counter_430 00FD  
              ??i2_turnAllOff 0001                    _OSCCONbits 000FD3                  ??_turnAllOff 0121  
        __end_ofi2_drawSymbol 05D8                 ??i2_startPong 007F                   ??_startPong 01B1  
             i2setRowHigh@row 0003                   ??_writePong 0005            __end_of_turnAllOff 0DCE  
