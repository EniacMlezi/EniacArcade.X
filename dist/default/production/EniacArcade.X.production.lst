

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Apr 03 21:49:47 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	idataBANK3,global,class=CODE,delta=1
     9                           	psect	idataBANK4,global,class=CODE,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	idataCOMRAM
    56  00111C                     __pidataCOMRAM:
    57                           	opt stack 0
    58                           
    59                           ;initializer for __speed
    60  00111C  00C8               	dw	200
    61                           
    62                           	psect	idataBANK1
    63  0010AE                     __pidataBANK1:
    64                           	opt stack 0
    65                           
    66                           ;initializer for drawSymbol@F3224
    67  0010AE  02                 	db	2
    68  0010AF  05                 	db	5
    69  0010B0  03                 	db	3
    70  0010B1  06                 	db	6
    71  0010B2  04                 	db	4
    72  0010B3  07                 	db	7
    73  0010B4  04                 	db	4
    74  0010B5  06                 	db	6
    75  0010B6  04                 	db	4
    76  0010B7  05                 	db	5
    77  0010B8  04                 	db	4
    78  0010B9  04                 	db	4
    79  0010BA  04                 	db	4
    80  0010BB  03                 	db	3
    81  0010BC  04                 	db	4
    82  0010BD  02                 	db	2
    83  0010BE  04                 	db	4
    84  0010BF  01                 	db	1
    85  0010C0  04                 	db	4
    86  0010C1  00                 	db	0
    87  0010C2  03                 	db	3
    88  0010C3  00                 	db	0
    89  0010C4  05                 	db	5
    90  0010C5  00                 	db	0
    91                           
    92                           	psect	idataBANK2
    93  000B5E                     __pidataBANK2:
    94                           	opt stack 0
    95                           
    96                           ;initializer for drawSymbol@F3239
    97  000B5E  00                 	db	0
    98  000B5F  03                 	db	3
    99  000B60  01                 	db	1
   100  000B61  03                 	db	3
   101  000B62  02                 	db	2
   102  000B63  03                 	db	3
   103  000B64  03                 	db	3
   104  000B65  03                 	db	3
   105  000B66  04                 	db	4
   106  000B67  03                 	db	3
   107  000B68  05                 	db	5
   108  000B69  03                 	db	3
   109  000B6A  06                 	db	6
   110  000B6B  03                 	db	3
   111  000B6C  07                 	db	7
   112  000B6D  03                 	db	3
   113  000B6E  08                 	db	8
   114  000B6F  03                 	db	3
   115  000B70  07                 	db	7
   116  000B71  04                 	db	4
   117  000B72  06                 	db	6
   118  000B73  05                 	db	5
   119  000B74  05                 	db	5
   120  000B75  07                 	db	7
   121  000B76  06                 	db	6
   122  000B77  02                 	db	2
   123  000B78  05                 	db	5
   124  000B79  01                 	db	1
   125  000B7A  04                 	db	4
   126  000B7B  00                 	db	0
   127                           
   128                           ;initializer for drawSymbol@F3242
   129  000B7C  00                 	db	0
   130  000B7D  03                 	db	3
   131  000B7E  01                 	db	1
   132  000B7F  03                 	db	3
   133  000B80  02                 	db	2
   134  000B81  03                 	db	3
   135  000B82  03                 	db	3
   136  000B83  03                 	db	3
   137  000B84  04                 	db	4
   138  000B85  03                 	db	3
   139  000B86  05                 	db	5
   140  000B87  03                 	db	3
   141  000B88  06                 	db	6
   142  000B89  03                 	db	3
   143  000B8A  07                 	db	7
   144  000B8B  03                 	db	3
   145  000B8C  08                 	db	8
   146  000B8D  03                 	db	3
   147  000B8E  01                 	db	1
   148  000B8F  04                 	db	4
   149  000B90  02                 	db	2
   150  000B91  05                 	db	5
   151  000B92  03                 	db	3
   152  000B93  06                 	db	6
   153  000B94  01                 	db	1
   154  000B95  02                 	db	2
   155  000B96  02                 	db	2
   156  000B97  01                 	db	1
   157  000B98  03                 	db	3
   158  000B99  00                 	db	0
   159                           
   160                           ;initializer for drawSymbol@F3227
   161  000B9A  02                 	db	2
   162  000B9B  05                 	db	5
   163  000B9C  03                 	db	3
   164  000B9D  06                 	db	6
   165  000B9E  04                 	db	4
   166  000B9F  06                 	db	6
   167  000BA0  05                 	db	5
   168  000BA1  06                 	db	6
   169  000BA2  06                 	db	6
   170  000BA3  05                 	db	5
   171  000BA4  06                 	db	6
   172  000BA5  04                 	db	4
   173  000BA6  05                 	db	5
   174  000BA7  03                 	db	3
   175  000BA8  04                 	db	4
   176  000BA9  02                 	db	2
   177  000BAA  03                 	db	3
   178  000BAB  01                 	db	1
   179  000BAC  02                 	db	2
   180  000BAD  00                 	db	0
   181  000BAE  03                 	db	3
   182  000BAF  00                 	db	0
   183  000BB0  04                 	db	4
   184  000BB1  00                 	db	0
   185  000BB2  05                 	db	5
   186  000BB3  00                 	db	0
   187  000BB4  06                 	db	6
   188  000BB5  00                 	db	0
   189                           
   190                           ;initializer for drawSymbol@F3230
   191  000BB6  02                 	db	2
   192  000BB7  06                 	db	6
   193  000BB8  03                 	db	3
   194  000BB9  07                 	db	7
   195  000BBA  04                 	db	4
   196  000BBB  07                 	db	7
   197  000BBC  05                 	db	5
   198  000BBD  06                 	db	6
   199  000BBE  05                 	db	5
   200  000BBF  05                 	db	5
   201  000BC0  04                 	db	4
   202  000BC1  04                 	db	4
   203  000BC2  05                 	db	5
   204  000BC3  03                 	db	3
   205  000BC4  05                 	db	5
   206  000BC5  02                 	db	2
   207  000BC6  05                 	db	5
   208  000BC7  01                 	db	1
   209  000BC8  04                 	db	4
   210  000BC9  00                 	db	0
   211  000BCA  03                 	db	3
   212  000BCB  00                 	db	0
   213  000BCC  02                 	db	2
   214  000BCD  01                 	db	1
   215                           
   216                           	psect	idataBANK3
   217  000F0C                     __pidataBANK3:
   218                           	opt stack 0
   219                           
   220                           ;initializer for drawSymbol@F3233
   221  000F0C  01                 	db	1
   222  000F0D  01                 	db	1
   223  000F0E  01                 	db	1
   224  000F0F  02                 	db	2
   225  000F10  01                 	db	1
   226  000F11  03                 	db	3
   227  000F12  01                 	db	1
   228  000F13  04                 	db	4
   229  000F14  01                 	db	1
   230  000F15  05                 	db	5
   231  000F16  01                 	db	1
   232  000F17  06                 	db	6
   233  000F18  02                 	db	2
   234  000F19  06                 	db	6
   235  000F1A  03                 	db	3
   236  000F1B  06                 	db	6
   237  000F1C  03                 	db	3
   238  000F1D  05                 	db	5
   239  000F1E  03                 	db	3
   240  000F1F  04                 	db	4
   241  000F20  02                 	db	2
   242  000F21  04                 	db	4
   243  000F22  05                 	db	5
   244  000F23  06                 	db	6
   245  000F24  05                 	db	5
   246  000F25  05                 	db	5
   247  000F26  05                 	db	5
   248  000F27  04                 	db	4
   249  000F28  05                 	db	5
   250  000F29  03                 	db	3
   251  000F2A  05                 	db	5
   252  000F2B  02                 	db	2
   253  000F2C  05                 	db	5
   254  000F2D  01                 	db	1
   255  000F2E  06                 	db	6
   256  000F2F  01                 	db	1
   257  000F30  08                 	db	8
   258  000F31  01                 	db	1
   259  000F32  08                 	db	8
   260  000F33  02                 	db	2
   261  000F34  08                 	db	8
   262  000F35  03                 	db	3
   263  000F36  09                 	db	9
   264  000F37  04                 	db	4
   265  000F38  0A                 	db	10
   266  000F39  04                 	db	4
   267  000F3A  0B                 	db	11
   268  000F3B  03                 	db	3
   269  000F3C  0B                 	db	11
   270  000F3D  02                 	db	2
   271  000F3E  0B                 	db	11
   272  000F3F  01                 	db	1
   273  000F40  0D                 	db	13
   274  000F41  01                 	db	1
   275  000F42  0D                 	db	13
   276  000F43  02                 	db	2
   277  000F44  0D                 	db	13
   278  000F45  03                 	db	3
   279  000F46  0D                 	db	13
   280  000F47  04                 	db	4
   281  000F48  0C                 	db	12
   282  000F49  05                 	db	5
   283  000F4A  0B                 	db	11
   284  000F4B  06                 	db	6
   285  000F4C  0E                 	db	14
   286  000F4D  05                 	db	5
   287  000F4E  0E                 	db	14
   288  000F4F  06                 	db	6
   289                           
   290                           	psect	idataBANK4
   291  000F50                     __pidataBANK4:
   292                           	opt stack 0
   293                           
   294                           ;initializer for drawSymbol@F3236
   295  000F50  06                 	db	6
   296  000F51  06                 	db	6
   297  000F52  05                 	db	5
   298  000F53  07                 	db	7
   299  000F54  04                 	db	4
   300  000F55  07                 	db	7
   301  000F56  03                 	db	3
   302  000F57  07                 	db	7
   303  000F58  02                 	db	2
   304  000F59  06                 	db	6
   305  000F5A  02                 	db	2
   306  000F5B  05                 	db	5
   307  000F5C  02                 	db	2
   308  000F5D  04                 	db	4
   309  000F5E  02                 	db	2
   310  000F5F  03                 	db	3
   311  000F60  02                 	db	2
   312  000F61  02                 	db	2
   313  000F62  02                 	db	2
   314  000F63  01                 	db	1
   315  000F64  03                 	db	3
   316  000F65  00                 	db	0
   317  000F66  04                 	db	4
   318  000F67  00                 	db	0
   319  000F68  05                 	db	5
   320  000F69  00                 	db	0
   321  000F6A  06                 	db	6
   322  000F6B  01                 	db	1
   323  000F6C  05                 	db	5
   324  000F6D  02                 	db	2
   325  000F6E  04                 	db	4
   326  000F6F  02                 	db	2
   327  000F70  09                 	db	9
   328  000F71  06                 	db	6
   329  000F72  09                 	db	9
   330  000F73  05                 	db	5
   331  000F74  09                 	db	9
   332  000F75  04                 	db	4
   333  000F76  09                 	db	9
   334  000F77  03                 	db	3
   335  000F78  09                 	db	9
   336  000F79  02                 	db	2
   337  000F7A  09                 	db	9
   338  000F7B  01                 	db	1
   339  000F7C  0A                 	db	10
   340  000F7D  00                 	db	0
   341  000F7E  0B                 	db	11
   342  000F7F  00                 	db	0
   343  000F80  0C                 	db	12
   344  000F81  00                 	db	0
   345  000F82  0D                 	db	13
   346  000F83  01                 	db	1
   347  000F84  0D                 	db	13
   348  000F85  02                 	db	2
   349  000F86  0D                 	db	13
   350  000F87  04                 	db	4
   351  000F88  0D                 	db	13
   352  000F89  05                 	db	5
   353  000F8A  0D                 	db	13
   354  000F8B  06                 	db	6
   355  000F8C  0C                 	db	12
   356  000F8D  07                 	db	7
   357  000F8E  0B                 	db	11
   358  000F8F  07                 	db	7
   359  000F90  0A                 	db	10
   360  000F91  07                 	db	7
   361  000F92  00                 	db	0
   362  000F93  00                 	db	0
   363  0000                     _ADRES	set	4035
   364  0000                     _ADCON0bits	set	4034
   365  0000                     _ADCON1bits	set	4033
   366  0000                     _ADCON2bits	set	4032
   367  0000                     _LATA	set	3977
   368  0000                     _LATC	set	3979
   369  0000                     _LATD	set	3980
   370  0000                     _OSCCONbits	set	4051
   371  0000                     _OSCTUNEbits	set	3995
   372  0000                     _TRISA	set	3986
   373  0000                     _TRISBbits	set	3987
   374  0000                     _TRISC	set	3988
   375  0000                     _TRISD	set	3989
   376  0000                     _ADIE	set	31982
   377  0000                     _ADIF	set	31990
   378  0000                     _GIE	set	32663
   379  0000                     _PEIE	set	32662
   380  0000                     _PLLEN	set	31966
   381  0000                     _PSA	set	32427
   382  0000                     _T08BIT	set	32430
   383  0000                     _T0CS	set	32429
   384  0000                     _T0PS0	set	32424
   385  0000                     _T0PS1	set	32425
   386  0000                     _T0PS2	set	32426
   387  0000                     _TMR0IE	set	32661
   388  0000                     _TMR0IF	set	32658
   389  0000                     _TMR0ON	set	32431
   390                           
   391                           ; #config settings
   392  0000                     
   393                           	psect	cinit
   394  00090A                     __pcinit:
   395                           	opt stack 0
   396  00090A                     start_initialization:
   397                           	opt stack 0
   398  00090A                     __initialization:
   399                           	opt stack 0
   400                           
   401                           ; Clear objects allocated to BANK3 (128 bytes)
   402  00090A  EE03  F000         	lfsr	0,__pbssBANK3
   403  00090E  0E80               	movlw	128
   404  000910                     clear_0:
   405  000910  6AEE               	clrf	postinc0,c
   406  000912  06E8               	decf	wreg,f,c
   407  000914  E1FD               	bnz	clear_0
   408                           
   409                           ; Clear objects allocated to BANK1 (17 bytes)
   410  000916  EE01  F0B7         	lfsr	0,__pbssBANK1
   411  00091A  0E11               	movlw	17
   412  00091C                     clear_1:
   413  00091C  6AEE               	clrf	postinc0,c
   414  00091E  06E8               	decf	wreg,f,c
   415  000920  E1FD               	bnz	clear_1
   416                           
   417                           ; Initialize objects allocated to BANK4 (68 bytes)
   418                           ; load TBLPTR registers with __pidataBANK4
   419  000922  0E50               	movlw	low __pidataBANK4
   420  000924  6EF6               	movwf	tblptrl,c
   421  000926  0E0F               	movlw	high __pidataBANK4
   422  000928  6EF7               	movwf	tblptrh,c
   423  00092A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
   424  00092C  6EF8               	movwf	tblptru,c
   425  00092E  EE04  F000         	lfsr	0,__pdataBANK4
   426  000932  EE10 F044          	lfsr	1,68
   427  000936                     copy_data0:
   428  000936  0009               	tblrd		*+
   429  000938  CFF5 FFEE          	movff	tablat,postinc0
   430  00093C  50E5               	movf	postdec1,w,c
   431  00093E  50E1               	movf	fsr1l,w,c
   432  000940  E1FA               	bnz	copy_data0
   433                           
   434                           ; Initialize objects allocated to BANK3 (68 bytes)
   435                           ; load TBLPTR registers with __pidataBANK3
   436  000942  0E0C               	movlw	low __pidataBANK3
   437  000944  6EF6               	movwf	tblptrl,c
   438  000946  0E0F               	movlw	high __pidataBANK3
   439  000948  6EF7               	movwf	tblptrh,c
   440  00094A  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   441  00094C  6EF8               	movwf	tblptru,c
   442  00094E  EE03  F080         	lfsr	0,__pdataBANK3
   443  000952  EE10 F044          	lfsr	1,68
   444  000956                     copy_data1:
   445  000956  0009               	tblrd		*+
   446  000958  CFF5 FFEE          	movff	tablat,postinc0
   447  00095C  50E5               	movf	postdec1,w,c
   448  00095E  50E1               	movf	fsr1l,w,c
   449  000960  E1FA               	bnz	copy_data1
   450                           
   451                           ; Initialize objects allocated to BANK2 (112 bytes)
   452                           ; load TBLPTR registers with __pidataBANK2
   453  000962  0E5E               	movlw	low __pidataBANK2
   454  000964  6EF6               	movwf	tblptrl,c
   455  000966  0E0B               	movlw	high __pidataBANK2
   456  000968  6EF7               	movwf	tblptrh,c
   457  00096A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   458  00096C  6EF8               	movwf	tblptru,c
   459  00096E  EE02  F088         	lfsr	0,__pdataBANK2
   460  000972  EE10 F070          	lfsr	1,112
   461  000976                     copy_data2:
   462  000976  0009               	tblrd		*+
   463  000978  CFF5 FFEE          	movff	tablat,postinc0
   464  00097C  50E5               	movf	postdec1,w,c
   465  00097E  50E1               	movf	fsr1l,w,c
   466  000980  E1FA               	bnz	copy_data2
   467                           
   468                           ; Initialize objects allocated to BANK1 (24 bytes)
   469                           ; load TBLPTR registers with __pidataBANK1
   470  000982  0EAE               	movlw	low __pidataBANK1
   471  000984  6EF6               	movwf	tblptrl,c
   472  000986  0E10               	movlw	high __pidataBANK1
   473  000988  6EF7               	movwf	tblptrh,c
   474  00098A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   475  00098C  6EF8               	movwf	tblptru,c
   476  00098E  EE01  F09F         	lfsr	0,__pdataBANK1
   477  000992  EE10 F018          	lfsr	1,24
   478  000996                     copy_data3:
   479  000996  0009               	tblrd		*+
   480  000998  CFF5 FFEE          	movff	tablat,postinc0
   481  00099C  50E5               	movf	postdec1,w,c
   482  00099E  50E1               	movf	fsr1l,w,c
   483  0009A0  E1FA               	bnz	copy_data3
   484                           
   485                           ; Initialize objects allocated to COMRAM (2 bytes)
   486                           ; load TBLPTR registers with __pidataCOMRAM
   487  0009A2  0E1C               	movlw	low __pidataCOMRAM
   488  0009A4  6EF6               	movwf	tblptrl,c
   489  0009A6  0E11               	movlw	high __pidataCOMRAM
   490  0009A8  6EF7               	movwf	tblptrh,c
   491  0009AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   492  0009AC  6EF8               	movwf	tblptru,c
   493  0009AE  0009               	tblrd		*+	;fetch initializer
   494  0009B0  CFF5 F07D          	movff	tablat,__pdataCOMRAM
   495  0009B4  0009               	tblrd		*+	;fetch initializer
   496  0009B6  CFF5 F07E          	movff	tablat,__pdataCOMRAM+1
   497  0009BA                     end_of_initialization:
   498                           	opt stack 0
   499  0009BA                     __end_of__initialization:
   500                           	opt stack 0
   501  0009BA  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   502  0009BC  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   503  0009BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   504  0009C0  6EF8               	movwf	tblptru,c
   505  0009C2  0100               	movlb	0
   506  0009C4  EF77  F008         	goto	_main	;jump to C main() function
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           postdec1	equ	0xFE5
   514                           fsr1l	equ	0xFE1
   515                           
   516                           	psect	dataCOMRAM
   517  00007D                     __pdataCOMRAM:
   518                           	opt stack 0
   519  00007D                     __speed:
   520                           	opt stack 0
   521  00007D                     	ds	2
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1l	equ	0xFE1
   530                           
   531                           	psect	bssBANK1
   532  0001B7                     __pbssBANK1:
   533                           	opt stack 0
   534  0001B7                     __p1:
   535                           	opt stack 0
   536  0001B7                     	ds	5
   537  0001BC                     __p2:
   538                           	opt stack 0
   539  0001BC                     	ds	5
   540  0001C1                     __ball:
   541                           	opt stack 0
   542  0001C1                     	ds	3
   543  0001C4                     __nextPos:
   544                           	opt stack 0
   545  0001C4                     	ds	2
   546  0001C6                     __timerCounter:
   547                           	opt stack 0
   548  0001C6                     	ds	2
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           postdec1	equ	0xFE5
   556                           fsr1l	equ	0xFE1
   557                           
   558                           	psect	dataBANK1
   559  00019F                     __pdataBANK1:
   560                           	opt stack 0
   561  00019F                     drawSymbol@F3224:
   562                           	opt stack 0
   563  00019F                     	ds	24
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           postdec1	equ	0xFE5
   571                           fsr1l	equ	0xFE1
   572                           
   573                           	psect	dataBANK2
   574  000288                     __pdataBANK2:
   575                           	opt stack 0
   576  000288                     drawSymbol@F3239:
   577                           	opt stack 0
   578  000288                     	ds	30
   579  0002A6                     drawSymbol@F3242:
   580                           	opt stack 0
   581  0002A6                     	ds	30
   582  0002C4                     drawSymbol@F3227:
   583                           	opt stack 0
   584  0002C4                     	ds	28
   585  0002E0                     drawSymbol@F3230:
   586                           	opt stack 0
   587  0002E0                     	ds	24
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           postinc0	equ	0xFEE
   593                           wreg	equ	0xFE8
   594                           postdec1	equ	0xFE5
   595                           fsr1l	equ	0xFE1
   596                           
   597                           	psect	bssBANK3
   598  000300                     __pbssBANK3:
   599                           	opt stack 0
   600  000300                     _pixels:
   601                           	opt stack 0
   602  000300                     	ds	128
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           
   612                           	psect	dataBANK3
   613  000380                     __pdataBANK3:
   614                           	opt stack 0
   615  000380                     drawSymbol@F3233:
   616                           	opt stack 0
   617  000380                     	ds	68
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           postdec1	equ	0xFE5
   625                           fsr1l	equ	0xFE1
   626                           
   627                           	psect	dataBANK4
   628  000400                     __pdataBANK4:
   629                           	opt stack 0
   630  000400                     drawSymbol@F3236:
   631                           	opt stack 0
   632  000400                     	ds	68
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642                           	psect	cstackBANK3
   643  0003C4                     __pcstackBANK3:
   644                           	opt stack 0
   645  0003C4                     drawSymbol@symbolOne:
   646                           	opt stack 0
   647                           
   648                           ; 24 bytes @ 0x0
   649  0003C4                     	ds	24
   650  0003DC                     drawSymbol@symbolThree:
   651                           	opt stack 0
   652                           
   653                           ; 24 bytes @ 0x18
   654  0003DC                     	ds	24
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           postdec1	equ	0xFE5
   662                           fsr1l	equ	0xFE1
   663                           
   664                           	psect	cstackBANK2
   665  000200                     __pcstackBANK2:
   666                           	opt stack 0
   667  000200                     drawSymbol@symbolArrowLeft:
   668                           	opt stack 0
   669                           
   670                           ; 30 bytes @ 0x0
   671  000200                     	ds	30
   672  00021E                     drawSymbol@symbolGo:
   673                           	opt stack 0
   674                           
   675                           ; 68 bytes @ 0x1E
   676  00021E                     	ds	68
   677  000262                     drawSymbol@symbolTwo:
   678                           	opt stack 0
   679                           
   680                           ; 28 bytes @ 0x62
   681  000262                     	ds	28
   682  00027E                     drawSymbol@chosenSymbol:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x7E
   686  00027E                     	ds	1
   687  00027F                     drawSymbol@i:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x7F
   691  00027F                     	ds	1
   692  000280                     drawSymbol@i_82:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x80
   696  000280                     	ds	1
   697  000281                     drawSymbol@i_83:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x81
   701  000281                     	ds	1
   702  000282                     drawSymbol@i_84:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x82
   706  000282                     	ds	1
   707  000283                     drawSymbol@i_85:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x83
   711  000283                     	ds	1
   712  000284                     drawSymbol@i_86:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x84
   716  000284                     	ds	1
   717  000285                     drawSymbol@i_87:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x85
   721  000285                     	ds	1
   722  000286                     startPong@counter:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x86
   726  000286                     	ds	2
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           postdec1	equ	0xFE5
   734                           fsr1l	equ	0xFE1
   735                           
   736                           	psect	cstackBANK1
   737  000100                     __pcstackBANK1:
   738                           	opt stack 0
   739  000100                     i2drawSymbol@symbolOne:
   740                           	opt stack 0
   741                           
   742                           ; 24 bytes @ 0x0
   743  000100                     	ds	24
   744  000118                     i2drawSymbol@symbolThree:
   745                           	opt stack 0
   746                           
   747                           ; 24 bytes @ 0x18
   748  000118                     	ds	24
   749  000130                     i2drawSymbol@i_83:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x30
   753  000130                     	ds	1
   754  000131                     i2drawSymbol@i_84:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x31
   758  000131                     	ds	1
   759  000132                     i2drawSymbol@i_85:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x32
   763  000132                     	ds	1
   764  000133                     i2drawSymbol@i_86:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x33
   768  000133                     	ds	1
   769  000134                     i2drawSymbol@i_87:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x34
   773  000134                     	ds	1
   774  000135                     ISR@ADvalue:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x35
   778  000135                     	ds	2
   779  000137                     ISR@value:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x37
   783  000137                     	ds	1
   784  000138                     ??_turnAllOff:
   785  000138                     ??_setColHigh:
   786  000138                     ??_setRowHigh:
   787  000138                     on@row:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x38
   791  000138                     	ds	1
   792  000139                     ??_on:
   793                           
   794                           ; 1 bytes @ 0x39
   795  000139                     	ds	1
   796  00013A                     setColHigh@column:
   797                           	opt stack 0
   798  00013A                     setRowHigh@row:
   799                           	opt stack 0
   800  00013A                     turnAllOff@i:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x3A
   804  00013A                     	ds	1
   805  00013B                     ??_refresh:
   806  00013B                     on@column:
   807                           	opt stack 0
   808  00013B                     turnAllOff@j:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x3B
   812  00013B                     	ds	1
   813  00013C                     drawSymbol@offSetX:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x3C
   817  00013C                     	ds	1
   818  00013D                     drawSymbol@symbolPlay:
   819                           	opt stack 0
   820                           
   821                           ; 68 bytes @ 0x3D
   822  00013D                     	ds	1
   823  00013E                     refresh@theCol:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x3E
   827  00013E                     	ds	1
   828  00013F                     refresh@theRow:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x3F
   832  00013F                     	ds	66
   833  000181                     drawSymbol@symbolArrowRight:
   834                           	opt stack 0
   835                           
   836                           ; 30 bytes @ 0x81
   837  000181                     	ds	30
   838  00019F                     tblptru	equ	0xFF8
   839                           tblptrh	equ	0xFF7
   840                           tblptrl	equ	0xFF6
   841                           tablat	equ	0xFF5
   842                           postinc0	equ	0xFEE
   843                           wreg	equ	0xFE8
   844                           postdec1	equ	0xFE5
   845                           fsr1l	equ	0xFE1
   846                           
   847                           ; 1 bytes @ 0x9F
   848                           
   849                           	psect	cstackBANK0
   850  000080                     __pcstackBANK0:
   851                           	opt stack 0
   852  000080                     i2drawSymbol@symbolArrowLeft:
   853                           	opt stack 0
   854                           
   855                           ; 30 bytes @ 0x0
   856  000080                     	ds	30
   857  00009E                     i2drawSymbol@symbolGo:
   858                           	opt stack 0
   859                           
   860                           ; 68 bytes @ 0x1E
   861  00009E                     	ds	68
   862  0000E2                     i2drawSymbol@symbolTwo:
   863                           	opt stack 0
   864                           
   865                           ; 28 bytes @ 0x62
   866  0000E2                     	ds	28
   867  0000FE                     i2drawSymbol@i:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x7E
   871  0000FE                     	ds	1
   872  0000FF                     i2drawSymbol@i_82:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x7F
   876  0000FF                     	ds	1
   877                           tblptru	equ	0xFF8
   878                           tblptrh	equ	0xFF7
   879                           tblptrl	equ	0xFF6
   880                           tablat	equ	0xFF5
   881                           postinc0	equ	0xFEE
   882                           wreg	equ	0xFE8
   883                           postdec1	equ	0xFE5
   884                           fsr1l	equ	0xFE1
   885                           
   886                           	psect	cstackCOMRAM
   887  000001                     __pcstackCOMRAM:
   888                           	opt stack 0
   889  000001                     ??i2_setColHigh:
   890  000001                     ??i2_setRowHigh:
   891  000001                     ??i2_turnAllOff:
   892  000001                     ?___lwdiv:
   893                           	opt stack 0
   894  000001                     off@row:
   895                           	opt stack 0
   896  000001                     i2on@row:
   897                           	opt stack 0
   898  000001                     ___lwdiv@dividend:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x0
   902  000001                     	ds	1
   903  000002                     ??_off:
   904  000002                     ??i2_on:
   905                           
   906                           ; 1 bytes @ 0x1
   907  000002                     	ds	1
   908  000003                     i2setColHigh@column:
   909                           	opt stack 0
   910  000003                     i2setRowHigh@row:
   911                           	opt stack 0
   912  000003                     i2turnAllOff@i:
   913                           	opt stack 0
   914  000003                     ___lwdiv@divisor:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x2
   918  000003                     	ds	1
   919  000004                     ??i2_refresh:
   920  000004                     off@column:
   921                           	opt stack 0
   922  000004                     i2on@column:
   923                           	opt stack 0
   924  000004                     i2turnAllOff@j:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x3
   928  000004                     	ds	1
   929  000005                     i2drawSymbol@offSetX:
   930                           	opt stack 0
   931  000005                     ___lwdiv@quotient:
   932                           	opt stack 0
   933                           
   934                           ; 2 bytes @ 0x4
   935  000005                     	ds	1
   936  000006                     i2drawSymbol@symbolPlay:
   937                           	opt stack 0
   938                           
   939                           ; 68 bytes @ 0x5
   940  000006                     	ds	1
   941  000007                     ___lwdiv@counter:
   942                           	opt stack 0
   943  000007                     i2refresh@theCol:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x6
   947  000007                     	ds	1
   948  000008                     i2refresh@theRow:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x7
   952  000008                     	ds	66
   953  00004A                     i2drawSymbol@symbolArrowRight:
   954                           	opt stack 0
   955                           
   956                           ; 30 bytes @ 0x49
   957  00004A                     	ds	30
   958  000068                     i2drawSymbol@chosenSymbol:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x67
   962  000068                     	ds	1
   963  000069                     i2startPong@counter:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x68
   967  000069                     	ds	2
   968  00006B                     checkNextPosition@counter:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x6A
   972  00006B                     	ds	2
   973  00006D                     checkNextPosition@counter_430:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x6C
   977  00006D                     	ds	2
   978  00006F                     ??_ISR:
   979                           
   980                           ; 1 bytes @ 0x6E
   981  00006F                     	ds	14
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           postdec1	equ	0xFE5
   989                           fsr1l	equ	0xFE1
   990                           
   991 ;;
   992 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   993 ;;
   994 ;; *************** function _main *****************
   995 ;; Defined at:
   996 ;;		line 406 in file "main.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1010 ;;      Params:         0       0       0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels required when called:   10
  1016 ;; This function calls:
  1017 ;;		_initialize
  1018 ;;		_initializeLED
  1019 ;;		_initializePong
  1020 ;;		_refresh
  1021 ;; This function is called by:
  1022 ;;		Startup code after reset
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text0
  1027  0010EE                     __ptext0:
  1028                           	opt stack 0
  1029  0010EE                     _main:
  1030                           	opt stack 21
  1031                           
  1032                           ;main.c: 408: initialize();
  1033                           
  1034                           ;incstack = 0
  1035  0010EE  ECE3  F006         	call	_initialize	;wreg free
  1036                           
  1037                           ;main.c: 409: initializeLED();
  1038  0010F2  EC3A  F008         	call	_initializeLED	;wreg free
  1039                           
  1040                           ;main.c: 410: initializePong();
  1041  0010F6  EC63  F008         	call	_initializePong	;wreg free
  1042  0010FA                     l2958:
  1043  0010FA  ECE4  F004         	call	_refresh	;wreg free
  1044  0010FE  D7FD               	goto	l2958
  1045  001100                     __end_of_main:
  1046                           	opt stack 0
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           postinc0	equ	0xFEE
  1052                           wreg	equ	0xFE8
  1053                           postdec1	equ	0xFE5
  1054                           fsr1l	equ	0xFE1
  1055                           
  1056 ;; *************** function _initializePong *****************
  1057 ;; Defined at:
  1058 ;;		line 87 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1072 ;;      Params:         0       0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    9
  1079 ;; This function calls:
  1080 ;;		_startPong
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text1
  1087  0010C6                     __ptext1:
  1088                           	opt stack 0
  1089  0010C6                     _initializePong:
  1090                           	opt stack 21
  1091                           
  1092                           ;main.c: 92: _p1.lives = 3;
  1093                           
  1094                           ;incstack = 0
  1095  0010C6  0E03               	movlw	3
  1096  0010C8  0101               	movlb	1	; () banked
  1097  0010CA  6FBB               	movwf	(__p1+4)& (0+255),b
  1098                           
  1099                           ;main.c: 93: _p2.lives = 3;
  1100  0010CC  0E03               	movlw	3
  1101  0010CE  0101               	movlb	1	; () banked
  1102  0010D0  6FC0               	movwf	(__p2+4)& (0+255),b
  1103                           
  1104                           ; BSR set to: 1
  1105                           ;main.c: 95: startPong();
  1106  0010D2  ECE7  F005         	call	_startPong	;wreg free
  1107                           
  1108                           ;main.c: 98: TMR0ON = 1;
  1109  0010D6  8ED5               	bsf	4053,7,c	;volatile
  1110  0010D8  0012               	return		;funcret
  1111  0010DA                     __end_of_initializePong:
  1112                           	opt stack 0
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           postdec1	equ	0xFE5
  1120                           fsr1l	equ	0xFE1
  1121                           
  1122 ;; *************** function _startPong *****************
  1123 ;; Defined at:
  1124 ;;		line 58 in file "main.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  counter         2  134[BANK2 ] unsigned int 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1138 ;;      Params:         0       0       0       0       0       0       0
  1139 ;;      Locals:         0       0       0       2       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0
  1141 ;;      Totals:         0       0       0       2       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    8
  1145 ;; This function calls:
  1146 ;;		_drawSymbol
  1147 ;;		_refresh
  1148 ;;		_turnAllOff
  1149 ;; This function is called by:
  1150 ;;		_initializePong
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text2
  1155  000BCE                     __ptext2:
  1156                           	opt stack 0
  1157  000BCE                     _startPong:
  1158                           	opt stack 21
  1159                           
  1160                           ;main.c: 60: _speed = 200;
  1161                           
  1162                           ;incstack = 0
  1163  000BCE  0E00               	movlw	0
  1164  000BD0  6E7E               	movwf	__speed+1,c
  1165  000BD2  0EC8               	movlw	200
  1166  000BD4  6E7D               	movwf	__speed,c
  1167                           
  1168                           ;main.c: 63: turnAllOff();
  1169  000BD6  EC53  F006         	call	_turnAllOff	;wreg free
  1170                           
  1171                           ;main.c: 64: drawSymbol(_p1.lives, 0);
  1172  000BDA  0E00               	movlw	0
  1173  000BDC  0101               	movlb	1	; () banked
  1174  000BDE  6F3C               	movwf	drawSymbol@offSetX& (0+255),b
  1175  000BE0  0101               	movlb	1	; () banked
  1176  000BE2  51BB               	movf	(__p1+4)& (0+255),w,b
  1177  000BE4  EC0D  F000         	call	_drawSymbol
  1178                           
  1179                           ;main.c: 65: drawSymbol(_p2.lives, 8);
  1180  000BE8  0E08               	movlw	8
  1181  000BEA  0101               	movlb	1	; () banked
  1182  000BEC  6F3C               	movwf	drawSymbol@offSetX& (0+255),b
  1183  000BEE  0101               	movlb	1	; () banked
  1184  000BF0  51C0               	movf	(__p2+4)& (0+255),w,b
  1185  000BF2  EC0D  F000         	call	_drawSymbol
  1186                           
  1187                           ;main.c: 66: for(unsigned int counter = 0; counter < 800; counter ++)
  1188  000BF6  0E00               	movlw	0
  1189  000BF8  0102               	movlb	2	; () banked
  1190  000BFA  6F87               	movwf	(startPong@counter+1)& (0+255),b
  1191  000BFC  0E00               	movlw	0
  1192  000BFE  6F86               	movwf	startPong@counter& (0+255),b
  1193  000C00                     l2700:
  1194                           
  1195                           ; BSR set to: 2
  1196  000C00  0E20               	movlw	32
  1197  000C02  0102               	movlb	2	; () banked
  1198  000C04  5D86               	subwf	startPong@counter& (0+255),w,b
  1199  000C06  0E03               	movlw	3
  1200  000C08  0102               	movlb	2	; () banked
  1201  000C0A  5987               	subwfb	(startPong@counter+1)& (0+255),w,b
  1202  000C0C  B0D8               	btfsc	status,0,c
  1203  000C0E  D006               	goto	l2710
  1204                           
  1205                           ; BSR set to: 2
  1206                           ;main.c: 67: {
  1207                           ;main.c: 68: refresh();
  1208                           
  1209                           ; BSR set to: 2
  1210                           
  1211                           ; BSR set to: 2
  1212  000C10  ECE4  F004         	call	_refresh	;wreg free
  1213  000C14  0102               	movlb	2	; () banked
  1214  000C16  4B86               	infsnz	startPong@counter& (0+255),f,b
  1215  000C18  2B87               	incf	(startPong@counter+1)& (0+255),f,b
  1216  000C1A  D7F2               	goto	l2700
  1217  000C1C                     l2710:
  1218                           
  1219                           ; BSR set to: 2
  1220                           ;main.c: 69: }
  1221                           ;main.c: 70: turnAllOff();
  1222  000C1C  EC53  F006         	call	_turnAllOff	;wreg free
  1223                           
  1224                           ;main.c: 75: _ball.bDirection = 3;
  1225  000C20  0E03               	movlw	3
  1226  000C22  0101               	movlb	1	; () banked
  1227  000C24  6FC3               	movwf	(__ball+2)& (0+255),b
  1228                           
  1229                           ; BSR set to: 1
  1230                           ;main.c: 77: _ball.bPos[0] = 2;
  1231  000C26  0E02               	movlw	2
  1232  000C28  0101               	movlb	1	; () banked
  1233  000C2A  6FC1               	movwf	__ball& (0+255),b
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;main.c: 79: _ball.bPos[1] = 4;
  1237  000C2C  0E04               	movlw	4
  1238  000C2E  0101               	movlb	1	; () banked
  1239  000C30  6FC2               	movwf	(__ball+1)& (0+255),b
  1240                           
  1241                           ; BSR set to: 1
  1242                           ;main.c: 82: _nextPos[0] = _ball.bPos[0];
  1243  000C32  C1C1  F1C4         	movff	__ball,__nextPos
  1244                           
  1245                           ; BSR set to: 1
  1246                           ;main.c: 83: _nextPos[1] = _ball.bPos[1];
  1247  000C36  C1C2  F1C5         	movff	__ball+1,__nextPos+1
  1248                           
  1249                           ; BSR set to: 1
  1250  000C3A  0012               	return		;funcret
  1251  000C3C                     __end_of_startPong:
  1252                           	opt stack 0
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           postinc0	equ	0xFEE
  1258                           wreg	equ	0xFE8
  1259                           postdec1	equ	0xFE5
  1260                           fsr1l	equ	0xFE1
  1261                           status	equ	0xFD8
  1262                           
  1263 ;; *************** function _refresh *****************
  1264 ;; Defined at:
  1265 ;;		line 177 in file "Source/LED-API.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  theRow          1   63[BANK1 ] unsigned char 
  1270 ;;  theCol          1   62[BANK1 ] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1280 ;;      Params:         0       0       0       0       0       0       0
  1281 ;;      Locals:         0       0       2       0       0       0       0
  1282 ;;      Temps:          0       0       3       0       0       0       0
  1283 ;;      Totals:         0       0       5       0       0       0       0
  1284 ;;Total ram usage:        5 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    7
  1287 ;; This function calls:
  1288 ;;		_allOff
  1289 ;;		_setColHigh
  1290 ;;		_setRowHigh
  1291 ;; This function is called by:
  1292 ;;		_startPong
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text3
  1298  0009C8                     __ptext3:
  1299                           	opt stack 0
  1300  0009C8                     _refresh:
  1301                           	opt stack 23
  1302                           
  1303                           ;LED-API.c: 179: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  1304                           
  1305                           ; BSR set to: 1
  1306                           ;incstack = 0
  1307  0009C8  0E00               	movlw	0
  1308  0009CA  0101               	movlb	1	; () banked
  1309  0009CC  6F3E               	movwf	refresh@theCol& (0+255),b
  1310  0009CE                     l2630:
  1311                           
  1312                           ; BSR set to: 1
  1313  0009CE  0E07               	movlw	7
  1314  0009D0  0101               	movlb	1	; () banked
  1315  0009D2  653E               	cpfsgt	refresh@theCol& (0+255),b
  1316  0009D4  D001               	goto	l2634
  1317  0009D6  0012               	return	
  1318  0009D8                     l2634:
  1319                           
  1320                           ; BSR set to: 1
  1321                           ;LED-API.c: 181: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  1322  0009D8  0E00               	movlw	0
  1323  0009DA  0101               	movlb	1	; () banked
  1324  0009DC  6F3F               	movwf	refresh@theRow& (0+255),b
  1325  0009DE                     l2636:
  1326                           
  1327                           ; BSR set to: 1
  1328  0009DE  0E0F               	movlw	15
  1329  0009E0  0101               	movlb	1	; () banked
  1330  0009E2  653F               	cpfsgt	refresh@theRow& (0+255),b
  1331  0009E4  D001               	goto	l2640
  1332  0009E6  D024               	goto	l2648
  1333  0009E8                     l2640:
  1334                           
  1335                           ; BSR set to: 1
  1336                           ;LED-API.c: 183: if (pixels[theCol][theRow] == 1)
  1337  0009E8  0101               	movlb	1	; () banked
  1338  0009EA  513E               	movf	refresh@theCol& (0+255),w,b
  1339  0009EC  0D10               	mullw	16
  1340  0009EE  0E00               	movlw	low _pixels
  1341  0009F0  0101               	movlb	1	; () banked
  1342  0009F2  6F3B               	movwf	??_refresh& (0+255),b
  1343  0009F4  0E03               	movlw	high _pixels
  1344  0009F6  0101               	movlb	1	; () banked
  1345  0009F8  6F3C               	movwf	(??_refresh+1)& (0+255),b
  1346  0009FA  50F3               	movf	prodl,w,c
  1347  0009FC  0101               	movlb	1	; () banked
  1348  0009FE  273B               	addwf	??_refresh& (0+255),f,b
  1349  000A00  50F4               	movf	prodh,w,c
  1350  000A02  0101               	movlb	1	; () banked
  1351  000A04  233C               	addwfc	(??_refresh+1)& (0+255),f,b
  1352  000A06  0101               	movlb	1	; () banked
  1353  000A08  513F               	movf	refresh@theRow& (0+255),w,b
  1354  000A0A  0D01               	mullw	1
  1355  000A0C  50F3               	movf	prodl,w,c
  1356  000A0E  0101               	movlb	1	; () banked
  1357  000A10  253B               	addwf	??_refresh& (0+255),w,b
  1358  000A12  6ED9               	movwf	fsr2l,c
  1359  000A14  50F4               	movf	prodh,w,c
  1360  000A16  0101               	movlb	1	; () banked
  1361  000A18  213C               	addwfc	(??_refresh+1)& (0+255),w,b
  1362  000A1A  6EDA               	movwf	fsr2h,c
  1363  000A1C  04DE               	decf	postinc2,w,c
  1364  000A1E  A4D8               	btfss	status,2,c
  1365  000A20  D004               	goto	l2644
  1366                           
  1367                           ; BSR set to: 1
  1368                           ;LED-API.c: 184: setRowHigh(theRow);
  1369  000A22  0101               	movlb	1	; () banked
  1370  000A24  513F               	movf	refresh@theRow& (0+255),w,b
  1371  000A26  ECB6  F006         	call	_setRowHigh
  1372  000A2A                     l2644:
  1373  000A2A  0101               	movlb	1	; () banked
  1374  000A2C  2B3F               	incf	refresh@theRow& (0+255),f,b
  1375  000A2E  D7D7               	goto	l2636
  1376  000A30                     l2648:
  1377                           
  1378                           ; BSR set to: 1
  1379                           ;LED-API.c: 185: }
  1380                           ;LED-API.c: 189: setColHigh(theCol);
  1381  000A30  0101               	movlb	1	; () banked
  1382  000A32  513E               	movf	refresh@theCol& (0+255),w,b
  1383  000A34  EC26  F008         	call	_setColHigh
  1384                           
  1385                           ;LED-API.c: 190: _delay((unsigned long)((500)*(32000000/4000000.0)));
  1386  000A38  0E06               	movlw	6
  1387  000A3A  0101               	movlb	1	; () banked
  1388  000A3C  6F3B               	movwf	??_refresh& (0+255),b
  1389  000A3E  0E30               	movlw	48
  1390  000A40                     u3087:
  1391  000A40  2EE8               	decfsz	wreg,f,c
  1392  000A42  D7FE               	goto	u3087
  1393  000A44  2F3B               	decfsz	??_refresh& (0+255),f,b
  1394  000A46  D7FC               	goto	u3087
  1395  000A48  D000               	nop2	
  1396                           
  1397                           ;LED-API.c: 191: allOff();
  1398  000A4A  EC80  F008         	call	_allOff	;wreg free
  1399  000A4E  0101               	movlb	1	; () banked
  1400  000A50  2B3E               	incf	refresh@theCol& (0+255),f,b
  1401  000A52  D7BD               	goto	l2630
  1402  000A54                     __end_of_refresh:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           prodh	equ	0xFF4
  1409                           prodl	equ	0xFF3
  1410                           postinc0	equ	0xFEE
  1411                           wreg	equ	0xFE8
  1412                           postdec1	equ	0xFE5
  1413                           fsr1l	equ	0xFE1
  1414                           postinc2	equ	0xFDE
  1415                           fsr2h	equ	0xFDA
  1416                           fsr2l	equ	0xFD9
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _setRowHigh *****************
  1420 ;; Defined at:
  1421 ;;		line 24 in file "Source/LED-API.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  row             1    wreg     unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  row             1   58[BANK1 ] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         0       0       0       0       0       0       0
  1436 ;;      Locals:         0       0       1       0       0       0       0
  1437 ;;      Temps:          0       0       2       0       0       0       0
  1438 ;;      Totals:         0       0       3       0       0       0       0
  1439 ;;Total ram usage:        3 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    6
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_refresh
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text4
  1450  000D6C                     __ptext4:
  1451                           	opt stack 0
  1452  000D6C                     _setRowHigh:
  1453                           	opt stack 23
  1454                           
  1455                           ; BSR set to: 1
  1456                           ;incstack = 0
  1457                           ;setRowHigh@row stored from wreg
  1458  000D6C  0101               	movlb	1	; () banked
  1459  000D6E  6F3A               	movwf	setRowHigh@row& (0+255),b
  1460                           
  1461                           ;LED-API.c: 25: if(row < 8)
  1462  000D70  0E08               	movlw	8
  1463  000D72  0101               	movlb	1	; () banked
  1464  000D74  613A               	cpfslt	setRowHigh@row& (0+255),b
  1465  000D76  D012               	goto	l2412
  1466                           
  1467                           ; BSR set to: 1
  1468                           ;LED-API.c: 26: LATC |= (1 << row);
  1469  000D78  C13A  F138         	movff	setRowHigh@row,??_setRowHigh
  1470  000D7C  0E01               	movlw	1
  1471  000D7E  0101               	movlb	1	; () banked
  1472  000D80  6F39               	movwf	(??_setRowHigh+1)& (0+255),b
  1473  000D82  0101               	movlb	1	; () banked
  1474  000D84  2B38               	incf	??_setRowHigh& (0+255),f,b
  1475  000D86  D003               	goto	u2264
  1476  000D88                     u2265:
  1477  000D88  0101               	movlb	1	; () banked
  1478  000D8A  90D8               	bcf	status,0,c
  1479  000D8C  3739               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1480  000D8E                     u2264:
  1481  000D8E  0101               	movlb	1	; () banked
  1482  000D90  2F38               	decfsz	??_setRowHigh& (0+255),f,b
  1483  000D92  D7FA               	goto	u2265
  1484  000D94  0101               	movlb	1	; () banked
  1485  000D96  5139               	movf	(??_setRowHigh+1)& (0+255),w,b
  1486  000D98  128B               	iorwf	3979,f,c	;volatile
  1487  000D9A  0012               	return	
  1488  000D9C                     l2412:
  1489                           
  1490                           ; BSR set to: 1
  1491                           ;LED-API.c: 27: else
  1492                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  1493  000D9C  C13A  F138         	movff	setRowHigh@row,??_setRowHigh
  1494  000DA0  0EF8               	movlw	-8
  1495  000DA2  0101               	movlb	1	; () banked
  1496  000DA4  2738               	addwf	??_setRowHigh& (0+255),f,b
  1497  000DA6  0E01               	movlw	1
  1498  000DA8  0101               	movlb	1	; () banked
  1499  000DAA  6F39               	movwf	(??_setRowHigh+1)& (0+255),b
  1500  000DAC  0101               	movlb	1	; () banked
  1501  000DAE  2B38               	incf	??_setRowHigh& (0+255),f,b
  1502  000DB0  D003               	goto	u2274
  1503  000DB2                     u2275:
  1504  000DB2  0101               	movlb	1	; () banked
  1505  000DB4  90D8               	bcf	status,0,c
  1506  000DB6  3739               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1507  000DB8                     u2274:
  1508  000DB8  0101               	movlb	1	; () banked
  1509  000DBA  2F38               	decfsz	??_setRowHigh& (0+255),f,b
  1510  000DBC  D7FA               	goto	u2275
  1511  000DBE  0101               	movlb	1	; () banked
  1512  000DC0  5139               	movf	(??_setRowHigh+1)& (0+255),w,b
  1513  000DC2  128C               	iorwf	3980,f,c	;volatile
  1514  000DC4  0012               	return	
  1515  000DC6                     __end_of_setRowHigh:
  1516                           	opt stack 0
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           prodh	equ	0xFF4
  1522                           prodl	equ	0xFF3
  1523                           postinc0	equ	0xFEE
  1524                           wreg	equ	0xFE8
  1525                           postdec1	equ	0xFE5
  1526                           fsr1l	equ	0xFE1
  1527                           postinc2	equ	0xFDE
  1528                           fsr2h	equ	0xFDA
  1529                           fsr2l	equ	0xFD9
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _setColHigh *****************
  1533 ;; Defined at:
  1534 ;;		line 20 in file "Source/LED-API.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  column          1    wreg     unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  column          1   58[BANK1 ] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1548 ;;      Params:         0       0       0       0       0       0       0
  1549 ;;      Locals:         0       0       1       0       0       0       0
  1550 ;;      Temps:          0       0       2       0       0       0       0
  1551 ;;      Totals:         0       0       3       0       0       0       0
  1552 ;;Total ram usage:        3 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    6
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_refresh
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text5
  1563  00104C                     __ptext5:
  1564                           	opt stack 0
  1565  00104C                     _setColHigh:
  1566                           	opt stack 23
  1567                           
  1568                           ; BSR set to: 1
  1569                           ;incstack = 0
  1570                           ;setColHigh@column stored from wreg
  1571  00104C  0101               	movlb	1	; () banked
  1572  00104E  6F3A               	movwf	setColHigh@column& (0+255),b
  1573                           
  1574                           ;LED-API.c: 21: LATA |= (1 << column);
  1575  001050  C13A  F138         	movff	setColHigh@column,??_setColHigh
  1576  001054  0E01               	movlw	1
  1577  001056  0101               	movlb	1	; () banked
  1578  001058  6F39               	movwf	(??_setColHigh+1)& (0+255),b
  1579  00105A  0101               	movlb	1	; () banked
  1580  00105C  2B38               	incf	??_setColHigh& (0+255),f,b
  1581  00105E  D003               	goto	u2244
  1582  001060                     u2245:
  1583  001060  0101               	movlb	1	; () banked
  1584  001062  90D8               	bcf	status,0,c
  1585  001064  3739               	rlcf	(??_setColHigh+1)& (0+255),f,b
  1586  001066                     u2244:
  1587  001066  0101               	movlb	1	; () banked
  1588  001068  2F38               	decfsz	??_setColHigh& (0+255),f,b
  1589  00106A  D7FA               	goto	u2245
  1590  00106C  0101               	movlb	1	; () banked
  1591  00106E  5139               	movf	(??_setColHigh+1)& (0+255),w,b
  1592  001070  1289               	iorwf	3977,f,c	;volatile
  1593                           
  1594                           ; BSR set to: 1
  1595  001072  0012               	return		;funcret
  1596  001074                     __end_of_setColHigh:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           prodh	equ	0xFF4
  1603                           prodl	equ	0xFF3
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1l	equ	0xFE1
  1608                           postinc2	equ	0xFDE
  1609                           fsr2h	equ	0xFDA
  1610                           fsr2l	equ	0xFD9
  1611                           status	equ	0xFD8
  1612                           
  1613 ;; *************** function _allOff *****************
  1614 ;; Defined at:
  1615 ;;		line 171 in file "Source/LED-API.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:         0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    6
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_refresh
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text6
  1644  001100                     __ptext6:
  1645                           	opt stack 0
  1646  001100                     _allOff:
  1647                           	opt stack 23
  1648                           
  1649                           ;LED-API.c: 172: LATA = 0;
  1650                           
  1651                           ; BSR set to: 1
  1652                           ;incstack = 0
  1653  001100  0E00               	movlw	0
  1654  001102  6E89               	movwf	3977,c	;volatile
  1655                           
  1656                           ;LED-API.c: 173: LATC = 0;
  1657  001104  0E00               	movlw	0
  1658  001106  6E8B               	movwf	3979,c	;volatile
  1659                           
  1660                           ;LED-API.c: 174: LATD = 0;
  1661  001108  0E00               	movlw	0
  1662  00110A  6E8C               	movwf	3980,c	;volatile
  1663  00110C  0012               	return		;funcret
  1664  00110E                     __end_of_allOff:
  1665                           	opt stack 0
  1666                           tblptru	equ	0xFF8
  1667                           tblptrh	equ	0xFF7
  1668                           tblptrl	equ	0xFF6
  1669                           tablat	equ	0xFF5
  1670                           prodh	equ	0xFF4
  1671                           prodl	equ	0xFF3
  1672                           postinc0	equ	0xFEE
  1673                           wreg	equ	0xFE8
  1674                           postdec1	equ	0xFE5
  1675                           fsr1l	equ	0xFE1
  1676                           postinc2	equ	0xFDE
  1677                           fsr2h	equ	0xFDA
  1678                           fsr2l	equ	0xFD9
  1679                           status	equ	0xFD8
  1680                           
  1681 ;; *************** function _drawSymbol *****************
  1682 ;; Defined at:
  1683 ;;		line 85 in file "Source/LED-API.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  chosenSymbol    1    wreg     unsigned char 
  1686 ;;  offSetX         1   60[BANK1 ] unsigned char 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  chosenSymbol    1  126[BANK2 ] unsigned char 
  1689 ;;  i               1  133[BANK2 ] unsigned char 
  1690 ;;  i               1  132[BANK2 ] unsigned char 
  1691 ;;  i               1  131[BANK2 ] unsigned char 
  1692 ;;  i               1  130[BANK2 ] unsigned char 
  1693 ;;  i               1  129[BANK2 ] unsigned char 
  1694 ;;  i               1  128[BANK2 ] unsigned char 
  1695 ;;  i               1  127[BANK2 ] unsigned char 
  1696 ;;  symbolGo       68   30[BANK2 ] unsigned char [2][34]
  1697 ;;  symbolPlay     68   61[BANK1 ] unsigned char [2][34]
  1698 ;;  symbolArrowL   30    0[BANK2 ] unsigned char [2][15]
  1699 ;;  symbolArrowR   30  129[BANK1 ] unsigned char [2][15]
  1700 ;;  symbolTwo      28   98[BANK2 ] unsigned char [2][14]
  1701 ;;  symbolThree    24   24[BANK3 ] unsigned char [2][12]
  1702 ;;  symbolOne      24    0[BANK3 ] unsigned char [2][12]
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1712 ;;      Params:         0       0       1       0       0       0       0
  1713 ;;      Locals:         0       0      98     134      48       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0
  1715 ;;      Totals:         0       0      99     134      48       0       0
  1716 ;;Total ram usage:      281 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    7
  1719 ;; This function calls:
  1720 ;;		_on
  1721 ;; This function is called by:
  1722 ;;		_startPong
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text7
  1727  00001A                     __ptext7:
  1728                           	opt stack 0
  1729  00001A                     _drawSymbol:
  1730                           	opt stack 21
  1731                           
  1732                           ;incstack = 0
  1733                           ;drawSymbol@chosenSymbol stored from wreg
  1734  00001A  0102               	movlb	2	; () banked
  1735  00001C  6F7E               	movwf	drawSymbol@chosenSymbol& (0+255),b
  1736                           
  1737                           ;LED-API.c: 87: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  1738  00001E  EE21  F09F         	lfsr	2,drawSymbol@F3224
  1739  000022  EE13  F0C4         	lfsr	1,drawSymbol@symbolOne
  1740  000026  0E17               	movlw	23
  1741  000028                     u2551:
  1742  000028  CFDB FFE3          	movff	plusw2,plusw1
  1743  00002C  06E8               	decf	wreg,f,c
  1744  00002E  E2FC               	bc	u2551
  1745                           
  1746                           ;LED-API.c: 88: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  1747  000030  EE22  F0C4         	lfsr	2,drawSymbol@F3227
  1748  000034  EE12  F062         	lfsr	1,drawSymbol@symbolTwo
  1749  000038  0E1B               	movlw	27
  1750  00003A                     u2561:
  1751  00003A  CFDB FFE3          	movff	plusw2,plusw1
  1752  00003E  06E8               	decf	wreg,f,c
  1753  000040  E2FC               	bc	u2561
  1754                           
  1755                           ;LED-API.c: 89: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  1756  000042  EE22  F0E0         	lfsr	2,drawSymbol@F3230
  1757  000046  EE13  F0DC         	lfsr	1,drawSymbol@symbolThree
  1758  00004A  0E17               	movlw	23
  1759  00004C                     u2571:
  1760  00004C  CFDB FFE3          	movff	plusw2,plusw1
  1761  000050  06E8               	decf	wreg,f,c
  1762  000052  E2FC               	bc	u2571
  1763                           
  1764                           ;LED-API.c: 91: char symbolPlay[34][2] = {
  1765                           ;LED-API.c: 92: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  1766                           ;LED-API.c: 93: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  1767                           ;LED-API.c: 94: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  1768                           ;LED-API.c: 95: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  1769  000054  EE23  F080         	lfsr	2,drawSymbol@F3233
  1770  000058  EE11  F03D         	lfsr	1,drawSymbol@symbolPlay
  1771  00005C  0E43               	movlw	67
  1772  00005E                     u2581:
  1773  00005E  CFDB FFE3          	movff	plusw2,plusw1
  1774  000062  06E8               	decf	wreg,f,c
  1775  000064  E2FC               	bc	u2581
  1776                           
  1777                           ;LED-API.c: 97: char symbolGo[34][2] = {
  1778                           ;LED-API.c: 98: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0},
      +                          {5,0},{6,1},{5,2},{4,2},
  1779                           ;LED-API.c: 99: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},{
      +                          13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  1780  000066  EE24  F000         	lfsr	2,drawSymbol@F3236
  1781  00006A  EE12  F01E         	lfsr	1,drawSymbol@symbolGo
  1782  00006E  0E43               	movlw	67
  1783  000070                     u2591:
  1784  000070  CFDB FFE3          	movff	plusw2,plusw1
  1785  000074  06E8               	decf	wreg,f,c
  1786  000076  E2FC               	bc	u2591
  1787                           
  1788                           ;LED-API.c: 101: char symbolArrowRight[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3},{6,
      +                          3},{7,3},{8,3},{7,4},{6,5},{5,7},{6,2},{5,1},{4,0}};
  1789  000078  EE22  F088         	lfsr	2,drawSymbol@F3239
  1790  00007C  EE11  F081         	lfsr	1,drawSymbol@symbolArrowRight
  1791  000080  0E1D               	movlw	29
  1792  000082                     u2601:
  1793  000082  CFDB FFE3          	movff	plusw2,plusw1
  1794  000086  06E8               	decf	wreg,f,c
  1795  000088  E2FC               	bc	u2601
  1796                           
  1797                           ;LED-API.c: 102: char symbolArrowLeft[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3}, {6,
      +                          3},{7,3},{8,3}, {1,4},{2,5},{3,6},{1,2},{2,1},{3,0}};
  1798  00008A  EE22  F0A6         	lfsr	2,drawSymbol@F3242
  1799  00008E  EE12  F000         	lfsr	1,drawSymbol@symbolArrowLeft
  1800  000092  0E1D               	movlw	29
  1801  000094                     u2611:
  1802  000094  CFDB FFE3          	movff	plusw2,plusw1
  1803  000098  06E8               	decf	wreg,f,c
  1804  00009A  E2FC               	bc	u2611
  1805                           
  1806                           ;LED-API.c: 104: switch(chosenSymbol)
  1807  00009C  D11D               	goto	l2626
  1808  00009E                     l2540:
  1809                           
  1810                           ;LED-API.c: 109: for(unsigned char i = 0; i < 12; i++)
  1811  00009E  0E00               	movlw	0
  1812  0000A0  0102               	movlb	2	; () banked
  1813  0000A2  6F7F               	movwf	drawSymbol@i& (0+255),b
  1814  0000A4                     l2542:
  1815                           
  1816                           ; BSR set to: 2
  1817  0000A4  0E0B               	movlw	11
  1818  0000A6  0102               	movlb	2	; () banked
  1819  0000A8  657F               	cpfsgt	drawSymbol@i& (0+255),b
  1820  0000AA  D001               	goto	l2546
  1821  0000AC  0012               	return	
  1822  0000AE                     l2546:
  1823                           
  1824                           ; BSR set to: 2
  1825                           ;LED-API.c: 110: {
  1826                           ;LED-API.c: 111: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  1827  0000AE  0102               	movlb	2	; () banked
  1828  0000B0  517F               	movf	drawSymbol@i& (0+255),w,b
  1829  0000B2  0D02               	mullw	2
  1830  0000B4  0EC4               	movlw	low drawSymbol@symbolOne
  1831  0000B6  24F3               	addwf	prodl,w,c
  1832  0000B8  6ED9               	movwf	fsr2l,c
  1833  0000BA  0E03               	movlw	high drawSymbol@symbolOne
  1834  0000BC  20F4               	addwfc	prodh,w,c
  1835  0000BE  6EDA               	movwf	fsr2h,c
  1836  0000C0  50DF               	movf	indf2,w,c
  1837  0000C2  0101               	movlb	1	; () banked
  1838  0000C4  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  1839  0000C6  0101               	movlb	1	; () banked
  1840  0000C8  6F38               	movwf	on@row& (0+255),b
  1841  0000CA  0102               	movlb	2	; () banked
  1842  0000CC  517F               	movf	drawSymbol@i& (0+255),w,b
  1843  0000CE  0D02               	mullw	2
  1844  0000D0  0E01               	movlw	1
  1845  0000D2  26F3               	addwf	prodl,f,c
  1846  0000D4  0E00               	movlw	0
  1847  0000D6  22F4               	addwfc	prodh,f,c
  1848  0000D8  0EC4               	movlw	low drawSymbol@symbolOne
  1849  0000DA  24F3               	addwf	prodl,w,c
  1850  0000DC  6ED9               	movwf	fsr2l,c
  1851  0000DE  0E03               	movlw	high drawSymbol@symbolOne
  1852  0000E0  20F4               	addwfc	prodh,w,c
  1853  0000E2  6EDA               	movwf	fsr2h,c
  1854  0000E4  50DF               	movf	indf2,w,c
  1855  0000E6  EC10  F007         	call	_on
  1856  0000EA  0102               	movlb	2	; () banked
  1857  0000EC  2B7F               	incf	drawSymbol@i& (0+255),f,b
  1858  0000EE  D7DA               	goto	l2542
  1859  0000F0                     l2552:
  1860                           
  1861                           ; BSR set to: 2
  1862                           ;LED-API.c: 117: for(unsigned char i = 0; i < 14; i++)
  1863  0000F0  0E00               	movlw	0
  1864  0000F2  0102               	movlb	2	; () banked
  1865  0000F4  6F80               	movwf	drawSymbol@i_82& (0+255),b
  1866  0000F6                     l2554:
  1867                           
  1868                           ; BSR set to: 2
  1869  0000F6  0E0D               	movlw	13
  1870  0000F8  0102               	movlb	2	; () banked
  1871  0000FA  6580               	cpfsgt	drawSymbol@i_82& (0+255),b
  1872  0000FC  D001               	goto	l2558
  1873  0000FE  0012               	return	
  1874  000100                     l2558:
  1875                           
  1876                           ; BSR set to: 2
  1877                           ;LED-API.c: 118: {
  1878                           ;LED-API.c: 119: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  1879  000100  0102               	movlb	2	; () banked
  1880  000102  5180               	movf	drawSymbol@i_82& (0+255),w,b
  1881  000104  0D02               	mullw	2
  1882  000106  0E62               	movlw	low drawSymbol@symbolTwo
  1883  000108  24F3               	addwf	prodl,w,c
  1884  00010A  6ED9               	movwf	fsr2l,c
  1885  00010C  0E02               	movlw	high drawSymbol@symbolTwo
  1886  00010E  20F4               	addwfc	prodh,w,c
  1887  000110  6EDA               	movwf	fsr2h,c
  1888  000112  50DF               	movf	indf2,w,c
  1889  000114  0101               	movlb	1	; () banked
  1890  000116  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  1891  000118  0101               	movlb	1	; () banked
  1892  00011A  6F38               	movwf	on@row& (0+255),b
  1893  00011C  0102               	movlb	2	; () banked
  1894  00011E  5180               	movf	drawSymbol@i_82& (0+255),w,b
  1895  000120  0D02               	mullw	2
  1896  000122  0E01               	movlw	1
  1897  000124  26F3               	addwf	prodl,f,c
  1898  000126  0E00               	movlw	0
  1899  000128  22F4               	addwfc	prodh,f,c
  1900  00012A  0E62               	movlw	low drawSymbol@symbolTwo
  1901  00012C  24F3               	addwf	prodl,w,c
  1902  00012E  6ED9               	movwf	fsr2l,c
  1903  000130  0E02               	movlw	high drawSymbol@symbolTwo
  1904  000132  20F4               	addwfc	prodh,w,c
  1905  000134  6EDA               	movwf	fsr2h,c
  1906  000136  50DF               	movf	indf2,w,c
  1907  000138  EC10  F007         	call	_on
  1908  00013C  0102               	movlb	2	; () banked
  1909  00013E  2B80               	incf	drawSymbol@i_82& (0+255),f,b
  1910  000140  D7DA               	goto	l2554
  1911  000142                     l2564:
  1912                           
  1913                           ; BSR set to: 2
  1914                           ;LED-API.c: 125: for(unsigned char i = 0; i < 12; i++)
  1915  000142  0E00               	movlw	0
  1916  000144  0102               	movlb	2	; () banked
  1917  000146  6F81               	movwf	drawSymbol@i_83& (0+255),b
  1918  000148                     l2566:
  1919                           
  1920                           ; BSR set to: 2
  1921  000148  0E0B               	movlw	11
  1922  00014A  0102               	movlb	2	; () banked
  1923  00014C  6581               	cpfsgt	drawSymbol@i_83& (0+255),b
  1924  00014E  D001               	goto	l2570
  1925  000150  0012               	return	
  1926  000152                     l2570:
  1927                           
  1928                           ; BSR set to: 2
  1929                           ;LED-API.c: 126: {
  1930                           ;LED-API.c: 127: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  1931  000152  0102               	movlb	2	; () banked
  1932  000154  5181               	movf	drawSymbol@i_83& (0+255),w,b
  1933  000156  0D02               	mullw	2
  1934  000158  0EDC               	movlw	low drawSymbol@symbolThree
  1935  00015A  24F3               	addwf	prodl,w,c
  1936  00015C  6ED9               	movwf	fsr2l,c
  1937  00015E  0E03               	movlw	high drawSymbol@symbolThree
  1938  000160  20F4               	addwfc	prodh,w,c
  1939  000162  6EDA               	movwf	fsr2h,c
  1940  000164  50DF               	movf	indf2,w,c
  1941  000166  0101               	movlb	1	; () banked
  1942  000168  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  1943  00016A  0101               	movlb	1	; () banked
  1944  00016C  6F38               	movwf	on@row& (0+255),b
  1945  00016E  0102               	movlb	2	; () banked
  1946  000170  5181               	movf	drawSymbol@i_83& (0+255),w,b
  1947  000172  0D02               	mullw	2
  1948  000174  0E01               	movlw	1
  1949  000176  26F3               	addwf	prodl,f,c
  1950  000178  0E00               	movlw	0
  1951  00017A  22F4               	addwfc	prodh,f,c
  1952  00017C  0EDC               	movlw	low drawSymbol@symbolThree
  1953  00017E  24F3               	addwf	prodl,w,c
  1954  000180  6ED9               	movwf	fsr2l,c
  1955  000182  0E03               	movlw	high drawSymbol@symbolThree
  1956  000184  20F4               	addwfc	prodh,w,c
  1957  000186  6EDA               	movwf	fsr2h,c
  1958  000188  50DF               	movf	indf2,w,c
  1959  00018A  EC10  F007         	call	_on
  1960  00018E  0102               	movlb	2	; () banked
  1961  000190  2B81               	incf	drawSymbol@i_83& (0+255),f,b
  1962  000192  D7DA               	goto	l2566
  1963  000194                     l2576:
  1964                           
  1965                           ; BSR set to: 2
  1966                           ;LED-API.c: 133: for(unsigned char i = 0; i < 34; i++)
  1967  000194  0E00               	movlw	0
  1968  000196  0102               	movlb	2	; () banked
  1969  000198  6F82               	movwf	drawSymbol@i_84& (0+255),b
  1970  00019A                     l2578:
  1971                           
  1972                           ; BSR set to: 2
  1973  00019A  0E21               	movlw	33
  1974  00019C  0102               	movlb	2	; () banked
  1975  00019E  6582               	cpfsgt	drawSymbol@i_84& (0+255),b
  1976  0001A0  D001               	goto	l2582
  1977  0001A2  0012               	return	
  1978  0001A4                     l2582:
  1979                           
  1980                           ; BSR set to: 2
  1981                           ;LED-API.c: 134: {
  1982                           ;LED-API.c: 135: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  1983  0001A4  0102               	movlb	2	; () banked
  1984  0001A6  5182               	movf	drawSymbol@i_84& (0+255),w,b
  1985  0001A8  0D02               	mullw	2
  1986  0001AA  0E3D               	movlw	low drawSymbol@symbolPlay
  1987  0001AC  24F3               	addwf	prodl,w,c
  1988  0001AE  6ED9               	movwf	fsr2l,c
  1989  0001B0  0E01               	movlw	high drawSymbol@symbolPlay
  1990  0001B2  20F4               	addwfc	prodh,w,c
  1991  0001B4  6EDA               	movwf	fsr2h,c
  1992  0001B6  50DF               	movf	indf2,w,c
  1993  0001B8  0101               	movlb	1	; () banked
  1994  0001BA  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  1995  0001BC  0101               	movlb	1	; () banked
  1996  0001BE  6F38               	movwf	on@row& (0+255),b
  1997  0001C0  0102               	movlb	2	; () banked
  1998  0001C2  5182               	movf	drawSymbol@i_84& (0+255),w,b
  1999  0001C4  0D02               	mullw	2
  2000  0001C6  0E01               	movlw	1
  2001  0001C8  26F3               	addwf	prodl,f,c
  2002  0001CA  0E00               	movlw	0
  2003  0001CC  22F4               	addwfc	prodh,f,c
  2004  0001CE  0E3D               	movlw	low drawSymbol@symbolPlay
  2005  0001D0  24F3               	addwf	prodl,w,c
  2006  0001D2  6ED9               	movwf	fsr2l,c
  2007  0001D4  0E01               	movlw	high drawSymbol@symbolPlay
  2008  0001D6  20F4               	addwfc	prodh,w,c
  2009  0001D8  6EDA               	movwf	fsr2h,c
  2010  0001DA  50DF               	movf	indf2,w,c
  2011  0001DC  EC10  F007         	call	_on
  2012  0001E0  0102               	movlb	2	; () banked
  2013  0001E2  2B82               	incf	drawSymbol@i_84& (0+255),f,b
  2014  0001E4  D7DA               	goto	l2578
  2015  0001E6                     l2588:
  2016                           
  2017                           ; BSR set to: 2
  2018                           ;LED-API.c: 141: for(unsigned char i = 0; i < 34; i++)
  2019  0001E6  0E00               	movlw	0
  2020  0001E8  0102               	movlb	2	; () banked
  2021  0001EA  6F83               	movwf	drawSymbol@i_85& (0+255),b
  2022  0001EC                     l2590:
  2023                           
  2024                           ; BSR set to: 2
  2025  0001EC  0E21               	movlw	33
  2026  0001EE  0102               	movlb	2	; () banked
  2027  0001F0  6583               	cpfsgt	drawSymbol@i_85& (0+255),b
  2028  0001F2  D001               	goto	l2594
  2029  0001F4  0012               	return	
  2030  0001F6                     l2594:
  2031                           
  2032                           ; BSR set to: 2
  2033                           ;LED-API.c: 142: {
  2034                           ;LED-API.c: 143: on(symbolGo[i][1], symbolGo[i][0]);
  2035  0001F6  0102               	movlb	2	; () banked
  2036  0001F8  5183               	movf	drawSymbol@i_85& (0+255),w,b
  2037  0001FA  0D02               	mullw	2
  2038  0001FC  0E1E               	movlw	low drawSymbol@symbolGo
  2039  0001FE  24F3               	addwf	prodl,w,c
  2040  000200  6ED9               	movwf	fsr2l,c
  2041  000202  0E02               	movlw	high drawSymbol@symbolGo
  2042  000204  20F4               	addwfc	prodh,w,c
  2043  000206  6EDA               	movwf	fsr2h,c
  2044  000208  50DF               	movf	indf2,w,c
  2045  00020A  0101               	movlb	1	; () banked
  2046  00020C  6F38               	movwf	on@row& (0+255),b
  2047  00020E  0102               	movlb	2	; () banked
  2048  000210  5183               	movf	drawSymbol@i_85& (0+255),w,b
  2049  000212  0D02               	mullw	2
  2050  000214  0E01               	movlw	1
  2051  000216  26F3               	addwf	prodl,f,c
  2052  000218  0E00               	movlw	0
  2053  00021A  22F4               	addwfc	prodh,f,c
  2054  00021C  0E1E               	movlw	low drawSymbol@symbolGo
  2055  00021E  24F3               	addwf	prodl,w,c
  2056  000220  6ED9               	movwf	fsr2l,c
  2057  000222  0E02               	movlw	high drawSymbol@symbolGo
  2058  000224  20F4               	addwfc	prodh,w,c
  2059  000226  6EDA               	movwf	fsr2h,c
  2060  000228  50DF               	movf	indf2,w,c
  2061  00022A  EC10  F007         	call	_on
  2062  00022E  0102               	movlb	2	; () banked
  2063  000230  2B83               	incf	drawSymbol@i_85& (0+255),f,b
  2064  000232  D7DC               	goto	l2590
  2065  000234                     l2600:
  2066                           
  2067                           ; BSR set to: 2
  2068                           ;LED-API.c: 147: for(unsigned char i = 0; i < 15; i++)
  2069  000234  0E00               	movlw	0
  2070  000236  0102               	movlb	2	; () banked
  2071  000238  6F84               	movwf	drawSymbol@i_86& (0+255),b
  2072  00023A                     l2602:
  2073                           
  2074                           ; BSR set to: 2
  2075  00023A  0E0E               	movlw	14
  2076  00023C  0102               	movlb	2	; () banked
  2077  00023E  6584               	cpfsgt	drawSymbol@i_86& (0+255),b
  2078  000240  D001               	goto	l2606
  2079  000242  0012               	return	
  2080  000244                     l2606:
  2081                           
  2082                           ; BSR set to: 2
  2083                           ;LED-API.c: 148: {
  2084                           ;LED-API.c: 149: on(symbolArrowLeft[i][1], symbolGo[i][0] + offSetX);
  2085  000244  0102               	movlb	2	; () banked
  2086  000246  5184               	movf	drawSymbol@i_86& (0+255),w,b
  2087  000248  0D02               	mullw	2
  2088  00024A  0E1E               	movlw	low drawSymbol@symbolGo
  2089  00024C  24F3               	addwf	prodl,w,c
  2090  00024E  6ED9               	movwf	fsr2l,c
  2091  000250  0E02               	movlw	high drawSymbol@symbolGo
  2092  000252  20F4               	addwfc	prodh,w,c
  2093  000254  6EDA               	movwf	fsr2h,c
  2094  000256  50DF               	movf	indf2,w,c
  2095  000258  0101               	movlb	1	; () banked
  2096  00025A  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  2097  00025C  0101               	movlb	1	; () banked
  2098  00025E  6F38               	movwf	on@row& (0+255),b
  2099  000260  0102               	movlb	2	; () banked
  2100  000262  5184               	movf	drawSymbol@i_86& (0+255),w,b
  2101  000264  0D02               	mullw	2
  2102  000266  0E01               	movlw	1
  2103  000268  26F3               	addwf	prodl,f,c
  2104  00026A  0E00               	movlw	0
  2105  00026C  22F4               	addwfc	prodh,f,c
  2106  00026E  0E00               	movlw	low drawSymbol@symbolArrowLeft
  2107  000270  24F3               	addwf	prodl,w,c
  2108  000272  6ED9               	movwf	fsr2l,c
  2109  000274  0E02               	movlw	high drawSymbol@symbolArrowLeft
  2110  000276  20F4               	addwfc	prodh,w,c
  2111  000278  6EDA               	movwf	fsr2h,c
  2112  00027A  50DF               	movf	indf2,w,c
  2113  00027C  EC10  F007         	call	_on
  2114  000280  0102               	movlb	2	; () banked
  2115  000282  2B84               	incf	drawSymbol@i_86& (0+255),f,b
  2116  000284  D7DA               	goto	l2602
  2117  000286                     l2612:
  2118                           
  2119                           ; BSR set to: 2
  2120                           ;LED-API.c: 153: for(unsigned char i = 0; i < 15; i++)
  2121  000286  0E00               	movlw	0
  2122  000288  0102               	movlb	2	; () banked
  2123  00028A  6F85               	movwf	drawSymbol@i_87& (0+255),b
  2124  00028C                     l2614:
  2125                           
  2126                           ; BSR set to: 2
  2127  00028C  0E0E               	movlw	14
  2128  00028E  0102               	movlb	2	; () banked
  2129  000290  6585               	cpfsgt	drawSymbol@i_87& (0+255),b
  2130  000292  D001               	goto	l2618
  2131  000294  0012               	return	
  2132  000296                     l2618:
  2133                           
  2134                           ; BSR set to: 2
  2135                           ;LED-API.c: 154: {
  2136                           ;LED-API.c: 155: on(symbolArrowRight[i][1], symbolGo[i][0]+ offSetX);
  2137  000296  0102               	movlb	2	; () banked
  2138  000298  5185               	movf	drawSymbol@i_87& (0+255),w,b
  2139  00029A  0D02               	mullw	2
  2140  00029C  0E1E               	movlw	low drawSymbol@symbolGo
  2141  00029E  24F3               	addwf	prodl,w,c
  2142  0002A0  6ED9               	movwf	fsr2l,c
  2143  0002A2  0E02               	movlw	high drawSymbol@symbolGo
  2144  0002A4  20F4               	addwfc	prodh,w,c
  2145  0002A6  6EDA               	movwf	fsr2h,c
  2146  0002A8  50DF               	movf	indf2,w,c
  2147  0002AA  0101               	movlb	1	; () banked
  2148  0002AC  253C               	addwf	drawSymbol@offSetX& (0+255),w,b
  2149  0002AE  0101               	movlb	1	; () banked
  2150  0002B0  6F38               	movwf	on@row& (0+255),b
  2151  0002B2  0102               	movlb	2	; () banked
  2152  0002B4  5185               	movf	drawSymbol@i_87& (0+255),w,b
  2153  0002B6  0D02               	mullw	2
  2154  0002B8  0E01               	movlw	1
  2155  0002BA  26F3               	addwf	prodl,f,c
  2156  0002BC  0E00               	movlw	0
  2157  0002BE  22F4               	addwfc	prodh,f,c
  2158  0002C0  0E81               	movlw	low drawSymbol@symbolArrowRight
  2159  0002C2  24F3               	addwf	prodl,w,c
  2160  0002C4  6ED9               	movwf	fsr2l,c
  2161  0002C6  0E01               	movlw	high drawSymbol@symbolArrowRight
  2162  0002C8  20F4               	addwfc	prodh,w,c
  2163  0002CA  6EDA               	movwf	fsr2h,c
  2164  0002CC  50DF               	movf	indf2,w,c
  2165  0002CE  EC10  F007         	call	_on
  2166  0002D2  0102               	movlb	2	; () banked
  2167  0002D4  2B85               	incf	drawSymbol@i_87& (0+255),f,b
  2168  0002D6  D7DA               	goto	l2614
  2169  0002D8                     l2626:
  2170  0002D8  0102               	movlb	2	; () banked
  2171  0002DA  517E               	movf	drawSymbol@chosenSymbol& (0+255),w,b
  2172                           
  2173                           ; Switch size 1, requested type "space"
  2174                           ; Number of cases is 7, Range of values is 1 to 7
  2175                           ; switch strategies available:
  2176                           ; Name         Instructions Cycles
  2177                           ; simple_byte           22    12 (average)
  2178                           ;	Chosen strategy is simple_byte
  2179  0002DC  0A01               	xorlw	1	; case 1
  2180  0002DE  B4D8               	btfsc	status,2,c
  2181  0002E0  D6DE               	goto	l2540
  2182  0002E2  0A03               	xorlw	3	; case 2
  2183  0002E4  B4D8               	btfsc	status,2,c
  2184  0002E6  D704               	goto	l2552
  2185  0002E8  0A01               	xorlw	1	; case 3
  2186  0002EA  B4D8               	btfsc	status,2,c
  2187  0002EC  D72A               	goto	l2564
  2188  0002EE  0A07               	xorlw	7	; case 4
  2189  0002F0  B4D8               	btfsc	status,2,c
  2190  0002F2  D750               	goto	l2576
  2191  0002F4  0A01               	xorlw	1	; case 5
  2192  0002F6  B4D8               	btfsc	status,2,c
  2193  0002F8  D776               	goto	l2588
  2194  0002FA  0A03               	xorlw	3	; case 6
  2195  0002FC  B4D8               	btfsc	status,2,c
  2196  0002FE  D79A               	goto	l2600
  2197  000300  0A01               	xorlw	1	; case 7
  2198  000302  A4D8               	btfss	status,2,c
  2199  000304  0012               	return	
  2200  000306  D7BF               	goto	l2612
  2201  000308                     __end_of_drawSymbol:
  2202                           	opt stack 0
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           prodh	equ	0xFF4
  2208                           prodl	equ	0xFF3
  2209                           postinc0	equ	0xFEE
  2210                           wreg	equ	0xFE8
  2211                           postdec1	equ	0xFE5
  2212                           plusw1	equ	0xFE3
  2213                           fsr1l	equ	0xFE1
  2214                           indf2	equ	0xFDF
  2215                           postinc2	equ	0xFDE
  2216                           plusw2	equ	0xFDB
  2217                           fsr2h	equ	0xFDA
  2218                           fsr2l	equ	0xFD9
  2219                           status	equ	0xFD8
  2220                           
  2221 ;; *************** function _on *****************
  2222 ;; Defined at:
  2223 ;;		line 43 in file "Source/LED-API.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  column          1    wreg     unsigned char 
  2226 ;;  row             1   56[BANK1 ] unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  column          1   59[BANK1 ] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2238 ;;      Params:         0       0       1       0       0       0       0
  2239 ;;      Locals:         0       0       1       0       0       0       0
  2240 ;;      Temps:          0       0       2       0       0       0       0
  2241 ;;      Totals:         0       0       4       0       0       0       0
  2242 ;;Total ram usage:        4 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    6
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_drawSymbol
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text8
  2253  000E20                     __ptext8:
  2254                           	opt stack 0
  2255  000E20                     _on:
  2256                           	opt stack 21
  2257                           
  2258                           ; BSR set to: 2
  2259                           ;incstack = 0
  2260                           ;on@column stored from wreg
  2261  000E20  0101               	movlb	1	; () banked
  2262  000E22  6F3B               	movwf	on@column& (0+255),b
  2263                           
  2264                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  2265  000E24  0E0F               	movlw	15
  2266  000E26  0101               	movlb	1	; () banked
  2267  000E28  6538               	cpfsgt	on@row& (0+255),b
  2268  000E2A  D001               	goto	l2418
  2269  000E2C  0012               	return	
  2270  000E2E                     l2418:
  2271                           
  2272                           ; BSR set to: 1
  2273                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  2274  000E2E  0E07               	movlw	7
  2275  000E30  0101               	movlb	1	; () banked
  2276  000E32  653B               	cpfsgt	on@column& (0+255),b
  2277  000E34  D001               	goto	l2422
  2278  000E36  0012               	return	
  2279  000E38                     l2422:
  2280                           
  2281                           ; BSR set to: 1
  2282                           ;LED-API.c: 50: pixels[column][row] = 1;
  2283  000E38  0101               	movlb	1	; () banked
  2284  000E3A  513B               	movf	on@column& (0+255),w,b
  2285  000E3C  0D10               	mullw	16
  2286  000E3E  0E00               	movlw	low _pixels
  2287  000E40  0101               	movlb	1	; () banked
  2288  000E42  6F39               	movwf	??_on& (0+255),b
  2289  000E44  0E03               	movlw	high _pixels
  2290  000E46  0101               	movlb	1	; () banked
  2291  000E48  6F3A               	movwf	(??_on+1)& (0+255),b
  2292  000E4A  50F3               	movf	prodl,w,c
  2293  000E4C  0101               	movlb	1	; () banked
  2294  000E4E  2739               	addwf	??_on& (0+255),f,b
  2295  000E50  50F4               	movf	prodh,w,c
  2296  000E52  0101               	movlb	1	; () banked
  2297  000E54  233A               	addwfc	(??_on+1)& (0+255),f,b
  2298  000E56  0101               	movlb	1	; () banked
  2299  000E58  5138               	movf	on@row& (0+255),w,b
  2300  000E5A  0D01               	mullw	1
  2301  000E5C  50F3               	movf	prodl,w,c
  2302  000E5E  0101               	movlb	1	; () banked
  2303  000E60  2539               	addwf	??_on& (0+255),w,b
  2304  000E62  6ED9               	movwf	fsr2l,c
  2305  000E64  50F4               	movf	prodh,w,c
  2306  000E66  0101               	movlb	1	; () banked
  2307  000E68  213A               	addwfc	(??_on+1)& (0+255),w,b
  2308  000E6A  6EDA               	movwf	fsr2h,c
  2309  000E6C  0E01               	movlw	1
  2310  000E6E  6EDF               	movwf	indf2,c
  2311                           
  2312                           ; BSR set to: 1
  2313  000E70  0012               	return		;funcret
  2314  000E72                     __end_of_on:
  2315                           	opt stack 0
  2316                           tblptru	equ	0xFF8
  2317                           tblptrh	equ	0xFF7
  2318                           tblptrl	equ	0xFF6
  2319                           tablat	equ	0xFF5
  2320                           prodh	equ	0xFF4
  2321                           prodl	equ	0xFF3
  2322                           postinc0	equ	0xFEE
  2323                           wreg	equ	0xFE8
  2324                           postdec1	equ	0xFE5
  2325                           plusw1	equ	0xFE3
  2326                           fsr1l	equ	0xFE1
  2327                           indf2	equ	0xFDF
  2328                           postinc2	equ	0xFDE
  2329                           plusw2	equ	0xFDB
  2330                           fsr2h	equ	0xFDA
  2331                           fsr2l	equ	0xFD9
  2332                           status	equ	0xFD8
  2333                           
  2334 ;; *************** function _initializeLED *****************
  2335 ;; Defined at:
  2336 ;;		line 31 in file "Source/LED-API.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2350 ;;      Params:         0       0       0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0
  2352 ;;      Temps:          0       0       0       0       0       0       0
  2353 ;;      Totals:         0       0       0       0       0       0       0
  2354 ;;Total ram usage:        0 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    7
  2357 ;; This function calls:
  2358 ;;		_turnAllOff
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text9
  2365  001074                     __ptext9:
  2366                           	opt stack 0
  2367  001074                     _initializeLED:
  2368                           	opt stack 23
  2369                           
  2370                           ;LED-API.c: 32: TRISA = 0b00000000;
  2371                           
  2372                           ; BSR set to: 1
  2373                           ;incstack = 0
  2374  001074  0E00               	movlw	0
  2375  001076  6E92               	movwf	3986,c	;volatile
  2376                           
  2377                           ;LED-API.c: 33: TRISC = 0b00000000;
  2378  001078  0E00               	movlw	0
  2379  00107A  6E94               	movwf	3988,c	;volatile
  2380                           
  2381                           ;LED-API.c: 34: TRISD = 0b00000000;
  2382  00107C  0E00               	movlw	0
  2383  00107E  6E95               	movwf	3989,c	;volatile
  2384                           
  2385                           ;LED-API.c: 35: LATA = 0b00000000;
  2386  001080  0E00               	movlw	0
  2387  001082  6E89               	movwf	3977,c	;volatile
  2388                           
  2389                           ;LED-API.c: 36: LATC = 0b00000000;
  2390  001084  0E00               	movlw	0
  2391  001086  6E8B               	movwf	3979,c	;volatile
  2392                           
  2393                           ;LED-API.c: 37: LATD = 0b00000000;
  2394  001088  0E00               	movlw	0
  2395  00108A  6E8C               	movwf	3980,c	;volatile
  2396                           
  2397                           ;LED-API.c: 40: turnAllOff();
  2398  00108C  EC53  F006         	call	_turnAllOff	;wreg free
  2399  001090  0012               	return		;funcret
  2400  001092                     __end_of_initializeLED:
  2401                           	opt stack 0
  2402                           tblptru	equ	0xFF8
  2403                           tblptrh	equ	0xFF7
  2404                           tblptrl	equ	0xFF6
  2405                           tablat	equ	0xFF5
  2406                           prodh	equ	0xFF4
  2407                           prodl	equ	0xFF3
  2408                           postinc0	equ	0xFEE
  2409                           wreg	equ	0xFE8
  2410                           postdec1	equ	0xFE5
  2411                           plusw1	equ	0xFE3
  2412                           fsr1l	equ	0xFE1
  2413                           indf2	equ	0xFDF
  2414                           postinc2	equ	0xFDE
  2415                           plusw2	equ	0xFDB
  2416                           fsr2h	equ	0xFDA
  2417                           fsr2l	equ	0xFD9
  2418                           status	equ	0xFD8
  2419                           
  2420 ;; *************** function _turnAllOff *****************
  2421 ;; Defined at:
  2422 ;;		line 161 in file "Source/LED-API.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  j               1   59[BANK1 ] unsigned char 
  2427 ;;  i               1   58[BANK1 ] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2437 ;;      Params:         0       0       0       0       0       0       0
  2438 ;;      Locals:         0       0       2       0       0       0       0
  2439 ;;      Temps:          0       0       2       0       0       0       0
  2440 ;;      Totals:         0       0       4       0       0       0       0
  2441 ;;Total ram usage:        4 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    6
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_initializeLED
  2448 ;;		_startPong
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text10
  2453  000CA6                     __ptext10:
  2454                           	opt stack 0
  2455  000CA6                     _turnAllOff:
  2456                           	opt stack 22
  2457                           
  2458                           ;LED-API.c: 164: for (unsigned char i = 0; i < 8; i++) {
  2459                           
  2460                           ;incstack = 0
  2461  000CA6  0E00               	movlw	0
  2462  000CA8  0101               	movlb	1	; () banked
  2463  000CAA  6F3A               	movwf	turnAllOff@i& (0+255),b
  2464  000CAC                     l2518:
  2465                           
  2466                           ; BSR set to: 1
  2467  000CAC  0E07               	movlw	7
  2468  000CAE  0101               	movlb	1	; () banked
  2469  000CB0  653A               	cpfsgt	turnAllOff@i& (0+255),b
  2470  000CB2  D001               	goto	l2522
  2471  000CB4  0012               	return	
  2472  000CB6                     l2522:
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;LED-API.c: 165: for (unsigned char j = 0; j < 16; j++) {
  2476  000CB6  0E00               	movlw	0
  2477  000CB8  0101               	movlb	1	; () banked
  2478  000CBA  6F3B               	movwf	turnAllOff@j& (0+255),b
  2479  000CBC                     l2524:
  2480                           
  2481                           ; BSR set to: 1
  2482  000CBC  0E0F               	movlw	15
  2483  000CBE  0101               	movlb	1	; () banked
  2484  000CC0  653B               	cpfsgt	turnAllOff@j& (0+255),b
  2485  000CC2  D001               	goto	l2528
  2486  000CC4  D01F               	goto	l2534
  2487  000CC6                     l2528:
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;LED-API.c: 166: pixels[i][j] = 0;
  2491  000CC6  0101               	movlb	1	; () banked
  2492  000CC8  513A               	movf	turnAllOff@i& (0+255),w,b
  2493  000CCA  0D10               	mullw	16
  2494  000CCC  0E00               	movlw	low _pixels
  2495  000CCE  0101               	movlb	1	; () banked
  2496  000CD0  6F38               	movwf	??_turnAllOff& (0+255),b
  2497  000CD2  0E03               	movlw	high _pixels
  2498  000CD4  0101               	movlb	1	; () banked
  2499  000CD6  6F39               	movwf	(??_turnAllOff+1)& (0+255),b
  2500  000CD8  50F3               	movf	prodl,w,c
  2501  000CDA  0101               	movlb	1	; () banked
  2502  000CDC  2738               	addwf	??_turnAllOff& (0+255),f,b
  2503  000CDE  50F4               	movf	prodh,w,c
  2504  000CE0  0101               	movlb	1	; () banked
  2505  000CE2  2339               	addwfc	(??_turnAllOff+1)& (0+255),f,b
  2506  000CE4  0101               	movlb	1	; () banked
  2507  000CE6  513B               	movf	turnAllOff@j& (0+255),w,b
  2508  000CE8  0D01               	mullw	1
  2509  000CEA  50F3               	movf	prodl,w,c
  2510  000CEC  0101               	movlb	1	; () banked
  2511  000CEE  2538               	addwf	??_turnAllOff& (0+255),w,b
  2512  000CF0  6ED9               	movwf	fsr2l,c
  2513  000CF2  50F4               	movf	prodh,w,c
  2514  000CF4  0101               	movlb	1	; () banked
  2515  000CF6  2139               	addwfc	(??_turnAllOff+1)& (0+255),w,b
  2516  000CF8  6EDA               	movwf	fsr2h,c
  2517  000CFA  0E00               	movlw	0
  2518  000CFC  6EDF               	movwf	indf2,c
  2519                           
  2520                           ; BSR set to: 1
  2521  000CFE  0101               	movlb	1	; () banked
  2522  000D00  2B3B               	incf	turnAllOff@j& (0+255),f,b
  2523  000D02  D7DC               	goto	l2524
  2524  000D04                     l2534:
  2525                           
  2526                           ; BSR set to: 1
  2527  000D04  0101               	movlb	1	; () banked
  2528  000D06  2B3A               	incf	turnAllOff@i& (0+255),f,b
  2529  000D08  D7D1               	goto	l2518
  2530  000D0A                     __end_of_turnAllOff:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           prodh	equ	0xFF4
  2537                           prodl	equ	0xFF3
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           postdec1	equ	0xFE5
  2541                           plusw1	equ	0xFE3
  2542                           fsr1l	equ	0xFE1
  2543                           indf2	equ	0xFDF
  2544                           postinc2	equ	0xFDE
  2545                           plusw2	equ	0xFDB
  2546                           fsr2h	equ	0xFDA
  2547                           fsr2l	equ	0xFD9
  2548                           status	equ	0xFD8
  2549                           
  2550 ;; *************** function _initialize *****************
  2551 ;; Defined at:
  2552 ;;		line 101 in file "main.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2566 ;;      Params:         0       0       0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    6
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text11
  2581  000DC6                     __ptext11:
  2582                           	opt stack 0
  2583  000DC6                     _initialize:
  2584                           	opt stack 24
  2585                           
  2586                           ;main.c: 104: OSCTUNEbits.PLLEN = 1;
  2587                           
  2588                           ; BSR set to: 1
  2589                           ;incstack = 0
  2590  000DC6  8C9B               	bsf	3995,6,c	;volatile
  2591                           
  2592                           ;main.c: 105: OSCTUNEbits.TUN = 011111;
  2593  000DC8  809B               	bsf	3995,0,c	;volatile
  2594  000DCA  929B               	bcf	3995,1,c	;volatile
  2595  000DCC  949B               	bcf	3995,2,c	;volatile
  2596  000DCE  869B               	bsf	3995,3,c	;volatile
  2597  000DD0  989B               	bcf	3995,4,c	;volatile
  2598                           
  2599                           ;main.c: 107: OSCCONbits.SCS = 00;
  2600  000DD2  0EFC               	movlw	-4
  2601  000DD4  16D3               	andwf	4051,f,c	;volatile
  2602                           
  2603                           ;main.c: 108: OSCCONbits.IRCF = 111;
  2604  000DD6  88D3               	bsf	4051,4,c	;volatile
  2605  000DD8  8AD3               	bsf	4051,5,c	;volatile
  2606  000DDA  8CD3               	bsf	4051,6,c	;volatile
  2607                           
  2608                           ;main.c: 110: PLLEN = 1;
  2609  000DDC  8C9B               	bsf	3995,6,c	;volatile
  2610                           
  2611                           ;main.c: 113: GIE = 1;
  2612  000DDE  8EF2               	bsf	intcon,7,c	;volatile
  2613                           
  2614                           ;main.c: 114: PEIE=1;
  2615  000DE0  8CF2               	bsf	intcon,6,c	;volatile
  2616                           
  2617                           ;main.c: 117: TRISBbits.TRISB0 = 1;
  2618  000DE2  8093               	bsf	3987,0,c	;volatile
  2619                           
  2620                           ;main.c: 118: TRISBbits.TRISB1 = 1;
  2621  000DE4  8293               	bsf	3987,1,c	;volatile
  2622                           
  2623                           ;main.c: 119: ADCON2bits.ADFM = 1;
  2624  000DE6  8EC0               	bsf	4032,7,c	;volatile
  2625                           
  2626                           ;main.c: 120: ADCON2bits.ADCS = 010;
  2627  000DE8  90C0               	bcf	4032,0,c	;volatile
  2628  000DEA  92C0               	bcf	4032,1,c	;volatile
  2629  000DEC  94C0               	bcf	4032,2,c	;volatile
  2630                           
  2631                           ;main.c: 121: ADCON2bits.ACQT = 111;
  2632  000DEE  86C0               	bsf	4032,3,c	;volatile
  2633  000DF0  88C0               	bsf	4032,4,c	;volatile
  2634  000DF2  8AC0               	bsf	4032,5,c	;volatile
  2635                           
  2636                           ;main.c: 122: ADCON1bits.VCFG0 = 0;
  2637  000DF4  98C1               	bcf	4033,4,c	;volatile
  2638                           
  2639                           ;main.c: 123: ADCON1bits.VCFG1 = 0;
  2640  000DF6  9AC1               	bcf	4033,5,c	;volatile
  2641                           
  2642                           ;main.c: 124: ADCON1bits.PCFG = 0000;
  2643  000DF8  90C1               	bcf	4033,0,c	;volatile
  2644  000DFA  92C1               	bcf	4033,1,c	;volatile
  2645  000DFC  94C1               	bcf	4033,2,c	;volatile
  2646  000DFE  96C1               	bcf	4033,3,c	;volatile
  2647                           
  2648                           ;main.c: 125: ADCON0bits.CHS = 1100;
  2649  000E00  50C2               	movf	4034,w,c	;volatile
  2650  000E02  0BC3               	andlw	-61
  2651  000E04  0930               	iorlw	48
  2652  000E06  6EC2               	movwf	4034,c	;volatile
  2653                           
  2654                           ;main.c: 126: ADCON0bits.ADON = 1;
  2655  000E08  80C2               	bsf	4034,0,c	;volatile
  2656                           
  2657                           ;main.c: 127: ADIE = 1;
  2658  000E0A  8C9D               	bsf	3997,6,c	;volatile
  2659                           
  2660                           ;main.c: 130: T0PS0 = 1;
  2661  000E0C  80D5               	bsf	4053,0,c	;volatile
  2662                           
  2663                           ;main.c: 131: T0PS1 = 0;
  2664  000E0E  92D5               	bcf	4053,1,c	;volatile
  2665                           
  2666                           ;main.c: 132: T0PS2 = 1;
  2667  000E10  84D5               	bsf	4053,2,c	;volatile
  2668                           
  2669                           ;main.c: 133: PSA = 0;
  2670  000E12  96D5               	bcf	4053,3,c	;volatile
  2671                           
  2672                           ;main.c: 134: T0CS = 0;
  2673  000E14  9AD5               	bcf	4053,5,c	;volatile
  2674                           
  2675                           ;main.c: 135: T08BIT = 1;
  2676  000E16  8CD5               	bsf	4053,6,c	;volatile
  2677                           
  2678                           ;main.c: 136: TMR0IE = 1;
  2679  000E18  8AF2               	bsf	intcon,5,c	;volatile
  2680                           
  2681                           ;main.c: 137: TMR0IF = 0;
  2682  000E1A  94F2               	bcf	intcon,2,c	;volatile
  2683                           
  2684                           ;main.c: 139: TMR0ON = 0;
  2685  000E1C  9ED5               	bcf	4053,7,c	;volatile
  2686  000E1E  0012               	return		;funcret
  2687  000E20                     __end_of_initialize:
  2688                           	opt stack 0
  2689                           tblptru	equ	0xFF8
  2690                           tblptrh	equ	0xFF7
  2691                           tblptrl	equ	0xFF6
  2692                           tablat	equ	0xFF5
  2693                           prodh	equ	0xFF4
  2694                           prodl	equ	0xFF3
  2695                           intcon	equ	0xFF2
  2696                           postinc0	equ	0xFEE
  2697                           wreg	equ	0xFE8
  2698                           postdec1	equ	0xFE5
  2699                           plusw1	equ	0xFE3
  2700                           fsr1l	equ	0xFE1
  2701                           indf2	equ	0xFDF
  2702                           postinc2	equ	0xFDE
  2703                           plusw2	equ	0xFDB
  2704                           fsr2h	equ	0xFDA
  2705                           fsr2l	equ	0xFD9
  2706                           status	equ	0xFD8
  2707                           
  2708 ;; *************** function _ISR *****************
  2709 ;; Defined at:
  2710 ;;		line 351 in file "main.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  ADvalue         2   53[BANK1 ] unsigned short 
  2715 ;;  value           1   55[BANK1 ] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2725 ;;      Params:         0       0       0       0       0       0       0
  2726 ;;      Locals:         0       0       3       0       0       0       0
  2727 ;;      Temps:         14       0       0       0       0       0       0
  2728 ;;      Totals:        14       0       3       0       0       0       0
  2729 ;;Total ram usage:       17 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    5
  2732 ;; This function calls:
  2733 ;;		___lwdiv
  2734 ;;		_checkNextPosition
  2735 ;;		_writePong
  2736 ;; This function is called by:
  2737 ;;		Interrupt level 2
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	intcode
  2742  000008                     __pintcode:
  2743                           	opt stack 0
  2744  000008                     _ISR:
  2745                           	opt stack 21
  2746                           
  2747                           ;incstack = 0
  2748  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2749  00000A  CFFA F06F          	movff	pclath,??_ISR
  2750  00000E  CFFB F070          	movff	pclatu,??_ISR+1
  2751  000012  EDFD  F003         	call	int_func,f	;refresh shadow registers
  2752                           pclatu	equ	0xFFB
  2753                           pclath	equ	0xFFA
  2754                           tblptru	equ	0xFF8
  2755                           tblptrh	equ	0xFF7
  2756                           tblptrl	equ	0xFF6
  2757                           tablat	equ	0xFF5
  2758                           prodh	equ	0xFF4
  2759                           prodl	equ	0xFF3
  2760                           intcon	equ	0xFF2
  2761                           postinc0	equ	0xFEE
  2762                           wreg	equ	0xFE8
  2763                           postdec1	equ	0xFE5
  2764                           plusw1	equ	0xFE3
  2765                           fsr1l	equ	0xFE1
  2766                           indf2	equ	0xFDF
  2767                           postinc2	equ	0xFDE
  2768                           plusw2	equ	0xFDB
  2769                           fsr2h	equ	0xFDA
  2770                           fsr2l	equ	0xFD9
  2771                           status	equ	0xFD8
  2772                           
  2773                           	psect	intcode_body
  2774  0007FA                     __pintcode_body:
  2775                           	opt stack 21
  2776  0007FA                     int_func:
  2777                           	opt stack 21
  2778  0007FA  0006               	pop		; remove dummy address from shadow register refresh
  2779  0007FC  CFE9 F071          	movff	fsr0l,??_ISR+2
  2780  000800  CFEA F072          	movff	fsr0h,??_ISR+3
  2781  000804  CFE1 F073          	movff	fsr1l,??_ISR+4
  2782  000808  CFE2 F074          	movff	fsr1h,??_ISR+5
  2783  00080C  CFD9 F075          	movff	fsr2l,??_ISR+6
  2784  000810  CFDA F076          	movff	fsr2h,??_ISR+7
  2785  000814  CFF3 F077          	movff	prodl,??_ISR+8
  2786  000818  CFF4 F078          	movff	prodh,??_ISR+9
  2787  00081C  CFF6 F079          	movff	tblptrl,??_ISR+10
  2788  000820  CFF7 F07A          	movff	tblptrh,??_ISR+11
  2789  000824  CFF8 F07B          	movff	tblptru,??_ISR+12
  2790  000828  CFF5 F07C          	movff	tablat,??_ISR+13
  2791                           
  2792                           ;main.c: 353: if(TMR0IE && TMR0IF)
  2793  00082C  BAF2               	btfsc	intcon,5,c	;volatile
  2794  00082E  A4F2               	btfss	intcon,2,c	;volatile
  2795  000830  D016               	goto	i2l2922
  2796                           
  2797                           ;main.c: 354: {
  2798                           ;main.c: 356: TMR0IF = 0;
  2799  000832  94F2               	bcf	intcon,2,c	;volatile
  2800                           
  2801                           ;main.c: 358: if(_timerCounter > _speed)
  2802  000834  0101               	movlb	1	; () banked
  2803  000836  51C6               	movf	__timerCounter& (0+255),w,b
  2804  000838  5C7D               	subwf	__speed,w,c
  2805  00083A  0101               	movlb	1	; () banked
  2806  00083C  51C7               	movf	(__timerCounter+1)& (0+255),w,b
  2807  00083E  587E               	subwfb	__speed+1,w,c
  2808  000840  B0D8               	btfsc	status,0,c
  2809  000842  D007               	goto	i2l2916
  2810                           
  2811                           ; BSR set to: 1
  2812                           ;main.c: 359: {
  2813                           ;main.c: 360: checkNextPosition();
  2814  000844  ECEC  F002         	call	_checkNextPosition	;wreg free
  2815                           
  2816                           ;main.c: 361: _timerCounter = 0;
  2817  000848  0E00               	movlw	0
  2818  00084A  0101               	movlb	1	; () banked
  2819  00084C  6FC7               	movwf	(__timerCounter+1)& (0+255),b
  2820  00084E  0E00               	movlw	0
  2821  000850  6FC6               	movwf	__timerCounter& (0+255),b
  2822  000852                     i2l2916:
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;main.c: 362: }
  2826                           ;main.c: 364: _timerCounter++;
  2827  000852  0101               	movlb	1	; () banked
  2828  000854  4BC6               	infsnz	__timerCounter& (0+255),f,b
  2829  000856  2BC7               	incf	(__timerCounter+1)& (0+255),f,b
  2830                           
  2831                           ; BSR set to: 1
  2832                           ;main.c: 365: writePong();
  2833  000858  EC6E  F005         	call	_writePong	;wreg free
  2834                           
  2835                           ;main.c: 368: ADCON0bits.GODONE = 1;
  2836  00085C  82C2               	bsf	4034,1,c	;volatile
  2837  00085E                     i2l2922:
  2838                           
  2839                           ;main.c: 370: }
  2840                           ;main.c: 372: if(ADIE && ADIF)
  2841  00085E  BC9D               	btfsc	3997,6,c	;volatile
  2842  000860  AC9E               	btfss	3998,6,c	;volatile
  2843  000862  D035               	goto	i2l268
  2844                           
  2845                           ;main.c: 373: {
  2846                           ;main.c: 375: ADIF = 0;
  2847  000864  9C9E               	bcf	3998,6,c	;volatile
  2848                           
  2849                           ;main.c: 377: unsigned short ADvalue = ADRES;
  2850  000866  CFC3 F135          	movff	4035,ISR@ADvalue	;volatile
  2851  00086A  CFC4 F136          	movff	4036,ISR@ADvalue+1	;volatile
  2852                           
  2853                           ;main.c: 378: unsigned char value = (ADvalue / 85);
  2854  00086E  C135  F001         	movff	ISR@ADvalue,___lwdiv@dividend
  2855  000872  C136  F002         	movff	ISR@ADvalue+1,___lwdiv@dividend+1
  2856  000876  0E00               	movlw	0
  2857  000878  6E04               	movwf	___lwdiv@divisor+1,c
  2858  00087A  0E55               	movlw	85
  2859  00087C  6E03               	movwf	___lwdiv@divisor,c
  2860  00087E  EC39  F007         	call	___lwdiv	;wreg free
  2861  000882  5001               	movf	?___lwdiv,w,c
  2862  000884  0101               	movlb	1	; () banked
  2863  000886  6F37               	movwf	ISR@value& (0+255),b
  2864                           
  2865                           ; BSR set to: 1
  2866                           ;main.c: 381: if(ADCON0bits.CHS == 12)
  2867  000888  30C2               	rrcf	4034,w,c	;volatile
  2868  00088A  32E8               	rrcf	wreg,f,c
  2869  00088C  0B0F               	andlw	15
  2870  00088E  0A0C               	xorlw	12
  2871  000890  A4D8               	btfss	status,2,c
  2872  000892  D00F               	goto	i2l2942
  2873                           
  2874                           ; BSR set to: 1
  2875                           ;main.c: 382: {
  2876                           ;main.c: 383: ADCON0bits.CHS = 10;
  2877  000894  50C2               	movf	4034,w,c	;volatile
  2878  000896  0BC3               	andlw	-61
  2879  000898  0928               	iorlw	40
  2880  00089A  6EC2               	movwf	4034,c	;volatile
  2881                           
  2882                           ; BSR set to: 1
  2883                           ;main.c: 386: _p2.paddlePosOld[0] = _p2.paddlePos[0];
  2884  00089C  C1BE  F1BC         	movff	__p2+2,__p2
  2885                           
  2886                           ; BSR set to: 1
  2887                           ;main.c: 387: _p2.paddlePos[0] = value;
  2888  0008A0  C137  F1BE         	movff	ISR@value,__p2+2
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;main.c: 389: _p2.paddlePosOld[1] = _p2.paddlePos[1];
  2892  0008A4  C1BF  F1BD         	movff	__p2+3,__p2+1
  2893                           
  2894                           ; BSR set to: 1
  2895                           ;main.c: 390: _p2.paddlePos[1] = value + 1;
  2896  0008A8  0101               	movlb	1	; () banked
  2897  0008AA  2937               	incf	ISR@value& (0+255),w,b
  2898  0008AC  0101               	movlb	1	; () banked
  2899  0008AE  6FBF               	movwf	(__p2+3)& (0+255),b
  2900                           
  2901                           ;main.c: 391: }
  2902  0008B0  D00E               	goto	i2l268
  2903  0008B2                     i2l2942:
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;main.c: 392: else
  2907                           ;main.c: 393: {
  2908                           ;main.c: 394: ADCON0bits.CHS = 12;
  2909  0008B2  50C2               	movf	4034,w,c	;volatile
  2910  0008B4  0BC3               	andlw	-61
  2911  0008B6  0930               	iorlw	48
  2912  0008B8  6EC2               	movwf	4034,c	;volatile
  2913                           
  2914                           ; BSR set to: 1
  2915                           ;main.c: 397: _p1.paddlePosOld[0] = _p1.paddlePos[0];
  2916  0008BA  C1B9  F1B7         	movff	__p1+2,__p1
  2917                           
  2918                           ; BSR set to: 1
  2919                           ;main.c: 398: _p1.paddlePos[0] = value;
  2920  0008BE  C137  F1B9         	movff	ISR@value,__p1+2
  2921                           
  2922                           ; BSR set to: 1
  2923                           ;main.c: 400: _p1.paddlePosOld[1] = _p1.paddlePos[1];
  2924  0008C2  C1BA  F1B8         	movff	__p1+3,__p1+1
  2925                           
  2926                           ; BSR set to: 1
  2927                           ;main.c: 401: _p1.paddlePos[1] = value + 1;
  2928  0008C6  0101               	movlb	1	; () banked
  2929  0008C8  2937               	incf	ISR@value& (0+255),w,b
  2930  0008CA  0101               	movlb	1	; () banked
  2931  0008CC  6FBA               	movwf	(__p1+3)& (0+255),b
  2932  0008CE                     i2l268:
  2933  0008CE  C07C  FFF5         	movff	??_ISR+13,tablat
  2934  0008D2  C07B  FFF8         	movff	??_ISR+12,tblptru
  2935  0008D6  C07A  FFF7         	movff	??_ISR+11,tblptrh
  2936  0008DA  C079  FFF6         	movff	??_ISR+10,tblptrl
  2937  0008DE  C078  FFF4         	movff	??_ISR+9,prodh
  2938  0008E2  C077  FFF3         	movff	??_ISR+8,prodl
  2939  0008E6  C076  FFDA         	movff	??_ISR+7,fsr2h
  2940  0008EA  C075  FFD9         	movff	??_ISR+6,fsr2l
  2941  0008EE  C074  FFE2         	movff	??_ISR+5,fsr1h
  2942  0008F2  C073  FFE1         	movff	??_ISR+4,fsr1l
  2943  0008F6  C072  FFEA         	movff	??_ISR+3,fsr0h
  2944  0008FA  C071  FFE9         	movff	??_ISR+2,fsr0l
  2945  0008FE  C070  FFFB         	movff	??_ISR+1,pclatu
  2946  000902  C06F  FFFA         	movff	??_ISR,pclath
  2947  000906  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2948  000908  0011               	retfie		f
  2949  00090A                     __end_of_ISR:
  2950                           	opt stack 0
  2951                           pclatu	equ	0xFFB
  2952                           pclath	equ	0xFFA
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           intcon	equ	0xFF2
  2960                           postinc0	equ	0xFEE
  2961                           fsr0h	equ	0xFEA
  2962                           fsr0l	equ	0xFE9
  2963                           wreg	equ	0xFE8
  2964                           postdec1	equ	0xFE5
  2965                           plusw1	equ	0xFE3
  2966                           fsr1h	equ	0xFE2
  2967                           fsr1l	equ	0xFE1
  2968                           indf2	equ	0xFDF
  2969                           postinc2	equ	0xFDE
  2970                           plusw2	equ	0xFDB
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _writePong *****************
  2976 ;; Defined at:
  2977 ;;		line 143 in file "main.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2991 ;;      Params:         0       0       0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    1
  2998 ;; This function calls:
  2999 ;;		_off
  3000 ;;		i2_on
  3001 ;; This function is called by:
  3002 ;;		_ISR
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text13
  3007  000ADC                     __ptext13:
  3008                           	opt stack 0
  3009  000ADC                     _writePong:
  3010                           	opt stack 24
  3011                           
  3012                           ;main.c: 148: off(_ball.bPos[1], _ball.bPos[0]);
  3013                           
  3014                           ;incstack = 0
  3015  000ADC  C1C1  F001         	movff	__ball,off@row
  3016  000AE0  0101               	movlb	1	; () banked
  3017  000AE2  51C2               	movf	(__ball+1)& (0+255),w,b
  3018  000AE4  ECEA  F007         	call	_off
  3019                           
  3020                           ;main.c: 149: _ball.bPos[0] = _nextPos[0];
  3021  000AE8  C1C4  F1C1         	movff	__nextPos,__ball
  3022                           
  3023                           ;main.c: 150: _ball.bPos[1] = _nextPos[1];
  3024  000AEC  C1C5  F1C2         	movff	__nextPos+1,__ball+1
  3025                           
  3026                           ;main.c: 151: on(_ball.bPos[1], _ball.bPos[0]);
  3027  000AF0  C1C1  F001         	movff	__ball,i2on@row
  3028  000AF4  0101               	movlb	1	; () banked
  3029  000AF6  51C2               	movf	(__ball+1)& (0+255),w,b
  3030  000AF8  EC08  F008         	call	i2_on
  3031                           
  3032                           ;main.c: 154: off(_p1.paddlePosOld[0], 0);
  3033  000AFC  0E00               	movlw	0
  3034  000AFE  6E01               	movwf	off@row,c
  3035  000B00  0101               	movlb	1	; () banked
  3036  000B02  51B7               	movf	__p1& (0+255),w,b
  3037  000B04  ECEA  F007         	call	_off
  3038                           
  3039                           ;main.c: 155: off(_p1.paddlePosOld[1], 0);
  3040  000B08  0E00               	movlw	0
  3041  000B0A  6E01               	movwf	off@row,c
  3042  000B0C  0101               	movlb	1	; () banked
  3043  000B0E  51B8               	movf	(__p1+1)& (0+255),w,b
  3044  000B10  ECEA  F007         	call	_off
  3045                           
  3046                           ;main.c: 157: off(_p2.paddlePosOld[0], 15);
  3047  000B14  0E0F               	movlw	15
  3048  000B16  6E01               	movwf	off@row,c
  3049  000B18  0101               	movlb	1	; () banked
  3050  000B1A  51BC               	movf	__p2& (0+255),w,b
  3051  000B1C  ECEA  F007         	call	_off
  3052                           
  3053                           ;main.c: 158: off(_p2.paddlePosOld[1], 15);
  3054  000B20  0E0F               	movlw	15
  3055  000B22  6E01               	movwf	off@row,c
  3056  000B24  0101               	movlb	1	; () banked
  3057  000B26  51BD               	movf	(__p2+1)& (0+255),w,b
  3058  000B28  ECEA  F007         	call	_off
  3059                           
  3060                           ;main.c: 160: on(_p1.paddlePos[0], 0);
  3061  000B2C  0E00               	movlw	0
  3062  000B2E  6E01               	movwf	i2on@row,c
  3063  000B30  0101               	movlb	1	; () banked
  3064  000B32  51B9               	movf	(__p1+2)& (0+255),w,b
  3065  000B34  EC08  F008         	call	i2_on
  3066                           
  3067                           ;main.c: 161: on(_p1.paddlePos[1], 0);
  3068  000B38  0E00               	movlw	0
  3069  000B3A  6E01               	movwf	i2on@row,c
  3070  000B3C  0101               	movlb	1	; () banked
  3071  000B3E  51BA               	movf	(__p1+3)& (0+255),w,b
  3072  000B40  EC08  F008         	call	i2_on
  3073                           
  3074                           ;main.c: 162: on(_p2.paddlePos[0], 15);
  3075  000B44  0E0F               	movlw	15
  3076  000B46  6E01               	movwf	i2on@row,c
  3077  000B48  0101               	movlb	1	; () banked
  3078  000B4A  51BE               	movf	(__p2+2)& (0+255),w,b
  3079  000B4C  EC08  F008         	call	i2_on
  3080                           
  3081                           ;main.c: 163: on(_p2.paddlePos[1], 15);
  3082  000B50  0E0F               	movlw	15
  3083  000B52  6E01               	movwf	i2on@row,c
  3084  000B54  0101               	movlb	1	; () banked
  3085  000B56  51BF               	movf	(__p2+3)& (0+255),w,b
  3086  000B58  EC08  F008         	call	i2_on
  3087  000B5C  0012               	return		;funcret
  3088  000B5E                     __end_of_writePong:
  3089                           	opt stack 0
  3090                           pclatu	equ	0xFFB
  3091                           pclath	equ	0xFFA
  3092                           tblptru	equ	0xFF8
  3093                           tblptrh	equ	0xFF7
  3094                           tblptrl	equ	0xFF6
  3095                           tablat	equ	0xFF5
  3096                           prodh	equ	0xFF4
  3097                           prodl	equ	0xFF3
  3098                           intcon	equ	0xFF2
  3099                           postinc0	equ	0xFEE
  3100                           fsr0h	equ	0xFEA
  3101                           fsr0l	equ	0xFE9
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           plusw1	equ	0xFE3
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           indf2	equ	0xFDF
  3108                           postinc2	equ	0xFDE
  3109                           plusw2	equ	0xFDB
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _off *****************
  3115 ;; Defined at:
  3116 ;;		line 64 in file "Source/LED-API.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  column          1    wreg     unsigned char 
  3119 ;;  row             1    0[COMRAM] unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  column          1    3[COMRAM] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3131 ;;      Params:         1       0       0       0       0       0       0
  3132 ;;      Locals:         1       0       0       0       0       0       0
  3133 ;;      Temps:          2       0       0       0       0       0       0
  3134 ;;      Totals:         4       0       0       0       0       0       0
  3135 ;;Total ram usage:        4 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_writePong
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text14
  3145  000FD4                     __ptext14:
  3146                           	opt stack 0
  3147  000FD4                     _off:
  3148                           	opt stack 24
  3149                           
  3150                           ;incstack = 0
  3151                           ;off@column stored from wreg
  3152  000FD4  6E04               	movwf	off@column,c
  3153                           
  3154                           ;LED-API.c: 66: if (row < 0 || row > 16)
  3155  000FD6  0E10               	movlw	16
  3156  000FD8  6401               	cpfsgt	off@row,c
  3157  000FDA  D001               	goto	i2l1998
  3158  000FDC  0012               	return	
  3159  000FDE                     i2l1998:
  3160                           
  3161                           ;LED-API.c: 68: if (column < 0 || column > 8)
  3162  000FDE  0E08               	movlw	8
  3163  000FE0  6404               	cpfsgt	off@column,c
  3164  000FE2  D001               	goto	i2l2002
  3165  000FE4  0012               	return	
  3166  000FE6                     i2l2002:
  3167                           
  3168                           ;LED-API.c: 71: pixels[column][row] = 0;
  3169  000FE6  5004               	movf	off@column,w,c
  3170  000FE8  0D10               	mullw	16
  3171  000FEA  0E00               	movlw	low _pixels
  3172  000FEC  6E02               	movwf	??_off& (0+255),c
  3173  000FEE  0E03               	movlw	high _pixels
  3174  000FF0  6E03               	movwf	(??_off+1)& (0+255),c
  3175  000FF2  50F3               	movf	prodl,w,c
  3176  000FF4  2602               	addwf	??_off,f,c
  3177  000FF6  50F4               	movf	prodh,w,c
  3178  000FF8  2203               	addwfc	??_off+1,f,c
  3179  000FFA  5001               	movf	off@row,w,c
  3180  000FFC  0D01               	mullw	1
  3181  000FFE  50F3               	movf	prodl,w,c
  3182  001000  2402               	addwf	??_off,w,c
  3183  001002  6ED9               	movwf	fsr2l,c
  3184  001004  50F4               	movf	prodh,w,c
  3185  001006  2003               	addwfc	??_off+1,w,c
  3186  001008  6EDA               	movwf	fsr2h,c
  3187  00100A  0E00               	movlw	0
  3188  00100C  6EDF               	movwf	indf2,c
  3189  00100E  0012               	return		;funcret
  3190  001010                     __end_of_off:
  3191                           	opt stack 0
  3192                           pclatu	equ	0xFFB
  3193                           pclath	equ	0xFFA
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           prodh	equ	0xFF4
  3199                           prodl	equ	0xFF3
  3200                           intcon	equ	0xFF2
  3201                           postinc0	equ	0xFEE
  3202                           fsr0h	equ	0xFEA
  3203                           fsr0l	equ	0xFE9
  3204                           wreg	equ	0xFE8
  3205                           postdec1	equ	0xFE5
  3206                           plusw1	equ	0xFE3
  3207                           fsr1h	equ	0xFE2
  3208                           fsr1l	equ	0xFE1
  3209                           indf2	equ	0xFDF
  3210                           postinc2	equ	0xFDE
  3211                           plusw2	equ	0xFDB
  3212                           fsr2h	equ	0xFDA
  3213                           fsr2l	equ	0xFD9
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _checkNextPosition *****************
  3217 ;; Defined at:
  3218 ;;		line 196 in file "main.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  counter         2  108[COMRAM] unsigned int 
  3223 ;;  counter         2  106[COMRAM] unsigned int 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3233 ;;      Params:         0       0       0       0       0       0       0
  3234 ;;      Locals:         4       0       0       0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0       0       0
  3236 ;;      Totals:         4       0       0       0       0       0       0
  3237 ;;Total ram usage:        4 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    4
  3240 ;; This function calls:
  3241 ;;		_getNextPosition
  3242 ;;		i2_drawSymbol
  3243 ;;		i2_initializePong
  3244 ;;		i2_refresh
  3245 ;;		i2_startPong
  3246 ;;		i2_turnAllOff
  3247 ;; This function is called by:
  3248 ;;		_ISR
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text15
  3253  0005D8                     __ptext15:
  3254                           	opt stack 0
  3255  0005D8                     _checkNextPosition:
  3256                           	opt stack 21
  3257                           
  3258                           ;main.c: 198: getNextPosition();
  3259                           
  3260                           ;incstack = 0
  3261  0005D8  EC2A  F005         	call	_getNextPosition	;wreg free
  3262                           
  3263                           ;main.c: 199: if(_nextPos[0] == 0)
  3264  0005DC  0101               	movlb	1	; () banked
  3265  0005DE  51C4               	movf	__nextPos& (0+255),w,b
  3266  0005E0  A4D8               	btfss	status,2,c
  3267  0005E2  D072               	goto	i2l2814
  3268                           
  3269                           ; BSR set to: 1
  3270                           ;main.c: 200: {
  3271                           ;main.c: 201: if(_p1.paddlePos[0] == _nextPos[1])
  3272  0005E4  0101               	movlb	1	; () banked
  3273  0005E6  51C5               	movf	(__nextPos+1)& (0+255),w,b
  3274  0005E8  0101               	movlb	1	; () banked
  3275  0005EA  19B9               	xorwf	(__p1+2)& (0+255),w,b
  3276  0005EC  A4D8               	btfss	status,2,c
  3277  0005EE  D021               	goto	i2l2768
  3278                           
  3279                           ; BSR set to: 1
  3280                           ;main.c: 202: {
  3281                           ;main.c: 204: if(_speed > 50)
  3282  0005F0  507E               	movf	__speed+1,w,c
  3283  0005F2  E104               	bnz	i2u287_40
  3284  0005F4  0E33               	movlw	51
  3285  0005F6  5C7D               	subwf	__speed,w,c
  3286  0005F8  A0D8               	btfss	status,0,c
  3287  0005FA  D00D               	goto	i2l2760
  3288  0005FC                     i2u287_40:
  3289                           
  3290                           ; BSR set to: 1
  3291                           ;main.c: 205: _speed = _speed - 3;
  3292  0005FC  0EFD               	movlw	253
  3293  0005FE  247D               	addwf	__speed,w,c
  3294  000600  6E7D               	movwf	__speed,c
  3295  000602  0EFF               	movlw	255
  3296  000604  207E               	addwfc	__speed+1,w,c
  3297  000606  6E7E               	movwf	__speed+1,c
  3298                           
  3299                           ; BSR set to: 1
  3300                           ;main.c: 206: switch(_ball.bDirection)
  3301  000608  D006               	goto	i2l2760
  3302  00060A                     i2l2756:
  3303                           
  3304                           ; BSR set to: 1
  3305                           ;main.c: 213: _ball.bDirection = 1;
  3306  00060A  0E01               	movlw	1
  3307  00060C  D001               	goto	L2
  3308  00060E                     i2l2758:
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;main.c: 216: _ball.bDirection = 2;
  3312  00060E  0E02               	movlw	2
  3313  000610                     L2:
  3314  000610  0101               	movlb	1	; () banked
  3315  000612  6FC3               	movwf	(__ball+2)& (0+255),b
  3316                           
  3317                           ;main.c: 217: }
  3318  000614  D00B               	goto	i2l2762
  3319  000616                     i2l2760:
  3320                           
  3321                           ; BSR set to: 1
  3322  000616  0101               	movlb	1	; () banked
  3323  000618  51C3               	movf	(__ball+2)& (0+255),w,b
  3324                           
  3325                           ; Switch size 1, requested type "space"
  3326                           ; Number of cases is 3, Range of values is 4 to 6
  3327                           ; switch strategies available:
  3328                           ; Name         Instructions Cycles
  3329                           ; simple_byte           10     6 (average)
  3330                           ;	Chosen strategy is simple_byte
  3331  00061A  0A04               	xorlw	4	; case 4
  3332  00061C  B4D8               	btfsc	status,2,c
  3333  00061E  D7F7               	goto	i2l2758
  3334  000620  0A01               	xorlw	1	; case 5
  3335  000622  B4D8               	btfsc	status,2,c
  3336  000624  D7F2               	goto	i2l2756
  3337  000626  0A03               	xorlw	3	; case 6
  3338  000628  B4D8               	btfsc	status,2,c
  3339  00062A  D7F1               	goto	i2l2758
  3340  00062C                     i2l2762:
  3341                           
  3342                           ; BSR set to: 1
  3343                           ;main.c: 218: getNextPosition();
  3344  00062C  EC2A  F005         	call	_getNextPosition	;wreg free
  3345                           
  3346                           ;main.c: 219: return;
  3347  000630  0012               	return	
  3348  000632                     i2l2768:
  3349                           
  3350                           ;main.c: 221: else if(_p1.paddlePos[1] == _nextPos[1])
  3351  000632  0101               	movlb	1	; () banked
  3352  000634  51C5               	movf	(__nextPos+1)& (0+255),w,b
  3353  000636  0101               	movlb	1	; () banked
  3354  000638  19BA               	xorwf	(__p1+3)& (0+255),w,b
  3355  00063A  A4D8               	btfss	status,2,c
  3356  00063C  D021               	goto	i2l2788
  3357                           
  3358                           ; BSR set to: 1
  3359                           ;main.c: 222: {
  3360                           ;main.c: 225: if(_speed > 50)
  3361  00063E  507E               	movf	__speed+1,w,c
  3362  000640  E104               	bnz	i2u289_40
  3363  000642  0E33               	movlw	51
  3364  000644  5C7D               	subwf	__speed,w,c
  3365  000646  A0D8               	btfss	status,0,c
  3366  000648  D00D               	goto	i2l2782
  3367  00064A                     i2u289_40:
  3368                           
  3369                           ; BSR set to: 1
  3370                           ;main.c: 226: _speed = _speed - 3;
  3371  00064A  0EFD               	movlw	253
  3372  00064C  247D               	addwf	__speed,w,c
  3373  00064E  6E7D               	movwf	__speed,c
  3374  000650  0EFF               	movlw	255
  3375  000652  207E               	addwfc	__speed+1,w,c
  3376  000654  6E7E               	movwf	__speed+1,c
  3377                           
  3378                           ; BSR set to: 1
  3379                           ;main.c: 227: switch(_ball.bDirection)
  3380  000656  D006               	goto	i2l2782
  3381  000658                     i2l2774:
  3382                           
  3383                           ; BSR set to: 1
  3384                           ;main.c: 231: _ball.bDirection = 1;
  3385  000658  0E01               	movlw	1
  3386  00065A                     L3:
  3387  00065A  0101               	movlb	1	; () banked
  3388  00065C  6FC3               	movwf	(__ball+2)& (0+255),b
  3389                           
  3390                           ;main.c: 235: break;
  3391  00065E  D00D               	goto	i2l2784
  3392  000660                     i2l2778:
  3393                           
  3394                           ; BSR set to: 1
  3395                           ;main.c: 237: _ball.bDirection = 3;
  3396  000660  0E03               	movlw	3
  3397  000662  D7FB               	goto	L3
  3398  000664                     i2l2782:
  3399                           
  3400                           ; BSR set to: 1
  3401  000664  0101               	movlb	1	; () banked
  3402  000666  51C3               	movf	(__ball+2)& (0+255),w,b
  3403                           
  3404                           ; Switch size 1, requested type "space"
  3405                           ; Number of cases is 3, Range of values is 4 to 6
  3406                           ; switch strategies available:
  3407                           ; Name         Instructions Cycles
  3408                           ; simple_byte           10     6 (average)
  3409                           ;	Chosen strategy is simple_byte
  3410  000668  0A04               	xorlw	4	; case 4
  3411  00066A  B4D8               	btfsc	status,2,c
  3412  00066C  D7F5               	goto	i2l2774
  3413  00066E  0A01               	xorlw	1	; case 5
  3414  000670  B4D8               	btfsc	status,2,c
  3415  000672  D7F6               	goto	i2l2778
  3416  000674  0A03               	xorlw	3	; case 6
  3417  000676  B4D8               	btfsc	status,2,c
  3418  000678  D7F3               	goto	i2l2778
  3419  00067A                     i2l2784:
  3420                           
  3421                           ; BSR set to: 1
  3422                           ;main.c: 240: getNextPosition();
  3423  00067A  EC2A  F005         	call	_getNextPosition	;wreg free
  3424                           
  3425                           ;main.c: 241: return;
  3426  00067E  0012               	return	
  3427  000680                     i2l2788:
  3428                           
  3429                           ;main.c: 242: }
  3430                           ;main.c: 245: _p1.lives--;
  3431  000680  0101               	movlb	1	; () banked
  3432  000682  07BB               	decf	(__p1+4)& (0+255),f,b
  3433                           
  3434                           ; BSR set to: 1
  3435                           ;main.c: 246: if(_p1.lives == 0)
  3436  000684  0101               	movlb	1	; () banked
  3437  000686  51BB               	movf	(__p1+4)& (0+255),w,b
  3438  000688  A4D8               	btfss	status,2,c
  3439  00068A  D01B               	goto	i2l2812
  3440                           
  3441                           ; BSR set to: 1
  3442                           ;main.c: 247: {
  3443                           ;main.c: 249: turnAllOff();
  3444  00068C  EC62  F007         	call	i2_turnAllOff	;wreg free
  3445                           
  3446                           ;main.c: 250: drawSymbol(7, 8);
  3447  000690  0E08               	movlw	8
  3448  000692  6E05               	movwf	i2drawSymbol@offSetX,c
  3449  000694  0E07               	movlw	7
  3450  000696  EC84  F001         	call	i2_drawSymbol
  3451                           
  3452                           ;main.c: 251: for(unsigned int counter = 0; counter < 800; counter ++)
  3453  00069A  0E00               	movlw	0
  3454  00069C  6E6C               	movwf	checkNextPosition@counter+1,c
  3455  00069E  0E00               	movlw	0
  3456  0006A0  6E6B               	movwf	checkNextPosition@counter,c
  3457  0006A2                     i2l2798:
  3458  0006A2  0E20               	movlw	32
  3459  0006A4  5C6B               	subwf	checkNextPosition@counter,w,c
  3460  0006A6  0E03               	movlw	3
  3461  0006A8  586C               	subwfb	checkNextPosition@counter+1,w,c
  3462  0006AA  B0D8               	btfsc	status,0,c
  3463  0006AC  D005               	goto	i2l2808
  3464                           
  3465                           ;main.c: 252: {
  3466                           ;main.c: 253: refresh();
  3467  0006AE  EC1E  F006         	call	i2_refresh	;wreg free
  3468  0006B2  4A6B               	infsnz	checkNextPosition@counter,f,c
  3469  0006B4  2A6C               	incf	checkNextPosition@counter+1,f,c
  3470  0006B6  D7F5               	goto	i2l2798
  3471  0006B8                     i2l2808:
  3472                           
  3473                           ;main.c: 254: }
  3474                           ;main.c: 255: turnAllOff();
  3475  0006B8  EC62  F007         	call	i2_turnAllOff	;wreg free
  3476                           
  3477                           ;main.c: 258: initializePong();
  3478  0006BC  EC6D  F008         	call	i2_initializePong	;wreg free
  3479                           
  3480                           ;main.c: 259: }
  3481  0006C0  0012               	return	
  3482  0006C2                     i2l2812:
  3483                           
  3484                           ;main.c: 260: else
  3485                           ;main.c: 261: {
  3486                           ;main.c: 262: startPong();
  3487  0006C2  EC85  F006         	call	i2_startPong	;wreg free
  3488                           
  3489                           ;main.c: 263: }
  3490                           ;main.c: 264: }
  3491  0006C6  0012               	return	
  3492  0006C8                     i2l2814:
  3493                           
  3494                           ;main.c: 265: else if(_nextPos[0] == 15)
  3495  0006C8  0E0F               	movlw	15
  3496  0006CA  0101               	movlb	1	; () banked
  3497  0006CC  19C4               	xorwf	__nextPos& (0+255),w,b
  3498  0006CE  A4D8               	btfss	status,2,c
  3499  0006D0  D074               	goto	i2l2884
  3500                           
  3501                           ; BSR set to: 1
  3502                           ;main.c: 266: {
  3503                           ;main.c: 267: if(_p2.paddlePos[0] == _nextPos[1])
  3504  0006D2  0101               	movlb	1	; () banked
  3505  0006D4  51C5               	movf	(__nextPos+1)& (0+255),w,b
  3506  0006D6  0101               	movlb	1	; () banked
  3507  0006D8  19BE               	xorwf	(__p2+2)& (0+255),w,b
  3508  0006DA  A4D8               	btfss	status,2,c
  3509  0006DC  D023               	goto	i2l2838
  3510                           
  3511                           ; BSR set to: 1
  3512                           ;main.c: 268: {
  3513                           ;main.c: 269: if(_speed > 50)
  3514  0006DE  507E               	movf	__speed+1,w,c
  3515  0006E0  E104               	bnz	i2u295_40
  3516  0006E2  0E33               	movlw	51
  3517  0006E4  5C7D               	subwf	__speed,w,c
  3518  0006E6  A0D8               	btfss	status,0,c
  3519  0006E8  D00F               	goto	i2l2830
  3520  0006EA                     i2u295_40:
  3521                           
  3522                           ; BSR set to: 1
  3523                           ;main.c: 270: _speed = _speed - 3;
  3524  0006EA  0EFD               	movlw	253
  3525  0006EC  247D               	addwf	__speed,w,c
  3526  0006EE  6E7D               	movwf	__speed,c
  3527  0006F0  0EFF               	movlw	255
  3528  0006F2  207E               	addwfc	__speed+1,w,c
  3529  0006F4  6E7E               	movwf	__speed+1,c
  3530                           
  3531                           ; BSR set to: 1
  3532                           ;main.c: 271: switch(_ball.bDirection)
  3533  0006F6  D008               	goto	i2l2830
  3534  0006F8                     i2l2822:
  3535                           
  3536                           ; BSR set to: 1
  3537                           ;main.c: 275: _ball.bDirection = 4;
  3538  0006F8  0E04               	movlw	4
  3539  0006FA  D003               	goto	L5
  3540  0006FC                     i2l2824:
  3541                           
  3542                           ; BSR set to: 1
  3543                           ;main.c: 278: _ball.bDirection = 6;
  3544  0006FC  0E06               	movlw	6
  3545  0006FE  D001               	goto	L5
  3546  000700                     i2l2826:
  3547                           
  3548                           ; BSR set to: 1
  3549                           ;main.c: 281: _ball.bDirection = 5;
  3550  000700  0E05               	movlw	5
  3551  000702                     L5:
  3552  000702  0101               	movlb	1	; () banked
  3553  000704  6FC3               	movwf	(__ball+2)& (0+255),b
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;main.c: 283: }
  3557                           
  3558                           ;main.c: 282: break;
  3559  000706  D00B               	goto	i2l2832
  3560  000708                     i2l2830:
  3561                           
  3562                           ; BSR set to: 1
  3563  000708  0101               	movlb	1	; () banked
  3564  00070A  51C3               	movf	(__ball+2)& (0+255),w,b
  3565                           
  3566                           ; Switch size 1, requested type "space"
  3567                           ; Number of cases is 3, Range of values is 1 to 3
  3568                           ; switch strategies available:
  3569                           ; Name         Instructions Cycles
  3570                           ; simple_byte           10     6 (average)
  3571                           ;	Chosen strategy is simple_byte
  3572  00070C  0A01               	xorlw	1	; case 1
  3573  00070E  B4D8               	btfsc	status,2,c
  3574  000710  D7F3               	goto	i2l2822
  3575  000712  0A03               	xorlw	3	; case 2
  3576  000714  B4D8               	btfsc	status,2,c
  3577  000716  D7F2               	goto	i2l2824
  3578  000718  0A01               	xorlw	1	; case 3
  3579  00071A  B4D8               	btfsc	status,2,c
  3580  00071C  D7F1               	goto	i2l2826
  3581  00071E                     i2l2832:
  3582                           
  3583                           ; BSR set to: 1
  3584                           ;main.c: 284: getNextPosition();
  3585  00071E  EC2A  F005         	call	_getNextPosition	;wreg free
  3586                           
  3587                           ;main.c: 285: return;
  3588  000722  0012               	return	
  3589  000724                     i2l2838:
  3590                           
  3591                           ;main.c: 287: else if( _p2.paddlePos[1] == _nextPos[1])
  3592  000724  0101               	movlb	1	; () banked
  3593  000726  51C5               	movf	(__nextPos+1)& (0+255),w,b
  3594  000728  0101               	movlb	1	; () banked
  3595  00072A  19BF               	xorwf	(__p2+3)& (0+255),w,b
  3596  00072C  A4D8               	btfss	status,2,c
  3597  00072E  D021               	goto	i2l2858
  3598                           
  3599                           ; BSR set to: 1
  3600                           ;main.c: 288: {
  3601                           ;main.c: 290: if(_speed > 50)
  3602  000730  507E               	movf	__speed+1,w,c
  3603  000732  E104               	bnz	i2u297_40
  3604  000734  0E33               	movlw	51
  3605  000736  5C7D               	subwf	__speed,w,c
  3606  000738  A0D8               	btfss	status,0,c
  3607  00073A  D00D               	goto	i2l2852
  3608  00073C                     i2u297_40:
  3609                           
  3610                           ; BSR set to: 1
  3611                           ;main.c: 291: _speed = _speed -3;
  3612  00073C  0EFD               	movlw	253
  3613  00073E  247D               	addwf	__speed,w,c
  3614  000740  6E7D               	movwf	__speed,c
  3615  000742  0EFF               	movlw	255
  3616  000744  207E               	addwfc	__speed+1,w,c
  3617  000746  6E7E               	movwf	__speed+1,c
  3618                           
  3619                           ; BSR set to: 1
  3620                           ;main.c: 292: switch(_ball.bDirection)
  3621  000748  D006               	goto	i2l2852
  3622  00074A                     i2l2846:
  3623                           
  3624                           ; BSR set to: 1
  3625                           ;main.c: 298: _ball.bDirection = 4;
  3626  00074A  0E04               	movlw	4
  3627  00074C  D001               	goto	L6
  3628  00074E                     i2l2848:
  3629                           
  3630                           ; BSR set to: 1
  3631                           ;main.c: 301: _ball.bDirection = 6;
  3632  00074E  0E06               	movlw	6
  3633  000750                     L6:
  3634  000750  0101               	movlb	1	; () banked
  3635  000752  6FC3               	movwf	(__ball+2)& (0+255),b
  3636                           
  3637                           ; BSR set to: 1
  3638                           ;main.c: 303: }
  3639                           
  3640                           ;main.c: 302: break;
  3641  000754  D00B               	goto	i2l2854
  3642  000756                     i2l2852:
  3643                           
  3644                           ; BSR set to: 1
  3645  000756  0101               	movlb	1	; () banked
  3646  000758  51C3               	movf	(__ball+2)& (0+255),w,b
  3647                           
  3648                           ; Switch size 1, requested type "space"
  3649                           ; Number of cases is 3, Range of values is 1 to 3
  3650                           ; switch strategies available:
  3651                           ; Name         Instructions Cycles
  3652                           ; simple_byte           10     6 (average)
  3653                           ;	Chosen strategy is simple_byte
  3654  00075A  0A01               	xorlw	1	; case 1
  3655  00075C  B4D8               	btfsc	status,2,c
  3656  00075E  D7F5               	goto	i2l2846
  3657  000760  0A03               	xorlw	3	; case 2
  3658  000762  B4D8               	btfsc	status,2,c
  3659  000764  D7F2               	goto	i2l2846
  3660  000766  0A01               	xorlw	1	; case 3
  3661  000768  B4D8               	btfsc	status,2,c
  3662  00076A  D7F1               	goto	i2l2848
  3663  00076C                     i2l2854:
  3664                           
  3665                           ; BSR set to: 1
  3666                           ;main.c: 304: getNextPosition();
  3667  00076C  EC2A  F005         	call	_getNextPosition	;wreg free
  3668                           
  3669                           ;main.c: 305: return;
  3670  000770  0012               	return	
  3671  000772                     i2l2858:
  3672                           
  3673                           ;main.c: 306: }
  3674                           ;main.c: 308: _p2.lives--;
  3675  000772  0101               	movlb	1	; () banked
  3676  000774  07C0               	decf	(__p2+4)& (0+255),f,b
  3677                           
  3678                           ; BSR set to: 1
  3679                           ;main.c: 309: if(_p2.lives == 0)
  3680  000776  0101               	movlb	1	; () banked
  3681  000778  51C0               	movf	(__p2+4)& (0+255),w,b
  3682  00077A  A4D8               	btfss	status,2,c
  3683  00077C  D01B               	goto	i2l2882
  3684                           
  3685                           ; BSR set to: 1
  3686                           ;main.c: 310: {
  3687                           ;main.c: 312: turnAllOff();
  3688  00077E  EC62  F007         	call	i2_turnAllOff	;wreg free
  3689                           
  3690                           ;main.c: 313: drawSymbol(6, 0);
  3691  000782  0E00               	movlw	0
  3692  000784  6E05               	movwf	i2drawSymbol@offSetX,c
  3693  000786  0E06               	movlw	6
  3694  000788  EC84  F001         	call	i2_drawSymbol
  3695                           
  3696                           ;main.c: 314: for(unsigned int counter = 0; counter < 800; counter ++)
  3697  00078C  0E00               	movlw	0
  3698  00078E  6E6E               	movwf	checkNextPosition@counter_430+1,c
  3699  000790  0E00               	movlw	0
  3700  000792  6E6D               	movwf	checkNextPosition@counter_430,c
  3701  000794                     i2l2868:
  3702  000794  0E20               	movlw	32
  3703  000796  5C6D               	subwf	checkNextPosition@counter_430,w,c
  3704  000798  0E03               	movlw	3
  3705  00079A  586E               	subwfb	checkNextPosition@counter_430+1,w,c
  3706  00079C  B0D8               	btfsc	status,0,c
  3707  00079E  D005               	goto	i2l2878
  3708                           
  3709                           ;main.c: 315: {
  3710                           ;main.c: 316: refresh();
  3711  0007A0  EC1E  F006         	call	i2_refresh	;wreg free
  3712  0007A4  4A6D               	infsnz	checkNextPosition@counter_430,f,c
  3713  0007A6  2A6E               	incf	checkNextPosition@counter_430+1,f,c
  3714  0007A8  D7F5               	goto	i2l2868
  3715  0007AA                     i2l2878:
  3716                           
  3717                           ;main.c: 317: }
  3718                           ;main.c: 318: turnAllOff();
  3719  0007AA  EC62  F007         	call	i2_turnAllOff	;wreg free
  3720                           
  3721                           ;main.c: 321: initializePong();
  3722  0007AE  EC6D  F008         	call	i2_initializePong	;wreg free
  3723                           
  3724                           ;main.c: 322: }
  3725  0007B2  0012               	return	
  3726  0007B4                     i2l2882:
  3727                           
  3728                           ;main.c: 323: else
  3729                           ;main.c: 324: {
  3730                           ;main.c: 325: startPong();
  3731  0007B4  EC85  F006         	call	i2_startPong	;wreg free
  3732                           
  3733                           ;main.c: 326: }
  3734                           ;main.c: 327: }
  3735  0007B8  0012               	return	
  3736  0007BA                     i2l2884:
  3737                           
  3738                           ;main.c: 328: else if(_nextPos[1] < 0 || _nextPos[1] > 7)
  3739  0007BA  0E07               	movlw	7
  3740  0007BC  0101               	movlb	1	; () banked
  3741  0007BE  65C5               	cpfsgt	(__nextPos+1)& (0+255),b
  3742  0007C0  0012               	return	
  3743  0007C2  D00A               	goto	i2l2898
  3744  0007C4                     i2l2888:
  3745                           
  3746                           ; BSR set to: 1
  3747                           ;main.c: 333: _ball.bDirection = 3;
  3748  0007C4  0E03               	movlw	3
  3749  0007C6  D005               	goto	L9
  3750  0007C8                     i2l2890:
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;main.c: 336: _ball.bDirection = 1;
  3754  0007C8  0E01               	movlw	1
  3755  0007CA  D003               	goto	L9
  3756  0007CC                     i2l2892:
  3757                           
  3758                           ; BSR set to: 1
  3759                           ;main.c: 339: _ball.bDirection = 6;
  3760  0007CC  0E06               	movlw	6
  3761  0007CE  D001               	goto	L9
  3762  0007D0                     i2l2894:
  3763                           
  3764                           ; BSR set to: 1
  3765                           ;main.c: 342: _ball.bDirection = 4;
  3766  0007D0  0E04               	movlw	4
  3767  0007D2                     L9:
  3768  0007D2  0101               	movlb	1	; () banked
  3769  0007D4  6FC3               	movwf	(__ball+2)& (0+255),b
  3770                           
  3771                           ; BSR set to: 1
  3772                           ;main.c: 344: }
  3773                           
  3774                           ;main.c: 343: break;
  3775  0007D6  D00E               	goto	i2l2900
  3776  0007D8                     i2l2898:
  3777                           
  3778                           ; BSR set to: 1
  3779  0007D8  0101               	movlb	1	; () banked
  3780  0007DA  51C3               	movf	(__ball+2)& (0+255),w,b
  3781                           
  3782                           ; Switch size 1, requested type "space"
  3783                           ; Number of cases is 4, Range of values is 1 to 6
  3784                           ; switch strategies available:
  3785                           ; Name         Instructions Cycles
  3786                           ; simple_byte           13     7 (average)
  3787                           ;	Chosen strategy is simple_byte
  3788  0007DC  0A01               	xorlw	1	; case 1
  3789  0007DE  B4D8               	btfsc	status,2,c
  3790  0007E0  D7F1               	goto	i2l2888
  3791  0007E2  0A02               	xorlw	2	; case 3
  3792  0007E4  B4D8               	btfsc	status,2,c
  3793  0007E6  D7F0               	goto	i2l2890
  3794  0007E8  0A07               	xorlw	7	; case 4
  3795  0007EA  B4D8               	btfsc	status,2,c
  3796  0007EC  D7EF               	goto	i2l2892
  3797  0007EE  0A02               	xorlw	2	; case 6
  3798  0007F0  B4D8               	btfsc	status,2,c
  3799  0007F2  D7EE               	goto	i2l2894
  3800  0007F4                     i2l2900:
  3801                           
  3802                           ; BSR set to: 1
  3803                           ;main.c: 345: getNextPosition();
  3804  0007F4  EC2A  F005         	call	_getNextPosition	;wreg free
  3805                           
  3806                           ;main.c: 346: return;
  3807  0007F8  0012               	return	
  3808  0007FA                     __end_of_checkNextPosition:
  3809                           	opt stack 0
  3810                           pclatu	equ	0xFFB
  3811                           pclath	equ	0xFFA
  3812                           tblptru	equ	0xFF8
  3813                           tblptrh	equ	0xFF7
  3814                           tblptrl	equ	0xFF6
  3815                           tablat	equ	0xFF5
  3816                           prodh	equ	0xFF4
  3817                           prodl	equ	0xFF3
  3818                           intcon	equ	0xFF2
  3819                           postinc0	equ	0xFEE
  3820                           fsr0h	equ	0xFEA
  3821                           fsr0l	equ	0xFE9
  3822                           wreg	equ	0xFE8
  3823                           postdec1	equ	0xFE5
  3824                           plusw1	equ	0xFE3
  3825                           fsr1h	equ	0xFE2
  3826                           fsr1l	equ	0xFE1
  3827                           indf2	equ	0xFDF
  3828                           postinc2	equ	0xFDE
  3829                           plusw2	equ	0xFDB
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           status	equ	0xFD8
  3833                           
  3834 ;; *************** function i2_initializePong *****************
  3835 ;; Defined at:
  3836 ;;		line 87 in file "main.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3850 ;;      Params:         0       0       0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    3
  3857 ;; This function calls:
  3858 ;;		i2_startPong
  3859 ;; This function is called by:
  3860 ;;		_checkNextPosition
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text16
  3865  0010DA                     __ptext16:
  3866                           	opt stack 0
  3867  0010DA                     i2_initializePong:
  3868                           	opt stack 21
  3869                           
  3870                           ;main.c: 92: _p1.lives = 3;
  3871                           
  3872                           ;incstack = 0
  3873  0010DA  0E03               	movlw	3
  3874  0010DC  0101               	movlb	1	; () banked
  3875  0010DE  6FBB               	movwf	(__p1+4)& (0+255),b
  3876                           
  3877                           ;main.c: 93: _p2.lives = 3;
  3878  0010E0  0E03               	movlw	3
  3879  0010E2  0101               	movlb	1	; () banked
  3880  0010E4  6FC0               	movwf	(__p2+4)& (0+255),b
  3881                           
  3882                           ; BSR set to: 1
  3883                           ;main.c: 95: startPong();
  3884  0010E6  EC85  F006         	call	i2_startPong	;wreg free
  3885                           
  3886                           ;main.c: 98: TMR0ON = 1;
  3887  0010EA  8ED5               	bsf	4053,7,c	;volatile
  3888  0010EC  0012               	return		;funcret
  3889  0010EE                     __end_ofi2_initializePong:
  3890                           	opt stack 0
  3891                           pclatu	equ	0xFFB
  3892                           pclath	equ	0xFFA
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           prodh	equ	0xFF4
  3898                           prodl	equ	0xFF3
  3899                           intcon	equ	0xFF2
  3900                           postinc0	equ	0xFEE
  3901                           fsr0h	equ	0xFEA
  3902                           fsr0l	equ	0xFE9
  3903                           wreg	equ	0xFE8
  3904                           postdec1	equ	0xFE5
  3905                           plusw1	equ	0xFE3
  3906                           fsr1h	equ	0xFE2
  3907                           fsr1l	equ	0xFE1
  3908                           indf2	equ	0xFDF
  3909                           postinc2	equ	0xFDE
  3910                           plusw2	equ	0xFDB
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           
  3915 ;; *************** function i2_startPong *****************
  3916 ;; Defined at:
  3917 ;;		line 58 in file "main.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  startPong       2  104[COMRAM] unsigned int 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3931 ;;      Params:         0       0       0       0       0       0       0
  3932 ;;      Locals:         2       0       0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0
  3934 ;;      Totals:         2       0       0       0       0       0       0
  3935 ;;Total ram usage:        2 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    2
  3938 ;; This function calls:
  3939 ;;		i2_drawSymbol
  3940 ;;		i2_refresh
  3941 ;;		i2_turnAllOff
  3942 ;; This function is called by:
  3943 ;;		_checkNextPosition
  3944 ;;		i2_initializePong
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text17
  3949  000D0A                     __ptext17:
  3950                           	opt stack 0
  3951  000D0A                     i2_startPong:
  3952                           	opt stack 22
  3953                           
  3954                           ;main.c: 60: _speed = 200;
  3955                           
  3956                           ;incstack = 0
  3957  000D0A  0E00               	movlw	0
  3958  000D0C  6E7E               	movwf	__speed+1,c
  3959  000D0E  0EC8               	movlw	200
  3960  000D10  6E7D               	movwf	__speed,c
  3961                           
  3962                           ;main.c: 63: turnAllOff();
  3963  000D12  EC62  F007         	call	i2_turnAllOff	;wreg free
  3964                           
  3965                           ;main.c: 64: drawSymbol(_p1.lives, 0);
  3966  000D16  0E00               	movlw	0
  3967  000D18  6E05               	movwf	i2drawSymbol@offSetX,c
  3968  000D1A  0101               	movlb	1	; () banked
  3969  000D1C  51BB               	movf	(__p1+4)& (0+255),w,b
  3970  000D1E  EC84  F001         	call	i2_drawSymbol
  3971                           
  3972                           ;main.c: 65: drawSymbol(_p2.lives, 8);
  3973  000D22  0E08               	movlw	8
  3974  000D24  6E05               	movwf	i2drawSymbol@offSetX,c
  3975  000D26  0101               	movlb	1	; () banked
  3976  000D28  51C0               	movf	(__p2+4)& (0+255),w,b
  3977  000D2A  EC84  F001         	call	i2_drawSymbol
  3978                           
  3979                           ;main.c: 66: for(unsigned int counter = 0; counter < 800; counter ++)
  3980  000D2E  0E00               	movlw	0
  3981  000D30  6E6A               	movwf	i2startPong@counter+1,c
  3982  000D32  0E00               	movlw	0
  3983  000D34  6E69               	movwf	i2startPong@counter,c
  3984  000D36                     i2l2668:
  3985  000D36  0E20               	movlw	32
  3986  000D38  5C69               	subwf	i2startPong@counter,w,c
  3987  000D3A  0E03               	movlw	3
  3988  000D3C  586A               	subwfb	i2startPong@counter+1,w,c
  3989  000D3E  B0D8               	btfsc	status,0,c
  3990  000D40  D005               	goto	i2l2678
  3991                           
  3992                           ;main.c: 67: {
  3993                           ;main.c: 68: refresh();
  3994  000D42  EC1E  F006         	call	i2_refresh	;wreg free
  3995  000D46  4A69               	infsnz	i2startPong@counter,f,c
  3996  000D48  2A6A               	incf	i2startPong@counter+1,f,c
  3997  000D4A  D7F5               	goto	i2l2668
  3998  000D4C                     i2l2678:
  3999                           
  4000                           ;main.c: 69: }
  4001                           ;main.c: 70: turnAllOff();
  4002  000D4C  EC62  F007         	call	i2_turnAllOff	;wreg free
  4003                           
  4004                           ;main.c: 75: _ball.bDirection = 3;
  4005  000D50  0E03               	movlw	3
  4006  000D52  0101               	movlb	1	; () banked
  4007  000D54  6FC3               	movwf	(__ball+2)& (0+255),b
  4008                           
  4009                           ; BSR set to: 1
  4010                           ;main.c: 77: _ball.bPos[0] = 2;
  4011  000D56  0E02               	movlw	2
  4012  000D58  0101               	movlb	1	; () banked
  4013  000D5A  6FC1               	movwf	__ball& (0+255),b
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;main.c: 79: _ball.bPos[1] = 4;
  4017  000D5C  0E04               	movlw	4
  4018  000D5E  0101               	movlb	1	; () banked
  4019  000D60  6FC2               	movwf	(__ball+1)& (0+255),b
  4020                           
  4021                           ; BSR set to: 1
  4022                           ;main.c: 82: _nextPos[0] = _ball.bPos[0];
  4023  000D62  C1C1  F1C4         	movff	__ball,__nextPos
  4024                           
  4025                           ; BSR set to: 1
  4026                           ;main.c: 83: _nextPos[1] = _ball.bPos[1];
  4027  000D66  C1C2  F1C5         	movff	__ball+1,__nextPos+1
  4028                           
  4029                           ; BSR set to: 1
  4030  000D6A  0012               	return		;funcret
  4031  000D6C                     __end_ofi2_startPong:
  4032                           	opt stack 0
  4033                           pclatu	equ	0xFFB
  4034                           pclath	equ	0xFFA
  4035                           tblptru	equ	0xFF8
  4036                           tblptrh	equ	0xFF7
  4037                           tblptrl	equ	0xFF6
  4038                           tablat	equ	0xFF5
  4039                           prodh	equ	0xFF4
  4040                           prodl	equ	0xFF3
  4041                           intcon	equ	0xFF2
  4042                           postinc0	equ	0xFEE
  4043                           fsr0h	equ	0xFEA
  4044                           fsr0l	equ	0xFE9
  4045                           wreg	equ	0xFE8
  4046                           postdec1	equ	0xFE5
  4047                           plusw1	equ	0xFE3
  4048                           fsr1h	equ	0xFE2
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           postinc2	equ	0xFDE
  4052                           plusw2	equ	0xFDB
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function i2_turnAllOff *****************
  4058 ;; Defined at:
  4059 ;;		line 161 in file "Source/LED-API.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  turnAllOff      1    3[COMRAM] unsigned char 
  4064 ;;  turnAllOff      1    2[COMRAM] unsigned char 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      void 
  4067 ;; Registers used:
  4068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4074 ;;      Params:         0       0       0       0       0       0       0
  4075 ;;      Locals:         2       0       0       0       0       0       0
  4076 ;;      Temps:          2       0       0       0       0       0       0
  4077 ;;      Totals:         4       0       0       0       0       0       0
  4078 ;;Total ram usage:        4 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_checkNextPosition
  4084 ;;		i2_startPong
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text18
  4089  000EC4                     __ptext18:
  4090                           	opt stack 0
  4091  000EC4                     i2_turnAllOff:
  4092                           	opt stack 24
  4093                           
  4094                           ;LED-API.c: 164: for (unsigned char i = 0; i < 8; i++) {
  4095                           
  4096                           ; BSR set to: 1
  4097                           ;incstack = 0
  4098  000EC4  0E00               	movlw	0
  4099  000EC6  6E03               	movwf	i2turnAllOff@i,c
  4100  000EC8                     i2l1770:
  4101  000EC8  0E07               	movlw	7
  4102  000ECA  6403               	cpfsgt	i2turnAllOff@i,c
  4103  000ECC  D001               	goto	i2l1774
  4104  000ECE  0012               	return	
  4105  000ED0                     i2l1774:
  4106                           
  4107                           ;LED-API.c: 165: for (unsigned char j = 0; j < 16; j++) {
  4108  000ED0  0E00               	movlw	0
  4109  000ED2  6E04               	movwf	i2turnAllOff@j,c
  4110  000ED4                     i2l1776:
  4111  000ED4  0E0F               	movlw	15
  4112  000ED6  6404               	cpfsgt	i2turnAllOff@j,c
  4113  000ED8  D001               	goto	i2l1780
  4114  000EDA  D016               	goto	i2l1786
  4115  000EDC                     i2l1780:
  4116                           
  4117                           ;LED-API.c: 166: pixels[i][j] = 0;
  4118  000EDC  5003               	movf	i2turnAllOff@i,w,c
  4119  000EDE  0D10               	mullw	16
  4120  000EE0  0E00               	movlw	low _pixels
  4121  000EE2  6E01               	movwf	??i2_turnAllOff& (0+255),c
  4122  000EE4  0E03               	movlw	high _pixels
  4123  000EE6  6E02               	movwf	(??i2_turnAllOff+1)& (0+255),c
  4124  000EE8  50F3               	movf	prodl,w,c
  4125  000EEA  2601               	addwf	??i2_turnAllOff,f,c
  4126  000EEC  50F4               	movf	prodh,w,c
  4127  000EEE  2202               	addwfc	??i2_turnAllOff+1,f,c
  4128  000EF0  5004               	movf	i2turnAllOff@j,w,c
  4129  000EF2  0D01               	mullw	1
  4130  000EF4  50F3               	movf	prodl,w,c
  4131  000EF6  2401               	addwf	??i2_turnAllOff,w,c
  4132  000EF8  6ED9               	movwf	fsr2l,c
  4133  000EFA  50F4               	movf	prodh,w,c
  4134  000EFC  2002               	addwfc	??i2_turnAllOff+1,w,c
  4135  000EFE  6EDA               	movwf	fsr2h,c
  4136  000F00  0E00               	movlw	0
  4137  000F02  6EDF               	movwf	indf2,c
  4138  000F04  2A04               	incf	i2turnAllOff@j,f,c
  4139  000F06  D7E6               	goto	i2l1776
  4140  000F08                     i2l1786:
  4141  000F08  2A03               	incf	i2turnAllOff@i,f,c
  4142  000F0A  D7DE               	goto	i2l1770
  4143  000F0C                     __end_ofi2_turnAllOff:
  4144                           	opt stack 0
  4145                           pclatu	equ	0xFFB
  4146                           pclath	equ	0xFFA
  4147                           tblptru	equ	0xFF8
  4148                           tblptrh	equ	0xFF7
  4149                           tblptrl	equ	0xFF6
  4150                           tablat	equ	0xFF5
  4151                           prodh	equ	0xFF4
  4152                           prodl	equ	0xFF3
  4153                           intcon	equ	0xFF2
  4154                           postinc0	equ	0xFEE
  4155                           fsr0h	equ	0xFEA
  4156                           fsr0l	equ	0xFE9
  4157                           wreg	equ	0xFE8
  4158                           postdec1	equ	0xFE5
  4159                           plusw1	equ	0xFE3
  4160                           fsr1h	equ	0xFE2
  4161                           fsr1l	equ	0xFE1
  4162                           indf2	equ	0xFDF
  4163                           postinc2	equ	0xFDE
  4164                           plusw2	equ	0xFDB
  4165                           fsr2h	equ	0xFDA
  4166                           fsr2l	equ	0xFD9
  4167                           status	equ	0xFD8
  4168                           
  4169 ;; *************** function i2_refresh *****************
  4170 ;; Defined at:
  4171 ;;		line 177 in file "Source/LED-API.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  refresh         1    7[COMRAM] unsigned char 
  4176 ;;  refresh         1    6[COMRAM] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4186 ;;      Params:         0       0       0       0       0       0       0
  4187 ;;      Locals:         2       0       0       0       0       0       0
  4188 ;;      Temps:          3       0       0       0       0       0       0
  4189 ;;      Totals:         5       0       0       0       0       0       0
  4190 ;;Total ram usage:        5 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    1
  4193 ;; This function calls:
  4194 ;;		i2_allOff
  4195 ;;		i2_setColHigh
  4196 ;;		i2_setRowHigh
  4197 ;; This function is called by:
  4198 ;;		_checkNextPosition
  4199 ;;		i2_startPong
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text19
  4204  000C3C                     __ptext19:
  4205                           	opt stack 0
  4206  000C3C                     i2_refresh:
  4207                           	opt stack 22
  4208                           
  4209                           ;LED-API.c: 179: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  4210                           
  4211                           ;incstack = 0
  4212  000C3C  0E00               	movlw	0
  4213  000C3E  6E07               	movwf	i2refresh@theCol,c
  4214  000C40                     i2l1792:
  4215  000C40  0E07               	movlw	7
  4216  000C42  6407               	cpfsgt	i2refresh@theCol,c
  4217  000C44  D001               	goto	i2l1796
  4218  000C46  0012               	return	
  4219  000C48                     i2l1796:
  4220                           
  4221                           ;LED-API.c: 181: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  4222  000C48  0E00               	movlw	0
  4223  000C4A  6E08               	movwf	i2refresh@theRow,c
  4224  000C4C                     i2l1798:
  4225  000C4C  0E0F               	movlw	15
  4226  000C4E  6408               	cpfsgt	i2refresh@theRow,c
  4227  000C50  D001               	goto	i2l1802
  4228  000C52  D01A               	goto	i2l1810
  4229  000C54                     i2l1802:
  4230                           
  4231                           ;LED-API.c: 183: if (pixels[theCol][theRow] == 1)
  4232  000C54  5007               	movf	i2refresh@theCol,w,c
  4233  000C56  0D10               	mullw	16
  4234  000C58  0E00               	movlw	low _pixels
  4235  000C5A  6E04               	movwf	??i2_refresh& (0+255),c
  4236  000C5C  0E03               	movlw	high _pixels
  4237  000C5E  6E05               	movwf	(??i2_refresh+1)& (0+255),c
  4238  000C60  50F3               	movf	prodl,w,c
  4239  000C62  2604               	addwf	??i2_refresh,f,c
  4240  000C64  50F4               	movf	prodh,w,c
  4241  000C66  2205               	addwfc	??i2_refresh+1,f,c
  4242  000C68  5008               	movf	i2refresh@theRow,w,c
  4243  000C6A  0D01               	mullw	1
  4244  000C6C  50F3               	movf	prodl,w,c
  4245  000C6E  2404               	addwf	??i2_refresh,w,c
  4246  000C70  6ED9               	movwf	fsr2l,c
  4247  000C72  50F4               	movf	prodh,w,c
  4248  000C74  2005               	addwfc	??i2_refresh+1,w,c
  4249  000C76  6EDA               	movwf	fsr2h,c
  4250  000C78  04DE               	decf	postinc2,w,c
  4251  000C7A  A4D8               	btfss	status,2,c
  4252  000C7C  D003               	goto	i2l1806
  4253                           
  4254                           ;LED-API.c: 184: setRowHigh(theRow);
  4255  000C7E  5008               	movf	i2refresh@theRow,w,c
  4256  000C80  ECCA  F007         	call	i2_setRowHigh
  4257  000C84                     i2l1806:
  4258  000C84  2A08               	incf	i2refresh@theRow,f,c
  4259  000C86  D7E2               	goto	i2l1798
  4260  000C88                     i2l1810:
  4261                           
  4262                           ;LED-API.c: 185: }
  4263                           ;LED-API.c: 189: setColHigh(theCol);
  4264  000C88  5007               	movf	i2refresh@theCol,w,c
  4265  000C8A  EC49  F008         	call	i2_setColHigh
  4266                           
  4267                           ;LED-API.c: 190: _delay((unsigned long)((500)*(32000000/4000000.0)));
  4268  000C8E  0E06               	movlw	6
  4269  000C90  6E04               	movwf	??i2_refresh& (0+255),c
  4270  000C92  0E30               	movlw	48
  4271  000C94                     i2u309_47:
  4272  000C94  2EE8               	decfsz	wreg,f,c
  4273  000C96  D7FE               	goto	i2u309_47
  4274  000C98  2E04               	decfsz	??i2_refresh& (0+255),f,c
  4275  000C9A  D7FC               	goto	i2u309_47
  4276  000C9C  D000               	nop2	
  4277                           
  4278                           ;LED-API.c: 191: allOff();
  4279  000C9E  EC87  F008         	call	i2_allOff	;wreg free
  4280  000CA2  2A07               	incf	i2refresh@theCol,f,c
  4281  000CA4  D7CD               	goto	i2l1792
  4282  000CA6                     __end_ofi2_refresh:
  4283                           	opt stack 0
  4284                           pclatu	equ	0xFFB
  4285                           pclath	equ	0xFFA
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           prodh	equ	0xFF4
  4291                           prodl	equ	0xFF3
  4292                           intcon	equ	0xFF2
  4293                           postinc0	equ	0xFEE
  4294                           fsr0h	equ	0xFEA
  4295                           fsr0l	equ	0xFE9
  4296                           wreg	equ	0xFE8
  4297                           postdec1	equ	0xFE5
  4298                           plusw1	equ	0xFE3
  4299                           fsr1h	equ	0xFE2
  4300                           fsr1l	equ	0xFE1
  4301                           indf2	equ	0xFDF
  4302                           postinc2	equ	0xFDE
  4303                           plusw2	equ	0xFDB
  4304                           fsr2h	equ	0xFDA
  4305                           fsr2l	equ	0xFD9
  4306                           status	equ	0xFD8
  4307                           
  4308 ;; *************** function i2_setRowHigh *****************
  4309 ;; Defined at:
  4310 ;;		line 24 in file "Source/LED-API.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  row             1    wreg     unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  row             1    2[COMRAM] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4324 ;;      Params:         0       0       0       0       0       0       0
  4325 ;;      Locals:         1       0       0       0       0       0       0
  4326 ;;      Temps:          2       0       0       0       0       0       0
  4327 ;;      Totals:         3       0       0       0       0       0       0
  4328 ;;Total ram usage:        3 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		i2_refresh
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text20
  4338  000F94                     __ptext20:
  4339                           	opt stack 0
  4340  000F94                     i2_setRowHigh:
  4341                           	opt stack 22
  4342                           
  4343                           ;incstack = 0
  4344                           ;i2setRowHigh@row stored from wreg
  4345  000F94  6E03               	movwf	i2setRowHigh@row,c
  4346                           
  4347                           ;LED-API.c: 25: if(row < 8)
  4348  000F96  0E08               	movlw	8
  4349  000F98  6003               	cpfslt	i2setRowHigh@row,c
  4350  000F9A  D00D               	goto	i2l1644
  4351                           
  4352                           ;LED-API.c: 26: LATC |= (1 << row);
  4353  000F9C  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4354  000FA0  0E01               	movlw	1
  4355  000FA2  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4356  000FA4  2A01               	incf	??i2_setRowHigh,f,c
  4357  000FA6  D002               	goto	i2u114_44
  4358  000FA8                     i2u114_45:
  4359  000FA8  90D8               	bcf	status,0,c
  4360  000FAA  3602               	rlcf	??i2_setRowHigh+1,f,c
  4361  000FAC                     i2u114_44:
  4362  000FAC  2E01               	decfsz	??i2_setRowHigh,f,c
  4363  000FAE  D7FC               	goto	i2u114_45
  4364  000FB0  5002               	movf	??i2_setRowHigh+1,w,c
  4365  000FB2  128B               	iorwf	3979,f,c	;volatile
  4366  000FB4  0012               	return	
  4367  000FB6                     i2l1644:
  4368                           
  4369                           ;LED-API.c: 27: else
  4370                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  4371  000FB6  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4372  000FBA  0EF8               	movlw	-8
  4373  000FBC  2601               	addwf	??i2_setRowHigh,f,c
  4374  000FBE  0E01               	movlw	1
  4375  000FC0  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4376  000FC2  2A01               	incf	??i2_setRowHigh,f,c
  4377  000FC4  D002               	goto	i2u115_44
  4378  000FC6                     i2u115_45:
  4379  000FC6  90D8               	bcf	status,0,c
  4380  000FC8  3602               	rlcf	??i2_setRowHigh+1,f,c
  4381  000FCA                     i2u115_44:
  4382  000FCA  2E01               	decfsz	??i2_setRowHigh,f,c
  4383  000FCC  D7FC               	goto	i2u115_45
  4384  000FCE  5002               	movf	??i2_setRowHigh+1,w,c
  4385  000FD0  128C               	iorwf	3980,f,c	;volatile
  4386  000FD2  0012               	return	
  4387  000FD4                     __end_ofi2_setRowHigh:
  4388                           	opt stack 0
  4389                           pclatu	equ	0xFFB
  4390                           pclath	equ	0xFFA
  4391                           tblptru	equ	0xFF8
  4392                           tblptrh	equ	0xFF7
  4393                           tblptrl	equ	0xFF6
  4394                           tablat	equ	0xFF5
  4395                           prodh	equ	0xFF4
  4396                           prodl	equ	0xFF3
  4397                           intcon	equ	0xFF2
  4398                           postinc0	equ	0xFEE
  4399                           fsr0h	equ	0xFEA
  4400                           fsr0l	equ	0xFE9
  4401                           wreg	equ	0xFE8
  4402                           postdec1	equ	0xFE5
  4403                           plusw1	equ	0xFE3
  4404                           fsr1h	equ	0xFE2
  4405                           fsr1l	equ	0xFE1
  4406                           indf2	equ	0xFDF
  4407                           postinc2	equ	0xFDE
  4408                           plusw2	equ	0xFDB
  4409                           fsr2h	equ	0xFDA
  4410                           fsr2l	equ	0xFD9
  4411                           status	equ	0xFD8
  4412                           
  4413 ;; *************** function i2_setColHigh *****************
  4414 ;; Defined at:
  4415 ;;		line 20 in file "Source/LED-API.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  column          1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  column          1    2[COMRAM] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4429 ;;      Params:         0       0       0       0       0       0       0
  4430 ;;      Locals:         1       0       0       0       0       0       0
  4431 ;;      Temps:          2       0       0       0       0       0       0
  4432 ;;      Totals:         3       0       0       0       0       0       0
  4433 ;;Total ram usage:        3 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		i2_refresh
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text21
  4443  001092                     __ptext21:
  4444                           	opt stack 0
  4445  001092                     i2_setColHigh:
  4446                           	opt stack 22
  4447                           
  4448                           ;incstack = 0
  4449                           ;i2setColHigh@column stored from wreg
  4450  001092  6E03               	movwf	i2setColHigh@column,c
  4451                           
  4452                           ;LED-API.c: 21: LATA |= (1 << column);
  4453  001094  C003  F001         	movff	i2setColHigh@column,??i2_setColHigh
  4454  001098  0E01               	movlw	1
  4455  00109A  6E02               	movwf	(??i2_setColHigh+1)& (0+255),c
  4456  00109C  2A01               	incf	??i2_setColHigh,f,c
  4457  00109E  D002               	goto	i2u112_44
  4458  0010A0                     i2u112_45:
  4459  0010A0  90D8               	bcf	status,0,c
  4460  0010A2  3602               	rlcf	??i2_setColHigh+1,f,c
  4461  0010A4                     i2u112_44:
  4462  0010A4  2E01               	decfsz	??i2_setColHigh,f,c
  4463  0010A6  D7FC               	goto	i2u112_45
  4464  0010A8  5002               	movf	??i2_setColHigh+1,w,c
  4465  0010AA  1289               	iorwf	3977,f,c	;volatile
  4466  0010AC  0012               	return		;funcret
  4467  0010AE                     __end_ofi2_setColHigh:
  4468                           	opt stack 0
  4469                           pclatu	equ	0xFFB
  4470                           pclath	equ	0xFFA
  4471                           tblptru	equ	0xFF8
  4472                           tblptrh	equ	0xFF7
  4473                           tblptrl	equ	0xFF6
  4474                           tablat	equ	0xFF5
  4475                           prodh	equ	0xFF4
  4476                           prodl	equ	0xFF3
  4477                           intcon	equ	0xFF2
  4478                           postinc0	equ	0xFEE
  4479                           fsr0h	equ	0xFEA
  4480                           fsr0l	equ	0xFE9
  4481                           wreg	equ	0xFE8
  4482                           postdec1	equ	0xFE5
  4483                           plusw1	equ	0xFE3
  4484                           fsr1h	equ	0xFE2
  4485                           fsr1l	equ	0xFE1
  4486                           indf2	equ	0xFDF
  4487                           postinc2	equ	0xFDE
  4488                           plusw2	equ	0xFDB
  4489                           fsr2h	equ	0xFDA
  4490                           fsr2l	equ	0xFD9
  4491                           status	equ	0xFD8
  4492                           
  4493 ;; *************** function i2_allOff *****************
  4494 ;; Defined at:
  4495 ;;		line 171 in file "Source/LED-API.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4509 ;;      Params:         0       0       0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0
  4512 ;;      Totals:         0       0       0       0       0       0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		i2_refresh
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text22
  4523  00110E                     __ptext22:
  4524                           	opt stack 0
  4525  00110E                     i2_allOff:
  4526                           	opt stack 22
  4527                           
  4528                           ;LED-API.c: 172: LATA = 0;
  4529                           
  4530                           ;incstack = 0
  4531  00110E  0E00               	movlw	0
  4532  001110  6E89               	movwf	3977,c	;volatile
  4533                           
  4534                           ;LED-API.c: 173: LATC = 0;
  4535  001112  0E00               	movlw	0
  4536  001114  6E8B               	movwf	3979,c	;volatile
  4537                           
  4538                           ;LED-API.c: 174: LATD = 0;
  4539  001116  0E00               	movlw	0
  4540  001118  6E8C               	movwf	3980,c	;volatile
  4541  00111A  0012               	return		;funcret
  4542  00111C                     __end_ofi2_allOff:
  4543                           	opt stack 0
  4544                           pclatu	equ	0xFFB
  4545                           pclath	equ	0xFFA
  4546                           tblptru	equ	0xFF8
  4547                           tblptrh	equ	0xFF7
  4548                           tblptrl	equ	0xFF6
  4549                           tablat	equ	0xFF5
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           intcon	equ	0xFF2
  4553                           postinc0	equ	0xFEE
  4554                           fsr0h	equ	0xFEA
  4555                           fsr0l	equ	0xFE9
  4556                           wreg	equ	0xFE8
  4557                           postdec1	equ	0xFE5
  4558                           plusw1	equ	0xFE3
  4559                           fsr1h	equ	0xFE2
  4560                           fsr1l	equ	0xFE1
  4561                           indf2	equ	0xFDF
  4562                           postinc2	equ	0xFDE
  4563                           plusw2	equ	0xFDB
  4564                           fsr2h	equ	0xFDA
  4565                           fsr2l	equ	0xFD9
  4566                           status	equ	0xFD8
  4567                           
  4568 ;; *************** function i2_drawSymbol *****************
  4569 ;; Defined at:
  4570 ;;		line 85 in file "Source/LED-API.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  chosenSymbol    1    wreg     unsigned char 
  4573 ;;  offSetX         1    4[COMRAM] unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  chosenSymbol    1  103[COMRAM] unsigned char 
  4576 ;;  drawSymbol     68   30[BANK0 ] unsigned char [2][34]
  4577 ;;  drawSymbol     68    5[COMRAM] unsigned char [2][34]
  4578 ;;  drawSymbol     30    0[BANK0 ] unsigned char [2][15]
  4579 ;;  drawSymbol     30   73[COMRAM] unsigned char [2][15]
  4580 ;;  drawSymbol     28   98[BANK0 ] unsigned char [2][14]
  4581 ;;  drawSymbol     24   24[BANK1 ] unsigned char [2][12]
  4582 ;;  drawSymbol     24    0[BANK1 ] unsigned char [2][12]
  4583 ;;  drawSymbol      1   52[BANK1 ] unsigned char 
  4584 ;;  drawSymbol      1   51[BANK1 ] unsigned char 
  4585 ;;  drawSymbol      1   50[BANK1 ] unsigned char 
  4586 ;;  drawSymbol      1   49[BANK1 ] unsigned char 
  4587 ;;  drawSymbol      1   48[BANK1 ] unsigned char 
  4588 ;;  drawSymbol      1  127[BANK0 ] unsigned char 
  4589 ;;  drawSymbol      1  126[BANK0 ] unsigned char 
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      void 
  4592 ;; Registers used:
  4593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4599 ;;      Params:         1       0       0       0       0       0       0
  4600 ;;      Locals:        99     128      53       0       0       0       0
  4601 ;;      Temps:          0       0       0       0       0       0       0
  4602 ;;      Totals:       100     128      53       0       0       0       0
  4603 ;;Total ram usage:      281 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    1
  4606 ;; This function calls:
  4607 ;;		i2_on
  4608 ;; This function is called by:
  4609 ;;		_checkNextPosition
  4610 ;;		i2_startPong
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text23
  4615  000308                     __ptext23:
  4616                           	opt stack 0
  4617  000308                     i2_drawSymbol:
  4618                           	opt stack 22
  4619                           
  4620                           ;incstack = 0
  4621                           ;i2drawSymbol@chosenSymbol stored from wreg
  4622  000308  6E68               	movwf	i2drawSymbol@chosenSymbol,c
  4623                           
  4624                           ;LED-API.c: 87: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  4625  00030A  EE21  F09F         	lfsr	2,drawSymbol@F3224
  4626  00030E  EE11  F000         	lfsr	1,i2drawSymbol@symbolOne
  4627  000312  0E17               	movlw	23
  4628  000314                     i2u230_41:
  4629  000314  CFDB FFE3          	movff	plusw2,plusw1
  4630  000318  06E8               	decf	wreg,f,c
  4631  00031A  E2FC               	bc	i2u230_41
  4632                           
  4633                           ;LED-API.c: 88: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  4634  00031C  EE22  F0C4         	lfsr	2,drawSymbol@F3227
  4635  000320  EE10  F0E2         	lfsr	1,i2drawSymbol@symbolTwo
  4636  000324  0E1B               	movlw	27
  4637  000326                     i2u231_41:
  4638  000326  CFDB FFE3          	movff	plusw2,plusw1
  4639  00032A  06E8               	decf	wreg,f,c
  4640  00032C  E2FC               	bc	i2u231_41
  4641                           
  4642                           ;LED-API.c: 89: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  4643  00032E  EE22  F0E0         	lfsr	2,drawSymbol@F3230
  4644  000332  EE11  F018         	lfsr	1,i2drawSymbol@symbolThree
  4645  000336  0E17               	movlw	23
  4646  000338                     i2u232_41:
  4647  000338  CFDB FFE3          	movff	plusw2,plusw1
  4648  00033C  06E8               	decf	wreg,f,c
  4649  00033E  E2FC               	bc	i2u232_41
  4650                           
  4651                           ;LED-API.c: 91: char symbolPlay[34][2] = {
  4652                           ;LED-API.c: 92: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  4653                           ;LED-API.c: 93: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  4654                           ;LED-API.c: 94: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  4655                           ;LED-API.c: 95: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  4656  000340  EE23  F080         	lfsr	2,drawSymbol@F3233
  4657  000344  EE10  F006         	lfsr	1,i2drawSymbol@symbolPlay
  4658  000348  0E43               	movlw	67
  4659  00034A                     i2u233_41:
  4660  00034A  CFDB FFE3          	movff	plusw2,plusw1
  4661  00034E  06E8               	decf	wreg,f,c
  4662  000350  E2FC               	bc	i2u233_41
  4663                           
  4664                           ;LED-API.c: 97: char symbolGo[34][2] = {
  4665                           ;LED-API.c: 98: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0},
      +                          {5,0},{6,1},{5,2},{4,2},
  4666                           ;LED-API.c: 99: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},{
      +                          13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  4667  000352  EE24  F000         	lfsr	2,drawSymbol@F3236
  4668  000356  EE10  F09E         	lfsr	1,i2drawSymbol@symbolGo
  4669  00035A  0E43               	movlw	67
  4670  00035C                     i2u234_41:
  4671  00035C  CFDB FFE3          	movff	plusw2,plusw1
  4672  000360  06E8               	decf	wreg,f,c
  4673  000362  E2FC               	bc	i2u234_41
  4674                           
  4675                           ;LED-API.c: 101: char symbolArrowRight[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3},{6,
      +                          3},{7,3},{8,3},{7,4},{6,5},{5,7},{6,2},{5,1},{4,0}};
  4676  000364  EE22  F088         	lfsr	2,drawSymbol@F3239
  4677  000368  EE10  F04A         	lfsr	1,i2drawSymbol@symbolArrowRight
  4678  00036C  0E1D               	movlw	29
  4679  00036E                     i2u235_41:
  4680  00036E  CFDB FFE3          	movff	plusw2,plusw1
  4681  000372  06E8               	decf	wreg,f,c
  4682  000374  E2FC               	bc	i2u235_41
  4683                           
  4684                           ;LED-API.c: 102: char symbolArrowLeft[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3}, {6,
      +                          3},{7,3},{8,3}, {1,4},{2,5},{3,6},{1,2},{2,1},{3,0}};
  4685  000376  EE22  F0A6         	lfsr	2,drawSymbol@F3242
  4686  00037A  EE10  F080         	lfsr	1,i2drawSymbol@symbolArrowLeft
  4687  00037E  0E1D               	movlw	29
  4688  000380                     i2u236_41:
  4689  000380  CFDB FFE3          	movff	plusw2,plusw1
  4690  000384  06E8               	decf	wreg,f,c
  4691  000386  E2FC               	bc	i2u236_41
  4692                           
  4693                           ;LED-API.c: 104: switch(chosenSymbol)
  4694  000388  D110               	goto	i2l2514
  4695  00038A                     i2l2428:
  4696                           
  4697                           ;LED-API.c: 109: for(unsigned char i = 0; i < 12; i++)
  4698  00038A  0E00               	movlw	0
  4699  00038C  0100               	movlb	0	; () banked
  4700  00038E  6FFE               	movwf	i2drawSymbol@i& (0+255),b
  4701  000390                     i2l2430:
  4702                           
  4703                           ; BSR set to: 0
  4704  000390  0E0B               	movlw	11
  4705  000392  0100               	movlb	0	; () banked
  4706  000394  65FE               	cpfsgt	i2drawSymbol@i& (0+255),b
  4707  000396  D001               	goto	i2l2434
  4708  000398  0012               	return	
  4709  00039A                     i2l2434:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;LED-API.c: 110: {
  4713                           ;LED-API.c: 111: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  4714  00039A  0100               	movlb	0	; () banked
  4715  00039C  51FE               	movf	i2drawSymbol@i& (0+255),w,b
  4716  00039E  0D02               	mullw	2
  4717  0003A0  0E00               	movlw	low i2drawSymbol@symbolOne
  4718  0003A2  24F3               	addwf	prodl,w,c
  4719  0003A4  6ED9               	movwf	fsr2l,c
  4720  0003A6  0E01               	movlw	high i2drawSymbol@symbolOne
  4721  0003A8  20F4               	addwfc	prodh,w,c
  4722  0003AA  6EDA               	movwf	fsr2h,c
  4723  0003AC  50DF               	movf	indf2,w,c
  4724  0003AE  2405               	addwf	i2drawSymbol@offSetX,w,c
  4725  0003B0  6E01               	movwf	i2on@row,c
  4726  0003B2  0100               	movlb	0	; () banked
  4727  0003B4  51FE               	movf	i2drawSymbol@i& (0+255),w,b
  4728  0003B6  0D02               	mullw	2
  4729  0003B8  0E01               	movlw	1
  4730  0003BA  26F3               	addwf	prodl,f,c
  4731  0003BC  0E00               	movlw	0
  4732  0003BE  22F4               	addwfc	prodh,f,c
  4733  0003C0  0E00               	movlw	low i2drawSymbol@symbolOne
  4734  0003C2  24F3               	addwf	prodl,w,c
  4735  0003C4  6ED9               	movwf	fsr2l,c
  4736  0003C6  0E01               	movlw	high i2drawSymbol@symbolOne
  4737  0003C8  20F4               	addwfc	prodh,w,c
  4738  0003CA  6EDA               	movwf	fsr2h,c
  4739  0003CC  50DF               	movf	indf2,w,c
  4740  0003CE  EC08  F008         	call	i2_on
  4741  0003D2  0100               	movlb	0	; () banked
  4742  0003D4  2BFE               	incf	i2drawSymbol@i& (0+255),f,b
  4743  0003D6  D7DC               	goto	i2l2430
  4744  0003D8                     i2l2440:
  4745                           
  4746                           ;LED-API.c: 117: for(unsigned char i = 0; i < 14; i++)
  4747  0003D8  0E00               	movlw	0
  4748  0003DA  0100               	movlb	0	; () banked
  4749  0003DC  6FFF               	movwf	i2drawSymbol@i_82& (0+255),b
  4750  0003DE                     i2l2442:
  4751                           
  4752                           ; BSR set to: 0
  4753  0003DE  0E0D               	movlw	13
  4754  0003E0  0100               	movlb	0	; () banked
  4755  0003E2  65FF               	cpfsgt	i2drawSymbol@i_82& (0+255),b
  4756  0003E4  D001               	goto	i2l2446
  4757  0003E6  0012               	return	
  4758  0003E8                     i2l2446:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;LED-API.c: 118: {
  4762                           ;LED-API.c: 119: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  4763  0003E8  0100               	movlb	0	; () banked
  4764  0003EA  51FF               	movf	i2drawSymbol@i_82& (0+255),w,b
  4765  0003EC  0D02               	mullw	2
  4766  0003EE  0EE2               	movlw	low i2drawSymbol@symbolTwo
  4767  0003F0  24F3               	addwf	prodl,w,c
  4768  0003F2  6ED9               	movwf	fsr2l,c
  4769  0003F4  0E00               	movlw	high i2drawSymbol@symbolTwo
  4770  0003F6  20F4               	addwfc	prodh,w,c
  4771  0003F8  6EDA               	movwf	fsr2h,c
  4772  0003FA  50DF               	movf	indf2,w,c
  4773  0003FC  2405               	addwf	i2drawSymbol@offSetX,w,c
  4774  0003FE  6E01               	movwf	i2on@row,c
  4775  000400  0100               	movlb	0	; () banked
  4776  000402  51FF               	movf	i2drawSymbol@i_82& (0+255),w,b
  4777  000404  0D02               	mullw	2
  4778  000406  0E01               	movlw	1
  4779  000408  26F3               	addwf	prodl,f,c
  4780  00040A  0E00               	movlw	0
  4781  00040C  22F4               	addwfc	prodh,f,c
  4782  00040E  0EE2               	movlw	low i2drawSymbol@symbolTwo
  4783  000410  24F3               	addwf	prodl,w,c
  4784  000412  6ED9               	movwf	fsr2l,c
  4785  000414  0E00               	movlw	high i2drawSymbol@symbolTwo
  4786  000416  20F4               	addwfc	prodh,w,c
  4787  000418  6EDA               	movwf	fsr2h,c
  4788  00041A  50DF               	movf	indf2,w,c
  4789  00041C  EC08  F008         	call	i2_on
  4790  000420  0100               	movlb	0	; () banked
  4791  000422  2BFF               	incf	i2drawSymbol@i_82& (0+255),f,b
  4792  000424  D7DC               	goto	i2l2442
  4793  000426                     i2l2452:
  4794                           
  4795                           ;LED-API.c: 125: for(unsigned char i = 0; i < 12; i++)
  4796  000426  0E00               	movlw	0
  4797  000428  0101               	movlb	1	; () banked
  4798  00042A  6F30               	movwf	i2drawSymbol@i_83& (0+255),b
  4799  00042C                     i2l2454:
  4800                           
  4801                           ; BSR set to: 1
  4802  00042C  0E0B               	movlw	11
  4803  00042E  0101               	movlb	1	; () banked
  4804  000430  6530               	cpfsgt	i2drawSymbol@i_83& (0+255),b
  4805  000432  D001               	goto	i2l2458
  4806  000434  0012               	return	
  4807  000436                     i2l2458:
  4808                           
  4809                           ; BSR set to: 1
  4810                           ;LED-API.c: 126: {
  4811                           ;LED-API.c: 127: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  4812  000436  0101               	movlb	1	; () banked
  4813  000438  5130               	movf	i2drawSymbol@i_83& (0+255),w,b
  4814  00043A  0D02               	mullw	2
  4815  00043C  0E18               	movlw	low i2drawSymbol@symbolThree
  4816  00043E  24F3               	addwf	prodl,w,c
  4817  000440  6ED9               	movwf	fsr2l,c
  4818  000442  0E01               	movlw	high i2drawSymbol@symbolThree
  4819  000444  20F4               	addwfc	prodh,w,c
  4820  000446  6EDA               	movwf	fsr2h,c
  4821  000448  50DF               	movf	indf2,w,c
  4822  00044A  2405               	addwf	i2drawSymbol@offSetX,w,c
  4823  00044C  6E01               	movwf	i2on@row,c
  4824  00044E  0101               	movlb	1	; () banked
  4825  000450  5130               	movf	i2drawSymbol@i_83& (0+255),w,b
  4826  000452  0D02               	mullw	2
  4827  000454  0E01               	movlw	1
  4828  000456  26F3               	addwf	prodl,f,c
  4829  000458  0E00               	movlw	0
  4830  00045A  22F4               	addwfc	prodh,f,c
  4831  00045C  0E18               	movlw	low i2drawSymbol@symbolThree
  4832  00045E  24F3               	addwf	prodl,w,c
  4833  000460  6ED9               	movwf	fsr2l,c
  4834  000462  0E01               	movlw	high i2drawSymbol@symbolThree
  4835  000464  20F4               	addwfc	prodh,w,c
  4836  000466  6EDA               	movwf	fsr2h,c
  4837  000468  50DF               	movf	indf2,w,c
  4838  00046A  EC08  F008         	call	i2_on
  4839  00046E  0101               	movlb	1	; () banked
  4840  000470  2B30               	incf	i2drawSymbol@i_83& (0+255),f,b
  4841  000472  D7DC               	goto	i2l2454
  4842  000474                     i2l2464:
  4843                           
  4844                           ;LED-API.c: 133: for(unsigned char i = 0; i < 34; i++)
  4845  000474  0E00               	movlw	0
  4846  000476  0101               	movlb	1	; () banked
  4847  000478  6F31               	movwf	i2drawSymbol@i_84& (0+255),b
  4848  00047A                     i2l2466:
  4849                           
  4850                           ; BSR set to: 1
  4851  00047A  0E21               	movlw	33
  4852  00047C  0101               	movlb	1	; () banked
  4853  00047E  6531               	cpfsgt	i2drawSymbol@i_84& (0+255),b
  4854  000480  D001               	goto	i2l2470
  4855  000482  0012               	return	
  4856  000484                     i2l2470:
  4857                           
  4858                           ; BSR set to: 1
  4859                           ;LED-API.c: 134: {
  4860                           ;LED-API.c: 135: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  4861  000484  0101               	movlb	1	; () banked
  4862  000486  5131               	movf	i2drawSymbol@i_84& (0+255),w,b
  4863  000488  0D02               	mullw	2
  4864  00048A  0E06               	movlw	low i2drawSymbol@symbolPlay
  4865  00048C  24F3               	addwf	prodl,w,c
  4866  00048E  6ED9               	movwf	fsr2l,c
  4867  000490  0E00               	movlw	high i2drawSymbol@symbolPlay
  4868  000492  20F4               	addwfc	prodh,w,c
  4869  000494  6EDA               	movwf	fsr2h,c
  4870  000496  50DF               	movf	indf2,w,c
  4871  000498  2405               	addwf	i2drawSymbol@offSetX,w,c
  4872  00049A  6E01               	movwf	i2on@row,c
  4873  00049C  0101               	movlb	1	; () banked
  4874  00049E  5131               	movf	i2drawSymbol@i_84& (0+255),w,b
  4875  0004A0  0D02               	mullw	2
  4876  0004A2  0E01               	movlw	1
  4877  0004A4  26F3               	addwf	prodl,f,c
  4878  0004A6  0E00               	movlw	0
  4879  0004A8  22F4               	addwfc	prodh,f,c
  4880  0004AA  0E06               	movlw	low i2drawSymbol@symbolPlay
  4881  0004AC  24F3               	addwf	prodl,w,c
  4882  0004AE  6ED9               	movwf	fsr2l,c
  4883  0004B0  0E00               	movlw	high i2drawSymbol@symbolPlay
  4884  0004B2  20F4               	addwfc	prodh,w,c
  4885  0004B4  6EDA               	movwf	fsr2h,c
  4886  0004B6  50DF               	movf	indf2,w,c
  4887  0004B8  EC08  F008         	call	i2_on
  4888  0004BC  0101               	movlb	1	; () banked
  4889  0004BE  2B31               	incf	i2drawSymbol@i_84& (0+255),f,b
  4890  0004C0  D7DC               	goto	i2l2466
  4891  0004C2                     i2l2476:
  4892                           
  4893                           ;LED-API.c: 141: for(unsigned char i = 0; i < 34; i++)
  4894  0004C2  0E00               	movlw	0
  4895  0004C4  0101               	movlb	1	; () banked
  4896  0004C6  6F32               	movwf	i2drawSymbol@i_85& (0+255),b
  4897  0004C8                     i2l2478:
  4898                           
  4899                           ; BSR set to: 1
  4900  0004C8  0E21               	movlw	33
  4901  0004CA  0101               	movlb	1	; () banked
  4902  0004CC  6532               	cpfsgt	i2drawSymbol@i_85& (0+255),b
  4903  0004CE  D001               	goto	i2l2482
  4904  0004D0  0012               	return	
  4905  0004D2                     i2l2482:
  4906                           
  4907                           ; BSR set to: 1
  4908                           ;LED-API.c: 142: {
  4909                           ;LED-API.c: 143: on(symbolGo[i][1], symbolGo[i][0]);
  4910  0004D2  0101               	movlb	1	; () banked
  4911  0004D4  5132               	movf	i2drawSymbol@i_85& (0+255),w,b
  4912  0004D6  0D02               	mullw	2
  4913  0004D8  0E9E               	movlw	low i2drawSymbol@symbolGo
  4914  0004DA  24F3               	addwf	prodl,w,c
  4915  0004DC  6ED9               	movwf	fsr2l,c
  4916  0004DE  0E00               	movlw	high i2drawSymbol@symbolGo
  4917  0004E0  20F4               	addwfc	prodh,w,c
  4918  0004E2  6EDA               	movwf	fsr2h,c
  4919  0004E4  50DF               	movf	indf2,w,c
  4920  0004E6  6E01               	movwf	i2on@row,c
  4921  0004E8  0101               	movlb	1	; () banked
  4922  0004EA  5132               	movf	i2drawSymbol@i_85& (0+255),w,b
  4923  0004EC  0D02               	mullw	2
  4924  0004EE  0E01               	movlw	1
  4925  0004F0  26F3               	addwf	prodl,f,c
  4926  0004F2  0E00               	movlw	0
  4927  0004F4  22F4               	addwfc	prodh,f,c
  4928  0004F6  0E9E               	movlw	low i2drawSymbol@symbolGo
  4929  0004F8  24F3               	addwf	prodl,w,c
  4930  0004FA  6ED9               	movwf	fsr2l,c
  4931  0004FC  0E00               	movlw	high i2drawSymbol@symbolGo
  4932  0004FE  20F4               	addwfc	prodh,w,c
  4933  000500  6EDA               	movwf	fsr2h,c
  4934  000502  50DF               	movf	indf2,w,c
  4935  000504  EC08  F008         	call	i2_on
  4936  000508  0101               	movlb	1	; () banked
  4937  00050A  2B32               	incf	i2drawSymbol@i_85& (0+255),f,b
  4938  00050C  D7DD               	goto	i2l2478
  4939  00050E                     i2l2488:
  4940                           
  4941                           ;LED-API.c: 147: for(unsigned char i = 0; i < 15; i++)
  4942  00050E  0E00               	movlw	0
  4943  000510  0101               	movlb	1	; () banked
  4944  000512  6F33               	movwf	i2drawSymbol@i_86& (0+255),b
  4945  000514                     i2l2490:
  4946                           
  4947                           ; BSR set to: 1
  4948  000514  0E0E               	movlw	14
  4949  000516  0101               	movlb	1	; () banked
  4950  000518  6533               	cpfsgt	i2drawSymbol@i_86& (0+255),b
  4951  00051A  D001               	goto	i2l2494
  4952  00051C  0012               	return	
  4953  00051E                     i2l2494:
  4954                           
  4955                           ; BSR set to: 1
  4956                           ;LED-API.c: 148: {
  4957                           ;LED-API.c: 149: on(symbolArrowLeft[i][1], symbolGo[i][0] + offSetX);
  4958  00051E  0101               	movlb	1	; () banked
  4959  000520  5133               	movf	i2drawSymbol@i_86& (0+255),w,b
  4960  000522  0D02               	mullw	2
  4961  000524  0E9E               	movlw	low i2drawSymbol@symbolGo
  4962  000526  24F3               	addwf	prodl,w,c
  4963  000528  6ED9               	movwf	fsr2l,c
  4964  00052A  0E00               	movlw	high i2drawSymbol@symbolGo
  4965  00052C  20F4               	addwfc	prodh,w,c
  4966  00052E  6EDA               	movwf	fsr2h,c
  4967  000530  50DF               	movf	indf2,w,c
  4968  000532  2405               	addwf	i2drawSymbol@offSetX,w,c
  4969  000534  6E01               	movwf	i2on@row,c
  4970  000536  0101               	movlb	1	; () banked
  4971  000538  5133               	movf	i2drawSymbol@i_86& (0+255),w,b
  4972  00053A  0D02               	mullw	2
  4973  00053C  0E01               	movlw	1
  4974  00053E  26F3               	addwf	prodl,f,c
  4975  000540  0E00               	movlw	0
  4976  000542  22F4               	addwfc	prodh,f,c
  4977  000544  0E80               	movlw	low i2drawSymbol@symbolArrowLeft
  4978  000546  24F3               	addwf	prodl,w,c
  4979  000548  6ED9               	movwf	fsr2l,c
  4980  00054A  0E00               	movlw	high i2drawSymbol@symbolArrowLeft
  4981  00054C  20F4               	addwfc	prodh,w,c
  4982  00054E  6EDA               	movwf	fsr2h,c
  4983  000550  50DF               	movf	indf2,w,c
  4984  000552  EC08  F008         	call	i2_on
  4985  000556  0101               	movlb	1	; () banked
  4986  000558  2B33               	incf	i2drawSymbol@i_86& (0+255),f,b
  4987  00055A  D7DC               	goto	i2l2490
  4988  00055C                     i2l2500:
  4989                           
  4990                           ;LED-API.c: 153: for(unsigned char i = 0; i < 15; i++)
  4991  00055C  0E00               	movlw	0
  4992  00055E  0101               	movlb	1	; () banked
  4993  000560  6F34               	movwf	i2drawSymbol@i_87& (0+255),b
  4994  000562                     i2l2502:
  4995                           
  4996                           ; BSR set to: 1
  4997  000562  0E0E               	movlw	14
  4998  000564  0101               	movlb	1	; () banked
  4999  000566  6534               	cpfsgt	i2drawSymbol@i_87& (0+255),b
  5000  000568  D001               	goto	i2l2506
  5001  00056A  0012               	return	
  5002  00056C                     i2l2506:
  5003                           
  5004                           ; BSR set to: 1
  5005                           ;LED-API.c: 154: {
  5006                           ;LED-API.c: 155: on(symbolArrowRight[i][1], symbolGo[i][0]+ offSetX);
  5007  00056C  0101               	movlb	1	; () banked
  5008  00056E  5134               	movf	i2drawSymbol@i_87& (0+255),w,b
  5009  000570  0D02               	mullw	2
  5010  000572  0E9E               	movlw	low i2drawSymbol@symbolGo
  5011  000574  24F3               	addwf	prodl,w,c
  5012  000576  6ED9               	movwf	fsr2l,c
  5013  000578  0E00               	movlw	high i2drawSymbol@symbolGo
  5014  00057A  20F4               	addwfc	prodh,w,c
  5015  00057C  6EDA               	movwf	fsr2h,c
  5016  00057E  50DF               	movf	indf2,w,c
  5017  000580  2405               	addwf	i2drawSymbol@offSetX,w,c
  5018  000582  6E01               	movwf	i2on@row,c
  5019  000584  0101               	movlb	1	; () banked
  5020  000586  5134               	movf	i2drawSymbol@i_87& (0+255),w,b
  5021  000588  0D02               	mullw	2
  5022  00058A  0E01               	movlw	1
  5023  00058C  26F3               	addwf	prodl,f,c
  5024  00058E  0E00               	movlw	0
  5025  000590  22F4               	addwfc	prodh,f,c
  5026  000592  0E4A               	movlw	low i2drawSymbol@symbolArrowRight
  5027  000594  24F3               	addwf	prodl,w,c
  5028  000596  6ED9               	movwf	fsr2l,c
  5029  000598  0E00               	movlw	high i2drawSymbol@symbolArrowRight
  5030  00059A  20F4               	addwfc	prodh,w,c
  5031  00059C  6EDA               	movwf	fsr2h,c
  5032  00059E  50DF               	movf	indf2,w,c
  5033  0005A0  EC08  F008         	call	i2_on
  5034  0005A4  0101               	movlb	1	; () banked
  5035  0005A6  2B34               	incf	i2drawSymbol@i_87& (0+255),f,b
  5036  0005A8  D7DC               	goto	i2l2502
  5037  0005AA                     i2l2514:
  5038  0005AA  5068               	movf	i2drawSymbol@chosenSymbol,w,c
  5039                           
  5040                           ; Switch size 1, requested type "space"
  5041                           ; Number of cases is 7, Range of values is 1 to 7
  5042                           ; switch strategies available:
  5043                           ; Name         Instructions Cycles
  5044                           ; simple_byte           22    12 (average)
  5045                           ;	Chosen strategy is simple_byte
  5046  0005AC  0A01               	xorlw	1	; case 1
  5047  0005AE  B4D8               	btfsc	status,2,c
  5048  0005B0  D6EC               	goto	i2l2428
  5049  0005B2  0A03               	xorlw	3	; case 2
  5050  0005B4  B4D8               	btfsc	status,2,c
  5051  0005B6  D710               	goto	i2l2440
  5052  0005B8  0A01               	xorlw	1	; case 3
  5053  0005BA  B4D8               	btfsc	status,2,c
  5054  0005BC  D734               	goto	i2l2452
  5055  0005BE  0A07               	xorlw	7	; case 4
  5056  0005C0  B4D8               	btfsc	status,2,c
  5057  0005C2  D758               	goto	i2l2464
  5058  0005C4  0A01               	xorlw	1	; case 5
  5059  0005C6  B4D8               	btfsc	status,2,c
  5060  0005C8  D77C               	goto	i2l2476
  5061  0005CA  0A03               	xorlw	3	; case 6
  5062  0005CC  B4D8               	btfsc	status,2,c
  5063  0005CE  D79F               	goto	i2l2488
  5064  0005D0  0A01               	xorlw	1	; case 7
  5065  0005D2  A4D8               	btfss	status,2,c
  5066  0005D4  0012               	return	
  5067  0005D6  D7C2               	goto	i2l2500
  5068  0005D8                     __end_ofi2_drawSymbol:
  5069                           	opt stack 0
  5070                           pclatu	equ	0xFFB
  5071                           pclath	equ	0xFFA
  5072                           tblptru	equ	0xFF8
  5073                           tblptrh	equ	0xFF7
  5074                           tblptrl	equ	0xFF6
  5075                           tablat	equ	0xFF5
  5076                           prodh	equ	0xFF4
  5077                           prodl	equ	0xFF3
  5078                           intcon	equ	0xFF2
  5079                           postinc0	equ	0xFEE
  5080                           fsr0h	equ	0xFEA
  5081                           fsr0l	equ	0xFE9
  5082                           wreg	equ	0xFE8
  5083                           postdec1	equ	0xFE5
  5084                           plusw1	equ	0xFE3
  5085                           fsr1h	equ	0xFE2
  5086                           fsr1l	equ	0xFE1
  5087                           indf2	equ	0xFDF
  5088                           postinc2	equ	0xFDE
  5089                           plusw2	equ	0xFDB
  5090                           fsr2h	equ	0xFDA
  5091                           fsr2l	equ	0xFD9
  5092                           status	equ	0xFD8
  5093                           
  5094 ;; *************** function i2_on *****************
  5095 ;; Defined at:
  5096 ;;		line 43 in file "Source/LED-API.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  column          1    wreg     unsigned char 
  5099 ;;  row             1    0[COMRAM] unsigned char 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  column          1    3[COMRAM] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5111 ;;      Params:         1       0       0       0       0       0       0
  5112 ;;      Locals:         1       0       0       0       0       0       0
  5113 ;;      Temps:          2       0       0       0       0       0       0
  5114 ;;      Totals:         4       0       0       0       0       0       0
  5115 ;;Total ram usage:        4 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_writePong
  5121 ;;		i2_drawSymbol
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text24
  5126  001010                     __ptext24:
  5127                           	opt stack 0
  5128  001010                     i2_on:
  5129                           	opt stack 24
  5130                           
  5131                           ;incstack = 0
  5132                           ;i2on@column stored from wreg
  5133  001010  6E04               	movwf	i2on@column,c
  5134                           
  5135                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  5136  001012  0E0F               	movlw	15
  5137  001014  6401               	cpfsgt	i2on@row,c
  5138  001016  D001               	goto	i2l2400
  5139  001018  0012               	return	
  5140  00101A                     i2l2400:
  5141                           
  5142                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  5143  00101A  0E07               	movlw	7
  5144  00101C  6404               	cpfsgt	i2on@column,c
  5145  00101E  D001               	goto	i2l2404
  5146  001020  0012               	return	
  5147  001022                     i2l2404:
  5148                           
  5149                           ;LED-API.c: 50: pixels[column][row] = 1;
  5150  001022  5004               	movf	i2on@column,w,c
  5151  001024  0D10               	mullw	16
  5152  001026  0E00               	movlw	low _pixels
  5153  001028  6E02               	movwf	??i2_on& (0+255),c
  5154  00102A  0E03               	movlw	high _pixels
  5155  00102C  6E03               	movwf	(??i2_on+1)& (0+255),c
  5156  00102E  50F3               	movf	prodl,w,c
  5157  001030  2602               	addwf	??i2_on,f,c
  5158  001032  50F4               	movf	prodh,w,c
  5159  001034  2203               	addwfc	??i2_on+1,f,c
  5160  001036  5001               	movf	i2on@row,w,c
  5161  001038  0D01               	mullw	1
  5162  00103A  50F3               	movf	prodl,w,c
  5163  00103C  2402               	addwf	??i2_on,w,c
  5164  00103E  6ED9               	movwf	fsr2l,c
  5165  001040  50F4               	movf	prodh,w,c
  5166  001042  2003               	addwfc	??i2_on+1,w,c
  5167  001044  6EDA               	movwf	fsr2h,c
  5168  001046  0E01               	movlw	1
  5169  001048  6EDF               	movwf	indf2,c
  5170  00104A  0012               	return		;funcret
  5171  00104C                     __end_ofi2_on:
  5172                           	opt stack 0
  5173                           pclatu	equ	0xFFB
  5174                           pclath	equ	0xFFA
  5175                           tblptru	equ	0xFF8
  5176                           tblptrh	equ	0xFF7
  5177                           tblptrl	equ	0xFF6
  5178                           tablat	equ	0xFF5
  5179                           prodh	equ	0xFF4
  5180                           prodl	equ	0xFF3
  5181                           intcon	equ	0xFF2
  5182                           postinc0	equ	0xFEE
  5183                           fsr0h	equ	0xFEA
  5184                           fsr0l	equ	0xFE9
  5185                           wreg	equ	0xFE8
  5186                           postdec1	equ	0xFE5
  5187                           plusw1	equ	0xFE3
  5188                           fsr1h	equ	0xFE2
  5189                           fsr1l	equ	0xFE1
  5190                           indf2	equ	0xFDF
  5191                           postinc2	equ	0xFDE
  5192                           plusw2	equ	0xFDB
  5193                           fsr2h	equ	0xFDA
  5194                           fsr2l	equ	0xFD9
  5195                           status	equ	0xFD8
  5196                           
  5197 ;; *************** function _getNextPosition *****************
  5198 ;; Defined at:
  5199 ;;		line 167 in file "main.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5213 ;;      Params:         0       0       0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0
  5216 ;;      Totals:         0       0       0       0       0       0       0
  5217 ;;Total ram usage:        0 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_checkNextPosition
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text25
  5227  000A54                     __ptext25:
  5228                           	opt stack 0
  5229  000A54                     _getNextPosition:
  5230                           	opt stack 24
  5231                           
  5232                           ;main.c: 169: switch(_ball.bDirection)
  5233                           
  5234                           ;incstack = 0
  5235  000A54  D02E               	goto	i2l2052
  5236  000A56                     i2l2038:
  5237                           
  5238                           ;main.c: 172: _nextPos[0] = _ball.bPos[0] + 1;
  5239  000A56  0101               	movlb	1	; () banked
  5240  000A58  29C1               	incf	__ball& (0+255),w,b
  5241  000A5A  0101               	movlb	1	; () banked
  5242  000A5C  6FC4               	movwf	__nextPos& (0+255),b
  5243                           
  5244                           ;main.c: 173: _nextPos[1] = _ball.bPos[1] + 1;
  5245  000A5E  0101               	movlb	1	; () banked
  5246  000A60  29C2               	incf	(__ball+1)& (0+255),w,b
  5247  000A62  0101               	movlb	1	; () banked
  5248  000A64  6FC5               	movwf	(__nextPos+1)& (0+255),b
  5249                           
  5250                           ;main.c: 174: break;
  5251  000A66  0012               	return	
  5252  000A68                     i2l2040:
  5253                           
  5254                           ; BSR set to: 1
  5255                           ;main.c: 176: _nextPos[0] = _ball.bPos[0] + 1;
  5256  000A68  0101               	movlb	1	; () banked
  5257  000A6A  29C1               	incf	__ball& (0+255),w,b
  5258  000A6C  0101               	movlb	1	; () banked
  5259  000A6E  6FC4               	movwf	__nextPos& (0+255),b
  5260                           
  5261                           ;main.c: 177: break;
  5262  000A70  0012               	return	
  5263  000A72                     i2l2042:
  5264                           
  5265                           ; BSR set to: 1
  5266                           ;main.c: 179: _nextPos[0] = _ball.bPos[0] + 1;
  5267  000A72  0101               	movlb	1	; () banked
  5268  000A74  29C1               	incf	__ball& (0+255),w,b
  5269  000A76  0101               	movlb	1	; () banked
  5270  000A78  6FC4               	movwf	__nextPos& (0+255),b
  5271                           
  5272                           ;main.c: 180: _nextPos[1] = _ball.bPos[1] - 1;
  5273  000A7A  0101               	movlb	1	; () banked
  5274  000A7C  05C2               	decf	(__ball+1)& (0+255),w,b
  5275  000A7E  0101               	movlb	1	; () banked
  5276  000A80  6FC5               	movwf	(__nextPos+1)& (0+255),b
  5277                           
  5278                           ;main.c: 181: break;
  5279  000A82  0012               	return	
  5280  000A84                     i2l2044:
  5281                           
  5282                           ; BSR set to: 1
  5283                           ;main.c: 183: _nextPos[0] = _ball.bPos[0] - 1;
  5284  000A84  0101               	movlb	1	; () banked
  5285  000A86  05C1               	decf	__ball& (0+255),w,b
  5286  000A88  0101               	movlb	1	; () banked
  5287  000A8A  6FC4               	movwf	__nextPos& (0+255),b
  5288                           
  5289                           ;main.c: 184: _nextPos[1] = _ball.bPos[1] - 1;
  5290  000A8C  0101               	movlb	1	; () banked
  5291  000A8E  05C2               	decf	(__ball+1)& (0+255),w,b
  5292  000A90  0101               	movlb	1	; () banked
  5293  000A92  6FC5               	movwf	(__nextPos+1)& (0+255),b
  5294                           
  5295                           ;main.c: 185: break;
  5296  000A94  0012               	return	
  5297  000A96                     i2l2046:
  5298                           
  5299                           ; BSR set to: 1
  5300                           ;main.c: 187: _nextPos[0] = _ball.bPos[0] - 1;
  5301  000A96  0101               	movlb	1	; () banked
  5302  000A98  05C1               	decf	__ball& (0+255),w,b
  5303  000A9A  0101               	movlb	1	; () banked
  5304  000A9C  6FC4               	movwf	__nextPos& (0+255),b
  5305                           
  5306                           ;main.c: 188: break;
  5307  000A9E  0012               	return	
  5308  000AA0                     i2l2048:
  5309                           
  5310                           ; BSR set to: 1
  5311                           ;main.c: 190: _nextPos[0] = _ball.bPos[0] - 1;
  5312  000AA0  0101               	movlb	1	; () banked
  5313  000AA2  05C1               	decf	__ball& (0+255),w,b
  5314  000AA4  0101               	movlb	1	; () banked
  5315  000AA6  6FC4               	movwf	__nextPos& (0+255),b
  5316                           
  5317                           ;main.c: 191: _nextPos[1] = _ball.bPos[1] + 1;
  5318  000AA8  0101               	movlb	1	; () banked
  5319  000AAA  29C2               	incf	(__ball+1)& (0+255),w,b
  5320  000AAC  0101               	movlb	1	; () banked
  5321  000AAE  6FC5               	movwf	(__nextPos+1)& (0+255),b
  5322                           
  5323                           ; BSR set to: 1
  5324                           ;main.c: 193: }
  5325                           
  5326                           ;main.c: 192: break;
  5327  000AB0  0012               	return	
  5328  000AB2                     i2l2052:
  5329  000AB2  0101               	movlb	1	; () banked
  5330  000AB4  51C3               	movf	(__ball+2)& (0+255),w,b
  5331                           
  5332                           ; Switch size 1, requested type "space"
  5333                           ; Number of cases is 6, Range of values is 1 to 6
  5334                           ; switch strategies available:
  5335                           ; Name         Instructions Cycles
  5336                           ; simple_byte           19    10 (average)
  5337                           ;	Chosen strategy is simple_byte
  5338  000AB6  0A01               	xorlw	1	; case 1
  5339  000AB8  B4D8               	btfsc	status,2,c
  5340  000ABA  D7CD               	goto	i2l2038
  5341  000ABC  0A03               	xorlw	3	; case 2
  5342  000ABE  B4D8               	btfsc	status,2,c
  5343  000AC0  D7D3               	goto	i2l2040
  5344  000AC2  0A01               	xorlw	1	; case 3
  5345  000AC4  B4D8               	btfsc	status,2,c
  5346  000AC6  D7D5               	goto	i2l2042
  5347  000AC8  0A07               	xorlw	7	; case 4
  5348  000ACA  B4D8               	btfsc	status,2,c
  5349  000ACC  D7DB               	goto	i2l2044
  5350  000ACE  0A01               	xorlw	1	; case 5
  5351  000AD0  B4D8               	btfsc	status,2,c
  5352  000AD2  D7E1               	goto	i2l2046
  5353  000AD4  0A03               	xorlw	3	; case 6
  5354  000AD6  A4D8               	btfss	status,2,c
  5355  000AD8  0012               	return	
  5356  000ADA  D7E2               	goto	i2l2048
  5357  000ADC                     __end_of_getNextPosition:
  5358                           	opt stack 0
  5359                           pclatu	equ	0xFFB
  5360                           pclath	equ	0xFFA
  5361                           tblptru	equ	0xFF8
  5362                           tblptrh	equ	0xFF7
  5363                           tblptrl	equ	0xFF6
  5364                           tablat	equ	0xFF5
  5365                           prodh	equ	0xFF4
  5366                           prodl	equ	0xFF3
  5367                           intcon	equ	0xFF2
  5368                           postinc0	equ	0xFEE
  5369                           fsr0h	equ	0xFEA
  5370                           fsr0l	equ	0xFE9
  5371                           wreg	equ	0xFE8
  5372                           postdec1	equ	0xFE5
  5373                           plusw1	equ	0xFE3
  5374                           fsr1h	equ	0xFE2
  5375                           fsr1l	equ	0xFE1
  5376                           indf2	equ	0xFDF
  5377                           postinc2	equ	0xFDE
  5378                           plusw2	equ	0xFDB
  5379                           fsr2h	equ	0xFDA
  5380                           fsr2l	equ	0xFD9
  5381                           status	equ	0xFD8
  5382                           
  5383 ;; *************** function ___lwdiv *****************
  5384 ;; Defined at:
  5385 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  dividend        2    0[COMRAM] unsigned int 
  5388 ;;  divisor         2    2[COMRAM] unsigned int 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  quotient        2    4[COMRAM] unsigned int 
  5391 ;;  counter         1    6[COMRAM] unsigned char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  2    0[COMRAM] unsigned int 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5401 ;;      Params:         4       0       0       0       0       0       0
  5402 ;;      Locals:         3       0       0       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0
  5404 ;;      Totals:         7       0       0       0       0       0       0
  5405 ;;Total ram usage:        7 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_ISR
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text26
  5415  000E72                     __ptext26:
  5416                           	opt stack 0
  5417  000E72                     ___lwdiv:
  5418                           	opt stack 25
  5419                           
  5420                           ; BSR set to: 1
  5421                           ;incstack = 0
  5422  000E72  0E00               	movlw	0
  5423  000E74  6E06               	movwf	___lwdiv@quotient+1,c
  5424  000E76  0E00               	movlw	0
  5425  000E78  6E05               	movwf	___lwdiv@quotient,c
  5426  000E7A  5003               	movf	___lwdiv@divisor,w,c
  5427  000E7C  1004               	iorwf	___lwdiv@divisor+1,w,c
  5428  000E7E  B4D8               	btfsc	status,2,c
  5429  000E80  D01C               	goto	i2l677
  5430  000E82  0E01               	movlw	1
  5431  000E84  6E07               	movwf	___lwdiv@counter,c
  5432  000E86  D004               	goto	i2l2294
  5433  000E88                     i2l2292:
  5434  000E88  90D8               	bcf	status,0,c
  5435  000E8A  3603               	rlcf	___lwdiv@divisor,f,c
  5436  000E8C  3604               	rlcf	___lwdiv@divisor+1,f,c
  5437  000E8E  2A07               	incf	___lwdiv@counter,f,c
  5438  000E90                     i2l2294:
  5439  000E90  AE04               	btfss	___lwdiv@divisor+1,7,c
  5440  000E92  D7FA               	goto	i2l2292
  5441  000E94                     i2l2296:
  5442  000E94  90D8               	bcf	status,0,c
  5443  000E96  3605               	rlcf	___lwdiv@quotient,f,c
  5444  000E98  3606               	rlcf	___lwdiv@quotient+1,f,c
  5445  000E9A  5003               	movf	___lwdiv@divisor,w,c
  5446  000E9C  5C01               	subwf	___lwdiv@dividend,w,c
  5447  000E9E  5004               	movf	___lwdiv@divisor+1,w,c
  5448  000EA0  5802               	subwfb	___lwdiv@dividend+1,w,c
  5449  000EA2  A0D8               	btfss	status,0,c
  5450  000EA4  D005               	goto	i2l2304
  5451  000EA6  5003               	movf	___lwdiv@divisor,w,c
  5452  000EA8  5E01               	subwf	___lwdiv@dividend,f,c
  5453  000EAA  5004               	movf	___lwdiv@divisor+1,w,c
  5454  000EAC  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5455  000EAE  8005               	bsf	___lwdiv@quotient,0,c
  5456  000EB0                     i2l2304:
  5457  000EB0  90D8               	bcf	status,0,c
  5458  000EB2  3204               	rrcf	___lwdiv@divisor+1,f,c
  5459  000EB4  3203               	rrcf	___lwdiv@divisor,f,c
  5460  000EB6  2E07               	decfsz	___lwdiv@counter,f,c
  5461  000EB8  D7ED               	goto	i2l2296
  5462  000EBA                     i2l677:
  5463  000EBA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5464  000EBE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5465  000EC2  0012               	return		;funcret
  5466  000EC4                     __end_of___lwdiv:
  5467                           	opt stack 0
  5468  0000                     pclatu	equ	0xFFB
  5469                           pclath	equ	0xFFA
  5470                           tblptru	equ	0xFF8
  5471                           tblptrh	equ	0xFF7
  5472                           tblptrl	equ	0xFF6
  5473                           tablat	equ	0xFF5
  5474                           prodh	equ	0xFF4
  5475                           prodl	equ	0xFF3
  5476                           intcon	equ	0xFF2
  5477                           postinc0	equ	0xFEE
  5478                           fsr0h	equ	0xFEA
  5479                           fsr0l	equ	0xFE9
  5480                           wreg	equ	0xFE8
  5481                           postdec1	equ	0xFE5
  5482                           plusw1	equ	0xFE3
  5483                           fsr1h	equ	0xFE2
  5484                           fsr1l	equ	0xFE1
  5485                           indf2	equ	0xFDF
  5486                           postinc2	equ	0xFDE
  5487                           plusw2	equ	0xFDB
  5488                           fsr2h	equ	0xFDA
  5489                           fsr2l	equ	0xFD9
  5490                           status	equ	0xFD8
  5491                           pclatu	equ	0xFFB
  5492                           pclath	equ	0xFFA
  5493                           tblptru	equ	0xFF8
  5494                           tblptrh	equ	0xFF7
  5495                           tblptrl	equ	0xFF6
  5496                           tablat	equ	0xFF5
  5497                           prodh	equ	0xFF4
  5498                           prodl	equ	0xFF3
  5499                           intcon	equ	0xFF2
  5500                           postinc0	equ	0xFEE
  5501                           fsr0h	equ	0xFEA
  5502                           fsr0l	equ	0xFE9
  5503                           wreg	equ	0xFE8
  5504                           postdec1	equ	0xFE5
  5505                           plusw1	equ	0xFE3
  5506                           fsr1h	equ	0xFE2
  5507                           fsr1l	equ	0xFE1
  5508                           indf2	equ	0xFDF
  5509                           postinc2	equ	0xFDE
  5510                           plusw2	equ	0xFDB
  5511                           fsr2h	equ	0xFDA
  5512                           fsr2l	equ	0xFD9
  5513                           status	equ	0xFD8
  5514                           
  5515                           	psect	rparam
  5516  0000                     pclatu	equ	0xFFB
  5517                           pclath	equ	0xFFA
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           prodh	equ	0xFF4
  5523                           prodl	equ	0xFF3
  5524                           intcon	equ	0xFF2
  5525                           postinc0	equ	0xFEE
  5526                           fsr0h	equ	0xFEA
  5527                           fsr0l	equ	0xFE9
  5528                           wreg	equ	0xFE8
  5529                           postdec1	equ	0xFE5
  5530                           plusw1	equ	0xFE3
  5531                           fsr1h	equ	0xFE2
  5532                           fsr1l	equ	0xFE1
  5533                           indf2	equ	0xFDF
  5534                           postinc2	equ	0xFDE
  5535                           plusw2	equ	0xFDB
  5536                           fsr2h	equ	0xFDA
  5537                           fsr2l	equ	0xFD9
  5538                           status	equ	0xFD8
  5539                           
  5540                           	psect	temp
  5541  00007F                     btemp:
  5542                           	opt stack 0
  5543  00007F                     	ds	1
  5544  0000                     int$flags	set	btemp
  5545                           pclatu	equ	0xFFB
  5546                           pclath	equ	0xFFA
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           prodh	equ	0xFF4
  5552                           prodl	equ	0xFF3
  5553                           intcon	equ	0xFF2
  5554                           postinc0	equ	0xFEE
  5555                           fsr0h	equ	0xFEA
  5556                           fsr0l	equ	0xFE9
  5557                           wreg	equ	0xFE8
  5558                           postdec1	equ	0xFE5
  5559                           plusw1	equ	0xFE3
  5560                           fsr1h	equ	0xFE2
  5561                           fsr1l	equ	0xFE1
  5562                           indf2	equ	0xFDF
  5563                           postinc2	equ	0xFDE
  5564                           plusw2	equ	0xFDB
  5565                           fsr2h	equ	0xFDA
  5566                           fsr2l	equ	0xFD9
  5567                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        274
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    124     126
    BANK0           128    128     128
    BANK1           256    159     200
    BANK2           256    136     248
    BANK3           256     48     244
    BANK4           256      0      68
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_checkNextPosition
    _writePong->_off
    _writePong->i2_on
    _checkNextPosition->i2_startPong
    i2_initializePong->i2_startPong
    i2_startPong->i2_drawSymbol
    i2_refresh->i2_setColHigh
    i2_refresh->i2_setRowHigh
    i2_drawSymbol->i2_on

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK1

    _startPong->_drawSymbol
    _refresh->_setColHigh
    _refresh->_setRowHigh
    _drawSymbol->_on
    _initializeLED->_turnAllOff

Critical Paths under _ISR in BANK1

    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK2

    _initializePong->_startPong
    _startPong->_drawSymbol

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3641
                         _initialize
                      _initializeLED
                     _initializePong
                            _refresh
 ---------------------------------------------------------------------------------
 (1) _initializePong                                       0     0      0    3059
                          _startPong
 ---------------------------------------------------------------------------------
 (2) _startPong                                            2     2      0    3059
                                            134 BANK2      2     2      0
                         _drawSymbol
                            _refresh
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (1) _refresh                                              5     5      0     384
                                             59 BANK1      5     5      0
                             _allOff
                         _setColHigh
                         _setRowHigh
 ---------------------------------------------------------------------------------
 (2) _setRowHigh                                           3     3      0      93
                                             56 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setColHigh                                           3     3      0      31
                                             56 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _allOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drawSymbol                                         281   280      1    2409
                                             60 BANK1     99    98      1
                                              0 BANK2    134   134      0
                                              0 BANK3     48    48      0
                                 _on
 ---------------------------------------------------------------------------------
 (4) _on                                                   4     3      1     597
                                             56 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _initializeLED                                        0     0      0     198
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _turnAllOff                                           4     4      0     198
                                             56 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 17    17      0    9538
                                            110 COMRAM    14    14      0
                                             53 BANK1      3     3      0
                            ___lwdiv
                  _checkNextPosition
                          _writePong
 ---------------------------------------------------------------------------------
 (6) _writePong                                            0     0      0     847
                                _off
                               i2_on
 ---------------------------------------------------------------------------------
 (7) _off                                                  4     3      1     303
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _checkNextPosition                                    4     4      0    8282
                                            106 COMRAM     4     4      0
                    _getNextPosition
                       i2_drawSymbol
                   i2_initializePong
                          i2_refresh
                        i2_startPong
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_initializePong                                     0     0      0    2738
                        i2_startPong
 ---------------------------------------------------------------------------------
 (7) i2_startPong                                          2     2      0    2738
                                            104 COMRAM     2     2      0
                       i2_drawSymbol
                          i2_refresh
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (7) i2_turnAllOff                                         4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (8) i2_refresh                                            5     5      0     268
                                              3 COMRAM     5     5      0
                           i2_allOff
                       i2_setColHigh
                       i2_setRowHigh
 ---------------------------------------------------------------------------------
 (9) i2_setRowHigh                                         3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_setColHigh                                         3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_allOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_drawSymbol                                       281   280      1    2266
                                              4 COMRAM   100    99      1
                                              0 BANK0    128   128      0
                                              0 BANK1     53    53      0
                               i2_on
 ---------------------------------------------------------------------------------
 (7) i2_on                                                 4     3      1     544
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) _getNextPosition                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _initializeLED
     _turnAllOff
   _initializePong
     _startPong
       _drawSymbol
         _on
       _refresh
         _allOff
         _setColHigh
         _setRowHigh
       _turnAllOff
   _refresh
     _allOff
     _setColHigh
     _setRowHigh

 _ISR (ROOT)
   ___lwdiv
   _checkNextPosition
     _getNextPosition
     i2_drawSymbol
       i2_on
     i2_initializePong
       i2_startPong
         i2_drawSymbol
           i2_on
         i2_refresh
           i2_allOff
           i2_setColHigh
           i2_setRowHigh
         i2_turnAllOff
     i2_refresh
       i2_allOff
       i2_setColHigh
       i2_setRowHigh
     i2_startPong
       i2_drawSymbol
         i2_on
       i2_refresh
         i2_allOff
         i2_setColHigh
         i2_setRowHigh
       i2_turnAllOff
     i2_turnAllOff
   _writePong
     _off
     i2_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      44      13       26.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100     30      F4      11       95.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     88      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     9F      C8       7       78.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     80      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7C      7E       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F6      15        0.0%
DATA                 0      0     3F6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Apr 03 21:49:47 2016

        __end_ofi2_setColHigh 10AE            drawSymbol@symbolGo 021E             ?i2_initializePong 0001  
                          _on 0E20                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
          ??i2_initializePong 006B           drawSymbol@symbolOne 03C4          __end_ofi2_setRowHigh 0FD4  
                         ?_on 0138           drawSymbol@symbolTwo 0262                           _GIE 007F97  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _ISR 0008  
                         _PSA 007EAB                           __p1 01B7                           __p2 01BC  
                         _off 0FD4                           prod 000FF3                           wreg 000FE8  
         __end_ofi2_startPong 0D6C                          ??_on 0139                  __CFG_LVP$OFF 000000  
                        ?_ISR 0001                  __CFG_WDT$OFF 000000          drawSymbol@symbolPlay 013D  
                        l2412 0D9C                          l2422 0E38                          l2600 0234  
                        l2522 0CB6                          l2418 0E2E                          l2602 023A  
                        l2524 0CBC                          l2612 0286                          l2540 009E  
                        l2700 0C00                          l2534 0D04                          l2518 0CAC  
                        l2614 028C                          l2606 0244                          l2542 00A4  
                        l2630 09CE                          l2710 0C1C                          l2528 0CC6  
                        l2552 00F0                          l2640 09E8                          l2618 0296  
                        l2570 0152                          l2554 00F6                          l2546 00AE  
                        l2626 02D8                          l2634 09D8                          l2564 0142  
                        l2644 0A2A                          l2636 09DE                          l2590 01EC  
                        l2582 01A4                          l2566 0148                          l2558 0100  
                        l2576 0194                          l2648 0A30                          l2594 01F6  
                        l2578 019A                          l2588 01E6                          l2958 10FA  
                        ?_off 0001                          _ADIE 007CEE                          _ADIF 007CF6  
                        _T0CS 007EAD                          _LATA 000F89                          _LATC 000F8B  
                        _LATD 000F8C                          u2244 1066                          u2245 1060  
                        u2264 0D8E                          u2601 0082                          u2265 0D88  
                        u2274 0DB8                          u2611 0094                          u2275 0DB2  
                        u2551 0028                          u3087 0A40                          u2561 003A  
                        u2571 004C                          u2581 005E                          u2591 0070  
                        _PEIE 007F96                          i2_on 1010              ??_initializePong 019F  
                        _main 10EE                   drawSymbol@i 027F                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 007F                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 0016                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010                         ??_ISR 006F  
                       ??_off 0002                         ?i2_on 0001                    i2on@column 0004  
       drawSymbol@symbolThree 03DC                         ?_main 0001                         _ADRES 000FC3  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
             __end_of___lwdiv 0EC4                         i2l268 08CE                         i2l677 0EBA  
                       _PLLEN 007CDE                         _TRISA 000F92                         _TRISC 000F94  
                       _TRISD 000F95                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
        __end_ofi2_turnAllOff 0F0C                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                         __ball 01C1  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               __end_of_refresh 0A54  
                       on@row 0138                __CFG_BOREN$OFF 000000                         tablat 000FF5  
            __end_ofi2_allOff 111C                         plusw1 000FE3                         plusw2 000FDB  
                       status 000FD8         __size_ofi2_drawSymbol 02D0                  __end_ofi2_on 104C  
             __initialization 090A                  __end_of_main 1100                        ??i2_on 0002  
             _getNextPosition 0A54            __size_ofi2_refresh 006A                        ??_main 019F  
                 i2_startPong 0D0A                 __activetblptr 000002                  i2_drawSymbol 0308  
                      _T08BIT 007EAE      checkNextPosition@counter 006B                        i2l2002 0FE6  
                      i2l2040 0A68                        i2l2042 0A72                        i2l2044 0A84  
                      i2l2052 0AB2                        i2l2046 0A96                        i2l2038 0A56  
                      i2l2304 0EB0                        i2l2048 0AA0                        i2l2400 101A  
                      i2l2404 1022                        i2l2500 055C                        i2l2502 0562  
                      i2l2430 0390                        i2l2440 03D8                        i2l2506 056C  
                      i2l2442 03DE                        i2l2434 039A                        i2l2514 05AA  
                      i2l1810 0C88                        i2l1802 0C54                        i2l2292 0E88  
                      i2l2452 0426                        i2l2428 038A                        i2l1644 0FB6  
                      i2l2294 0E90                        i2l2470 0484                        i2l2454 042C  
                      i2l2446 03E8                        i2l1806 0C84                        i2l2296 0E94  
                      i2l2464 0474                        i2l2490 0514                        i2l2482 04D2  
                      i2l2466 047A                        i2l2458 0436                        i2l1770 0EC8  
                      i2l2476 04C2                        i2l1780 0EDC                        i2l2900 07F4  
                      i2l2812 06C2                        i2l2494 051E                        i2l2478 04C8  
                      i2l1774 0ED0                        i2l2822 06F8                        i2l2830 0708  
                      i2l2814 06C8                        i2l2488 050E                        i2l1792 0C40  
                      i2l1776 0ED4                        i2l2824 06FC                        i2l2832 071E  
                      i2l2808 06B8                        i2l2760 0616                        i2l1786 0F08  
                      i2l2826 0700                        i2l2762 062C                        i2l2922 085E  
                      i2l1796 0C48                        i2l2668 0D36                        i2l2852 0756  
                      i2l2756 060A                        i2l2916 0852                        i2l1798 0C4C  
                      i2l2678 0D4C                        i2l2846 074A                        i2l2854 076C  
                      i2l2838 0724                        i2l2774 0658                        i2l2782 0664  
                      i2l2758 060E                        i2l2942 08B2                        i2l2848 074E  
                      i2l2784 067A                        i2l2768 0632                        i2l2890 07C8  
                      i2l2882 07B4                        i2l2858 0772                        i2l2778 0660  
                      i2l2892 07CC                        i2l2868 0794                        i2l2884 07BA  
                      i2l2788 0680                        i2l2894 07D0                        i2l2878 07AA  
                      i2l2798 06A2                        i2l1998 0FDE                        i2l2888 07C4  
                      i2l2898 07D8                        _TMR0IE 007F95                        _TMR0IF 007F92  
                      _TMR0ON 007EAF           i2drawSymbol@offSetX 0005         __size_ofi2_setColHigh 001C  
              __CFG_XINST$OFF 000000                        _allOff 1100                __CFG_STVREN$ON 000000  
       __size_ofi2_setRowHigh 0040                        __speed 007D                     ??___lwdiv 0005  
                      clear_0 0910                        clear_1 091C                        _pixels 0300  
                      off@row 0001                  __pdataCOMRAM 007D                     ??_refresh 013B  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
      __size_of_initializeLED 001E                  i2_setColHigh 1092                    __accesstop 0080  
     __end_of__initialization 09BA            i2setColHigh@column 0003             __end_ofi2_refresh 0CA6  
             __CFG_PBADEN$OFF 000000                  i2_setRowHigh 0F94                 ___rparam_used 000001  
     __end_of_getNextPosition 0ADC                __pcstackCOMRAM 0001              i2drawSymbol@i_82 00FF  
            i2drawSymbol@i_83 0130              i2drawSymbol@i_84 0131              i2drawSymbol@i_85 0132  
            i2drawSymbol@i_86 0133              i2drawSymbol@i_87 0134                  __pidataBANK1 10AE  
                __pidataBANK2 0B5E                  __pidataBANK3 0F0C                  __pidataBANK4 0F50  
     i2drawSymbol@symbolThree 0118                    __end_of_on 0E72         __size_ofi2_turnAllOff 0048  
                   ?i2_allOff 0001                 i2turnAllOff@i 0003                 i2turnAllOff@j 0004  
            startPong@counter 0286     __size_ofi2_initializePong 0014                    __pbssBANK1 01B7  
                  __pbssBANK3 0300                 _initializeLED 1074                  i2_turnAllOff 0EC4  
i2drawSymbol@symbolArrowRight 004A                       ?_allOff 0001                    ??i2_allOff 0001  
                  _drawSymbol 001A   i2drawSymbol@symbolArrowLeft 0080            __size_of_startPong 006E  
                     i2on@row 0001            __size_of_writePong 0082                ?_initializeLED 0001  
                     __Hparam 0000                       __Lparam 0000              ?_getNextPosition 0001  
               refresh@theCol 013E                 refresh@theRow 013F               __size_of_allOff 000E  
        i2drawSymbol@symbolGo 009E                       ___lwdiv 0E72    drawSymbol@symbolArrowRight 0181  
                     __pcinit 090A        drawSymbol@chosenSymbol 027E                       __ramtop 0600  
                  _initialize 0DC6                       __ptext0 10EE                       __ptext1 10C6  
                     __ptext2 0BCE                       __ptext3 09C8                       __ptext4 0D6C  
                     __ptext5 104C                       __ptext6 1100                       __ptext7 001A  
                     __ptext8 0E20                       __ptext9 1074                  ?i2_startPong 0001  
                __size_of_ISR 0902                  __size_of_off 003C                       _refresh 09C8  
              drawSymbol@i_82 0280                drawSymbol@i_83 0281                drawSymbol@i_84 0282  
              drawSymbol@i_85 0283                drawSymbol@i_86 0284                drawSymbol@i_87 0285  
                  _setColHigh 104C                __pintcode_body 07FA          end_of_initialization 09BA  
               __Lmediumconst 0000                       int_func 07FA                    _setRowHigh 0D6C  
                     postdec1 000FE5                       postinc0 000FEE                       postinc2 000FDE  
     __size_of_initializePong 0014             __end_of_startPong 0C3C             drawSymbol@offSetX 013C  
           __end_of_writePong 0B5E                     _TRISBbits 000F93                   ?_drawSymbol 013C  
            i2_initializePong 10DA               ??_initializeLED 013C                     i2_refresh 0C3C  
                  _turnAllOff 0CA6                 setRowHigh@row 013A                __end_of_allOff 110E  
               __pidataCOMRAM 111C                   ?_initialize 0001           start_initialization 090A  
                 __end_of_ISR 090A             __size_ofi2_allOff 000E                   ?_setColHigh 0001  
                 __end_of_off 1010                    ISR@ADvalue 0135                   ?_setRowHigh 0001  
            __CFG_OSC$INTIO67 000000                    ?i2_refresh 0001                      ??_allOff 0138  
         __size_of_drawSymbol 02EE                   __pdataBANK1 019F                   __pdataBANK2 0288  
                 __pdataBANK3 0380                   __pdataBANK4 0400              __CFG_LPT1OSC$OFF 000000  
        __size_ofi2_startPong 0062                 __pcstackBANK0 0080                 __pcstackBANK1 0100  
               __pcstackBANK2 0200                 __pcstackBANK3 03C4        i2drawSymbol@symbolPlay 0006  
          i2startPong@counter 0069           __size_of_initialize 005A                 i2drawSymbol@i 00FE  
                    ISR@value 0137              ___lwdiv@dividend 0001                   ?_turnAllOff 0001  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                _initializePong 10C6  
         __size_of_setColHigh 0028                      ?___lwdiv 0001           __size_of_setRowHigh 005A  
                 turnAllOff@i 013A                   turnAllOff@j 013B             _checkNextPosition 05D8  
                    ?_refresh 0001            ?_checkNextPosition 0001              ___lwdiv@quotient 0005  
               ?i2_drawSymbol 0005                   __size_of_on 0052           ??_checkNextPosition 006B  
      __end_of_initializePong 10DA                      i2u112_44 10A4                      i2u112_45 10A0  
                    i2u114_44 0FAC                      i2u114_45 0FA8                      i2u115_44 0FCA  
                    i2u115_45 0FC6                   ??i2_refresh 0004                      i2u230_41 0314  
                    i2u231_41 0326                      i2u232_41 0338                      i2u233_41 034A  
                    i2u234_41 035C                      i2u235_41 036E                      i2u236_41 0380  
                    i2u309_47 0C94                      i2u295_40 06EA                      i2u287_40 05FC  
                    i2u297_40 073C                      i2u289_40 064A              __CFG_WDTPS$32768 000000  
    __end_ofi2_initializePong 10EE                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
                  _ADCON2bits 000FC0     __end_of_checkNextPosition 07FA                     _startPong 0BCE  
    __size_of_getNextPosition 0088                      i2_allOff 110E                     off@column 0004  
              ??i2_drawSymbol 0006           __size_of_turnAllOff 0064                 ?i2_setColHigh 0001  
                ??_drawSymbol 013D                     _writePong 0ADC                     copy_data0 0936  
                   copy_data1 0956                     copy_data2 0976                     copy_data3 0996  
               __timerCounter 01C6                 ?i2_setRowHigh 0001                      __Hrparam 0000  
             ?_initializePong 0001                      __Lrparam 0000      i2drawSymbol@chosenSymbol 0068  
          __end_of_drawSymbol 0308              __size_of___lwdiv 0052                  ??_initialize 0138  
       i2drawSymbol@symbolOne 0100         i2drawSymbol@symbolTwo 00E2                    ?_startPong 0001  
             i2refresh@theCol 0007               i2refresh@theRow 0008                      __nextPos 01C4  
              ??i2_setColHigh 0001               ___lwdiv@divisor 0003                  ??_setColHigh 0138  
            __size_of_refresh 008C               ___lwdiv@counter 0007                      __ptext10 0CA6  
                    __ptext11 0DC6                      __ptext20 0F94                      __ptext21 1092  
                    __ptext13 0ADC                      __ptext22 110E                      __ptext14 0FD4  
                    __ptext23 0308                      __ptext15 05D8                      __ptext24 1010  
                    __ptext16 10DA                      __ptext25 0A54                      __ptext17 0D0A  
                    __ptext26 0E72                      __ptext18 0EC4                      __ptext19 0C3C  
                  ?_writePong 0001                 __size_ofi2_on 003C               drawSymbol@F3230 02E0  
             drawSymbol@F3224 019F               drawSymbol@F3233 0380               drawSymbol@F3242 02A6  
             drawSymbol@F3227 02C4               drawSymbol@F3236 0400               drawSymbol@F3239 0288  
              ??i2_setRowHigh 0001                  ??_setRowHigh 0138                 __size_of_main 0012  
          __end_of_initialize 0E20         __end_of_initializeLED 1092                 ?i2_turnAllOff 0001  
                    int$flags 007F            __end_of_setColHigh 1074                      on@column 013B  
  __size_of_checkNextPosition 0222                   _OSCTUNEbits 000F9B            __end_of_setRowHigh 0DC6  
            setColHigh@column 013A             ??_getNextPosition 0001     drawSymbol@symbolArrowLeft 0200  
                    intlevel2 0000  checkNextPosition@counter_430 006D                ??i2_turnAllOff 0001  
                  _OSCCONbits 000FD3                  ??_turnAllOff 0138          __end_ofi2_drawSymbol 05D8  
               ??i2_startPong 0069                   ??_startPong 019F               i2setRowHigh@row 0003  
                 ??_writePong 0005            __end_of_turnAllOff 0D0A  
