

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Apr 10 14:25:16 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46 ;; Function _handlePaddleLeftCollision is unused but had its address taken
    47  0000                     
    48 ;; Function _handlePaddleRightCollision is unused but had its address taken
    49  0000                     
    50                           	psect	idataCOMRAM
    51  000B2E                     __pidataCOMRAM:
    52                           	opt stack 0
    53                           
    54                           ;initializer for drawSymbol@F3244
    55  000B2E  03                 	db	3
    56  000B2F  00                 	db	0
    57  000B30  03                 	db	3
    58  000B31  07                 	db	7
    59  000B32  04                 	db	4
    60  000B33  01                 	db	1
    61  000B34  04                 	db	4
    62  000B35  06                 	db	6
    63  000B36  05                 	db	5
    64  000B37  02                 	db	2
    65  000B38  05                 	db	5
    66  000B39  05                 	db	5
    67  000B3A  06                 	db	6
    68  000B3B  03                 	db	3
    69  000B3C  06                 	db	6
    70  000B3D  04                 	db	4
    71                           
    72                           ;initializer for __speed
    73  000B3E  0096               	dw	150
    74                           
    75                           ;initializer for __glfsr
    76  000B40  01                 	db	1
    77                           
    78                           ;initializer for __lcg
    79  000B41  54                 	db	84
    80                           
    81                           	psect	idataBANK1
    82  00052C                     __pidataBANK1:
    83                           	opt stack 0
    84                           
    85                           ;initializer for drawSymbol@F3236
    86  00052C  01                 	db	1
    87  00052D  01                 	db	1
    88  00052E  01                 	db	1
    89  00052F  02                 	db	2
    90  000530  01                 	db	1
    91  000531  03                 	db	3
    92  000532  01                 	db	1
    93  000533  04                 	db	4
    94  000534  01                 	db	1
    95  000535  05                 	db	5
    96  000536  01                 	db	1
    97  000537  06                 	db	6
    98  000538  02                 	db	2
    99  000539  06                 	db	6
   100  00053A  03                 	db	3
   101  00053B  06                 	db	6
   102  00053C  03                 	db	3
   103  00053D  05                 	db	5
   104  00053E  03                 	db	3
   105  00053F  04                 	db	4
   106  000540  02                 	db	2
   107  000541  04                 	db	4
   108  000542  05                 	db	5
   109  000543  06                 	db	6
   110  000544  05                 	db	5
   111  000545  05                 	db	5
   112  000546  05                 	db	5
   113  000547  04                 	db	4
   114  000548  05                 	db	5
   115  000549  03                 	db	3
   116  00054A  05                 	db	5
   117  00054B  02                 	db	2
   118  00054C  05                 	db	5
   119  00054D  01                 	db	1
   120  00054E  06                 	db	6
   121  00054F  01                 	db	1
   122  000550  08                 	db	8
   123  000551  01                 	db	1
   124  000552  08                 	db	8
   125  000553  02                 	db	2
   126  000554  08                 	db	8
   127  000555  03                 	db	3
   128  000556  09                 	db	9
   129  000557  04                 	db	4
   130  000558  0A                 	db	10
   131  000559  04                 	db	4
   132  00055A  0B                 	db	11
   133  00055B  03                 	db	3
   134  00055C  0B                 	db	11
   135  00055D  02                 	db	2
   136  00055E  0B                 	db	11
   137  00055F  01                 	db	1
   138  000560  0D                 	db	13
   139  000561  01                 	db	1
   140  000562  0D                 	db	13
   141  000563  02                 	db	2
   142  000564  0D                 	db	13
   143  000565  03                 	db	3
   144  000566  0D                 	db	13
   145  000567  04                 	db	4
   146  000568  0C                 	db	12
   147  000569  05                 	db	5
   148  00056A  0B                 	db	11
   149  00056B  06                 	db	6
   150  00056C  0E                 	db	14
   151  00056D  05                 	db	5
   152  00056E  0E                 	db	14
   153  00056F  06                 	db	6
   154                           
   155                           ;initializer for drawSymbol@F3228
   156  000570  01                 	db	1
   157  000571  00                 	db	0
   158  000572  02                 	db	2
   159  000573  00                 	db	0
   160  000574  03                 	db	3
   161  000575  00                 	db	0
   162  000576  04                 	db	4
   163  000577  00                 	db	0
   164  000578  05                 	db	5
   165  000579  00                 	db	0
   166  00057A  05                 	db	5
   167  00057B  01                 	db	1
   168  00057C  04                 	db	4
   169  00057D  02                 	db	2
   170  00057E  03                 	db	3
   171  00057F  03                 	db	3
   172  000580  02                 	db	2
   173  000581  04                 	db	4
   174  000582  01                 	db	1
   175  000583  05                 	db	5
   176  000584  01                 	db	1
   177  000585  06                 	db	6
   178  000586  05                 	db	5
   179  000587  06                 	db	6
   180  000588  02                 	db	2
   181  000589  07                 	db	7
   182  00058A  03                 	db	3
   183  00058B  07                 	db	7
   184  00058C  04                 	db	4
   185  00058D  07                 	db	7
   186                           
   187                           ;initializer for drawSymbol@F3232
   188  00058E  02                 	db	2
   189  00058F  00                 	db	0
   190  000590  03                 	db	3
   191  000591  00                 	db	0
   192  000592  04                 	db	4
   193  000593  00                 	db	0
   194  000594  05                 	db	5
   195  000595  01                 	db	1
   196  000596  01                 	db	1
   197  000597  01                 	db	1
   198  000598  01                 	db	1
   199  000599  02                 	db	2
   200  00059A  01                 	db	1
   201  00059B  03                 	db	3
   202  00059C  02                 	db	2
   203  00059D  04                 	db	4
   204  00059E  03                 	db	3
   205  00059F  04                 	db	4
   206  0005A0  01                 	db	1
   207  0005A1  05                 	db	5
   208  0005A2  01                 	db	1
   209  0005A3  06                 	db	6
   210  0005A4  02                 	db	2
   211  0005A5  07                 	db	7
   212  0005A6  03                 	db	3
   213  0005A7  07                 	db	7
   214  0005A8  04                 	db	4
   215  0005A9  07                 	db	7
   216  0005AA  05                 	db	5
   217  0005AB  06                 	db	6
   218                           
   219                           ;initializer for drawSymbol@F3224
   220  0005AC  02                 	db	2
   221  0005AD  00                 	db	0
   222  0005AE  03                 	db	3
   223  0005AF  00                 	db	0
   224  0005B0  04                 	db	4
   225  0005B1  00                 	db	0
   226  0005B2  03                 	db	3
   227  0005B3  01                 	db	1
   228  0005B4  03                 	db	3
   229  0005B5  02                 	db	2
   230  0005B6  03                 	db	3
   231  0005B7  03                 	db	3
   232  0005B8  03                 	db	3
   233  0005B9  04                 	db	4
   234  0005BA  03                 	db	3
   235  0005BB  05                 	db	5
   236  0005BC  03                 	db	3
   237  0005BD  06                 	db	6
   238  0005BE  03                 	db	3
   239  0005BF  07                 	db	7
   240  0005C0  04                 	db	4
   241  0005C1  06                 	db	6
   242                           
   243                           ;initializer for drawSymbol@F3248
   244  0005C2  04                 	db	4
   245  0005C3  00                 	db	0
   246  0005C4  03                 	db	3
   247  0005C5  01                 	db	1
   248  0005C6  02                 	db	2
   249  0005C7  02                 	db	2
   250  0005C8  01                 	db	1
   251  0005C9  03                 	db	3
   252  0005CA  01                 	db	1
   253  0005CB  04                 	db	4
   254  0005CC  02                 	db	2
   255  0005CD  05                 	db	5
   256  0005CE  03                 	db	3
   257  0005CF  06                 	db	6
   258  0005D0  04                 	db	4
   259  0005D1  07                 	db	7
   260                           
   261                           	psect	idataBANK2
   262  00095A                     __pidataBANK2:
   263                           	opt stack 0
   264                           
   265                           ;initializer for drawSymbol@F3240
   266  00095A  06                 	db	6
   267  00095B  06                 	db	6
   268  00095C  05                 	db	5
   269  00095D  07                 	db	7
   270  00095E  04                 	db	4
   271  00095F  07                 	db	7
   272  000960  03                 	db	3
   273  000961  07                 	db	7
   274  000962  02                 	db	2
   275  000963  06                 	db	6
   276  000964  02                 	db	2
   277  000965  05                 	db	5
   278  000966  02                 	db	2
   279  000967  04                 	db	4
   280  000968  02                 	db	2
   281  000969  03                 	db	3
   282  00096A  02                 	db	2
   283  00096B  02                 	db	2
   284  00096C  02                 	db	2
   285  00096D  01                 	db	1
   286  00096E  03                 	db	3
   287  00096F  00                 	db	0
   288  000970  04                 	db	4
   289  000971  00                 	db	0
   290  000972  05                 	db	5
   291  000973  00                 	db	0
   292  000974  06                 	db	6
   293  000975  01                 	db	1
   294  000976  05                 	db	5
   295  000977  02                 	db	2
   296  000978  04                 	db	4
   297  000979  02                 	db	2
   298  00097A  09                 	db	9
   299  00097B  06                 	db	6
   300  00097C  09                 	db	9
   301  00097D  05                 	db	5
   302  00097E  09                 	db	9
   303  00097F  04                 	db	4
   304  000980  09                 	db	9
   305  000981  03                 	db	3
   306  000982  09                 	db	9
   307  000983  02                 	db	2
   308  000984  09                 	db	9
   309  000985  01                 	db	1
   310  000986  0A                 	db	10
   311  000987  00                 	db	0
   312  000988  0B                 	db	11
   313  000989  00                 	db	0
   314  00098A  0C                 	db	12
   315  00098B  00                 	db	0
   316  00098C  0D                 	db	13
   317  00098D  01                 	db	1
   318  00098E  0D                 	db	13
   319  00098F  02                 	db	2
   320  000990  0D                 	db	13
   321  000991  04                 	db	4
   322  000992  0D                 	db	13
   323  000993  05                 	db	5
   324  000994  0D                 	db	13
   325  000995  06                 	db	6
   326  000996  0C                 	db	12
   327  000997  07                 	db	7
   328  000998  0B                 	db	11
   329  000999  07                 	db	7
   330  00099A  0A                 	db	10
   331  00099B  07                 	db	7
   332  00099C  00                 	db	0
   333  00099D  00                 	db	0
   334  0000                     _ADRES	set	4035
   335  0000                     _ADCON0bits	set	4034
   336  0000                     _ADCON1bits	set	4033
   337  0000                     _ADCON2bits	set	4032
   338  0000                     _LATA	set	3977
   339  0000                     _LATC	set	3979
   340  0000                     _LATD	set	3980
   341  0000                     _OSCCONbits	set	4051
   342  0000                     _OSCTUNEbits	set	3995
   343  0000                     _TRISA	set	3986
   344  0000                     _TRISBbits	set	3987
   345  0000                     _TRISC	set	3988
   346  0000                     _TRISD	set	3989
   347  0000                     _ADIE	set	31982
   348  0000                     _ADIF	set	31990
   349  0000                     _GIE	set	32663
   350  0000                     _PEIE	set	32662
   351  0000                     _PLLEN	set	31966
   352  0000                     _PSA	set	32427
   353  0000                     _T08BIT	set	32430
   354  0000                     _T0CS	set	32429
   355  0000                     _T0PS0	set	32424
   356  0000                     _T0PS1	set	32425
   357  0000                     _T0PS2	set	32426
   358  0000                     _TMR0IE	set	32661
   359  0000                     _TMR0IF	set	32658
   360  0000                     _TMR0ON	set	32431
   361                           
   362                           ; #config settings
   363  0000                     
   364                           	psect	cinit
   365  0005D2                     __pcinit:
   366                           	opt stack 0
   367  0005D2                     start_initialization:
   368                           	opt stack 0
   369  0005D2                     __initialization:
   370                           	opt stack 0
   371                           
   372                           ; Clear objects allocated to BANK2 (128 bytes)
   373  0005D2  EE02  F000         	lfsr	0,__pbssBANK2
   374  0005D6  0E80               	movlw	128
   375  0005D8                     clear_0:
   376  0005D8  6AEE               	clrf	postinc0,c
   377  0005DA  06E8               	decf	wreg,f,c
   378  0005DC  E1FD               	bnz	clear_0
   379                           
   380                           ; Clear objects allocated to BANK1 (9 bytes)
   381  0005DE  EE01  F0ED         	lfsr	0,__pbssBANK1
   382  0005E2  0E09               	movlw	9
   383  0005E4                     clear_1:
   384  0005E4  6AEE               	clrf	postinc0,c
   385  0005E6  06E8               	decf	wreg,f,c
   386  0005E8  E1FD               	bnz	clear_1
   387                           
   388                           ; Clear objects allocated to COMRAM (2 bytes)
   389  0005EA  6A3A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   390  0005EC  6A39               	clrf	__pbssCOMRAM& (0+255),c
   391                           
   392                           ; Initialize objects allocated to BANK2 (68 bytes)
   393                           ; load TBLPTR registers with __pidataBANK2
   394  0005EE  0E5A               	movlw	low __pidataBANK2
   395  0005F0  6EF6               	movwf	tblptrl,c
   396  0005F2  0E09               	movlw	high __pidataBANK2
   397  0005F4  6EF7               	movwf	tblptrh,c
   398  0005F6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   399  0005F8  6EF8               	movwf	tblptru,c
   400  0005FA  EE02  F080         	lfsr	0,__pdataBANK2
   401  0005FE  EE10 F044          	lfsr	1,68
   402  000602                     copy_data0:
   403  000602  0009               	tblrd		*+
   404  000604  CFF5 FFEE          	movff	tablat,postinc0
   405  000608  50E5               	movf	postdec1,w,c
   406  00060A  50E1               	movf	fsr1l,w,c
   407  00060C  E1FA               	bnz	copy_data0
   408                           
   409                           ; Initialize objects allocated to BANK1 (166 bytes)
   410                           ; load TBLPTR registers with __pidataBANK1
   411  00060E  0E2C               	movlw	low __pidataBANK1
   412  000610  6EF6               	movwf	tblptrl,c
   413  000612  0E05               	movlw	high __pidataBANK1
   414  000614  6EF7               	movwf	tblptrh,c
   415  000616  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   416  000618  6EF8               	movwf	tblptru,c
   417  00061A  EE01  F000         	lfsr	0,__pdataBANK1
   418  00061E  EE10 F0A6          	lfsr	1,166
   419  000622                     copy_data1:
   420  000622  0009               	tblrd		*+
   421  000624  CFF5 FFEE          	movff	tablat,postinc0
   422  000628  50E5               	movf	postdec1,w,c
   423  00062A  50E1               	movf	fsr1l,w,c
   424  00062C  E1FA               	bnz	copy_data1
   425                           
   426                           ; Initialize objects allocated to COMRAM (20 bytes)
   427                           ; load TBLPTR registers with __pidataCOMRAM
   428  00062E  0E2E               	movlw	low __pidataCOMRAM
   429  000630  6EF6               	movwf	tblptrl,c
   430  000632  0E0B               	movlw	high __pidataCOMRAM
   431  000634  6EF7               	movwf	tblptrh,c
   432  000636  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   433  000638  6EF8               	movwf	tblptru,c
   434  00063A  EE00  F025         	lfsr	0,__pdataCOMRAM
   435  00063E  EE10 F014          	lfsr	1,20
   436  000642                     copy_data2:
   437  000642  0009               	tblrd		*+
   438  000644  CFF5 FFEE          	movff	tablat,postinc0
   439  000648  50E5               	movf	postdec1,w,c
   440  00064A  50E1               	movf	fsr1l,w,c
   441  00064C  E1FA               	bnz	copy_data2
   442  00064E                     end_of_initialization:
   443                           	opt stack 0
   444  00064E                     __end_of__initialization:
   445                           	opt stack 0
   446  00064E  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   447  000650  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   448  000652  0E00               	movlw	low (__Lmediumconst shr (0+16))
   449  000654  6EF8               	movwf	tblptru,c
   450  000656  0100               	movlb	0
   451  000658  EFA1  F005         	goto	_main	;jump to C main() function
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	bssCOMRAM
   462  000039                     __pbssCOMRAM:
   463                           	opt stack 0
   464  000039                     __timerCounter:
   465                           	opt stack 0
   466  000039                     	ds	2
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	dataCOMRAM
   477  000025                     __pdataCOMRAM:
   478                           	opt stack 0
   479  000025                     drawSymbol@F3244:
   480                           	opt stack 0
   481  000025                     	ds	16
   482  000035                     __speed:
   483                           	opt stack 0
   484  000035                     	ds	2
   485  000037                     __glfsr:
   486                           	opt stack 0
   487  000037                     	ds	1
   488  000038                     __lcg:
   489                           	opt stack 0
   490  000038                     	ds	1
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1l	equ	0xFE1
   499                           
   500                           	psect	bssBANK1
   501  0001ED                     __pbssBANK1:
   502                           	opt stack 0
   503  0001ED                     __ball:
   504                           	opt stack 0
   505  0001ED                     	ds	3
   506  0001F0                     __nextPos:
   507                           	opt stack 0
   508  0001F0                     	ds	2
   509  0001F2                     __p1:
   510                           	opt stack 0
   511  0001F2                     	ds	2
   512  0001F4                     __p2:
   513                           	opt stack 0
   514  0001F4                     	ds	2
   515                           tblptru	equ	0xFF8
   516                           tblptrh	equ	0xFF7
   517                           tblptrl	equ	0xFF6
   518                           tablat	equ	0xFF5
   519                           postinc0	equ	0xFEE
   520                           wreg	equ	0xFE8
   521                           postdec1	equ	0xFE5
   522                           fsr1l	equ	0xFE1
   523                           
   524                           	psect	dataBANK1
   525  000100                     __pdataBANK1:
   526                           	opt stack 0
   527  000100                     drawSymbol@F3236:
   528                           	opt stack 0
   529  000100                     	ds	68
   530  000144                     drawSymbol@F3228:
   531                           	opt stack 0
   532  000144                     	ds	30
   533  000162                     drawSymbol@F3232:
   534                           	opt stack 0
   535  000162                     	ds	30
   536  000180                     drawSymbol@F3224:
   537                           	opt stack 0
   538  000180                     	ds	22
   539  000196                     drawSymbol@F3248:
   540                           	opt stack 0
   541  000196                     	ds	16
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           postdec1	equ	0xFE5
   549                           fsr1l	equ	0xFE1
   550                           
   551                           	psect	bssBANK2
   552  000200                     __pbssBANK2:
   553                           	opt stack 0
   554  000200                     _pixels:
   555                           	opt stack 0
   556  000200                     	ds	128
   557                           tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           postdec1	equ	0xFE5
   564                           fsr1l	equ	0xFE1
   565                           
   566                           	psect	dataBANK2
   567  000280                     __pdataBANK2:
   568                           	opt stack 0
   569  000280                     drawSymbol@F3240:
   570                           	opt stack 0
   571  000280                     	ds	68
   572                           tblptru	equ	0xFF8
   573                           tblptrh	equ	0xFF7
   574                           tblptrl	equ	0xFF6
   575                           tablat	equ	0xFF5
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           postdec1	equ	0xFE5
   579                           fsr1l	equ	0xFE1
   580                           
   581                           	psect	cstackBANK2
   582  0002C4                     __pcstackBANK2:
   583                           	opt stack 0
   584  0002C4                     drawSymbol@symbolOne:
   585                           	opt stack 0
   586                           
   587                           ; 22 bytes @ 0x0
   588  0002C4                     	ds	22
   589  0002DA                     drawSymbol@symbolArrowLeft:
   590                           	opt stack 0
   591                           
   592                           ; 16 bytes @ 0x16
   593  0002DA                     	ds	16
   594  0002EA                     drawSymbol@symbolArrowRight:
   595                           	opt stack 0
   596                           
   597                           ; 16 bytes @ 0x26
   598  0002EA                     	ds	16
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           postdec1	equ	0xFE5
   606                           fsr1l	equ	0xFE1
   607                           
   608                           	psect	cstackBANK1
   609  0001A6                     __pcstackBANK1:
   610                           	opt stack 0
   611  0001A6                     drawSymbol@symbolGo:
   612                           	opt stack 0
   613                           
   614                           ; 68 bytes @ 0x0
   615  0001A6                     	ds	68
   616  0001EA                     drawSymbol@i_79:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x44
   620  0001EA                     	ds	1
   621  0001EB                     drawSymbol@i_83:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x45
   625  0001EB                     	ds	1
   626  0001EC                     drawSymbol@i_87:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x46
   630  0001EC                     	ds	1
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           postdec1	equ	0xFE5
   638                           fsr1l	equ	0xFE1
   639                           
   640                           	psect	cstackBANK0
   641  000080                     __pcstackBANK0:
   642                           	opt stack 0
   643  000080                     drawSymbol@symbolPlay:
   644                           	opt stack 0
   645                           
   646                           ; 68 bytes @ 0x0
   647  000080                     	ds	68
   648  0000C4                     drawSymbol@symbolTwo:
   649                           	opt stack 0
   650                           
   651                           ; 30 bytes @ 0x44
   652  0000C4                     	ds	30
   653  0000E2                     drawSymbol@symbolThree:
   654                           	opt stack 0
   655                           
   656                           ; 30 bytes @ 0x62
   657  0000E2                     	ds	30
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667                           	psect	cstackCOMRAM
   668  000001                     __pcstackCOMRAM:
   669                           	opt stack 0
   670  000001                     ?___lwdiv:
   671                           	opt stack 0
   672  000001                     off@row:
   673                           	opt stack 0
   674  000001                     i2on@row:
   675                           	opt stack 0
   676  000001                     checkPaddleCollision@paddle:
   677                           	opt stack 0
   678  000001                     ___lwdiv@dividend:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x0
   682  000001                     	ds	1
   683  000002                     ??_off:
   684  000002                     ??i2_on:
   685                           
   686                           ; 1 bytes @ 0x1
   687  000002                     	ds	1
   688  000003                     ___lwdiv@divisor:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x2
   692  000003                     	ds	1
   693  000004                     off@column:
   694                           	opt stack 0
   695  000004                     i2on@column:
   696                           	opt stack 0
   697  000004                     checkPaddleCollision@i:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x3
   701  000004                     	ds	1
   702  000005                     ___lwdiv@quotient:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x4
   706  000005                     	ds	1
   707  000006                     
   708                           ; 1 bytes @ 0x5
   709  000006                     	ds	1
   710  000007                     ___lwdiv@counter:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x6
   714  000007                     	ds	1
   715  000008                     ??_ISR:
   716                           
   717                           ; 1 bytes @ 0x7
   718  000008                     	ds	14
   719  000016                     ISR@ADvalue:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x15
   723  000016                     	ds	2
   724  000018                     ISR@value:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x17
   728  000018                     	ds	1
   729  000019                     ??_turnAllOff:
   730  000019                     ??_setColHigh:
   731  000019                     ??_setRowHigh:
   732  000019                     on@row:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x18
   736  000019                     	ds	1
   737  00001A                     ??_on:
   738                           
   739                           ; 1 bytes @ 0x19
   740  00001A                     	ds	1
   741  00001B                     setColHigh@column:
   742                           	opt stack 0
   743  00001B                     setRowHigh@row:
   744                           	opt stack 0
   745  00001B                     turnAllOff@i:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x1A
   749  00001B                     	ds	1
   750  00001C                     ??_refresh:
   751  00001C                     on@column:
   752                           	opt stack 0
   753  00001C                     turnAllOff@j:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x1B
   757  00001C                     	ds	1
   758  00001D                     drawSymbol@offSetX:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x1C
   762  00001D                     	ds	1
   763  00001E                     drawSymbol@chosenSymbol:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x1D
   767  00001E                     	ds	1
   768  00001F                     drawSymbol@i:
   769                           	opt stack 0
   770  00001F                     refresh@theCol:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x1E
   774  00001F                     	ds	1
   775  000020                     drawSymbol@i_67:
   776                           	opt stack 0
   777  000020                     refresh@theRow:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x1F
   781  000020                     	ds	1
   782  000021                     drawSymbol@i_71:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x20
   786  000021                     	ds	1
   787  000022                     drawSymbol@i_75:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x21
   791  000022                     	ds	1
   792  000023                     startPong@counter:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x22
   796  000023                     	ds	2
   797  000025                     tblptru	equ	0xFF8
   798                           tblptrh	equ	0xFF7
   799                           tblptrl	equ	0xFF6
   800                           tablat	equ	0xFF5
   801                           postinc0	equ	0xFEE
   802                           wreg	equ	0xFE8
   803                           postdec1	equ	0xFE5
   804                           fsr1l	equ	0xFE1
   805                           
   806                           ; 1 bytes @ 0x24
   807 ;;
   808 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   809 ;;
   810 ;; *************** function _main *****************
   811 ;; Defined at:
   812 ;;		line 364 in file "main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   826 ;;      Params:         0       0       0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0
   829 ;;      Totals:         0       0       0       0       0       0       0
   830 ;;Total ram usage:        0 bytes
   831 ;; Hardware stack levels required when called:    9
   832 ;; This function calls:
   833 ;;		_initialize
   834 ;;		_initializeLED
   835 ;;		_initializePong
   836 ;;		_refresh
   837 ;; This function is called by:
   838 ;;		Startup code after reset
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text0
   843  000B42                     __ptext0:
   844                           	opt stack 0
   845  000B42                     _main:
   846                           	opt stack 22
   847                           
   848                           ;main.c: 365: initialize();
   849                           
   850                           ;incstack = 0
   851  000B42  ECE0  F003         	call	_initialize	;wreg free
   852                           
   853                           ;main.c: 366: initializeLED();
   854  000B46  EC7A  F005         	call	_initializeLED	;wreg free
   855                           
   856                           ;main.c: 367: initializePong();
   857  000B4A  EC0D  F004         	call	_initializePong	;wreg free
   858  000B4E                     l2177:
   859                           
   860                           ;main.c: 372: refresh();
   861  000B4E  ECAB  F003         	call	_refresh	;wreg free
   862  000B52  D7FD               	goto	l2177
   863  000B54                     __end_of_main:
   864                           	opt stack 0
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           postdec1	equ	0xFE5
   872                           fsr1l	equ	0xFE1
   873                           
   874 ;; *************** function _initializePong *****************
   875 ;; Defined at:
   876 ;;		line 87 in file "main.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   890 ;;      Params:         0       0       0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0
   893 ;;      Totals:         0       0       0       0       0       0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    8
   897 ;; This function calls:
   898 ;;		_startPong
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text1
   905  00081A                     __ptext1:
   906                           	opt stack 0
   907  00081A                     _initializePong:
   908                           	opt stack 22
   909                           
   910                           ;main.c: 91: _p1->lives = 3;
   911                           
   912                           ;incstack = 0
   913  00081A  0101               	movlb	1	; () banked
   914  00081C  EE20 F004          	lfsr	2,4
   915  000820  51F2               	movf	__p1& (0+255),w,b
   916  000822  26D9               	addwf	fsr2l,f,c
   917  000824  51F3               	movf	(__p1+1)& (0+255),w,b
   918  000826  22DA               	addwfc	fsr2h,f,c
   919  000828  0E03               	movlw	3
   920  00082A  6EDF               	movwf	indf2,c
   921                           
   922                           ;main.c: 92: _p2->lives = 3;
   923  00082C  0101               	movlb	1	; () banked
   924  00082E  EE20 F004          	lfsr	2,4
   925  000832  51F4               	movf	__p2& (0+255),w,b
   926  000834  26D9               	addwf	fsr2l,f,c
   927  000836  51F5               	movf	(__p2+1)& (0+255),w,b
   928  000838  22DA               	addwfc	fsr2h,f,c
   929  00083A  0E03               	movlw	3
   930  00083C  6EDF               	movwf	indf2,c
   931                           
   932                           ;main.c: 95: _p1->handleCollision = handlePaddleLeftCollision;
   933  00083E  0101               	movlb	1	; () banked
   934  000840  EE20 F005          	lfsr	2,5
   935  000844  51F2               	movf	__p1& (0+255),w,b
   936  000846  26D9               	addwf	fsr2l,f,c
   937  000848  51F3               	movf	(__p1+1)& (0+255),w,b
   938  00084A  22DA               	addwfc	fsr2h,f,c
   939  00084C  0E00               	movlw	0
   940  00084E  6EDE               	movwf	postinc2,c
   941  000850  0E00               	movlw	0
   942  000852  6EDD               	movwf	postdec2,c
   943                           
   944                           ;main.c: 96: _p2->handleCollision = handlePaddleRightCollision;
   945  000854  0101               	movlb	1	; () banked
   946  000856  EE20 F005          	lfsr	2,5
   947  00085A  51F4               	movf	__p2& (0+255),w,b
   948  00085C  26D9               	addwf	fsr2l,f,c
   949  00085E  51F5               	movf	(__p2+1)& (0+255),w,b
   950  000860  22DA               	addwfc	fsr2h,f,c
   951  000862  0E00               	movlw	0
   952  000864  6EDE               	movwf	postinc2,c
   953  000866  0E00               	movlw	0
   954  000868  6EDD               	movwf	postdec2,c
   955                           
   956                           ; BSR set to: 1
   957                           ;main.c: 98: startPong();
   958  00086A  EC72  F003         	call	_startPong	;wreg free
   959                           
   960                           ;main.c: 101: TMR0ON = 1;
   961  00086E  8ED5               	bsf	4053,7,c	;volatile
   962  000870  0012               	return		;funcret
   963  000872                     __end_of_initializePong:
   964                           	opt stack 0
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           postdec1	equ	0xFE5
   972                           fsr1l	equ	0xFE1
   973                           indf2	equ	0xFDF
   974                           postinc2	equ	0xFDE
   975                           postdec2	equ	0xFDD
   976                           fsr2h	equ	0xFDA
   977                           fsr2l	equ	0xFD9
   978                           
   979 ;; *************** function _startPong *****************
   980 ;; Defined at:
   981 ;;		line 63 in file "main.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  counter         2   34[COMRAM] unsigned int 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   995 ;;      Params:         0       0       0       0       0       0       0
   996 ;;      Locals:         2       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0
   998 ;;      Totals:         2       0       0       0       0       0       0
   999 ;;Total ram usage:        2 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    7
  1002 ;; This function calls:
  1003 ;;		_drawSymbol
  1004 ;;		_refresh
  1005 ;;		_turnAllOff
  1006 ;; This function is called by:
  1007 ;;		_initializePong
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text2
  1012  0006E4                     __ptext2:
  1013                           	opt stack 0
  1014  0006E4                     _startPong:
  1015                           	opt stack 22
  1016                           
  1017                           ;main.c: 65: turnAllOff();
  1018                           
  1019                           ;incstack = 0
  1020  0006E4  EC89  F004         	call	_turnAllOff	;wreg free
  1021                           
  1022                           ;main.c: 66: drawSymbol(_p1->lives, 0);
  1023  0006E8  0E00               	movlw	0
  1024  0006EA  6E1D               	movwf	drawSymbol@offSetX,c
  1025  0006EC  0101               	movlb	1	; () banked
  1026  0006EE  EE20 F004          	lfsr	2,4
  1027  0006F2  51F2               	movf	__p1& (0+255),w,b
  1028  0006F4  26D9               	addwf	fsr2l,f,c
  1029  0006F6  51F3               	movf	(__p1+1)& (0+255),w,b
  1030  0006F8  22DA               	addwfc	fsr2h,f,c
  1031  0006FA  50DF               	movf	indf2,w,c
  1032  0006FC  EC0D  F000         	call	_drawSymbol
  1033                           
  1034                           ;main.c: 67: drawSymbol(_p2->lives, 8);
  1035  000700  0E08               	movlw	8
  1036  000702  6E1D               	movwf	drawSymbol@offSetX,c
  1037  000704  0101               	movlb	1	; () banked
  1038  000706  EE20 F004          	lfsr	2,4
  1039  00070A  51F4               	movf	__p2& (0+255),w,b
  1040  00070C  26D9               	addwf	fsr2l,f,c
  1041  00070E  51F5               	movf	(__p2+1)& (0+255),w,b
  1042  000710  22DA               	addwfc	fsr2h,f,c
  1043  000712  50DF               	movf	indf2,w,c
  1044  000714  EC0D  F000         	call	_drawSymbol
  1045                           
  1046                           ;main.c: 68: for (unsigned int counter = 0; counter < 800; counter++) {
  1047  000718  0E00               	movlw	0
  1048  00071A  6E24               	movwf	startPong@counter+1,c
  1049  00071C  0E00               	movlw	0
  1050  00071E  6E23               	movwf	startPong@counter,c
  1051  000720                     l2139:
  1052  000720  0E20               	movlw	32
  1053  000722  5C23               	subwf	startPong@counter,w,c
  1054  000724  0E03               	movlw	3
  1055  000726  5824               	subwfb	startPong@counter+1,w,c
  1056  000728  B0D8               	btfsc	status,0,c
  1057  00072A  D005               	goto	l2149
  1058                           
  1059                           ;main.c: 69: refresh();
  1060  00072C  ECAB  F003         	call	_refresh	;wreg free
  1061  000730  4A23               	infsnz	startPong@counter,f,c
  1062  000732  2A24               	incf	startPong@counter+1,f,c
  1063  000734  D7F5               	goto	l2139
  1064  000736                     l2149:
  1065                           
  1066                           ;main.c: 70: }
  1067                           ;main.c: 71: turnAllOff();
  1068  000736  EC89  F004         	call	_turnAllOff	;wreg free
  1069                           
  1070                           ;main.c: 76: _ball.bDirection = 3;
  1071  00073A  0E03               	movlw	3
  1072  00073C  0101               	movlb	1	; () banked
  1073  00073E  6FEF               	movwf	(__ball+2)& (0+255),b
  1074                           
  1075                           ; BSR set to: 1
  1076                           ;main.c: 78: _ball.bPos[0] = 2;
  1077  000740  0E02               	movlw	2
  1078  000742  0101               	movlb	1	; () banked
  1079  000744  6FED               	movwf	__ball& (0+255),b
  1080                           
  1081                           ; BSR set to: 1
  1082                           ;main.c: 80: _ball.bPos[1] = 4;
  1083  000746  0E04               	movlw	4
  1084  000748  0101               	movlb	1	; () banked
  1085  00074A  6FEE               	movwf	(__ball+1)& (0+255),b
  1086                           
  1087                           ; BSR set to: 1
  1088                           ;main.c: 83: _nextPos[0] = _ball.bPos[0];
  1089  00074C  C1ED  F1F0         	movff	__ball,__nextPos
  1090                           
  1091                           ; BSR set to: 1
  1092                           ;main.c: 84: _nextPos[1] = _ball.bPos[1];
  1093  000750  C1EE  F1F1         	movff	__ball+1,__nextPos+1
  1094                           
  1095                           ; BSR set to: 1
  1096  000754  0012               	return		;funcret
  1097  000756                     __end_of_startPong:
  1098                           	opt stack 0
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           postdec1	equ	0xFE5
  1106                           fsr1l	equ	0xFE1
  1107                           indf2	equ	0xFDF
  1108                           postinc2	equ	0xFDE
  1109                           postdec2	equ	0xFDD
  1110                           fsr2h	equ	0xFDA
  1111                           fsr2l	equ	0xFD9
  1112                           status	equ	0xFD8
  1113                           
  1114 ;; *************** function _refresh *****************
  1115 ;; Defined at:
  1116 ;;		line 186 in file "Source/LED-API.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  theRow          1   31[COMRAM] unsigned char 
  1121 ;;  theCol          1   30[COMRAM] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1131 ;;      Params:         0       0       0       0       0       0       0
  1132 ;;      Locals:         2       0       0       0       0       0       0
  1133 ;;      Temps:          3       0       0       0       0       0       0
  1134 ;;      Totals:         5       0       0       0       0       0       0
  1135 ;;Total ram usage:        5 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    6
  1138 ;; This function calls:
  1139 ;;		_allOff
  1140 ;;		_setColHigh
  1141 ;;		_setRowHigh
  1142 ;; This function is called by:
  1143 ;;		_startPong
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text3
  1149  000756                     __ptext3:
  1150                           	opt stack 0
  1151  000756                     _refresh:
  1152                           	opt stack 24
  1153                           
  1154                           ;LED-API.c: 188: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  1155                           
  1156                           ; BSR set to: 1
  1157                           ;incstack = 0
  1158  000756  0E00               	movlw	0
  1159  000758  6E1F               	movwf	refresh@theCol,c
  1160  00075A                     l2103:
  1161  00075A  0E07               	movlw	7
  1162  00075C  641F               	cpfsgt	refresh@theCol,c
  1163  00075E  D001               	goto	l2107
  1164  000760  0012               	return	
  1165  000762                     l2107:
  1166                           
  1167                           ;LED-API.c: 190: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  1168  000762  0E00               	movlw	0
  1169  000764  6E20               	movwf	refresh@theRow,c
  1170  000766                     l2109:
  1171  000766  0E0F               	movlw	15
  1172  000768  6420               	cpfsgt	refresh@theRow,c
  1173  00076A  D001               	goto	l2113
  1174  00076C  D01A               	goto	l2121
  1175  00076E                     l2113:
  1176                           
  1177                           ;LED-API.c: 192: if (pixels[theCol][theRow] == 1)
  1178  00076E  501F               	movf	refresh@theCol,w,c
  1179  000770  0D10               	mullw	16
  1180  000772  0E00               	movlw	low _pixels
  1181  000774  6E1C               	movwf	??_refresh& (0+255),c
  1182  000776  0E02               	movlw	high _pixels
  1183  000778  6E1D               	movwf	(??_refresh+1)& (0+255),c
  1184  00077A  50F3               	movf	prodl,w,c
  1185  00077C  261C               	addwf	??_refresh,f,c
  1186  00077E  50F4               	movf	prodh,w,c
  1187  000780  221D               	addwfc	??_refresh+1,f,c
  1188  000782  5020               	movf	refresh@theRow,w,c
  1189  000784  0D01               	mullw	1
  1190  000786  50F3               	movf	prodl,w,c
  1191  000788  241C               	addwf	??_refresh,w,c
  1192  00078A  6ED9               	movwf	fsr2l,c
  1193  00078C  50F4               	movf	prodh,w,c
  1194  00078E  201D               	addwfc	??_refresh+1,w,c
  1195  000790  6EDA               	movwf	fsr2h,c
  1196  000792  04DE               	decf	postinc2,w,c
  1197  000794  A4D8               	btfss	status,2,c
  1198  000796  D003               	goto	l2117
  1199                           
  1200                           ;LED-API.c: 193: setRowHigh(theRow);
  1201  000798  5020               	movf	refresh@theRow,w,c
  1202  00079A  ECCF  F004         	call	_setRowHigh
  1203  00079E                     l2117:
  1204  00079E  2A20               	incf	refresh@theRow,f,c
  1205  0007A0  D7E2               	goto	l2109
  1206  0007A2                     l2121:
  1207                           
  1208                           ;LED-API.c: 194: }
  1209                           ;LED-API.c: 198: setColHigh(theCol);
  1210  0007A2  501F               	movf	refresh@theCol,w,c
  1211  0007A4  EC89  F005         	call	_setColHigh
  1212                           
  1213                           ;LED-API.c: 199: _delay((unsigned long)((500)*(32000000/4000000.0)));
  1214  0007A8  0E06               	movlw	6
  1215  0007AA  6E1C               	movwf	??_refresh& (0+255),c
  1216  0007AC  0E30               	movlw	48
  1217  0007AE                     u1787:
  1218  0007AE  2EE8               	decfsz	wreg,f,c
  1219  0007B0  D7FE               	goto	u1787
  1220  0007B2  2E1C               	decfsz	??_refresh& (0+255),f,c
  1221  0007B4  D7FC               	goto	u1787
  1222  0007B6  D000               	nop2	
  1223                           
  1224                           ;LED-API.c: 200: allOff();
  1225  0007B8  ECAA  F005         	call	_allOff	;wreg free
  1226  0007BC  2A1F               	incf	refresh@theCol,f,c
  1227  0007BE  D7CD               	goto	l2103
  1228  0007C0                     __end_of_refresh:
  1229                           	opt stack 0
  1230                           tblptru	equ	0xFF8
  1231                           tblptrh	equ	0xFF7
  1232                           tblptrl	equ	0xFF6
  1233                           tablat	equ	0xFF5
  1234                           prodh	equ	0xFF4
  1235                           prodl	equ	0xFF3
  1236                           postinc0	equ	0xFEE
  1237                           wreg	equ	0xFE8
  1238                           postdec1	equ	0xFE5
  1239                           fsr1l	equ	0xFE1
  1240                           indf2	equ	0xFDF
  1241                           postinc2	equ	0xFDE
  1242                           postdec2	equ	0xFDD
  1243                           fsr2h	equ	0xFDA
  1244                           fsr2l	equ	0xFD9
  1245                           status	equ	0xFD8
  1246                           
  1247 ;; *************** function _setRowHigh *****************
  1248 ;; Defined at:
  1249 ;;		line 24 in file "Source/LED-API.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  row             1    wreg     unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  row             1   26[COMRAM] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1263 ;;      Params:         0       0       0       0       0       0       0
  1264 ;;      Locals:         1       0       0       0       0       0       0
  1265 ;;      Temps:          2       0       0       0       0       0       0
  1266 ;;      Totals:         3       0       0       0       0       0       0
  1267 ;;Total ram usage:        3 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    5
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_refresh
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text4
  1278  00099E                     __ptext4:
  1279                           	opt stack 0
  1280  00099E                     _setRowHigh:
  1281                           	opt stack 24
  1282                           
  1283                           ;incstack = 0
  1284                           ;setRowHigh@row stored from wreg
  1285  00099E  6E1B               	movwf	setRowHigh@row,c
  1286                           
  1287                           ;LED-API.c: 25: if(row < 8)
  1288  0009A0  0E08               	movlw	8
  1289  0009A2  601B               	cpfslt	setRowHigh@row,c
  1290  0009A4  D00D               	goto	l1961
  1291                           
  1292                           ;LED-API.c: 26: LATC |= (1 << row);
  1293  0009A6  C01B  F019         	movff	setRowHigh@row,??_setRowHigh
  1294  0009AA  0E01               	movlw	1
  1295  0009AC  6E1A               	movwf	(??_setRowHigh+1)& (0+255),c
  1296  0009AE  2A19               	incf	??_setRowHigh,f,c
  1297  0009B0  D002               	goto	u1424
  1298  0009B2                     u1425:
  1299  0009B2  90D8               	bcf	status,0,c
  1300  0009B4  361A               	rlcf	??_setRowHigh+1,f,c
  1301  0009B6                     u1424:
  1302  0009B6  2E19               	decfsz	??_setRowHigh,f,c
  1303  0009B8  D7FC               	goto	u1425
  1304  0009BA  501A               	movf	??_setRowHigh+1,w,c
  1305  0009BC  128B               	iorwf	3979,f,c	;volatile
  1306  0009BE  0012               	return	
  1307  0009C0                     l1961:
  1308                           
  1309                           ;LED-API.c: 27: else
  1310                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  1311  0009C0  C01B  F019         	movff	setRowHigh@row,??_setRowHigh
  1312  0009C4  0EF8               	movlw	-8
  1313  0009C6  2619               	addwf	??_setRowHigh,f,c
  1314  0009C8  0E01               	movlw	1
  1315  0009CA  6E1A               	movwf	(??_setRowHigh+1)& (0+255),c
  1316  0009CC  2A19               	incf	??_setRowHigh,f,c
  1317  0009CE  D002               	goto	u1434
  1318  0009D0                     u1435:
  1319  0009D0  90D8               	bcf	status,0,c
  1320  0009D2  361A               	rlcf	??_setRowHigh+1,f,c
  1321  0009D4                     u1434:
  1322  0009D4  2E19               	decfsz	??_setRowHigh,f,c
  1323  0009D6  D7FC               	goto	u1435
  1324  0009D8  501A               	movf	??_setRowHigh+1,w,c
  1325  0009DA  128C               	iorwf	3980,f,c	;volatile
  1326  0009DC  0012               	return	
  1327  0009DE                     __end_of_setRowHigh:
  1328                           	opt stack 0
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           prodh	equ	0xFF4
  1334                           prodl	equ	0xFF3
  1335                           postinc0	equ	0xFEE
  1336                           wreg	equ	0xFE8
  1337                           postdec1	equ	0xFE5
  1338                           fsr1l	equ	0xFE1
  1339                           indf2	equ	0xFDF
  1340                           postinc2	equ	0xFDE
  1341                           postdec2	equ	0xFDD
  1342                           fsr2h	equ	0xFDA
  1343                           fsr2l	equ	0xFD9
  1344                           status	equ	0xFD8
  1345                           
  1346 ;; *************** function _setColHigh *****************
  1347 ;; Defined at:
  1348 ;;		line 20 in file "Source/LED-API.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  column          1    wreg     unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  column          1   26[COMRAM] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1362 ;;      Params:         0       0       0       0       0       0       0
  1363 ;;      Locals:         1       0       0       0       0       0       0
  1364 ;;      Temps:          2       0       0       0       0       0       0
  1365 ;;      Totals:         3       0       0       0       0       0       0
  1366 ;;Total ram usage:        3 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    5
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_refresh
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text5
  1377  000B12                     __ptext5:
  1378                           	opt stack 0
  1379  000B12                     _setColHigh:
  1380                           	opt stack 24
  1381                           
  1382                           ;incstack = 0
  1383                           ;setColHigh@column stored from wreg
  1384  000B12  6E1B               	movwf	setColHigh@column,c
  1385                           
  1386                           ;LED-API.c: 21: LATA |= (1 << column);
  1387  000B14  C01B  F019         	movff	setColHigh@column,??_setColHigh
  1388  000B18  0E01               	movlw	1
  1389  000B1A  6E1A               	movwf	(??_setColHigh+1)& (0+255),c
  1390  000B1C  2A19               	incf	??_setColHigh,f,c
  1391  000B1E  D002               	goto	u1404
  1392  000B20                     u1405:
  1393  000B20  90D8               	bcf	status,0,c
  1394  000B22  361A               	rlcf	??_setColHigh+1,f,c
  1395  000B24                     u1404:
  1396  000B24  2E19               	decfsz	??_setColHigh,f,c
  1397  000B26  D7FC               	goto	u1405
  1398  000B28  501A               	movf	??_setColHigh+1,w,c
  1399  000B2A  1289               	iorwf	3977,f,c	;volatile
  1400  000B2C  0012               	return		;funcret
  1401  000B2E                     __end_of_setColHigh:
  1402                           	opt stack 0
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           prodh	equ	0xFF4
  1408                           prodl	equ	0xFF3
  1409                           postinc0	equ	0xFEE
  1410                           wreg	equ	0xFE8
  1411                           postdec1	equ	0xFE5
  1412                           fsr1l	equ	0xFE1
  1413                           indf2	equ	0xFDF
  1414                           postinc2	equ	0xFDE
  1415                           postdec2	equ	0xFDD
  1416                           fsr2h	equ	0xFDA
  1417                           fsr2l	equ	0xFD9
  1418                           status	equ	0xFD8
  1419                           
  1420 ;; *************** function _allOff *****************
  1421 ;; Defined at:
  1422 ;;		line 180 in file "Source/LED-API.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1436 ;;      Params:         0       0       0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0
  1439 ;;      Totals:         0       0       0       0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    5
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_refresh
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text6
  1451  000B54                     __ptext6:
  1452                           	opt stack 0
  1453  000B54                     _allOff:
  1454                           	opt stack 24
  1455                           
  1456                           ;LED-API.c: 181: LATA = 0;
  1457                           
  1458                           ;incstack = 0
  1459  000B54  0E00               	movlw	0
  1460  000B56  6E89               	movwf	3977,c	;volatile
  1461                           
  1462                           ;LED-API.c: 182: LATC = 0;
  1463  000B58  0E00               	movlw	0
  1464  000B5A  6E8B               	movwf	3979,c	;volatile
  1465                           
  1466                           ;LED-API.c: 183: LATD = 0;
  1467  000B5C  0E00               	movlw	0
  1468  000B5E  6E8C               	movwf	3980,c	;volatile
  1469  000B60  0012               	return		;funcret
  1470  000B62                     __end_of_allOff:
  1471                           	opt stack 0
  1472                           tblptru	equ	0xFF8
  1473                           tblptrh	equ	0xFF7
  1474                           tblptrl	equ	0xFF6
  1475                           tablat	equ	0xFF5
  1476                           prodh	equ	0xFF4
  1477                           prodl	equ	0xFF3
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           postdec1	equ	0xFE5
  1481                           fsr1l	equ	0xFE1
  1482                           indf2	equ	0xFDF
  1483                           postinc2	equ	0xFDE
  1484                           postdec2	equ	0xFDD
  1485                           fsr2h	equ	0xFDA
  1486                           fsr2l	equ	0xFD9
  1487                           status	equ	0xFD8
  1488                           
  1489 ;; *************** function _drawSymbol *****************
  1490 ;; Defined at:
  1491 ;;		line 85 in file "Source/LED-API.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  chosenSymbol    1    wreg     unsigned char 
  1494 ;;  offSetX         1   28[COMRAM] unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  chosenSymbol    1   29[COMRAM] unsigned char 
  1497 ;;  i               1   70[BANK1 ] unsigned char 
  1498 ;;  i               1   69[BANK1 ] unsigned char 
  1499 ;;  i               1   68[BANK1 ] unsigned char 
  1500 ;;  i               1   33[COMRAM] unsigned char 
  1501 ;;  i               1   32[COMRAM] unsigned char 
  1502 ;;  i               1   31[COMRAM] unsigned char 
  1503 ;;  i               1   30[COMRAM] unsigned char 
  1504 ;;  symbolArrowR   16   38[BANK2 ] unsigned char [2][8]
  1505 ;;  symbolArrowL   16   22[BANK2 ] unsigned char [2][8]
  1506 ;;  symbolGo       68    0[BANK1 ] unsigned char [2][34]
  1507 ;;  symbolPlay     68    0[BANK0 ] unsigned char [2][34]
  1508 ;;  symbolThree    30   98[BANK0 ] unsigned char [2][15]
  1509 ;;  symbolTwo      30   68[BANK0 ] unsigned char [2][15]
  1510 ;;  symbolOne      22    0[BANK2 ] unsigned char [2][11]
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1520 ;;      Params:         1       0       0       0       0       0       0
  1521 ;;      Locals:         5     128      71      54       0       0       0
  1522 ;;      Temps:          0       0       0       0       0       0       0
  1523 ;;      Totals:         6     128      71      54       0       0       0
  1524 ;;Total ram usage:      259 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    6
  1527 ;; This function calls:
  1528 ;;		_on
  1529 ;; This function is called by:
  1530 ;;		_startPong
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text7
  1535  00001A                     __ptext7:
  1536                           	opt stack 0
  1537  00001A                     _drawSymbol:
  1538                           	opt stack 22
  1539                           
  1540                           ;incstack = 0
  1541                           ;drawSymbol@chosenSymbol stored from wreg
  1542  00001A  6E1E               	movwf	drawSymbol@chosenSymbol,c
  1543                           
  1544                           ;LED-API.c: 87: switch(chosenSymbol)
  1545  00001C  D13B               	goto	l2099
  1546  00001E                     l1999:
  1547                           
  1548                           ;LED-API.c: 91: {
  1549                           ;LED-API.c: 92: char symbolOne[11][2] = {{2,0},{3,0}, {4,0}, {3,1}, {3,2}, {3,3}, {3,4},
      +                           {3,5}, {3,6}, {3,7}, {4,6}};
  1550  00001E  EE21  F080         	lfsr	2,drawSymbol@F3224
  1551  000022  EE12  F0C4         	lfsr	1,drawSymbol@symbolOne
  1552  000026  0E15               	movlw	21
  1553  000028                     u1501:
  1554  000028  CFDB FFE3          	movff	plusw2,plusw1
  1555  00002C  06E8               	decf	wreg,f,c
  1556  00002E  E2FC               	bc	u1501
  1557                           
  1558                           ;LED-API.c: 93: for(unsigned char i = 0; i < 11; i++)
  1559  000030  0E00               	movlw	0
  1560  000032  6E1F               	movwf	drawSymbol@i,c
  1561  000034                     l2003:
  1562  000034  0E0A               	movlw	10
  1563  000036  641F               	cpfsgt	drawSymbol@i,c
  1564  000038  D001               	goto	l2007
  1565  00003A  0012               	return	
  1566  00003C                     l2007:
  1567                           
  1568                           ;LED-API.c: 94: {
  1569                           ;LED-API.c: 95: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  1570  00003C  501F               	movf	drawSymbol@i,w,c
  1571  00003E  0D02               	mullw	2
  1572  000040  0EC4               	movlw	low drawSymbol@symbolOne
  1573  000042  24F3               	addwf	prodl,w,c
  1574  000044  6ED9               	movwf	fsr2l,c
  1575  000046  0E02               	movlw	high drawSymbol@symbolOne
  1576  000048  20F4               	addwfc	prodh,w,c
  1577  00004A  6EDA               	movwf	fsr2h,c
  1578  00004C  50DF               	movf	indf2,w,c
  1579  00004E  241D               	addwf	drawSymbol@offSetX,w,c
  1580  000050  6E19               	movwf	on@row,c
  1581  000052  501F               	movf	drawSymbol@i,w,c
  1582  000054  0D02               	mullw	2
  1583  000056  0E01               	movlw	1
  1584  000058  26F3               	addwf	prodl,f,c
  1585  00005A  0E00               	movlw	0
  1586  00005C  22F4               	addwfc	prodh,f,c
  1587  00005E  0EC4               	movlw	low drawSymbol@symbolOne
  1588  000060  24F3               	addwf	prodl,w,c
  1589  000062  6ED9               	movwf	fsr2l,c
  1590  000064  0E02               	movlw	high drawSymbol@symbolOne
  1591  000066  20F4               	addwfc	prodh,w,c
  1592  000068  6EDA               	movwf	fsr2h,c
  1593  00006A  50DF               	movf	indf2,w,c
  1594  00006C  ECEF  F004         	call	_on
  1595  000070  2A1F               	incf	drawSymbol@i,f,c
  1596  000072  D7E0               	goto	l2003
  1597  000074                     l2013:
  1598                           
  1599                           ;LED-API.c: 101: {
  1600                           ;LED-API.c: 102: char symbolTwo[15][2] = {{1,0}, {2,0}, {3,0}, {4,0}, {5,0}, {5,1}, {4,2
      +                          }, {3,3}, {2,4}, {1,5}, {1,6}, {5,6}, {2,7}, {3,7}, {4,7}};
  1601  000074  EE21  F044         	lfsr	2,drawSymbol@F3228
  1602  000078  EE10  F0C4         	lfsr	1,drawSymbol@symbolTwo
  1603  00007C  0E1D               	movlw	29
  1604  00007E                     u1531:
  1605  00007E  CFDB FFE3          	movff	plusw2,plusw1
  1606  000082  06E8               	decf	wreg,f,c
  1607  000084  E2FC               	bc	u1531
  1608                           
  1609                           ;LED-API.c: 104: for(unsigned char i = 0; i < 15; i++)
  1610  000086  0E00               	movlw	0
  1611  000088  6E20               	movwf	drawSymbol@i_67,c
  1612  00008A                     l2017:
  1613  00008A  0E0E               	movlw	14
  1614  00008C  6420               	cpfsgt	drawSymbol@i_67,c
  1615  00008E  D001               	goto	l2021
  1616  000090  0012               	return	
  1617  000092                     l2021:
  1618                           
  1619                           ;LED-API.c: 105: {
  1620                           ;LED-API.c: 106: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  1621  000092  5020               	movf	drawSymbol@i_67,w,c
  1622  000094  0D02               	mullw	2
  1623  000096  0EC4               	movlw	low drawSymbol@symbolTwo
  1624  000098  24F3               	addwf	prodl,w,c
  1625  00009A  6ED9               	movwf	fsr2l,c
  1626  00009C  0E00               	movlw	high drawSymbol@symbolTwo
  1627  00009E  20F4               	addwfc	prodh,w,c
  1628  0000A0  6EDA               	movwf	fsr2h,c
  1629  0000A2  50DF               	movf	indf2,w,c
  1630  0000A4  241D               	addwf	drawSymbol@offSetX,w,c
  1631  0000A6  6E19               	movwf	on@row,c
  1632  0000A8  5020               	movf	drawSymbol@i_67,w,c
  1633  0000AA  0D02               	mullw	2
  1634  0000AC  0E01               	movlw	1
  1635  0000AE  26F3               	addwf	prodl,f,c
  1636  0000B0  0E00               	movlw	0
  1637  0000B2  22F4               	addwfc	prodh,f,c
  1638  0000B4  0EC4               	movlw	low drawSymbol@symbolTwo
  1639  0000B6  24F3               	addwf	prodl,w,c
  1640  0000B8  6ED9               	movwf	fsr2l,c
  1641  0000BA  0E00               	movlw	high drawSymbol@symbolTwo
  1642  0000BC  20F4               	addwfc	prodh,w,c
  1643  0000BE  6EDA               	movwf	fsr2h,c
  1644  0000C0  50DF               	movf	indf2,w,c
  1645  0000C2  ECEF  F004         	call	_on
  1646  0000C6  2A20               	incf	drawSymbol@i_67,f,c
  1647  0000C8  D7E0               	goto	l2017
  1648  0000CA                     l2027:
  1649                           
  1650                           ;LED-API.c: 112: {
  1651                           ;LED-API.c: 113: char symbolThree[15][2] = {{2,0}, {3,0}, {4,0}, {5,1}, {1,1}, {1,2}, {1
      +                          ,3}, {2,4}, {3,4}, {1,5}, {1,6}, {2,7}, {3,7}, {4,7}, {5,6}};
  1652  0000CA  EE21  F062         	lfsr	2,drawSymbol@F3232
  1653  0000CE  EE10  F0E2         	lfsr	1,drawSymbol@symbolThree
  1654  0000D2  0E1D               	movlw	29
  1655  0000D4                     u1561:
  1656  0000D4  CFDB FFE3          	movff	plusw2,plusw1
  1657  0000D8  06E8               	decf	wreg,f,c
  1658  0000DA  E2FC               	bc	u1561
  1659                           
  1660                           ;LED-API.c: 115: for(unsigned char i = 0; i < 15; i++)
  1661  0000DC  0E00               	movlw	0
  1662  0000DE  6E21               	movwf	drawSymbol@i_71,c
  1663  0000E0                     l2031:
  1664  0000E0  0E0E               	movlw	14
  1665  0000E2  6421               	cpfsgt	drawSymbol@i_71,c
  1666  0000E4  D001               	goto	l2035
  1667  0000E6  0012               	return	
  1668  0000E8                     l2035:
  1669                           
  1670                           ;LED-API.c: 116: {
  1671                           ;LED-API.c: 117: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  1672  0000E8  5021               	movf	drawSymbol@i_71,w,c
  1673  0000EA  0D02               	mullw	2
  1674  0000EC  0EE2               	movlw	low drawSymbol@symbolThree
  1675  0000EE  24F3               	addwf	prodl,w,c
  1676  0000F0  6ED9               	movwf	fsr2l,c
  1677  0000F2  0E00               	movlw	high drawSymbol@symbolThree
  1678  0000F4  20F4               	addwfc	prodh,w,c
  1679  0000F6  6EDA               	movwf	fsr2h,c
  1680  0000F8  50DF               	movf	indf2,w,c
  1681  0000FA  241D               	addwf	drawSymbol@offSetX,w,c
  1682  0000FC  6E19               	movwf	on@row,c
  1683  0000FE  5021               	movf	drawSymbol@i_71,w,c
  1684  000100  0D02               	mullw	2
  1685  000102  0E01               	movlw	1
  1686  000104  26F3               	addwf	prodl,f,c
  1687  000106  0E00               	movlw	0
  1688  000108  22F4               	addwfc	prodh,f,c
  1689  00010A  0EE2               	movlw	low drawSymbol@symbolThree
  1690  00010C  24F3               	addwf	prodl,w,c
  1691  00010E  6ED9               	movwf	fsr2l,c
  1692  000110  0E00               	movlw	high drawSymbol@symbolThree
  1693  000112  20F4               	addwfc	prodh,w,c
  1694  000114  6EDA               	movwf	fsr2h,c
  1695  000116  50DF               	movf	indf2,w,c
  1696  000118  ECEF  F004         	call	_on
  1697  00011C  2A21               	incf	drawSymbol@i_71,f,c
  1698  00011E  D7E0               	goto	l2031
  1699  000120                     l2041:
  1700                           
  1701                           ;LED-API.c: 123: {
  1702                           ;LED-API.c: 124: char symbolPlay[34][2] = {
  1703                           ;LED-API.c: 125: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  1704                           ;LED-API.c: 126: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  1705                           ;LED-API.c: 127: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  1706                           ;LED-API.c: 128: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  1707  000120  EE21  F000         	lfsr	2,drawSymbol@F3236
  1708  000124  EE10  F080         	lfsr	1,drawSymbol@symbolPlay
  1709  000128  0E43               	movlw	67
  1710  00012A                     u1591:
  1711  00012A  CFDB FFE3          	movff	plusw2,plusw1
  1712  00012E  06E8               	decf	wreg,f,c
  1713  000130  E2FC               	bc	u1591
  1714                           
  1715                           ;LED-API.c: 130: for(unsigned char i = 0; i < 34; i++)
  1716  000132  0E00               	movlw	0
  1717  000134  6E22               	movwf	drawSymbol@i_75,c
  1718  000136                     l2045:
  1719  000136  0E21               	movlw	33
  1720  000138  6422               	cpfsgt	drawSymbol@i_75,c
  1721  00013A  D001               	goto	l2049
  1722  00013C  0012               	return	
  1723  00013E                     l2049:
  1724                           
  1725                           ;LED-API.c: 131: {
  1726                           ;LED-API.c: 132: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  1727  00013E  5022               	movf	drawSymbol@i_75,w,c
  1728  000140  0D02               	mullw	2
  1729  000142  0E80               	movlw	low drawSymbol@symbolPlay
  1730  000144  24F3               	addwf	prodl,w,c
  1731  000146  6ED9               	movwf	fsr2l,c
  1732  000148  0E00               	movlw	high drawSymbol@symbolPlay
  1733  00014A  20F4               	addwfc	prodh,w,c
  1734  00014C  6EDA               	movwf	fsr2h,c
  1735  00014E  50DF               	movf	indf2,w,c
  1736  000150  241D               	addwf	drawSymbol@offSetX,w,c
  1737  000152  6E19               	movwf	on@row,c
  1738  000154  5022               	movf	drawSymbol@i_75,w,c
  1739  000156  0D02               	mullw	2
  1740  000158  0E01               	movlw	1
  1741  00015A  26F3               	addwf	prodl,f,c
  1742  00015C  0E00               	movlw	0
  1743  00015E  22F4               	addwfc	prodh,f,c
  1744  000160  0E80               	movlw	low drawSymbol@symbolPlay
  1745  000162  24F3               	addwf	prodl,w,c
  1746  000164  6ED9               	movwf	fsr2l,c
  1747  000166  0E00               	movlw	high drawSymbol@symbolPlay
  1748  000168  20F4               	addwfc	prodh,w,c
  1749  00016A  6EDA               	movwf	fsr2h,c
  1750  00016C  50DF               	movf	indf2,w,c
  1751  00016E  ECEF  F004         	call	_on
  1752  000172  2A22               	incf	drawSymbol@i_75,f,c
  1753  000174  D7E0               	goto	l2045
  1754  000176                     l2055:
  1755                           
  1756                           ;LED-API.c: 138: {
  1757                           ;LED-API.c: 139: char symbolGo[34][2] = {
  1758                           ;LED-API.c: 140: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0}
      +                          ,{5,0},{6,1},{5,2},{4,2},
  1759                           ;LED-API.c: 141: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},
      +                          {13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  1760  000176  EE22  F080         	lfsr	2,drawSymbol@F3240
  1761  00017A  EE11  F0A6         	lfsr	1,drawSymbol@symbolGo
  1762  00017E  0E43               	movlw	67
  1763  000180                     u1621:
  1764  000180  CFDB FFE3          	movff	plusw2,plusw1
  1765  000184  06E8               	decf	wreg,f,c
  1766  000186  E2FC               	bc	u1621
  1767                           
  1768                           ;LED-API.c: 143: for(unsigned char i = 0; i < 34; i++)
  1769  000188  0E00               	movlw	0
  1770  00018A  0101               	movlb	1	; () banked
  1771  00018C  6FEA               	movwf	drawSymbol@i_79& (0+255),b
  1772  00018E                     l2059:
  1773                           
  1774                           ; BSR set to: 1
  1775  00018E  0E21               	movlw	33
  1776  000190  0101               	movlb	1	; () banked
  1777  000192  65EA               	cpfsgt	drawSymbol@i_79& (0+255),b
  1778  000194  D001               	goto	l2063
  1779  000196  0012               	return	
  1780  000198                     l2063:
  1781                           
  1782                           ; BSR set to: 1
  1783                           ;LED-API.c: 144: {
  1784                           ;LED-API.c: 145: on(symbolGo[i][1], symbolGo[i][0]);
  1785  000198  0101               	movlb	1	; () banked
  1786  00019A  51EA               	movf	drawSymbol@i_79& (0+255),w,b
  1787  00019C  0D02               	mullw	2
  1788  00019E  0EA6               	movlw	low drawSymbol@symbolGo
  1789  0001A0  24F3               	addwf	prodl,w,c
  1790  0001A2  6ED9               	movwf	fsr2l,c
  1791  0001A4  0E01               	movlw	high drawSymbol@symbolGo
  1792  0001A6  20F4               	addwfc	prodh,w,c
  1793  0001A8  6EDA               	movwf	fsr2h,c
  1794  0001AA  50DF               	movf	indf2,w,c
  1795  0001AC  6E19               	movwf	on@row,c
  1796  0001AE  0101               	movlb	1	; () banked
  1797  0001B0  51EA               	movf	drawSymbol@i_79& (0+255),w,b
  1798  0001B2  0D02               	mullw	2
  1799  0001B4  0E01               	movlw	1
  1800  0001B6  26F3               	addwf	prodl,f,c
  1801  0001B8  0E00               	movlw	0
  1802  0001BA  22F4               	addwfc	prodh,f,c
  1803  0001BC  0EA6               	movlw	low drawSymbol@symbolGo
  1804  0001BE  24F3               	addwf	prodl,w,c
  1805  0001C0  6ED9               	movwf	fsr2l,c
  1806  0001C2  0E01               	movlw	high drawSymbol@symbolGo
  1807  0001C4  20F4               	addwfc	prodh,w,c
  1808  0001C6  6EDA               	movwf	fsr2h,c
  1809  0001C8  50DF               	movf	indf2,w,c
  1810  0001CA  ECEF  F004         	call	_on
  1811  0001CE  0101               	movlb	1	; () banked
  1812  0001D0  2BEA               	incf	drawSymbol@i_79& (0+255),f,b
  1813  0001D2  D7DD               	goto	l2059
  1814  0001D4                     l2069:
  1815                           
  1816                           ;LED-API.c: 150: {
  1817                           ;LED-API.c: 151: char symbolArrowLeft[8][2] = {{3,0}, {3,7}, {4,1}, {4,6}, {5,2}, {5,5},
      +                           {6,3}, {6,4}};
  1818  0001D4  EE20  F025         	lfsr	2,drawSymbol@F3244
  1819  0001D8  EE12  F0DA         	lfsr	1,drawSymbol@symbolArrowLeft
  1820  0001DC  0E0F               	movlw	15
  1821  0001DE                     u1651:
  1822  0001DE  CFDB FFE3          	movff	plusw2,plusw1
  1823  0001E2  06E8               	decf	wreg,f,c
  1824  0001E4  E2FC               	bc	u1651
  1825                           
  1826                           ;LED-API.c: 152: for(unsigned char i = 0; i < 8; i++)
  1827  0001E6  0E00               	movlw	0
  1828  0001E8  0101               	movlb	1	; () banked
  1829  0001EA  6FEB               	movwf	drawSymbol@i_83& (0+255),b
  1830  0001EC                     l2073:
  1831                           
  1832                           ; BSR set to: 1
  1833  0001EC  0E07               	movlw	7
  1834  0001EE  0101               	movlb	1	; () banked
  1835  0001F0  65EB               	cpfsgt	drawSymbol@i_83& (0+255),b
  1836  0001F2  D001               	goto	l2077
  1837  0001F4  0012               	return	
  1838  0001F6                     l2077:
  1839                           
  1840                           ; BSR set to: 1
  1841                           ;LED-API.c: 153: {
  1842                           ;LED-API.c: 154: on(symbolArrowLeft[i][1], symbolArrowLeft[i][0] + offSetX);
  1843  0001F6  0101               	movlb	1	; () banked
  1844  0001F8  51EB               	movf	drawSymbol@i_83& (0+255),w,b
  1845  0001FA  0D02               	mullw	2
  1846  0001FC  0EDA               	movlw	low drawSymbol@symbolArrowLeft
  1847  0001FE  24F3               	addwf	prodl,w,c
  1848  000200  6ED9               	movwf	fsr2l,c
  1849  000202  0E02               	movlw	high drawSymbol@symbolArrowLeft
  1850  000204  20F4               	addwfc	prodh,w,c
  1851  000206  6EDA               	movwf	fsr2h,c
  1852  000208  50DF               	movf	indf2,w,c
  1853  00020A  241D               	addwf	drawSymbol@offSetX,w,c
  1854  00020C  6E19               	movwf	on@row,c
  1855  00020E  0101               	movlb	1	; () banked
  1856  000210  51EB               	movf	drawSymbol@i_83& (0+255),w,b
  1857  000212  0D02               	mullw	2
  1858  000214  0E01               	movlw	1
  1859  000216  26F3               	addwf	prodl,f,c
  1860  000218  0E00               	movlw	0
  1861  00021A  22F4               	addwfc	prodh,f,c
  1862  00021C  0EDA               	movlw	low drawSymbol@symbolArrowLeft
  1863  00021E  24F3               	addwf	prodl,w,c
  1864  000220  6ED9               	movwf	fsr2l,c
  1865  000222  0E02               	movlw	high drawSymbol@symbolArrowLeft
  1866  000224  20F4               	addwfc	prodh,w,c
  1867  000226  6EDA               	movwf	fsr2h,c
  1868  000228  50DF               	movf	indf2,w,c
  1869  00022A  ECEF  F004         	call	_on
  1870  00022E  0101               	movlb	1	; () banked
  1871  000230  2BEB               	incf	drawSymbol@i_83& (0+255),f,b
  1872  000232  D7DC               	goto	l2073
  1873  000234                     l2083:
  1874                           
  1875                           ;LED-API.c: 159: {
  1876                           ;LED-API.c: 160: char symbolArrowRight[8][2] = {{4,0}, {3,1}, {2,2}, {1,3}, {1,4}, {2,5}
      +                          , {3,6}, {4,7}};
  1877  000234  EE21  F096         	lfsr	2,drawSymbol@F3248
  1878  000238  EE12  F0EA         	lfsr	1,drawSymbol@symbolArrowRight
  1879  00023C  0E0F               	movlw	15
  1880  00023E                     u1681:
  1881  00023E  CFDB FFE3          	movff	plusw2,plusw1
  1882  000242  06E8               	decf	wreg,f,c
  1883  000244  E2FC               	bc	u1681
  1884                           
  1885                           ;LED-API.c: 161: for(unsigned char i = 0; i < 8; i++)
  1886  000246  0E00               	movlw	0
  1887  000248  0101               	movlb	1	; () banked
  1888  00024A  6FEC               	movwf	drawSymbol@i_87& (0+255),b
  1889  00024C                     l2087:
  1890                           
  1891                           ; BSR set to: 1
  1892  00024C  0E07               	movlw	7
  1893  00024E  0101               	movlb	1	; () banked
  1894  000250  65EC               	cpfsgt	drawSymbol@i_87& (0+255),b
  1895  000252  D001               	goto	l2091
  1896  000254  0012               	return	
  1897  000256                     l2091:
  1898                           
  1899                           ; BSR set to: 1
  1900                           ;LED-API.c: 162: {
  1901                           ;LED-API.c: 163: on(symbolArrowRight[i][1], symbolArrowRight[i][0]+ offSetX);
  1902  000256  0101               	movlb	1	; () banked
  1903  000258  51EC               	movf	drawSymbol@i_87& (0+255),w,b
  1904  00025A  0D02               	mullw	2
  1905  00025C  0EEA               	movlw	low drawSymbol@symbolArrowRight
  1906  00025E  24F3               	addwf	prodl,w,c
  1907  000260  6ED9               	movwf	fsr2l,c
  1908  000262  0E02               	movlw	high drawSymbol@symbolArrowRight
  1909  000264  20F4               	addwfc	prodh,w,c
  1910  000266  6EDA               	movwf	fsr2h,c
  1911  000268  50DF               	movf	indf2,w,c
  1912  00026A  241D               	addwf	drawSymbol@offSetX,w,c
  1913  00026C  6E19               	movwf	on@row,c
  1914  00026E  0101               	movlb	1	; () banked
  1915  000270  51EC               	movf	drawSymbol@i_87& (0+255),w,b
  1916  000272  0D02               	mullw	2
  1917  000274  0E01               	movlw	1
  1918  000276  26F3               	addwf	prodl,f,c
  1919  000278  0E00               	movlw	0
  1920  00027A  22F4               	addwfc	prodh,f,c
  1921  00027C  0EEA               	movlw	low drawSymbol@symbolArrowRight
  1922  00027E  24F3               	addwf	prodl,w,c
  1923  000280  6ED9               	movwf	fsr2l,c
  1924  000282  0E02               	movlw	high drawSymbol@symbolArrowRight
  1925  000284  20F4               	addwfc	prodh,w,c
  1926  000286  6EDA               	movwf	fsr2h,c
  1927  000288  50DF               	movf	indf2,w,c
  1928  00028A  ECEF  F004         	call	_on
  1929  00028E  0101               	movlb	1	; () banked
  1930  000290  2BEC               	incf	drawSymbol@i_87& (0+255),f,b
  1931  000292  D7DC               	goto	l2087
  1932  000294                     l2099:
  1933  000294  501E               	movf	drawSymbol@chosenSymbol,w,c
  1934                           
  1935                           ; Switch size 1, requested type "space"
  1936                           ; Number of cases is 7, Range of values is 1 to 7
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte           22    12 (average)
  1940                           ;	Chosen strategy is simple_byte
  1941  000296  0A01               	xorlw	1	; case 1
  1942  000298  B4D8               	btfsc	status,2,c
  1943  00029A  D6C1               	goto	l1999
  1944  00029C  0A03               	xorlw	3	; case 2
  1945  00029E  B4D8               	btfsc	status,2,c
  1946  0002A0  D6E9               	goto	l2013
  1947  0002A2  0A01               	xorlw	1	; case 3
  1948  0002A4  B4D8               	btfsc	status,2,c
  1949  0002A6  D711               	goto	l2027
  1950  0002A8  0A07               	xorlw	7	; case 4
  1951  0002AA  B4D8               	btfsc	status,2,c
  1952  0002AC  D739               	goto	l2041
  1953  0002AE  0A01               	xorlw	1	; case 5
  1954  0002B0  B4D8               	btfsc	status,2,c
  1955  0002B2  D761               	goto	l2055
  1956  0002B4  0A03               	xorlw	3	; case 6
  1957  0002B6  B4D8               	btfsc	status,2,c
  1958  0002B8  D78D               	goto	l2069
  1959  0002BA  0A01               	xorlw	1	; case 7
  1960  0002BC  A4D8               	btfss	status,2,c
  1961  0002BE  0012               	return	
  1962  0002C0  D7B9               	goto	l2083
  1963  0002C2                     __end_of_drawSymbol:
  1964                           	opt stack 0
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           prodh	equ	0xFF4
  1970                           prodl	equ	0xFF3
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           postdec1	equ	0xFE5
  1974                           plusw1	equ	0xFE3
  1975                           fsr1l	equ	0xFE1
  1976                           indf2	equ	0xFDF
  1977                           postinc2	equ	0xFDE
  1978                           postdec2	equ	0xFDD
  1979                           plusw2	equ	0xFDB
  1980                           fsr2h	equ	0xFDA
  1981                           fsr2l	equ	0xFD9
  1982                           status	equ	0xFD8
  1983                           
  1984 ;; *************** function _on *****************
  1985 ;; Defined at:
  1986 ;;		line 43 in file "Source/LED-API.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  column          1    wreg     unsigned char 
  1989 ;;  row             1   24[COMRAM] unsigned char 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  column          1   27[COMRAM] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2001 ;;      Params:         1       0       0       0       0       0       0
  2002 ;;      Locals:         1       0       0       0       0       0       0
  2003 ;;      Temps:          2       0       0       0       0       0       0
  2004 ;;      Totals:         4       0       0       0       0       0       0
  2005 ;;Total ram usage:        4 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    5
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_drawSymbol
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text8
  2016  0009DE                     __ptext8:
  2017                           	opt stack 0
  2018  0009DE                     _on:
  2019                           	opt stack 22
  2020                           
  2021                           ;incstack = 0
  2022                           ;on@column stored from wreg
  2023  0009DE  6E1C               	movwf	on@column,c
  2024                           
  2025                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  2026  0009E0  0E0F               	movlw	15
  2027  0009E2  6419               	cpfsgt	on@row,c
  2028  0009E4  D001               	goto	l1967
  2029  0009E6  0012               	return	
  2030  0009E8                     l1967:
  2031                           
  2032                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  2033  0009E8  0E07               	movlw	7
  2034  0009EA  641C               	cpfsgt	on@column,c
  2035  0009EC  D001               	goto	l1971
  2036  0009EE  0012               	return	
  2037  0009F0                     l1971:
  2038                           
  2039                           ;LED-API.c: 50: pixels[column][row] = 1;
  2040  0009F0  501C               	movf	on@column,w,c
  2041  0009F2  0D10               	mullw	16
  2042  0009F4  0E00               	movlw	low _pixels
  2043  0009F6  6E1A               	movwf	??_on& (0+255),c
  2044  0009F8  0E02               	movlw	high _pixels
  2045  0009FA  6E1B               	movwf	(??_on+1)& (0+255),c
  2046  0009FC  50F3               	movf	prodl,w,c
  2047  0009FE  261A               	addwf	??_on,f,c
  2048  000A00  50F4               	movf	prodh,w,c
  2049  000A02  221B               	addwfc	??_on+1,f,c
  2050  000A04  5019               	movf	on@row,w,c
  2051  000A06  0D01               	mullw	1
  2052  000A08  50F3               	movf	prodl,w,c
  2053  000A0A  241A               	addwf	??_on,w,c
  2054  000A0C  6ED9               	movwf	fsr2l,c
  2055  000A0E  50F4               	movf	prodh,w,c
  2056  000A10  201B               	addwfc	??_on+1,w,c
  2057  000A12  6EDA               	movwf	fsr2h,c
  2058  000A14  0E01               	movlw	1
  2059  000A16  6EDF               	movwf	indf2,c
  2060  000A18  0012               	return		;funcret
  2061  000A1A                     __end_of_on:
  2062                           	opt stack 0
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           prodh	equ	0xFF4
  2068                           prodl	equ	0xFF3
  2069                           postinc0	equ	0xFEE
  2070                           wreg	equ	0xFE8
  2071                           postdec1	equ	0xFE5
  2072                           plusw1	equ	0xFE3
  2073                           fsr1l	equ	0xFE1
  2074                           indf2	equ	0xFDF
  2075                           postinc2	equ	0xFDE
  2076                           postdec2	equ	0xFDD
  2077                           plusw2	equ	0xFDB
  2078                           fsr2h	equ	0xFDA
  2079                           fsr2l	equ	0xFD9
  2080                           status	equ	0xFD8
  2081                           
  2082 ;; *************** function _initializeLED *****************
  2083 ;; Defined at:
  2084 ;;		line 31 in file "Source/LED-API.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2098 ;;      Params:         0       0       0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    6
  2105 ;; This function calls:
  2106 ;;		_turnAllOff
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text9
  2113  000AF4                     __ptext9:
  2114                           	opt stack 0
  2115  000AF4                     _initializeLED:
  2116                           	opt stack 24
  2117                           
  2118                           ;LED-API.c: 32: TRISA = 0b00000000;
  2119                           
  2120                           ;incstack = 0
  2121  000AF4  0E00               	movlw	0
  2122  000AF6  6E92               	movwf	3986,c	;volatile
  2123                           
  2124                           ;LED-API.c: 33: TRISC = 0b00000000;
  2125  000AF8  0E00               	movlw	0
  2126  000AFA  6E94               	movwf	3988,c	;volatile
  2127                           
  2128                           ;LED-API.c: 34: TRISD = 0b00000000;
  2129  000AFC  0E00               	movlw	0
  2130  000AFE  6E95               	movwf	3989,c	;volatile
  2131                           
  2132                           ;LED-API.c: 35: LATA = 0b00000000;
  2133  000B00  0E00               	movlw	0
  2134  000B02  6E89               	movwf	3977,c	;volatile
  2135                           
  2136                           ;LED-API.c: 36: LATC = 0b00000000;
  2137  000B04  0E00               	movlw	0
  2138  000B06  6E8B               	movwf	3979,c	;volatile
  2139                           
  2140                           ;LED-API.c: 37: LATD = 0b00000000;
  2141  000B08  0E00               	movlw	0
  2142  000B0A  6E8C               	movwf	3980,c	;volatile
  2143                           
  2144                           ;LED-API.c: 40: turnAllOff();
  2145  000B0C  EC89  F004         	call	_turnAllOff	;wreg free
  2146  000B10  0012               	return		;funcret
  2147  000B12                     __end_of_initializeLED:
  2148                           	opt stack 0
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           prodh	equ	0xFF4
  2154                           prodl	equ	0xFF3
  2155                           postinc0	equ	0xFEE
  2156                           wreg	equ	0xFE8
  2157                           postdec1	equ	0xFE5
  2158                           plusw1	equ	0xFE3
  2159                           fsr1l	equ	0xFE1
  2160                           indf2	equ	0xFDF
  2161                           postinc2	equ	0xFDE
  2162                           postdec2	equ	0xFDD
  2163                           plusw2	equ	0xFDB
  2164                           fsr2h	equ	0xFDA
  2165                           fsr2l	equ	0xFD9
  2166                           status	equ	0xFD8
  2167                           
  2168 ;; *************** function _turnAllOff *****************
  2169 ;; Defined at:
  2170 ;;		line 170 in file "Source/LED-API.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  j               1   27[COMRAM] unsigned char 
  2175 ;;  i               1   26[COMRAM] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2185 ;;      Params:         0       0       0       0       0       0       0
  2186 ;;      Locals:         2       0       0       0       0       0       0
  2187 ;;      Temps:          2       0       0       0       0       0       0
  2188 ;;      Totals:         4       0       0       0       0       0       0
  2189 ;;Total ram usage:        4 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    5
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_initializeLED
  2196 ;;		_startPong
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text10
  2201  000912                     __ptext10:
  2202                           	opt stack 0
  2203  000912                     _turnAllOff:
  2204                           	opt stack 23
  2205                           
  2206                           ;LED-API.c: 173: for (unsigned char i = 0; i < 8; i++) {
  2207                           
  2208                           ;incstack = 0
  2209  000912  0E00               	movlw	0
  2210  000914  6E1B               	movwf	turnAllOff@i,c
  2211  000916                     l1977:
  2212  000916  0E07               	movlw	7
  2213  000918  641B               	cpfsgt	turnAllOff@i,c
  2214  00091A  D001               	goto	l1981
  2215  00091C  0012               	return	
  2216  00091E                     l1981:
  2217                           
  2218                           ;LED-API.c: 174: for (unsigned char j = 0; j < 16; j++) {
  2219  00091E  0E00               	movlw	0
  2220  000920  6E1C               	movwf	turnAllOff@j,c
  2221  000922                     l1983:
  2222  000922  0E0F               	movlw	15
  2223  000924  641C               	cpfsgt	turnAllOff@j,c
  2224  000926  D001               	goto	l1987
  2225  000928  D016               	goto	l1993
  2226  00092A                     l1987:
  2227                           
  2228                           ;LED-API.c: 175: pixels[i][j] = 0;
  2229  00092A  501B               	movf	turnAllOff@i,w,c
  2230  00092C  0D10               	mullw	16
  2231  00092E  0E00               	movlw	low _pixels
  2232  000930  6E19               	movwf	??_turnAllOff& (0+255),c
  2233  000932  0E02               	movlw	high _pixels
  2234  000934  6E1A               	movwf	(??_turnAllOff+1)& (0+255),c
  2235  000936  50F3               	movf	prodl,w,c
  2236  000938  2619               	addwf	??_turnAllOff,f,c
  2237  00093A  50F4               	movf	prodh,w,c
  2238  00093C  221A               	addwfc	??_turnAllOff+1,f,c
  2239  00093E  501C               	movf	turnAllOff@j,w,c
  2240  000940  0D01               	mullw	1
  2241  000942  50F3               	movf	prodl,w,c
  2242  000944  2419               	addwf	??_turnAllOff,w,c
  2243  000946  6ED9               	movwf	fsr2l,c
  2244  000948  50F4               	movf	prodh,w,c
  2245  00094A  201A               	addwfc	??_turnAllOff+1,w,c
  2246  00094C  6EDA               	movwf	fsr2h,c
  2247  00094E  0E00               	movlw	0
  2248  000950  6EDF               	movwf	indf2,c
  2249  000952  2A1C               	incf	turnAllOff@j,f,c
  2250  000954  D7E6               	goto	l1983
  2251  000956                     l1993:
  2252  000956  2A1B               	incf	turnAllOff@i,f,c
  2253  000958  D7DE               	goto	l1977
  2254  00095A                     __end_of_turnAllOff:
  2255                           	opt stack 0
  2256                           tblptru	equ	0xFF8
  2257                           tblptrh	equ	0xFF7
  2258                           tblptrl	equ	0xFF6
  2259                           tablat	equ	0xFF5
  2260                           prodh	equ	0xFF4
  2261                           prodl	equ	0xFF3
  2262                           postinc0	equ	0xFEE
  2263                           wreg	equ	0xFE8
  2264                           postdec1	equ	0xFE5
  2265                           plusw1	equ	0xFE3
  2266                           fsr1l	equ	0xFE1
  2267                           indf2	equ	0xFDF
  2268                           postinc2	equ	0xFDE
  2269                           postdec2	equ	0xFDD
  2270                           plusw2	equ	0xFDB
  2271                           fsr2h	equ	0xFDA
  2272                           fsr2l	equ	0xFD9
  2273                           status	equ	0xFD8
  2274                           
  2275 ;; *************** function _initialize *****************
  2276 ;; Defined at:
  2277 ;;		line 104 in file "main.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2291 ;;      Params:         0       0       0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    5
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text11
  2306  0007C0                     __ptext11:
  2307                           	opt stack 0
  2308  0007C0                     _initialize:
  2309                           	opt stack 25
  2310                           
  2311                           ;main.c: 106: OSCTUNEbits.PLLEN = 1;
  2312                           
  2313                           ;incstack = 0
  2314  0007C0  8C9B               	bsf	3995,6,c	;volatile
  2315                           
  2316                           ;main.c: 107: OSCTUNEbits.TUN = 011111;
  2317  0007C2  809B               	bsf	3995,0,c	;volatile
  2318  0007C4  929B               	bcf	3995,1,c	;volatile
  2319  0007C6  949B               	bcf	3995,2,c	;volatile
  2320  0007C8  869B               	bsf	3995,3,c	;volatile
  2321  0007CA  989B               	bcf	3995,4,c	;volatile
  2322                           
  2323                           ;main.c: 109: OSCCONbits.SCS = 00;
  2324  0007CC  0EFC               	movlw	-4
  2325  0007CE  16D3               	andwf	4051,f,c	;volatile
  2326                           
  2327                           ;main.c: 110: OSCCONbits.IRCF = 111;
  2328  0007D0  88D3               	bsf	4051,4,c	;volatile
  2329  0007D2  8AD3               	bsf	4051,5,c	;volatile
  2330  0007D4  8CD3               	bsf	4051,6,c	;volatile
  2331                           
  2332                           ;main.c: 112: PLLEN = 1;
  2333  0007D6  8C9B               	bsf	3995,6,c	;volatile
  2334                           
  2335                           ;main.c: 115: GIE = 1;
  2336  0007D8  8EF2               	bsf	intcon,7,c	;volatile
  2337                           
  2338                           ;main.c: 116: PEIE = 1;
  2339  0007DA  8CF2               	bsf	intcon,6,c	;volatile
  2340                           
  2341                           ;main.c: 119: TRISBbits.TRISB0 = 1;
  2342  0007DC  8093               	bsf	3987,0,c	;volatile
  2343                           
  2344                           ;main.c: 120: TRISBbits.TRISB1 = 1;
  2345  0007DE  8293               	bsf	3987,1,c	;volatile
  2346                           
  2347                           ;main.c: 121: ADCON2bits.ADFM = 1;
  2348  0007E0  8EC0               	bsf	4032,7,c	;volatile
  2349                           
  2350                           ;main.c: 122: ADCON2bits.ADCS = 010;
  2351  0007E2  90C0               	bcf	4032,0,c	;volatile
  2352  0007E4  92C0               	bcf	4032,1,c	;volatile
  2353  0007E6  94C0               	bcf	4032,2,c	;volatile
  2354                           
  2355                           ;main.c: 123: ADCON2bits.ACQT = 111;
  2356  0007E8  86C0               	bsf	4032,3,c	;volatile
  2357  0007EA  88C0               	bsf	4032,4,c	;volatile
  2358  0007EC  8AC0               	bsf	4032,5,c	;volatile
  2359                           
  2360                           ;main.c: 124: ADCON1bits.VCFG0 = 0;
  2361  0007EE  98C1               	bcf	4033,4,c	;volatile
  2362                           
  2363                           ;main.c: 125: ADCON1bits.VCFG1 = 0;
  2364  0007F0  9AC1               	bcf	4033,5,c	;volatile
  2365                           
  2366                           ;main.c: 126: ADCON1bits.PCFG = 0000;
  2367  0007F2  90C1               	bcf	4033,0,c	;volatile
  2368  0007F4  92C1               	bcf	4033,1,c	;volatile
  2369  0007F6  94C1               	bcf	4033,2,c	;volatile
  2370  0007F8  96C1               	bcf	4033,3,c	;volatile
  2371                           
  2372                           ;main.c: 127: ADCON0bits.CHS = 1100;
  2373  0007FA  50C2               	movf	4034,w,c	;volatile
  2374  0007FC  0BC3               	andlw	-61
  2375  0007FE  0930               	iorlw	48
  2376  000800  6EC2               	movwf	4034,c	;volatile
  2377                           
  2378                           ;main.c: 128: ADCON0bits.ADON = 1;
  2379  000802  80C2               	bsf	4034,0,c	;volatile
  2380                           
  2381                           ;main.c: 129: ADIE = 1;
  2382  000804  8C9D               	bsf	3997,6,c	;volatile
  2383                           
  2384                           ;main.c: 132: T0PS0 = 1;
  2385  000806  80D5               	bsf	4053,0,c	;volatile
  2386                           
  2387                           ;main.c: 133: T0PS1 = 0;
  2388  000808  92D5               	bcf	4053,1,c	;volatile
  2389                           
  2390                           ;main.c: 134: T0PS2 = 1;
  2391  00080A  84D5               	bsf	4053,2,c	;volatile
  2392                           
  2393                           ;main.c: 135: PSA = 0;
  2394  00080C  96D5               	bcf	4053,3,c	;volatile
  2395                           
  2396                           ;main.c: 136: T0CS = 0;
  2397  00080E  9AD5               	bcf	4053,5,c	;volatile
  2398                           
  2399                           ;main.c: 137: T08BIT = 1;
  2400  000810  8CD5               	bsf	4053,6,c	;volatile
  2401                           
  2402                           ;main.c: 138: TMR0IE = 1;
  2403  000812  8AF2               	bsf	intcon,5,c	;volatile
  2404                           
  2405                           ;main.c: 139: TMR0IF = 0;
  2406  000814  94F2               	bcf	intcon,2,c	;volatile
  2407                           
  2408                           ;main.c: 141: TMR0ON = 0;
  2409  000816  9ED5               	bcf	4053,7,c	;volatile
  2410  000818  0012               	return		;funcret
  2411  00081A                     __end_of_initialize:
  2412                           	opt stack 0
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           prodh	equ	0xFF4
  2418                           prodl	equ	0xFF3
  2419                           intcon	equ	0xFF2
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           postdec1	equ	0xFE5
  2423                           plusw1	equ	0xFE3
  2424                           fsr1l	equ	0xFE1
  2425                           indf2	equ	0xFDF
  2426                           postinc2	equ	0xFDE
  2427                           postdec2	equ	0xFDD
  2428                           plusw2	equ	0xFDB
  2429                           fsr2h	equ	0xFDA
  2430                           fsr2l	equ	0xFD9
  2431                           status	equ	0xFD8
  2432                           
  2433 ;; *************** function _ISR *****************
  2434 ;; Defined at:
  2435 ;;		line 317 in file "main.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  ADvalue         2   21[COMRAM] unsigned short 
  2440 ;;  value           1   23[COMRAM] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2450 ;;      Params:         0       0       0       0       0       0       0
  2451 ;;      Locals:         3       0       0       0       0       0       0
  2452 ;;      Temps:         14       0       0       0       0       0       0
  2453 ;;      Totals:        17       0       0       0       0       0       0
  2454 ;;Total ram usage:       17 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    4
  2457 ;; This function calls:
  2458 ;;		___lwdiv
  2459 ;;		_checkNextPosition
  2460 ;;		_writePong
  2461 ;; This function is called by:
  2462 ;;		Interrupt level 2
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	intcode
  2467  000008                     __pintcode:
  2468                           	opt stack 0
  2469  000008                     _ISR:
  2470                           	opt stack 22
  2471                           
  2472                           ;incstack = 0
  2473  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2474  00000A  CFFA F008          	movff	pclath,??_ISR
  2475  00000E  CFFB F009          	movff	pclatu,??_ISR+1
  2476  000012  ED61  F001         	call	int_func,f	;refresh shadow registers
  2477                           pclatu	equ	0xFFB
  2478                           pclath	equ	0xFFA
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           prodh	equ	0xFF4
  2484                           prodl	equ	0xFF3
  2485                           intcon	equ	0xFF2
  2486                           postinc0	equ	0xFEE
  2487                           wreg	equ	0xFE8
  2488                           postdec1	equ	0xFE5
  2489                           plusw1	equ	0xFE3
  2490                           fsr1l	equ	0xFE1
  2491                           indf2	equ	0xFDF
  2492                           postinc2	equ	0xFDE
  2493                           postdec2	equ	0xFDD
  2494                           plusw2	equ	0xFDB
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           
  2499                           	psect	intcode_body
  2500  0002C2                     __pintcode_body:
  2501                           	opt stack 22
  2502  0002C2                     int_func:
  2503                           	opt stack 22
  2504  0002C2  0006               	pop		; remove dummy address from shadow register refresh
  2505  0002C4  CFE9 F00A          	movff	fsr0l,??_ISR+2
  2506  0002C8  CFEA F00B          	movff	fsr0h,??_ISR+3
  2507  0002CC  CFE1 F00C          	movff	fsr1l,??_ISR+4
  2508  0002D0  CFE2 F00D          	movff	fsr1h,??_ISR+5
  2509  0002D4  CFD9 F00E          	movff	fsr2l,??_ISR+6
  2510  0002D8  CFDA F00F          	movff	fsr2h,??_ISR+7
  2511  0002DC  CFF3 F010          	movff	prodl,??_ISR+8
  2512  0002E0  CFF4 F011          	movff	prodh,??_ISR+9
  2513  0002E4  CFF6 F012          	movff	tblptrl,??_ISR+10
  2514  0002E8  CFF7 F013          	movff	tblptrh,??_ISR+11
  2515  0002EC  CFF8 F014          	movff	tblptru,??_ISR+12
  2516  0002F0  CFF5 F015          	movff	tablat,??_ISR+13
  2517                           
  2518                           ;main.c: 318: if (TMR0IE && TMR0IF) {
  2519  0002F4  BAF2               	btfsc	intcon,5,c	;volatile
  2520  0002F6  A4F2               	btfss	intcon,2,c	;volatile
  2521  0002F8  D012               	goto	i2l1917
  2522                           
  2523                           ;main.c: 320: TMR0IF = 0;
  2524  0002FA  94F2               	bcf	intcon,2,c	;volatile
  2525                           
  2526                           ;main.c: 322: if (_timerCounter > _speed) {
  2527  0002FC  5039               	movf	__timerCounter,w,c
  2528  0002FE  5C35               	subwf	__speed,w,c
  2529  000300  503A               	movf	__timerCounter+1,w,c
  2530  000302  5836               	subwfb	__speed+1,w,c
  2531  000304  B0D8               	btfsc	status,0,c
  2532  000306  D006               	goto	i2l1911
  2533                           
  2534                           ;main.c: 323: checkNextPosition();
  2535  000308  EC65  F005         	call	_checkNextPosition	;wreg free
  2536                           
  2537                           ;main.c: 324: _timerCounter = 0;
  2538  00030C  0E00               	movlw	0
  2539  00030E  6E3A               	movwf	__timerCounter+1,c
  2540  000310  0E00               	movlw	0
  2541  000312  6E39               	movwf	__timerCounter,c
  2542  000314                     i2l1911:
  2543                           
  2544                           ;main.c: 325: }
  2545                           ;main.c: 327: _timerCounter++;
  2546  000314  4A39               	infsnz	__timerCounter,f,c
  2547  000316  2A3A               	incf	__timerCounter+1,f,c
  2548                           
  2549                           ;main.c: 328: writePong();
  2550  000318  EC2B  F002         	call	_writePong	;wreg free
  2551                           
  2552                           ;main.c: 331: ADCON0bits.GODONE = 1;
  2553  00031C  82C2               	bsf	4034,1,c	;volatile
  2554  00031E                     i2l1917:
  2555                           
  2556                           ;main.c: 332: }
  2557                           ;main.c: 334: if (ADIE && ADIF) {
  2558  00031E  BC9D               	btfsc	3997,6,c	;volatile
  2559  000320  AC9E               	btfss	3998,6,c	;volatile
  2560  000322  D07B               	goto	i2l293
  2561                           
  2562                           ;main.c: 336: ADIF = 0;
  2563  000324  9C9E               	bcf	3998,6,c	;volatile
  2564                           
  2565                           ;main.c: 338: unsigned short ADvalue = ADRES;
  2566  000326  CFC3 F016          	movff	4035,ISR@ADvalue	;volatile
  2567  00032A  CFC4 F017          	movff	4036,ISR@ADvalue+1	;volatile
  2568                           
  2569                           ;main.c: 339: unsigned char value = (ADvalue / 85);
  2570  00032E  C016  F001         	movff	ISR@ADvalue,___lwdiv@dividend
  2571  000332  C017  F002         	movff	ISR@ADvalue+1,___lwdiv@dividend+1
  2572  000336  0E00               	movlw	0
  2573  000338  6E04               	movwf	___lwdiv@divisor+1,c
  2574  00033A  0E55               	movlw	85
  2575  00033C  6E03               	movwf	___lwdiv@divisor,c
  2576  00033E  EC39  F004         	call	___lwdiv	;wreg free
  2577  000342  5001               	movf	?___lwdiv,w,c
  2578  000344  6E18               	movwf	ISR@value,c
  2579                           
  2580                           ;main.c: 342: if (ADCON0bits.CHS == 12) {
  2581  000346  30C2               	rrcf	4034,w,c	;volatile
  2582  000348  32E8               	rrcf	wreg,f,c
  2583  00034A  0B0F               	andlw	15
  2584  00034C  0A0C               	xorlw	12
  2585  00034E  A4D8               	btfss	status,2,c
  2586  000350  D031               	goto	i2l1937
  2587                           
  2588                           ;main.c: 343: ADCON0bits.CHS = 10;
  2589  000352  50C2               	movf	4034,w,c	;volatile
  2590  000354  0BC3               	andlw	-61
  2591  000356  0928               	iorlw	40
  2592  000358  6EC2               	movwf	4034,c	;volatile
  2593                           
  2594                           ;main.c: 346: _p2->paddlePosOld[0] = _p2->paddlePos[0];
  2595  00035A  0101               	movlb	1	; () banked
  2596  00035C  EE20 F002          	lfsr	2,2
  2597  000360  51F4               	movf	__p2& (0+255),w,b
  2598  000362  26D9               	addwf	fsr2l,f,c
  2599  000364  51F5               	movf	(__p2+1)& (0+255),w,b
  2600  000366  22DA               	addwfc	fsr2h,f,c
  2601  000368  C1F4  FFE1         	movff	__p2,fsr1l
  2602  00036C  C1F5  FFE2         	movff	__p2+1,fsr1h
  2603  000370  CFDF FFE7          	movff	indf2,indf1
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;main.c: 347: _p2->paddlePos[0] = value;
  2607  000374  0101               	movlb	1	; () banked
  2608  000376  EE20 F002          	lfsr	2,2
  2609  00037A  51F4               	movf	__p2& (0+255),w,b
  2610  00037C  26D9               	addwf	fsr2l,f,c
  2611  00037E  51F5               	movf	(__p2+1)& (0+255),w,b
  2612  000380  22DA               	addwfc	fsr2h,f,c
  2613  000382  C018  FFDF         	movff	ISR@value,indf2
  2614                           
  2615                           ; BSR set to: 1
  2616                           ;main.c: 349: _p2->paddlePosOld[1] = _p2->paddlePos[1];
  2617  000386  0101               	movlb	1	; () banked
  2618  000388  EE20 F003          	lfsr	2,3
  2619  00038C  51F4               	movf	__p2& (0+255),w,b
  2620  00038E  26D9               	addwf	fsr2l,f,c
  2621  000390  51F5               	movf	(__p2+1)& (0+255),w,b
  2622  000392  22DA               	addwfc	fsr2h,f,c
  2623  000394  0101               	movlb	1	; () banked
  2624  000396  EE10 F001          	lfsr	1,1
  2625  00039A  51F4               	movf	__p2& (0+255),w,b
  2626  00039C  26E1               	addwf	fsr1l,f,c
  2627  00039E  51F5               	movf	(__p2+1)& (0+255),w,b
  2628  0003A0  22E2               	addwfc	fsr1h,f,c
  2629  0003A2  CFDF FFE7          	movff	indf2,indf1
  2630                           
  2631                           ; BSR set to: 1
  2632                           ;main.c: 350: _p2->paddlePos[1] = value + 1;
  2633  0003A6  0101               	movlb	1	; () banked
  2634  0003A8  EE20 F003          	lfsr	2,3
  2635  0003AC  51F4               	movf	__p2& (0+255),w,b
  2636  0003AE  26D9               	addwf	fsr2l,f,c
  2637  0003B0  51F5               	movf	(__p2+1)& (0+255),w,b
  2638  0003B2  D030               	goto	L1
  2639  0003B4                     i2l1937:
  2640                           
  2641                           ;main.c: 352: ADCON0bits.CHS = 12;
  2642  0003B4  50C2               	movf	4034,w,c	;volatile
  2643  0003B6  0BC3               	andlw	-61
  2644  0003B8  0930               	iorlw	48
  2645  0003BA  6EC2               	movwf	4034,c	;volatile
  2646                           
  2647                           ;main.c: 355: _p1->paddlePosOld[0] = _p1->paddlePos[0];
  2648  0003BC  0101               	movlb	1	; () banked
  2649  0003BE  EE20 F002          	lfsr	2,2
  2650  0003C2  51F2               	movf	__p1& (0+255),w,b
  2651  0003C4  26D9               	addwf	fsr2l,f,c
  2652  0003C6  51F3               	movf	(__p1+1)& (0+255),w,b
  2653  0003C8  22DA               	addwfc	fsr2h,f,c
  2654  0003CA  C1F2  FFE1         	movff	__p1,fsr1l
  2655  0003CE  C1F3  FFE2         	movff	__p1+1,fsr1h
  2656  0003D2  CFDF FFE7          	movff	indf2,indf1
  2657                           
  2658                           ; BSR set to: 1
  2659                           ;main.c: 356: _p1->paddlePos[0] = value;
  2660  0003D6  0101               	movlb	1	; () banked
  2661  0003D8  EE20 F002          	lfsr	2,2
  2662  0003DC  51F2               	movf	__p1& (0+255),w,b
  2663  0003DE  26D9               	addwf	fsr2l,f,c
  2664  0003E0  51F3               	movf	(__p1+1)& (0+255),w,b
  2665  0003E2  22DA               	addwfc	fsr2h,f,c
  2666  0003E4  C018  FFDF         	movff	ISR@value,indf2
  2667                           
  2668                           ; BSR set to: 1
  2669                           ;main.c: 358: _p1->paddlePosOld[1] = _p1->paddlePos[1];
  2670  0003E8  0101               	movlb	1	; () banked
  2671  0003EA  EE20 F003          	lfsr	2,3
  2672  0003EE  51F2               	movf	__p1& (0+255),w,b
  2673  0003F0  26D9               	addwf	fsr2l,f,c
  2674  0003F2  51F3               	movf	(__p1+1)& (0+255),w,b
  2675  0003F4  22DA               	addwfc	fsr2h,f,c
  2676  0003F6  0101               	movlb	1	; () banked
  2677  0003F8  EE10 F001          	lfsr	1,1
  2678  0003FC  51F2               	movf	__p1& (0+255),w,b
  2679  0003FE  26E1               	addwf	fsr1l,f,c
  2680  000400  51F3               	movf	(__p1+1)& (0+255),w,b
  2681  000402  22E2               	addwfc	fsr1h,f,c
  2682  000404  CFDF FFE7          	movff	indf2,indf1
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;main.c: 359: _p1->paddlePos[1] = value + 1;
  2686  000408  0101               	movlb	1	; () banked
  2687  00040A  EE20 F003          	lfsr	2,3
  2688  00040E  51F2               	movf	__p1& (0+255),w,b
  2689  000410  26D9               	addwf	fsr2l,f,c
  2690  000412  51F3               	movf	(__p1+1)& (0+255),w,b
  2691  000414                     L1:
  2692  000414  22DA               	addwfc	fsr2h,f,c
  2693  000416  2818               	incf	ISR@value,w,c
  2694  000418  6EDF               	movwf	indf2,c
  2695  00041A                     i2l293:
  2696  00041A  C015  FFF5         	movff	??_ISR+13,tablat
  2697  00041E  C014  FFF8         	movff	??_ISR+12,tblptru
  2698  000422  C013  FFF7         	movff	??_ISR+11,tblptrh
  2699  000426  C012  FFF6         	movff	??_ISR+10,tblptrl
  2700  00042A  C011  FFF4         	movff	??_ISR+9,prodh
  2701  00042E  C010  FFF3         	movff	??_ISR+8,prodl
  2702  000432  C00F  FFDA         	movff	??_ISR+7,fsr2h
  2703  000436  C00E  FFD9         	movff	??_ISR+6,fsr2l
  2704  00043A  C00D  FFE2         	movff	??_ISR+5,fsr1h
  2705  00043E  C00C  FFE1         	movff	??_ISR+4,fsr1l
  2706  000442  C00B  FFEA         	movff	??_ISR+3,fsr0h
  2707  000446  C00A  FFE9         	movff	??_ISR+2,fsr0l
  2708  00044A  C009  FFFB         	movff	??_ISR+1,pclatu
  2709  00044E  C008  FFFA         	movff	??_ISR,pclath
  2710  000452  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2711  000454  0011               	retfie		f
  2712  000456                     __end_of_ISR:
  2713                           	opt stack 0
  2714                           pclatu	equ	0xFFB
  2715                           pclath	equ	0xFFA
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           prodh	equ	0xFF4
  2721                           prodl	equ	0xFF3
  2722                           intcon	equ	0xFF2
  2723                           postinc0	equ	0xFEE
  2724                           fsr0h	equ	0xFEA
  2725                           fsr0l	equ	0xFE9
  2726                           wreg	equ	0xFE8
  2727                           indf1	equ	0xFE7
  2728                           postdec1	equ	0xFE5
  2729                           plusw1	equ	0xFE3
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           postinc2	equ	0xFDE
  2734                           postdec2	equ	0xFDD
  2735                           plusw2	equ	0xFDB
  2736                           fsr2h	equ	0xFDA
  2737                           fsr2l	equ	0xFD9
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _writePong *****************
  2741 ;; Defined at:
  2742 ;;		line 146 in file "main.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2756 ;;      Params:         0       0       0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    1
  2763 ;; This function calls:
  2764 ;;		_off
  2765 ;;		i2_on
  2766 ;; This function is called by:
  2767 ;;		_ISR
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text13
  2772  000456                     __ptext13:
  2773                           	opt stack 0
  2774  000456                     _writePong:
  2775                           	opt stack 24
  2776                           
  2777                           ;main.c: 150: off(_ball.bPos[1], _ball.bPos[0]);
  2778                           
  2779                           ;incstack = 0
  2780  000456  C1ED  F001         	movff	__ball,off@row
  2781  00045A  0101               	movlb	1	; () banked
  2782  00045C  51EE               	movf	(__ball+1)& (0+255),w,b
  2783  00045E  EC2B  F005         	call	_off
  2784                           
  2785                           ;main.c: 151: _ball.bPos[0] = _nextPos[0];
  2786  000462  C1F0  F1ED         	movff	__nextPos,__ball
  2787                           
  2788                           ;main.c: 152: _ball.bPos[1] = _nextPos[1];
  2789  000466  C1F1  F1EE         	movff	__nextPos+1,__ball+1
  2790                           
  2791                           ;main.c: 153: on(_ball.bPos[1], _ball.bPos[0]);
  2792  00046A  C1ED  F001         	movff	__ball,i2on@row
  2793  00046E  0101               	movlb	1	; () banked
  2794  000470  51EE               	movf	(__ball+1)& (0+255),w,b
  2795  000472  EC0D  F005         	call	i2_on
  2796                           
  2797                           ;main.c: 156: off(_p1->paddlePosOld[0], 0);
  2798  000476  0E00               	movlw	0
  2799  000478  6E01               	movwf	off@row,c
  2800  00047A  C1F2  FFD9         	movff	__p1,fsr2l
  2801  00047E  C1F3  FFDA         	movff	__p1+1,fsr2h
  2802  000482  50DF               	movf	indf2,w,c
  2803  000484  EC2B  F005         	call	_off
  2804                           
  2805                           ;main.c: 157: off(_p1->paddlePosOld[1], 0);
  2806  000488  0E00               	movlw	0
  2807  00048A  6E01               	movwf	off@row,c
  2808  00048C  0101               	movlb	1	; () banked
  2809  00048E  EE20 F001          	lfsr	2,1
  2810  000492  51F2               	movf	__p1& (0+255),w,b
  2811  000494  26D9               	addwf	fsr2l,f,c
  2812  000496  51F3               	movf	(__p1+1)& (0+255),w,b
  2813  000498  22DA               	addwfc	fsr2h,f,c
  2814  00049A  50DF               	movf	indf2,w,c
  2815  00049C  EC2B  F005         	call	_off
  2816                           
  2817                           ;main.c: 159: off(_p2->paddlePosOld[0], 15);
  2818  0004A0  0E0F               	movlw	15
  2819  0004A2  6E01               	movwf	off@row,c
  2820  0004A4  C1F4  FFD9         	movff	__p2,fsr2l
  2821  0004A8  C1F5  FFDA         	movff	__p2+1,fsr2h
  2822  0004AC  50DF               	movf	indf2,w,c
  2823  0004AE  EC2B  F005         	call	_off
  2824                           
  2825                           ;main.c: 160: off(_p2->paddlePosOld[1], 15);
  2826  0004B2  0E0F               	movlw	15
  2827  0004B4  6E01               	movwf	off@row,c
  2828  0004B6  0101               	movlb	1	; () banked
  2829  0004B8  EE20 F001          	lfsr	2,1
  2830  0004BC  51F4               	movf	__p2& (0+255),w,b
  2831  0004BE  26D9               	addwf	fsr2l,f,c
  2832  0004C0  51F5               	movf	(__p2+1)& (0+255),w,b
  2833  0004C2  22DA               	addwfc	fsr2h,f,c
  2834  0004C4  50DF               	movf	indf2,w,c
  2835  0004C6  EC2B  F005         	call	_off
  2836                           
  2837                           ;main.c: 162: on(_p1->paddlePos[0], 0);
  2838  0004CA  0E00               	movlw	0
  2839  0004CC  6E01               	movwf	i2on@row,c
  2840  0004CE  0101               	movlb	1	; () banked
  2841  0004D0  EE20 F002          	lfsr	2,2
  2842  0004D4  51F2               	movf	__p1& (0+255),w,b
  2843  0004D6  26D9               	addwf	fsr2l,f,c
  2844  0004D8  51F3               	movf	(__p1+1)& (0+255),w,b
  2845  0004DA  22DA               	addwfc	fsr2h,f,c
  2846  0004DC  50DF               	movf	indf2,w,c
  2847  0004DE  EC0D  F005         	call	i2_on
  2848                           
  2849                           ;main.c: 163: on(_p1->paddlePos[1], 0);
  2850  0004E2  0E00               	movlw	0
  2851  0004E4  6E01               	movwf	i2on@row,c
  2852  0004E6  0101               	movlb	1	; () banked
  2853  0004E8  EE20 F003          	lfsr	2,3
  2854  0004EC  51F2               	movf	__p1& (0+255),w,b
  2855  0004EE  26D9               	addwf	fsr2l,f,c
  2856  0004F0  51F3               	movf	(__p1+1)& (0+255),w,b
  2857  0004F2  22DA               	addwfc	fsr2h,f,c
  2858  0004F4  50DF               	movf	indf2,w,c
  2859  0004F6  EC0D  F005         	call	i2_on
  2860                           
  2861                           ;main.c: 164: on(_p2->paddlePos[0], 15);
  2862  0004FA  0E0F               	movlw	15
  2863  0004FC  6E01               	movwf	i2on@row,c
  2864  0004FE  0101               	movlb	1	; () banked
  2865  000500  EE20 F002          	lfsr	2,2
  2866  000504  51F4               	movf	__p2& (0+255),w,b
  2867  000506  26D9               	addwf	fsr2l,f,c
  2868  000508  51F5               	movf	(__p2+1)& (0+255),w,b
  2869  00050A  22DA               	addwfc	fsr2h,f,c
  2870  00050C  50DF               	movf	indf2,w,c
  2871  00050E  EC0D  F005         	call	i2_on
  2872                           
  2873                           ;main.c: 165: on(_p2->paddlePos[1], 15);
  2874  000512  0E0F               	movlw	15
  2875  000514  6E01               	movwf	i2on@row,c
  2876  000516  0101               	movlb	1	; () banked
  2877  000518  EE20 F003          	lfsr	2,3
  2878  00051C  51F4               	movf	__p2& (0+255),w,b
  2879  00051E  26D9               	addwf	fsr2l,f,c
  2880  000520  51F5               	movf	(__p2+1)& (0+255),w,b
  2881  000522  22DA               	addwfc	fsr2h,f,c
  2882  000524  50DF               	movf	indf2,w,c
  2883  000526  EC0D  F005         	call	i2_on
  2884  00052A  0012               	return		;funcret
  2885  00052C                     __end_of_writePong:
  2886                           	opt stack 0
  2887                           pclatu	equ	0xFFB
  2888                           pclath	equ	0xFFA
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           prodh	equ	0xFF4
  2894                           prodl	equ	0xFF3
  2895                           intcon	equ	0xFF2
  2896                           postinc0	equ	0xFEE
  2897                           fsr0h	equ	0xFEA
  2898                           fsr0l	equ	0xFE9
  2899                           wreg	equ	0xFE8
  2900                           indf1	equ	0xFE7
  2901                           postdec1	equ	0xFE5
  2902                           plusw1	equ	0xFE3
  2903                           fsr1h	equ	0xFE2
  2904                           fsr1l	equ	0xFE1
  2905                           indf2	equ	0xFDF
  2906                           postinc2	equ	0xFDE
  2907                           postdec2	equ	0xFDD
  2908                           plusw2	equ	0xFDB
  2909                           fsr2h	equ	0xFDA
  2910                           fsr2l	equ	0xFD9
  2911                           status	equ	0xFD8
  2912                           
  2913 ;; *************** function i2_on *****************
  2914 ;; Defined at:
  2915 ;;		line 43 in file "Source/LED-API.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  column          1    wreg     unsigned char 
  2918 ;;  row             1    0[COMRAM] unsigned char 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  column          1    3[COMRAM] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         1       0       0       0       0       0       0
  2931 ;;      Locals:         1       0       0       0       0       0       0
  2932 ;;      Temps:          2       0       0       0       0       0       0
  2933 ;;      Totals:         4       0       0       0       0       0       0
  2934 ;;Total ram usage:        4 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_writePong
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text14
  2944  000A1A                     __ptext14:
  2945                           	opt stack 0
  2946  000A1A                     i2_on:
  2947                           	opt stack 24
  2948                           
  2949                           ;incstack = 0
  2950                           ;i2on@column stored from wreg
  2951  000A1A  6E04               	movwf	i2on@column,c
  2952                           
  2953                           ;LED-API.c: 45: if (row < 0 || row >= 16)
  2954  000A1C  0E0F               	movlw	15
  2955  000A1E  6401               	cpfsgt	i2on@row,c
  2956  000A20  D001               	goto	i2l1757
  2957  000A22  0012               	return	
  2958  000A24                     i2l1757:
  2959                           
  2960                           ;LED-API.c: 47: if (column < 0 || column >= 8)
  2961  000A24  0E07               	movlw	7
  2962  000A26  6404               	cpfsgt	i2on@column,c
  2963  000A28  D001               	goto	i2l1761
  2964  000A2A  0012               	return	
  2965  000A2C                     i2l1761:
  2966                           
  2967                           ;LED-API.c: 50: pixels[column][row] = 1;
  2968  000A2C  5004               	movf	i2on@column,w,c
  2969  000A2E  0D10               	mullw	16
  2970  000A30  0E00               	movlw	low _pixels
  2971  000A32  6E02               	movwf	??i2_on& (0+255),c
  2972  000A34  0E02               	movlw	high _pixels
  2973  000A36  6E03               	movwf	(??i2_on+1)& (0+255),c
  2974  000A38  50F3               	movf	prodl,w,c
  2975  000A3A  2602               	addwf	??i2_on,f,c
  2976  000A3C  50F4               	movf	prodh,w,c
  2977  000A3E  2203               	addwfc	??i2_on+1,f,c
  2978  000A40  5001               	movf	i2on@row,w,c
  2979  000A42  0D01               	mullw	1
  2980  000A44  50F3               	movf	prodl,w,c
  2981  000A46  2402               	addwf	??i2_on,w,c
  2982  000A48  6ED9               	movwf	fsr2l,c
  2983  000A4A  50F4               	movf	prodh,w,c
  2984  000A4C  2003               	addwfc	??i2_on+1,w,c
  2985  000A4E  6EDA               	movwf	fsr2h,c
  2986  000A50  0E01               	movlw	1
  2987  000A52  6EDF               	movwf	indf2,c
  2988  000A54  0012               	return		;funcret
  2989  000A56                     __end_ofi2_on:
  2990                           	opt stack 0
  2991                           pclatu	equ	0xFFB
  2992                           pclath	equ	0xFFA
  2993                           tblptru	equ	0xFF8
  2994                           tblptrh	equ	0xFF7
  2995                           tblptrl	equ	0xFF6
  2996                           tablat	equ	0xFF5
  2997                           prodh	equ	0xFF4
  2998                           prodl	equ	0xFF3
  2999                           intcon	equ	0xFF2
  3000                           postinc0	equ	0xFEE
  3001                           fsr0h	equ	0xFEA
  3002                           fsr0l	equ	0xFE9
  3003                           wreg	equ	0xFE8
  3004                           indf1	equ	0xFE7
  3005                           postdec1	equ	0xFE5
  3006                           plusw1	equ	0xFE3
  3007                           fsr1h	equ	0xFE2
  3008                           fsr1l	equ	0xFE1
  3009                           indf2	equ	0xFDF
  3010                           postinc2	equ	0xFDE
  3011                           postdec2	equ	0xFDD
  3012                           plusw2	equ	0xFDB
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           
  3017 ;; *************** function _off *****************
  3018 ;; Defined at:
  3019 ;;		line 64 in file "Source/LED-API.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  column          1    wreg     unsigned char 
  3022 ;;  row             1    0[COMRAM] unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  column          1    3[COMRAM] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3034 ;;      Params:         1       0       0       0       0       0       0
  3035 ;;      Locals:         1       0       0       0       0       0       0
  3036 ;;      Temps:          2       0       0       0       0       0       0
  3037 ;;      Totals:         4       0       0       0       0       0       0
  3038 ;;Total ram usage:        4 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_writePong
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text15
  3048  000A56                     __ptext15:
  3049                           	opt stack 0
  3050  000A56                     _off:
  3051                           	opt stack 24
  3052                           
  3053                           ;incstack = 0
  3054                           ;off@column stored from wreg
  3055  000A56  6E04               	movwf	off@column,c
  3056                           
  3057                           ;LED-API.c: 66: if (row < 0 || row > 16)
  3058  000A58  0E10               	movlw	16
  3059  000A5A  6401               	cpfsgt	off@row,c
  3060  000A5C  D001               	goto	i2l1689
  3061  000A5E  0012               	return	
  3062  000A60                     i2l1689:
  3063                           
  3064                           ;LED-API.c: 68: if (column < 0 || column > 8)
  3065  000A60  0E08               	movlw	8
  3066  000A62  6404               	cpfsgt	off@column,c
  3067  000A64  D001               	goto	i2l1693
  3068  000A66  0012               	return	
  3069  000A68                     i2l1693:
  3070                           
  3071                           ;LED-API.c: 71: pixels[column][row] = 0;
  3072  000A68  5004               	movf	off@column,w,c
  3073  000A6A  0D10               	mullw	16
  3074  000A6C  0E00               	movlw	low _pixels
  3075  000A6E  6E02               	movwf	??_off& (0+255),c
  3076  000A70  0E02               	movlw	high _pixels
  3077  000A72  6E03               	movwf	(??_off+1)& (0+255),c
  3078  000A74  50F3               	movf	prodl,w,c
  3079  000A76  2602               	addwf	??_off,f,c
  3080  000A78  50F4               	movf	prodh,w,c
  3081  000A7A  2203               	addwfc	??_off+1,f,c
  3082  000A7C  5001               	movf	off@row,w,c
  3083  000A7E  0D01               	mullw	1
  3084  000A80  50F3               	movf	prodl,w,c
  3085  000A82  2402               	addwf	??_off,w,c
  3086  000A84  6ED9               	movwf	fsr2l,c
  3087  000A86  50F4               	movf	prodh,w,c
  3088  000A88  2003               	addwfc	??_off+1,w,c
  3089  000A8A  6EDA               	movwf	fsr2h,c
  3090  000A8C  0E00               	movlw	0
  3091  000A8E  6EDF               	movwf	indf2,c
  3092  000A90  0012               	return		;funcret
  3093  000A92                     __end_of_off:
  3094                           	opt stack 0
  3095                           pclatu	equ	0xFFB
  3096                           pclath	equ	0xFFA
  3097                           tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           prodh	equ	0xFF4
  3102                           prodl	equ	0xFF3
  3103                           intcon	equ	0xFF2
  3104                           postinc0	equ	0xFEE
  3105                           fsr0h	equ	0xFEA
  3106                           fsr0l	equ	0xFE9
  3107                           wreg	equ	0xFE8
  3108                           indf1	equ	0xFE7
  3109                           postdec1	equ	0xFE5
  3110                           plusw1	equ	0xFE3
  3111                           fsr1h	equ	0xFE2
  3112                           fsr1l	equ	0xFE1
  3113                           indf2	equ	0xFDF
  3114                           postinc2	equ	0xFDE
  3115                           postdec2	equ	0xFDD
  3116                           plusw2	equ	0xFDB
  3117                           fsr2h	equ	0xFDA
  3118                           fsr2l	equ	0xFD9
  3119                           status	equ	0xFD8
  3120                           
  3121 ;; *************** function _checkNextPosition *****************
  3122 ;; Defined at:
  3123 ;;		line 307 in file "main.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3137 ;;      Params:         0       0       0       0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0
  3140 ;;      Totals:         0       0       0       0       0       0       0
  3141 ;;Total ram usage:        0 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    3
  3144 ;; This function calls:
  3145 ;;		_checkPaddleCollision
  3146 ;;		_checkWallCollision
  3147 ;;		_getNextPosition
  3148 ;; This function is called by:
  3149 ;;		_ISR
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text16
  3154  000ACA                     __ptext16:
  3155                           	opt stack 0
  3156  000ACA                     _checkNextPosition:
  3157                           	opt stack 22
  3158                           
  3159                           ;main.c: 308: getNextPosition();
  3160                           
  3161                           ;incstack = 0
  3162  000ACA  EC2E  F003         	call	_getNextPosition	;wreg free
  3163                           
  3164                           ;main.c: 310: if (!checkPaddleCollision(_p1) && !checkPaddleCollision(_p2)) {
  3165  000ACE  C1F2  F001         	movff	__p1,checkPaddleCollision@paddle
  3166  000AD2  C1F3  F002         	movff	__p1+1,checkPaddleCollision@paddle+1
  3167  000AD6  EC62  F004         	call	_checkPaddleCollision	;wreg free
  3168  000ADA  B0D8               	btfsc	status,0,c
  3169  000ADC  0012               	return	
  3170  000ADE  C1F4  F001         	movff	__p2,checkPaddleCollision@paddle
  3171  000AE2  C1F5  F002         	movff	__p2+1,checkPaddleCollision@paddle+1
  3172  000AE6  EC62  F004         	call	_checkPaddleCollision	;wreg free
  3173  000AEA  B0D8               	btfsc	status,0,c
  3174  000AEC  0012               	return	
  3175                           
  3176                           ;main.c: 311: checkWallCollision();
  3177  000AEE  ECB1  F005         	call	_checkWallCollision	;wreg free
  3178  000AF2  0012               	return	
  3179  000AF4                     __end_of_checkNextPosition:
  3180                           	opt stack 0
  3181                           pclatu	equ	0xFFB
  3182                           pclath	equ	0xFFA
  3183                           tblptru	equ	0xFF8
  3184                           tblptrh	equ	0xFF7
  3185                           tblptrl	equ	0xFF6
  3186                           tablat	equ	0xFF5
  3187                           prodh	equ	0xFF4
  3188                           prodl	equ	0xFF3
  3189                           intcon	equ	0xFF2
  3190                           postinc0	equ	0xFEE
  3191                           fsr0h	equ	0xFEA
  3192                           fsr0l	equ	0xFE9
  3193                           wreg	equ	0xFE8
  3194                           indf1	equ	0xFE7
  3195                           postdec1	equ	0xFE5
  3196                           plusw1	equ	0xFE3
  3197                           fsr1h	equ	0xFE2
  3198                           fsr1l	equ	0xFE1
  3199                           indf2	equ	0xFDF
  3200                           postinc2	equ	0xFDE
  3201                           postdec2	equ	0xFDD
  3202                           plusw2	equ	0xFDB
  3203                           fsr2h	equ	0xFDA
  3204                           fsr2l	equ	0xFD9
  3205                           status	equ	0xFD8
  3206                           
  3207 ;; *************** function _checkWallCollision *****************
  3208 ;; Defined at:
  3209 ;;		line 215 in file "main.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3223 ;;      Params:         0       0       0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0
  3226 ;;      Totals:         0       0       0       0       0       0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    2
  3230 ;; This function calls:
  3231 ;;		_handleWallCollision
  3232 ;; This function is called by:
  3233 ;;		_checkNextPosition
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text17
  3238  000B62                     __ptext17:
  3239                           	opt stack 0
  3240  000B62                     _checkWallCollision:
  3241                           	opt stack 22
  3242                           
  3243                           ;main.c: 216: if (_nextPos[1] < 0 || _nextPos[1] > 7) {
  3244                           
  3245                           ;incstack = 0
  3246  000B62  0E07               	movlw	7
  3247  000B64  0101               	movlb	1	; () banked
  3248  000B66  65F1               	cpfsgt	(__nextPos+1)& (0+255),b
  3249  000B68  0012               	return	
  3250                           
  3251                           ; BSR set to: 1
  3252                           ;main.c: 217: handleWallCollision();
  3253  000B6A  EC49  F005         	call	_handleWallCollision	;wreg free
  3254  000B6E  0012               	return	
  3255  000B70                     __end_of_checkWallCollision:
  3256                           	opt stack 0
  3257                           pclatu	equ	0xFFB
  3258                           pclath	equ	0xFFA
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           prodh	equ	0xFF4
  3264                           prodl	equ	0xFF3
  3265                           intcon	equ	0xFF2
  3266                           postinc0	equ	0xFEE
  3267                           fsr0h	equ	0xFEA
  3268                           fsr0l	equ	0xFE9
  3269                           wreg	equ	0xFE8
  3270                           indf1	equ	0xFE7
  3271                           postdec1	equ	0xFE5
  3272                           plusw1	equ	0xFE3
  3273                           fsr1h	equ	0xFE2
  3274                           fsr1l	equ	0xFE1
  3275                           indf2	equ	0xFDF
  3276                           postinc2	equ	0xFDE
  3277                           postdec2	equ	0xFDD
  3278                           plusw2	equ	0xFDB
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _handleWallCollision *****************
  3284 ;; Defined at:
  3285 ;;		line 197 in file "main.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3299 ;;      Params:         0       0       0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0
  3302 ;;      Totals:         0       0       0       0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    1
  3306 ;; This function calls:
  3307 ;;		_getNextPosition
  3308 ;; This function is called by:
  3309 ;;		_checkWallCollision
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text18
  3314  000A92                     __ptext18:
  3315                           	opt stack 0
  3316  000A92                     _handleWallCollision:
  3317                           	opt stack 22
  3318                           
  3319                           ;main.c: 198: switch (_ball.bDirection) {
  3320                           
  3321                           ;incstack = 0
  3322  000A92  D00A               	goto	i2l1681
  3323  000A94                     i2l1671:
  3324                           
  3325                           ;main.c: 200: _ball.bDirection = 3;
  3326  000A94  0E03               	movlw	3
  3327  000A96  D005               	goto	L4
  3328  000A98                     i2l1673:
  3329                           
  3330                           ; BSR set to: 1
  3331                           ;main.c: 203: _ball.bDirection = 1;
  3332  000A98  0E01               	movlw	1
  3333  000A9A  D003               	goto	L4
  3334  000A9C                     i2l1675:
  3335                           
  3336                           ; BSR set to: 1
  3337                           ;main.c: 206: _ball.bDirection = 6;
  3338  000A9C  0E06               	movlw	6
  3339  000A9E  D001               	goto	L4
  3340  000AA0                     i2l1677:
  3341                           
  3342                           ; BSR set to: 1
  3343                           ;main.c: 209: _ball.bDirection = 4;
  3344  000AA0  0E04               	movlw	4
  3345  000AA2                     L4:
  3346  000AA2  0101               	movlb	1	; () banked
  3347  000AA4  6FEF               	movwf	(__ball+2)& (0+255),b
  3348                           
  3349                           ; BSR set to: 1
  3350                           ;main.c: 211: }
  3351                           
  3352                           ;main.c: 210: break;
  3353  000AA6  D00E               	goto	i2l1683
  3354  000AA8                     i2l1681:
  3355  000AA8  0101               	movlb	1	; () banked
  3356  000AAA  51EF               	movf	(__ball+2)& (0+255),w,b
  3357                           
  3358                           ; Switch size 1, requested type "space"
  3359                           ; Number of cases is 4, Range of values is 1 to 6
  3360                           ; switch strategies available:
  3361                           ; Name         Instructions Cycles
  3362                           ; simple_byte           13     7 (average)
  3363                           ;	Chosen strategy is simple_byte
  3364  000AAC  0A01               	xorlw	1	; case 1
  3365  000AAE  B4D8               	btfsc	status,2,c
  3366  000AB0  D7F1               	goto	i2l1671
  3367  000AB2  0A02               	xorlw	2	; case 3
  3368  000AB4  B4D8               	btfsc	status,2,c
  3369  000AB6  D7F0               	goto	i2l1673
  3370  000AB8  0A07               	xorlw	7	; case 4
  3371  000ABA  B4D8               	btfsc	status,2,c
  3372  000ABC  D7EF               	goto	i2l1675
  3373  000ABE  0A02               	xorlw	2	; case 6
  3374  000AC0  B4D8               	btfsc	status,2,c
  3375  000AC2  D7EE               	goto	i2l1677
  3376  000AC4                     i2l1683:
  3377                           
  3378                           ; BSR set to: 1
  3379                           ;main.c: 212: getNextPosition();
  3380  000AC4  EC2E  F003         	call	_getNextPosition	;wreg free
  3381  000AC8  0012               	return		;funcret
  3382  000ACA                     __end_of_handleWallCollision:
  3383                           	opt stack 0
  3384                           pclatu	equ	0xFFB
  3385                           pclath	equ	0xFFA
  3386                           tblptru	equ	0xFF8
  3387                           tblptrh	equ	0xFF7
  3388                           tblptrl	equ	0xFF6
  3389                           tablat	equ	0xFF5
  3390                           prodh	equ	0xFF4
  3391                           prodl	equ	0xFF3
  3392                           intcon	equ	0xFF2
  3393                           postinc0	equ	0xFEE
  3394                           fsr0h	equ	0xFEA
  3395                           fsr0l	equ	0xFE9
  3396                           wreg	equ	0xFE8
  3397                           indf1	equ	0xFE7
  3398                           postdec1	equ	0xFE5
  3399                           plusw1	equ	0xFE3
  3400                           fsr1h	equ	0xFE2
  3401                           fsr1l	equ	0xFE1
  3402                           indf2	equ	0xFDF
  3403                           postinc2	equ	0xFDE
  3404                           postdec2	equ	0xFDD
  3405                           plusw2	equ	0xFDB
  3406                           fsr2h	equ	0xFDA
  3407                           fsr2l	equ	0xFD9
  3408                           status	equ	0xFD8
  3409                           
  3410 ;; *************** function _getNextPosition *****************
  3411 ;; Defined at:
  3412 ;;		line 170 in file "main.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  2  218[None  ] int 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3426 ;;      Params:         0       0       0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0
  3429 ;;      Totals:         0       0       0       0       0       0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_handleWallCollision
  3436 ;;		_handlePaddleLeftCollision
  3437 ;;		_handlePaddleRightCollision
  3438 ;;		_checkNextPosition
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text19
  3443  00065C                     __ptext19:
  3444                           	opt stack 0
  3445  00065C                     _getNextPosition:
  3446                           	opt stack 24
  3447                           
  3448                           ;main.c: 171: switch (_ball.bDirection) {
  3449                           
  3450                           ;incstack = 0
  3451  00065C  D02E               	goto	i2l1511
  3452  00065E                     i2l1497:
  3453                           
  3454                           ;main.c: 173: _nextPos[0] = _ball.bPos[0] + 1;
  3455  00065E  0101               	movlb	1	; () banked
  3456  000660  29ED               	incf	__ball& (0+255),w,b
  3457  000662  0101               	movlb	1	; () banked
  3458  000664  6FF0               	movwf	__nextPos& (0+255),b
  3459                           
  3460                           ;main.c: 174: _nextPos[1] = _ball.bPos[1] + 1;
  3461  000666  0101               	movlb	1	; () banked
  3462  000668  29EE               	incf	(__ball+1)& (0+255),w,b
  3463  00066A  0101               	movlb	1	; () banked
  3464  00066C  6FF1               	movwf	(__nextPos+1)& (0+255),b
  3465                           
  3466                           ;main.c: 175: break;
  3467  00066E  0012               	return	
  3468  000670                     i2l1499:
  3469                           
  3470                           ; BSR set to: 1
  3471                           ;main.c: 177: _nextPos[0] = _ball.bPos[0] + 1;
  3472  000670  0101               	movlb	1	; () banked
  3473  000672  29ED               	incf	__ball& (0+255),w,b
  3474  000674  0101               	movlb	1	; () banked
  3475  000676  6FF0               	movwf	__nextPos& (0+255),b
  3476                           
  3477                           ;main.c: 178: break;
  3478  000678  0012               	return	
  3479  00067A                     i2l1501:
  3480                           
  3481                           ; BSR set to: 1
  3482                           ;main.c: 180: _nextPos[0] = _ball.bPos[0] + 1;
  3483  00067A  0101               	movlb	1	; () banked
  3484  00067C  29ED               	incf	__ball& (0+255),w,b
  3485  00067E  0101               	movlb	1	; () banked
  3486  000680  6FF0               	movwf	__nextPos& (0+255),b
  3487                           
  3488                           ;main.c: 181: _nextPos[1] = _ball.bPos[1] - 1;
  3489  000682  0101               	movlb	1	; () banked
  3490  000684  05EE               	decf	(__ball+1)& (0+255),w,b
  3491  000686  0101               	movlb	1	; () banked
  3492  000688  6FF1               	movwf	(__nextPos+1)& (0+255),b
  3493                           
  3494                           ;main.c: 182: break;
  3495  00068A  0012               	return	
  3496  00068C                     i2l1503:
  3497                           
  3498                           ; BSR set to: 1
  3499                           ;main.c: 184: _nextPos[0] = _ball.bPos[0] - 1;
  3500  00068C  0101               	movlb	1	; () banked
  3501  00068E  05ED               	decf	__ball& (0+255),w,b
  3502  000690  0101               	movlb	1	; () banked
  3503  000692  6FF0               	movwf	__nextPos& (0+255),b
  3504                           
  3505                           ;main.c: 185: _nextPos[1] = _ball.bPos[1] - 1;
  3506  000694  0101               	movlb	1	; () banked
  3507  000696  05EE               	decf	(__ball+1)& (0+255),w,b
  3508  000698  0101               	movlb	1	; () banked
  3509  00069A  6FF1               	movwf	(__nextPos+1)& (0+255),b
  3510                           
  3511                           ;main.c: 186: break;
  3512  00069C  0012               	return	
  3513  00069E                     i2l1505:
  3514                           
  3515                           ; BSR set to: 1
  3516                           ;main.c: 188: _nextPos[0] = _ball.bPos[0] - 1;
  3517  00069E  0101               	movlb	1	; () banked
  3518  0006A0  05ED               	decf	__ball& (0+255),w,b
  3519  0006A2  0101               	movlb	1	; () banked
  3520  0006A4  6FF0               	movwf	__nextPos& (0+255),b
  3521                           
  3522                           ;main.c: 189: break;
  3523  0006A6  0012               	return	
  3524  0006A8                     i2l1507:
  3525                           
  3526                           ; BSR set to: 1
  3527                           ;main.c: 191: _nextPos[0] = _ball.bPos[0] - 1;
  3528  0006A8  0101               	movlb	1	; () banked
  3529  0006AA  05ED               	decf	__ball& (0+255),w,b
  3530  0006AC  0101               	movlb	1	; () banked
  3531  0006AE  6FF0               	movwf	__nextPos& (0+255),b
  3532                           
  3533                           ;main.c: 192: _nextPos[1] = _ball.bPos[1] + 1;
  3534  0006B0  0101               	movlb	1	; () banked
  3535  0006B2  29EE               	incf	(__ball+1)& (0+255),w,b
  3536  0006B4  0101               	movlb	1	; () banked
  3537  0006B6  6FF1               	movwf	(__nextPos+1)& (0+255),b
  3538                           
  3539                           ; BSR set to: 1
  3540                           ;main.c: 194: }
  3541                           
  3542                           ;main.c: 193: break;
  3543  0006B8  0012               	return	
  3544  0006BA                     i2l1511:
  3545  0006BA  0101               	movlb	1	; () banked
  3546  0006BC  51EF               	movf	(__ball+2)& (0+255),w,b
  3547                           
  3548                           ; Switch size 1, requested type "space"
  3549                           ; Number of cases is 6, Range of values is 1 to 6
  3550                           ; switch strategies available:
  3551                           ; Name         Instructions Cycles
  3552                           ; simple_byte           19    10 (average)
  3553                           ;	Chosen strategy is simple_byte
  3554  0006BE  0A01               	xorlw	1	; case 1
  3555  0006C0  B4D8               	btfsc	status,2,c
  3556  0006C2  D7CD               	goto	i2l1497
  3557  0006C4  0A03               	xorlw	3	; case 2
  3558  0006C6  B4D8               	btfsc	status,2,c
  3559  0006C8  D7D3               	goto	i2l1499
  3560  0006CA  0A01               	xorlw	1	; case 3
  3561  0006CC  B4D8               	btfsc	status,2,c
  3562  0006CE  D7D5               	goto	i2l1501
  3563  0006D0  0A07               	xorlw	7	; case 4
  3564  0006D2  B4D8               	btfsc	status,2,c
  3565  0006D4  D7DB               	goto	i2l1503
  3566  0006D6  0A01               	xorlw	1	; case 5
  3567  0006D8  B4D8               	btfsc	status,2,c
  3568  0006DA  D7E1               	goto	i2l1505
  3569  0006DC  0A03               	xorlw	3	; case 6
  3570  0006DE  A4D8               	btfss	status,2,c
  3571  0006E0  0012               	return	
  3572  0006E2  D7E2               	goto	i2l1507
  3573  0006E4                     __end_of_getNextPosition:
  3574                           	opt stack 0
  3575                           pclatu	equ	0xFFB
  3576                           pclath	equ	0xFFA
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           prodh	equ	0xFF4
  3582                           prodl	equ	0xFF3
  3583                           intcon	equ	0xFF2
  3584                           postinc0	equ	0xFEE
  3585                           fsr0h	equ	0xFEA
  3586                           fsr0l	equ	0xFE9
  3587                           wreg	equ	0xFE8
  3588                           indf1	equ	0xFE7
  3589                           postdec1	equ	0xFE5
  3590                           plusw1	equ	0xFE3
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           indf2	equ	0xFDF
  3594                           postinc2	equ	0xFDE
  3595                           postdec2	equ	0xFDD
  3596                           plusw2	equ	0xFDB
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _checkPaddleCollision *****************
  3602 ;; Defined at:
  3603 ;;		line 288 in file "main.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  paddle          2    0[COMRAM] PTR struct player
  3606 ;;		 -> NULL(0), 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  i               2    3[COMRAM] int 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;		None               void
  3611 ;; Registers used:
  3612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3618 ;;      Params:         2       0       0       0       0       0       0
  3619 ;;      Locals:         2       0       0       0       0       0       0
  3620 ;;      Temps:          1       0       0       0       0       0       0
  3621 ;;      Totals:         5       0       0       0       0       0       0
  3622 ;;Total ram usage:        5 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_checkNextPosition
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text20
  3632  0008C4                     __ptext20:
  3633                           	opt stack 0
  3634  0008C4                     _checkPaddleCollision:
  3635                           	opt stack 24
  3636                           
  3637                           ;main.c: 290: if (_nextPos[0] == 1 || _nextPos[0] == 14) {
  3638                           
  3639                           ; BSR set to: 1
  3640                           ;incstack = 0
  3641  0008C4  0101               	movlb	1	; () banked
  3642  0008C6  05F0               	decf	__nextPos& (0+255),w,b
  3643  0008C8  B4D8               	btfsc	status,2,c
  3644  0008CA  D005               	goto	i2l1733
  3645                           
  3646                           ; BSR set to: 1
  3647  0008CC  0E0E               	movlw	14
  3648  0008CE  0101               	movlb	1	; () banked
  3649  0008D0  19F0               	xorwf	__nextPos& (0+255),w,b
  3650  0008D2  A4D8               	btfss	status,2,c
  3651  0008D4  D01C               	goto	i2l1749
  3652  0008D6                     i2l1733:
  3653                           
  3654                           ; BSR set to: 1
  3655                           ;main.c: 291: int i = 0;
  3656  0008D6  0E00               	movlw	0
  3657  0008D8  6E05               	movwf	checkPaddleCollision@i+1,c
  3658  0008DA  0E00               	movlw	0
  3659  0008DC  6E04               	movwf	checkPaddleCollision@i,c
  3660                           
  3661                           ; BSR set to: 1
  3662                           ;main.c: 295: paddle->handleCollision(0);
  3663  0008DE  EE20 F002          	lfsr	2,2
  3664  0008E2  5001               	movf	checkPaddleCollision@paddle,w,c
  3665  0008E4  26D9               	addwf	fsr2l,f,c
  3666  0008E6  5002               	movf	checkPaddleCollision@paddle+1,w,c
  3667  0008E8  22DA               	addwfc	fsr2h,f,c
  3668  0008EA  0101               	movlb	1	; () banked
  3669  0008EC  51F1               	movf	(__nextPos+1)& (0+255),w,b
  3670  0008EE  18DE               	xorwf	postinc2,w,c
  3671  0008F0  A4D8               	btfss	status,2,c
  3672  0008F2  D002               	goto	i2l1743
  3673  0008F4                     i2l1737:
  3674                           
  3675                           ; BSR set to: 1
  3676                           ;main.c: 296: return 1;
  3677  0008F4  80D8               	bsf	status,0,c
  3678                           
  3679                           ; BSR set to: 1
  3680  0008F6  0012               	return	
  3681  0008F8                     i2l1743:
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;main.c: 299: paddle->handleCollision(1);
  3685  0008F8  EE20 F003          	lfsr	2,3
  3686  0008FC  5001               	movf	checkPaddleCollision@paddle,w,c
  3687  0008FE  26D9               	addwf	fsr2l,f,c
  3688  000900  5002               	movf	checkPaddleCollision@paddle+1,w,c
  3689  000902  22DA               	addwfc	fsr2h,f,c
  3690  000904  0101               	movlb	1	; () banked
  3691  000906  51F1               	movf	(__nextPos+1)& (0+255),w,b
  3692  000908  18DE               	xorwf	postinc2,w,c
  3693  00090A  B4D8               	btfsc	status,2,c
  3694  00090C  D7F3               	goto	i2l1737
  3695  00090E                     i2l1749:
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;main.c: 301: }
  3699                           ;main.c: 303: }
  3700                           ;main.c: 304: return 0;
  3701  00090E  90D8               	bcf	status,0,c
  3702  000910  0012               	return	
  3703  000912                     __end_of_checkPaddleCollision:
  3704                           	opt stack 0
  3705                           pclatu	equ	0xFFB
  3706                           pclath	equ	0xFFA
  3707                           tblptru	equ	0xFF8
  3708                           tblptrh	equ	0xFF7
  3709                           tblptrl	equ	0xFF6
  3710                           tablat	equ	0xFF5
  3711                           prodh	equ	0xFF4
  3712                           prodl	equ	0xFF3
  3713                           intcon	equ	0xFF2
  3714                           postinc0	equ	0xFEE
  3715                           fsr0h	equ	0xFEA
  3716                           fsr0l	equ	0xFE9
  3717                           wreg	equ	0xFE8
  3718                           indf1	equ	0xFE7
  3719                           postdec1	equ	0xFE5
  3720                           plusw1	equ	0xFE3
  3721                           fsr1h	equ	0xFE2
  3722                           fsr1l	equ	0xFE1
  3723                           indf2	equ	0xFDF
  3724                           postinc2	equ	0xFDE
  3725                           postdec2	equ	0xFDD
  3726                           plusw2	equ	0xFDB
  3727                           fsr2h	equ	0xFDA
  3728                           fsr2l	equ	0xFD9
  3729                           status	equ	0xFD8
  3730                           
  3731 ;; *************** function ___lwdiv *****************
  3732 ;; Defined at:
  3733 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  dividend        2    0[COMRAM] unsigned int 
  3736 ;;  divisor         2    2[COMRAM] unsigned int 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  quotient        2    4[COMRAM] unsigned int 
  3739 ;;  counter         1    6[COMRAM] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  2    0[COMRAM] unsigned int 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3749 ;;      Params:         4       0       0       0       0       0       0
  3750 ;;      Locals:         3       0       0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0
  3752 ;;      Totals:         7       0       0       0       0       0       0
  3753 ;;Total ram usage:        7 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_ISR
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text21
  3763  000872                     __ptext21:
  3764                           	opt stack 0
  3765  000872                     ___lwdiv:
  3766                           	opt stack 25
  3767                           
  3768                           ; BSR set to: 1
  3769                           ;incstack = 0
  3770  000872  0E00               	movlw	0
  3771  000874  6E06               	movwf	___lwdiv@quotient+1,c
  3772  000876  0E00               	movlw	0
  3773  000878  6E05               	movwf	___lwdiv@quotient,c
  3774  00087A  5003               	movf	___lwdiv@divisor,w,c
  3775  00087C  1004               	iorwf	___lwdiv@divisor+1,w,c
  3776  00087E  B4D8               	btfsc	status,2,c
  3777  000880  D01C               	goto	i2l702
  3778  000882  0E01               	movlw	1
  3779  000884  6E07               	movwf	___lwdiv@counter,c
  3780  000886  D004               	goto	i2l1795
  3781  000888                     i2l1793:
  3782  000888  90D8               	bcf	status,0,c
  3783  00088A  3603               	rlcf	___lwdiv@divisor,f,c
  3784  00088C  3604               	rlcf	___lwdiv@divisor+1,f,c
  3785  00088E  2A07               	incf	___lwdiv@counter,f,c
  3786  000890                     i2l1795:
  3787  000890  AE04               	btfss	___lwdiv@divisor+1,7,c
  3788  000892  D7FA               	goto	i2l1793
  3789  000894                     i2l1797:
  3790  000894  90D8               	bcf	status,0,c
  3791  000896  3605               	rlcf	___lwdiv@quotient,f,c
  3792  000898  3606               	rlcf	___lwdiv@quotient+1,f,c
  3793  00089A  5003               	movf	___lwdiv@divisor,w,c
  3794  00089C  5C01               	subwf	___lwdiv@dividend,w,c
  3795  00089E  5004               	movf	___lwdiv@divisor+1,w,c
  3796  0008A0  5802               	subwfb	___lwdiv@dividend+1,w,c
  3797  0008A2  A0D8               	btfss	status,0,c
  3798  0008A4  D005               	goto	i2l1805
  3799  0008A6  5003               	movf	___lwdiv@divisor,w,c
  3800  0008A8  5E01               	subwf	___lwdiv@dividend,f,c
  3801  0008AA  5004               	movf	___lwdiv@divisor+1,w,c
  3802  0008AC  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3803  0008AE  8005               	bsf	___lwdiv@quotient,0,c
  3804  0008B0                     i2l1805:
  3805  0008B0  90D8               	bcf	status,0,c
  3806  0008B2  3204               	rrcf	___lwdiv@divisor+1,f,c
  3807  0008B4  3203               	rrcf	___lwdiv@divisor,f,c
  3808  0008B6  2E07               	decfsz	___lwdiv@counter,f,c
  3809  0008B8  D7ED               	goto	i2l1797
  3810  0008BA                     i2l702:
  3811  0008BA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3812  0008BE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3813  0008C2  0012               	return		;funcret
  3814  0008C4                     __end_of___lwdiv:
  3815                           	opt stack 0
  3816  0000                     pclatu	equ	0xFFB
  3817                           pclath	equ	0xFFA
  3818                           tblptru	equ	0xFF8
  3819                           tblptrh	equ	0xFF7
  3820                           tblptrl	equ	0xFF6
  3821                           tablat	equ	0xFF5
  3822                           prodh	equ	0xFF4
  3823                           prodl	equ	0xFF3
  3824                           intcon	equ	0xFF2
  3825                           postinc0	equ	0xFEE
  3826                           fsr0h	equ	0xFEA
  3827                           fsr0l	equ	0xFE9
  3828                           wreg	equ	0xFE8
  3829                           indf1	equ	0xFE7
  3830                           postdec1	equ	0xFE5
  3831                           plusw1	equ	0xFE3
  3832                           fsr1h	equ	0xFE2
  3833                           fsr1l	equ	0xFE1
  3834                           indf2	equ	0xFDF
  3835                           postinc2	equ	0xFDE
  3836                           postdec2	equ	0xFDD
  3837                           plusw2	equ	0xFDB
  3838                           fsr2h	equ	0xFDA
  3839                           fsr2l	equ	0xFD9
  3840                           status	equ	0xFD8
  3841                           pclatu	equ	0xFFB
  3842                           pclath	equ	0xFFA
  3843                           tblptru	equ	0xFF8
  3844                           tblptrh	equ	0xFF7
  3845                           tblptrl	equ	0xFF6
  3846                           tablat	equ	0xFF5
  3847                           prodh	equ	0xFF4
  3848                           prodl	equ	0xFF3
  3849                           intcon	equ	0xFF2
  3850                           postinc0	equ	0xFEE
  3851                           fsr0h	equ	0xFEA
  3852                           fsr0l	equ	0xFE9
  3853                           wreg	equ	0xFE8
  3854                           indf1	equ	0xFE7
  3855                           postdec1	equ	0xFE5
  3856                           plusw1	equ	0xFE3
  3857                           fsr1h	equ	0xFE2
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           postinc2	equ	0xFDE
  3861                           postdec2	equ	0xFDD
  3862                           plusw2	equ	0xFDB
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8
  3866                           
  3867                           	psect	rparam
  3868  0000                     pclatu	equ	0xFFB
  3869                           pclath	equ	0xFFA
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           prodh	equ	0xFF4
  3875                           prodl	equ	0xFF3
  3876                           intcon	equ	0xFF2
  3877                           postinc0	equ	0xFEE
  3878                           fsr0h	equ	0xFEA
  3879                           fsr0l	equ	0xFE9
  3880                           wreg	equ	0xFE8
  3881                           indf1	equ	0xFE7
  3882                           postdec1	equ	0xFE5
  3883                           plusw1	equ	0xFE3
  3884                           fsr1h	equ	0xFE2
  3885                           fsr1l	equ	0xFE1
  3886                           indf2	equ	0xFDF
  3887                           postinc2	equ	0xFDE
  3888                           postdec2	equ	0xFDD
  3889                           plusw2	equ	0xFDB
  3890                           fsr2h	equ	0xFDA
  3891                           fsr2l	equ	0xFD9
  3892                           status	equ	0xFD8
  3893                           
  3894                           	psect	temp
  3895  00003B                     btemp:
  3896                           	opt stack 0
  3897  00003B                     	ds	1
  3898  0000                     int$flags	set	btemp
  3899                           pclatu	equ	0xFFB
  3900                           pclath	equ	0xFFA
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           intcon	equ	0xFF2
  3908                           postinc0	equ	0xFEE
  3909                           fsr0h	equ	0xFEA
  3910                           fsr0l	equ	0xFE9
  3911                           wreg	equ	0xFE8
  3912                           indf1	equ	0xFE7
  3913                           postdec1	equ	0xFE5
  3914                           plusw1	equ	0xFE3
  3915                           fsr1h	equ	0xFE2
  3916                           fsr1l	equ	0xFE1
  3917                           indf2	equ	0xFDF
  3918                           postinc2	equ	0xFDE
  3919                           postdec2	equ	0xFDD
  3920                           plusw2	equ	0xFDB
  3921                           fsr2h	equ	0xFDA
  3922                           fsr2l	equ	0xFD9
  3923                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        254
    BSS         139
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     36      58
    BANK0           128    128     128
    BANK1           256     71     246
    BANK2           256     54     250
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    checkPaddleCollision@paddle.handleCollision	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> handlePaddleRightCollision(), handlePaddleLeftCollision(), 

    checkPaddleCollision@paddle	PTR struct player size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _p2.handleCollision	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> handlePaddleRightCollision(), handlePaddleLeftCollision(), 

    _p2	PTR struct player size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S111player$handleCollision	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> handlePaddleRightCollision(), handlePaddleLeftCollision(), 

    _p1.handleCollision	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> handlePaddleRightCollision(), handlePaddleLeftCollision(), 

    _p1	PTR struct player size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _initializePong->_startPong
    _startPong->_drawSymbol
    _refresh->_setColHigh
    _refresh->_setRowHigh
    _drawSymbol->_on
    _initializeLED->_turnAllOff

Critical Paths under _ISR in COMRAM

    _ISR->___lwdiv
    _writePong->_off
    _writePong->i2_on
    _checkNextPosition->_checkPaddleCollision

Critical Paths under _main in BANK0

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3883
                         _initialize
                      _initializeLED
                     _initializePong
                            _refresh
 ---------------------------------------------------------------------------------
 (1) _initializePong                                       0     0      0    3301
                          _startPong
 ---------------------------------------------------------------------------------
 (2) _startPong                                            2     2      0    3301
                                             34 COMRAM     2     2      0
                         _drawSymbol
                            _refresh
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (1) _refresh                                              5     5      0     384
                                             27 COMRAM     5     5      0
                             _allOff
                         _setColHigh
                         _setRowHigh
 ---------------------------------------------------------------------------------
 (2) _setRowHigh                                           3     3      0      93
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _setColHigh                                           3     3      0      31
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _allOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drawSymbol                                         259   258      1    2651
                                             28 COMRAM     6     5      1
                                              0 BANK0    128   128      0
                                              0 BANK1     71    71      0
                                              0 BANK2     54    54      0
                                 _on
 ---------------------------------------------------------------------------------
 (4) _on                                                   4     3      1     873
                                             24 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initializeLED                                        0     0      0     198
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _turnAllOff                                           4     4      0     198
                                             24 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 17    17      0    1201
                                              7 COMRAM    17    17      0
                            ___lwdiv
                  _checkNextPosition
                          _writePong
 ---------------------------------------------------------------------------------
 (6) _writePong                                            0     0      0     626
                                _off
                               i2_on
 ---------------------------------------------------------------------------------
 (7) i2_on                                                 4     3      1     218
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) _off                                                  4     3      1     408
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _checkNextPosition                                    0     0      0     173
               _checkPaddleCollision
                 _checkWallCollision
                    _getNextPosition
 ---------------------------------------------------------------------------------
 (7) _checkWallCollision                                   0     0      0       0
                _handleWallCollision
 ---------------------------------------------------------------------------------
 (8) _handleWallCollision                                  0     0      0       0
                    _getNextPosition
 ---------------------------------------------------------------------------------
 (7) _getNextPosition                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _checkPaddleCollision                                 5     3      2     173
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _initializeLED
     _turnAllOff
   _initializePong
     _startPong
       _drawSymbol
         _on
       _refresh
         _allOff
         _setColHigh
         _setRowHigh
       _turnAllOff
   _refresh
     _allOff
     _setColHigh
     _setRowHigh

 _ISR (ROOT)
   ___lwdiv
   _checkNextPosition
     _checkPaddleCollision
     _checkWallCollision
       _handleWallCollision
         _getNextPosition
     _getNextPosition
   _writePong
     _off
     i2_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     36      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     47      F6       7       96.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     80      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     24      3A       1       46.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AA      15        0.0%
DATA                 0      0     2AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Apr 10 14:25:16 2016

           drawSymbol@symbolGo 01A6                             _on 09DE                    __CFG_BORV$3 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000  
                 __CFG_CP3$OFF 000000            drawSymbol@symbolOne 02C4                            ?_on 0019  
          drawSymbol@symbolTwo 00C4                            _GIE 007F97                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000                            _ISR 0008                            _PSA 007EAB  
                          __p1 01F2                            __p2 01F4                            _off 0A56  
                          prod 000FF3                            wreg 000FE8                           ??_on 001A  
                 __CFG_LVP$OFF 000000                           ?_ISR 0001                   __CFG_WDT$OFF 000000  
         drawSymbol@symbolPlay 0080                           l2003 0034                           l2021 0092  
                         l2013 0074                           l2031 00E0                           l2007 003C  
                         l2103 075A                           l2041 0120                           l2017 008A  
                         l2121 07A2                           l2113 076E                           l2035 00E8  
                         l2027 00CA                           l2107 0762                           l2045 0136  
                         l2117 079E                           l2109 0766                           l2063 0198  
                         l2055 0176                           l2073 01EC                           l2049 013E  
                         l2091 0256                           l2083 0234                           l2059 018E  
                         l2139 0720                           l2077 01F6                           l2069 01D4  
                         l2149 0736                           l2087 024C                           l2177 0B4E  
                         l2099 0294                           l1961 09C0                           l1971 09F0  
                         l1981 091E                           l1983 0922                           l1967 09E8  
                         l1993 0956                           l1977 0916                           l1987 092A  
                         ?_off 0001                           l1999 001E                           _ADIE 007CEE  
                         _ADIF 007CF6                           _T0CS 007EAD                           u1404 0B24  
                         u1501 0028                           u1405 0B20                           _LATA 000F89  
                         _LATC 000F8B                           u1424 09B6                           _LATD 000F8C  
                         u1425 09B2                           u1434 09D4                           u1531 007E  
                         u1435 09D0                           u1621 0180                           u1561 00D4  
                         u1651 01DE                           u1591 012A                           u1681 023E  
                         u1787 07AE                           _PEIE 007F96                           i2_on 0A1A  
             ??_initializePong 0025                           __lcg 0038                           _main 0B42  
       ??_checkPaddleCollision 0003                    drawSymbol@i 001F                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         indf1 000FE7                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 003B                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
                        ??_ISR 0008                          ??_off 0002                          ?i2_on 0001  
                   i2on@column 0004          drawSymbol@symbolThree 00E2                          ?_main 0001  
                        _ADRES 000FC3                          _T0PS0 007EA8                          _T0PS1 007EA9  
                        _T0PS2 007EAA                __end_of___lwdiv 08C4                          i2l293 041A  
                        i2l702 08BA                          _PLLEN 007CDE                          _TRISA 000F92  
                        _TRISC 000F94                          _TRISD 000F95                  __CFG_PWRT$OFF 000000  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                          __ball 01ED  
                __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000                __end_of_refresh 07C0  
                        on@row 0019                 __CFG_BOREN$OFF 000000                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
                 __end_ofi2_on 0A56                __initialization 05D2                   __end_of_main 0B54  
          _handleWallCollision 0A92                         ??i2_on 0002                _getNextPosition 065C  
                       ??_main 0025                  __activetblptr 000002           ?_handleWallCollision 0001  
                       _T08BIT 007EAE                         i2l1501 067A                         i2l1503 068C  
                       i2l1511 06BA                         i2l1505 069E                         i2l1507 06A8  
                       i2l1805 08B0                         i2l1733 08D6                         i2l1743 08F8  
                       i2l1671 0A94                         i2l1911 0314                         i2l1737 08F4  
                       i2l1497 065E                         i2l1673 0A98                         i2l1681 0AA8  
                       i2l1761 0A2C                         i2l1499 0670                         i2l1675 0A9C  
                       i2l1683 0AC4                         i2l1749 090E                         i2l1677 0AA0  
                       i2l1693 0A68                         i2l1757 0A24                         i2l1917 031E  
                       i2l1793 0888                         i2l1689 0A60                         i2l1937 03B4  
                       i2l1795 0890                         i2l1797 0894                         _TMR0IE 007F95  
                       _TMR0IF 007F92                         _TMR0ON 007EAF                 __CFG_XINST$OFF 000000  
                       __glfsr 0037                         _allOff 0B54                 __CFG_STVREN$ON 000000  
                       __speed 0035                      ??___lwdiv 0005                         clear_0 05D8  
                       clear_1 05E4                         _pixels 0200                         off@row 0001  
                 __pdataCOMRAM 0025                      ??_refresh 001C                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8         __size_of_initializeLED 001E  
        ??_handleWallCollision 0001     __end_of_checkWallCollision 0B70                     __accesstop 0080  
      __end_of__initialization 064E                __CFG_PBADEN$OFF 000000                  ___rparam_used 000001  
      __end_of_getNextPosition 06E4                 __pcstackCOMRAM 0001                   __pidataBANK1 052C  
                 __pidataBANK2 095A                     __end_of_on 0A1A               startPong@counter 0023  
                   __pbssBANK1 01ED                     __pbssBANK2 0200                  _initializeLED 0AF4  
                      ?_allOff 0001                     _drawSymbol 001A             __size_of_startPong 0072  
                      i2on@row 0001             __size_of_writePong 00D6  __size_of_checkPaddleCollision 004E  
               ?_initializeLED 0001                        __Hparam 0000                        __Lparam 0000  
             ?_getNextPosition 0001                  refresh@theCol 001F                  refresh@theRow 0020  
              __size_of_allOff 000E      _handlePaddleLeftCollision 000000                        ___lwdiv 0872  
   drawSymbol@symbolArrowRight 02EA                        __pcinit 05D2         drawSymbol@chosenSymbol 001E  
                      __ramtop 0600                     _initialize 07C0                        __ptext0 0B42  
                      __ptext1 081A                        __ptext2 06E4                        __ptext3 0756  
                      __ptext4 099E                        __ptext5 0B12                        __ptext6 0B54  
                      __ptext7 001A                        __ptext8 09DE                        __ptext9 0AF4  
                 __size_of_ISR 044E                   __size_of_off 003C                        _refresh 0756  
               drawSymbol@i_71 0021                 drawSymbol@i_75 0022                 drawSymbol@i_67 0020  
               drawSymbol@i_83 01EB                 drawSymbol@i_87 01EC                 drawSymbol@i_79 01EA  
                   _setColHigh 0B12                 __pintcode_body 02C2           end_of_initialization 064E  
                __Lmediumconst 0000                        int_func 02C2                     _setRowHigh 099E  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE        __size_of_initializePong 0058              __end_of_startPong 0756  
            drawSymbol@offSetX 001D              __end_of_writePong 052C                      _TRISBbits 000F93  
                  ?_drawSymbol 001D                ??_initializeLED 001D                     _turnAllOff 0912  
           _checkWallCollision 0B62                  setRowHigh@row 001B                 __end_of_allOff 0B62  
          ?_checkWallCollision 0001                  __pidataCOMRAM 0B2E                    ?_initialize 0001  
  __end_of_handleWallCollision 0ACA     _handlePaddleRightCollision 000000            start_initialization 05D2  
                  __end_of_ISR 0456                    ?_setColHigh 0001                    __end_of_off 0A92  
         ??_checkWallCollision 0001                     ISR@ADvalue 0016                    ?_setRowHigh 0001  
        checkPaddleCollision@i 0004               __CFG_OSC$INTIO67 000000     checkPaddleCollision@paddle 0001  
                     ??_allOff 0019            __size_of_drawSymbol 02A8                    __pdataBANK1 0100  
                  __pdataBANK2 0280               __CFG_LPT1OSC$OFF 000000                    __pbssCOMRAM 0039  
                __pcstackBANK0 0080                  __pcstackBANK1 01A6                  __pcstackBANK2 02C4  
          __size_of_initialize 005A                       ISR@value 0018               ___lwdiv@dividend 0001  
                  ?_turnAllOff 0001              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
               _initializePong 081A            __size_of_setColHigh 001C                       ?___lwdiv 0001  
 __end_of_checkPaddleCollision 0912            __size_of_setRowHigh 0040                    turnAllOff@i 001B  
                  turnAllOff@j 001C              _checkNextPosition 0ACA                       ?_refresh 0001  
           ?_checkNextPosition 0001               ___lwdiv@quotient 0005                    __size_of_on 003C  
          ??_checkNextPosition 0006         __end_of_initializePong 0872               __CFG_WDTPS$32768 000000  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
    __end_of_checkNextPosition 0AF4                      _startPong 06E4       __size_of_getNextPosition 0088  
                    off@column 0004            __size_of_turnAllOff 0048                   ??_drawSymbol 001E  
                    _writePong 0456                      copy_data0 0602                      copy_data1 0622  
                    copy_data2 0642                  __timerCounter 0039                       __Hrparam 0000  
              ?_initializePong 0001                       __Lrparam 0000             __end_of_drawSymbol 02C2  
             __size_of___lwdiv 0052                   ??_initialize 0019                     ?_startPong 0001  
                     __nextPos 01F0                ___lwdiv@divisor 0003                   ??_setColHigh 0019  
             __size_of_refresh 006A                ___lwdiv@counter 0007                       __ptext10 0912  
                     __ptext11 07C0                       __ptext20 08C4                       __ptext21 0872  
                     __ptext13 0456                       __ptext14 0A1A                       __ptext15 0A56  
                     __ptext16 0ACA                       __ptext17 0B62                       __ptext18 0A92  
                     __ptext19 065C                     ?_writePong 0001                  __size_ofi2_on 003C  
              drawSymbol@F3240 0280                drawSymbol@F3224 0180                drawSymbol@F3232 0162  
              drawSymbol@F3228 0144                drawSymbol@F3236 0100                drawSymbol@F3244 0025  
              drawSymbol@F3248 0196                   ??_setRowHigh 0019                  __size_of_main 0012  
           __end_of_initialize 081A          __end_of_initializeLED 0B12           _checkPaddleCollision 08C4  
                     int$flags 003B             __end_of_setColHigh 0B2E                       on@column 001C  
   __size_of_checkNextPosition 002A                    _OSCTUNEbits 000F9B             __end_of_setRowHigh 09DE  
             setColHigh@column 001B              ??_getNextPosition 0001   __size_of_handleWallCollision 0038  
    drawSymbol@symbolArrowLeft 02DA                       intlevel2 0000    __size_of_checkWallCollision 000E  
        ?_checkPaddleCollision 0001                     _OSCCONbits 000FD3                   ??_turnAllOff 0019  
                  ??_startPong 0023                    ??_writePong 0005             __end_of_turnAllOff 095A  
