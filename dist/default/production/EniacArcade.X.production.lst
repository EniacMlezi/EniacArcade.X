

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Apr 03 11:43:35 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	idataBANK3,global,class=CODE,delta=1
     9                           	psect	idataBANK4,global,class=CODE,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	idataCOMRAM
    61  0011C4                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for __speed
    65  0011C4  00C8               	dw	200
    66                           
    67                           	psect	idataBANK1
    68  001156                     __pidataBANK1:
    69                           	opt stack 0
    70                           
    71                           ;initializer for drawSymbol@F3226
    72  001156  02                 	db	2
    73  001157  05                 	db	5
    74  001158  03                 	db	3
    75  001159  06                 	db	6
    76  00115A  04                 	db	4
    77  00115B  07                 	db	7
    78  00115C  04                 	db	4
    79  00115D  06                 	db	6
    80  00115E  04                 	db	4
    81  00115F  05                 	db	5
    82  001160  04                 	db	4
    83  001161  04                 	db	4
    84  001162  04                 	db	4
    85  001163  03                 	db	3
    86  001164  04                 	db	4
    87  001165  02                 	db	2
    88  001166  04                 	db	4
    89  001167  01                 	db	1
    90  001168  04                 	db	4
    91  001169  00                 	db	0
    92  00116A  03                 	db	3
    93  00116B  00                 	db	0
    94  00116C  05                 	db	5
    95  00116D  00                 	db	0
    96                           
    97                           	psect	idataBANK2
    98  000B44                     __pidataBANK2:
    99                           	opt stack 0
   100                           
   101                           ;initializer for drawSymbol@F3241
   102  000B44  00                 	db	0
   103  000B45  03                 	db	3
   104  000B46  01                 	db	1
   105  000B47  03                 	db	3
   106  000B48  02                 	db	2
   107  000B49  03                 	db	3
   108  000B4A  03                 	db	3
   109  000B4B  03                 	db	3
   110  000B4C  04                 	db	4
   111  000B4D  03                 	db	3
   112  000B4E  05                 	db	5
   113  000B4F  03                 	db	3
   114  000B50  06                 	db	6
   115  000B51  03                 	db	3
   116  000B52  07                 	db	7
   117  000B53  03                 	db	3
   118  000B54  08                 	db	8
   119  000B55  03                 	db	3
   120  000B56  07                 	db	7
   121  000B57  04                 	db	4
   122  000B58  06                 	db	6
   123  000B59  05                 	db	5
   124  000B5A  05                 	db	5
   125  000B5B  07                 	db	7
   126  000B5C  06                 	db	6
   127  000B5D  02                 	db	2
   128  000B5E  05                 	db	5
   129  000B5F  01                 	db	1
   130  000B60  04                 	db	4
   131  000B61  00                 	db	0
   132                           
   133                           ;initializer for drawSymbol@F3244
   134  000B62  00                 	db	0
   135  000B63  03                 	db	3
   136  000B64  01                 	db	1
   137  000B65  03                 	db	3
   138  000B66  02                 	db	2
   139  000B67  03                 	db	3
   140  000B68  03                 	db	3
   141  000B69  03                 	db	3
   142  000B6A  04                 	db	4
   143  000B6B  03                 	db	3
   144  000B6C  05                 	db	5
   145  000B6D  03                 	db	3
   146  000B6E  06                 	db	6
   147  000B6F  03                 	db	3
   148  000B70  07                 	db	7
   149  000B71  03                 	db	3
   150  000B72  08                 	db	8
   151  000B73  03                 	db	3
   152  000B74  01                 	db	1
   153  000B75  04                 	db	4
   154  000B76  02                 	db	2
   155  000B77  05                 	db	5
   156  000B78  03                 	db	3
   157  000B79  06                 	db	6
   158  000B7A  01                 	db	1
   159  000B7B  02                 	db	2
   160  000B7C  02                 	db	2
   161  000B7D  01                 	db	1
   162  000B7E  03                 	db	3
   163  000B7F  00                 	db	0
   164                           
   165                           ;initializer for drawSymbol@F3229
   166  000B80  02                 	db	2
   167  000B81  05                 	db	5
   168  000B82  03                 	db	3
   169  000B83  06                 	db	6
   170  000B84  04                 	db	4
   171  000B85  06                 	db	6
   172  000B86  05                 	db	5
   173  000B87  06                 	db	6
   174  000B88  06                 	db	6
   175  000B89  05                 	db	5
   176  000B8A  06                 	db	6
   177  000B8B  04                 	db	4
   178  000B8C  05                 	db	5
   179  000B8D  03                 	db	3
   180  000B8E  04                 	db	4
   181  000B8F  02                 	db	2
   182  000B90  03                 	db	3
   183  000B91  01                 	db	1
   184  000B92  02                 	db	2
   185  000B93  00                 	db	0
   186  000B94  03                 	db	3
   187  000B95  00                 	db	0
   188  000B96  04                 	db	4
   189  000B97  00                 	db	0
   190  000B98  05                 	db	5
   191  000B99  00                 	db	0
   192  000B9A  06                 	db	6
   193  000B9B  00                 	db	0
   194                           
   195                           ;initializer for drawSymbol@F3232
   196  000B9C  02                 	db	2
   197  000B9D  06                 	db	6
   198  000B9E  03                 	db	3
   199  000B9F  07                 	db	7
   200  000BA0  04                 	db	4
   201  000BA1  07                 	db	7
   202  000BA2  05                 	db	5
   203  000BA3  06                 	db	6
   204  000BA4  05                 	db	5
   205  000BA5  05                 	db	5
   206  000BA6  04                 	db	4
   207  000BA7  04                 	db	4
   208  000BA8  05                 	db	5
   209  000BA9  03                 	db	3
   210  000BAA  05                 	db	5
   211  000BAB  02                 	db	2
   212  000BAC  05                 	db	5
   213  000BAD  01                 	db	1
   214  000BAE  04                 	db	4
   215  000BAF  00                 	db	0
   216  000BB0  03                 	db	3
   217  000BB1  00                 	db	0
   218  000BB2  02                 	db	2
   219  000BB3  01                 	db	1
   220                           
   221                           	psect	idataBANK3
   222  000F76                     __pidataBANK3:
   223                           	opt stack 0
   224                           
   225                           ;initializer for drawSymbol@F3235
   226  000F76  01                 	db	1
   227  000F77  01                 	db	1
   228  000F78  01                 	db	1
   229  000F79  02                 	db	2
   230  000F7A  01                 	db	1
   231  000F7B  03                 	db	3
   232  000F7C  01                 	db	1
   233  000F7D  04                 	db	4
   234  000F7E  01                 	db	1
   235  000F7F  05                 	db	5
   236  000F80  01                 	db	1
   237  000F81  06                 	db	6
   238  000F82  02                 	db	2
   239  000F83  06                 	db	6
   240  000F84  03                 	db	3
   241  000F85  06                 	db	6
   242  000F86  03                 	db	3
   243  000F87  05                 	db	5
   244  000F88  03                 	db	3
   245  000F89  04                 	db	4
   246  000F8A  02                 	db	2
   247  000F8B  04                 	db	4
   248  000F8C  05                 	db	5
   249  000F8D  06                 	db	6
   250  000F8E  05                 	db	5
   251  000F8F  05                 	db	5
   252  000F90  05                 	db	5
   253  000F91  04                 	db	4
   254  000F92  05                 	db	5
   255  000F93  03                 	db	3
   256  000F94  05                 	db	5
   257  000F95  02                 	db	2
   258  000F96  05                 	db	5
   259  000F97  01                 	db	1
   260  000F98  06                 	db	6
   261  000F99  01                 	db	1
   262  000F9A  08                 	db	8
   263  000F9B  01                 	db	1
   264  000F9C  08                 	db	8
   265  000F9D  02                 	db	2
   266  000F9E  08                 	db	8
   267  000F9F  03                 	db	3
   268  000FA0  09                 	db	9
   269  000FA1  04                 	db	4
   270  000FA2  0A                 	db	10
   271  000FA3  04                 	db	4
   272  000FA4  0B                 	db	11
   273  000FA5  03                 	db	3
   274  000FA6  0B                 	db	11
   275  000FA7  02                 	db	2
   276  000FA8  0B                 	db	11
   277  000FA9  01                 	db	1
   278  000FAA  0D                 	db	13
   279  000FAB  01                 	db	1
   280  000FAC  0D                 	db	13
   281  000FAD  02                 	db	2
   282  000FAE  0D                 	db	13
   283  000FAF  03                 	db	3
   284  000FB0  0D                 	db	13
   285  000FB1  04                 	db	4
   286  000FB2  0C                 	db	12
   287  000FB3  05                 	db	5
   288  000FB4  0B                 	db	11
   289  000FB5  06                 	db	6
   290  000FB6  0E                 	db	14
   291  000FB7  05                 	db	5
   292  000FB8  0E                 	db	14
   293  000FB9  06                 	db	6
   294                           
   295                           	psect	idataBANK4
   296  000FBA                     __pidataBANK4:
   297                           	opt stack 0
   298                           
   299                           ;initializer for drawSymbol@F3238
   300  000FBA  06                 	db	6
   301  000FBB  06                 	db	6
   302  000FBC  05                 	db	5
   303  000FBD  07                 	db	7
   304  000FBE  04                 	db	4
   305  000FBF  07                 	db	7
   306  000FC0  03                 	db	3
   307  000FC1  07                 	db	7
   308  000FC2  02                 	db	2
   309  000FC3  06                 	db	6
   310  000FC4  02                 	db	2
   311  000FC5  05                 	db	5
   312  000FC6  02                 	db	2
   313  000FC7  04                 	db	4
   314  000FC8  02                 	db	2
   315  000FC9  03                 	db	3
   316  000FCA  02                 	db	2
   317  000FCB  02                 	db	2
   318  000FCC  02                 	db	2
   319  000FCD  01                 	db	1
   320  000FCE  03                 	db	3
   321  000FCF  00                 	db	0
   322  000FD0  04                 	db	4
   323  000FD1  00                 	db	0
   324  000FD2  05                 	db	5
   325  000FD3  00                 	db	0
   326  000FD4  06                 	db	6
   327  000FD5  01                 	db	1
   328  000FD6  05                 	db	5
   329  000FD7  02                 	db	2
   330  000FD8  04                 	db	4
   331  000FD9  02                 	db	2
   332  000FDA  09                 	db	9
   333  000FDB  06                 	db	6
   334  000FDC  09                 	db	9
   335  000FDD  05                 	db	5
   336  000FDE  09                 	db	9
   337  000FDF  04                 	db	4
   338  000FE0  09                 	db	9
   339  000FE1  03                 	db	3
   340  000FE2  09                 	db	9
   341  000FE3  02                 	db	2
   342  000FE4  09                 	db	9
   343  000FE5  01                 	db	1
   344  000FE6  0A                 	db	10
   345  000FE7  00                 	db	0
   346  000FE8  0B                 	db	11
   347  000FE9  00                 	db	0
   348  000FEA  0C                 	db	12
   349  000FEB  00                 	db	0
   350  000FEC  0D                 	db	13
   351  000FED  01                 	db	1
   352  000FEE  0D                 	db	13
   353  000FEF  02                 	db	2
   354  000FF0  0D                 	db	13
   355  000FF1  04                 	db	4
   356  000FF2  0D                 	db	13
   357  000FF3  05                 	db	5
   358  000FF4  0D                 	db	13
   359  000FF5  06                 	db	6
   360  000FF6  0C                 	db	12
   361  000FF7  07                 	db	7
   362  000FF8  0B                 	db	11
   363  000FF9  07                 	db	7
   364  000FFA  0A                 	db	10
   365  000FFB  07                 	db	7
   366  000FFC  00                 	db	0
   367  000FFD  00                 	db	0
   368  0000                     _ADRES	set	4035
   369  0000                     _ADCON0bits	set	4034
   370  0000                     _ADCON1bits	set	4033
   371  0000                     _ADCON2bits	set	4032
   372  0000                     _LATA	set	3977
   373  0000                     _LATC	set	3979
   374  0000                     _LATD	set	3980
   375  0000                     _OSCCONbits	set	4051
   376  0000                     _OSCTUNEbits	set	3995
   377  0000                     _TRISA	set	3986
   378  0000                     _TRISBbits	set	3987
   379  0000                     _TRISC	set	3988
   380  0000                     _TRISD	set	3989
   381  0000                     _ADIE	set	31982
   382  0000                     _ADIF	set	31990
   383  0000                     _GIE	set	32663
   384  0000                     _PEIE	set	32662
   385  0000                     _PLLEN	set	31966
   386  0000                     _PSA	set	32427
   387  0000                     _T08BIT	set	32430
   388  0000                     _T0CS	set	32429
   389  0000                     _T0PS0	set	32424
   390  0000                     _T0PS1	set	32425
   391  0000                     _T0PS2	set	32426
   392  0000                     _TMR0IE	set	32661
   393  0000                     _TMR0IF	set	32658
   394  0000                     _TMR0ON	set	32431
   395                           
   396                           ; #config settings
   397  0000                     
   398                           	psect	cinit
   399  000870                     __pcinit:
   400                           	opt stack 0
   401  000870                     start_initialization:
   402                           	opt stack 0
   403  000870                     __initialization:
   404                           	opt stack 0
   405                           
   406                           ; Clear objects allocated to BANK3 (128 bytes)
   407  000870  EE03  F000         	lfsr	0,__pbssBANK3
   408  000874  0E80               	movlw	128
   409  000876                     clear_0:
   410  000876  6AEE               	clrf	postinc0,c
   411  000878  06E8               	decf	wreg,f,c
   412  00087A  E1FD               	bnz	clear_0
   413                           
   414                           ; Clear objects allocated to BANK1 (15 bytes)
   415  00087C  EE01  F0BC         	lfsr	0,__pbssBANK1
   416  000880  0E0F               	movlw	15
   417  000882                     clear_1:
   418  000882  6AEE               	clrf	postinc0,c
   419  000884  06E8               	decf	wreg,f,c
   420  000886  E1FD               	bnz	clear_1
   421                           
   422                           ; Clear objects allocated to COMRAM (2 bytes)
   423  000888  6A7B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   424  00088A  6A7A               	clrf	__pbssCOMRAM& (0+255),c
   425                           
   426                           ; Initialize objects allocated to BANK4 (68 bytes)
   427                           ; load TBLPTR registers with __pidataBANK4
   428  00088C  0EBA               	movlw	low __pidataBANK4
   429  00088E  6EF6               	movwf	tblptrl,c
   430  000890  0E0F               	movlw	high __pidataBANK4
   431  000892  6EF7               	movwf	tblptrh,c
   432  000894  0E00               	movlw	low (__pidataBANK4 shr (0+16))
   433  000896  6EF8               	movwf	tblptru,c
   434  000898  EE04  F000         	lfsr	0,__pdataBANK4
   435  00089C  EE10 F044          	lfsr	1,68
   436  0008A0                     copy_data0:
   437  0008A0  0009               	tblrd		*+
   438  0008A2  CFF5 FFEE          	movff	tablat,postinc0
   439  0008A6  50E5               	movf	postdec1,w,c
   440  0008A8  50E1               	movf	fsr1l,w,c
   441  0008AA  E1FA               	bnz	copy_data0
   442                           
   443                           ; Initialize objects allocated to BANK3 (68 bytes)
   444                           ; load TBLPTR registers with __pidataBANK3
   445  0008AC  0E76               	movlw	low __pidataBANK3
   446  0008AE  6EF6               	movwf	tblptrl,c
   447  0008B0  0E0F               	movlw	high __pidataBANK3
   448  0008B2  6EF7               	movwf	tblptrh,c
   449  0008B4  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   450  0008B6  6EF8               	movwf	tblptru,c
   451  0008B8  EE03  F080         	lfsr	0,__pdataBANK3
   452  0008BC  EE10 F044          	lfsr	1,68
   453  0008C0                     copy_data1:
   454  0008C0  0009               	tblrd		*+
   455  0008C2  CFF5 FFEE          	movff	tablat,postinc0
   456  0008C6  50E5               	movf	postdec1,w,c
   457  0008C8  50E1               	movf	fsr1l,w,c
   458  0008CA  E1FA               	bnz	copy_data1
   459                           
   460                           ; Initialize objects allocated to BANK2 (112 bytes)
   461                           ; load TBLPTR registers with __pidataBANK2
   462  0008CC  0E44               	movlw	low __pidataBANK2
   463  0008CE  6EF6               	movwf	tblptrl,c
   464  0008D0  0E0B               	movlw	high __pidataBANK2
   465  0008D2  6EF7               	movwf	tblptrh,c
   466  0008D4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   467  0008D6  6EF8               	movwf	tblptru,c
   468  0008D8  EE02  F07E         	lfsr	0,__pdataBANK2
   469  0008DC  EE10 F070          	lfsr	1,112
   470  0008E0                     copy_data2:
   471  0008E0  0009               	tblrd		*+
   472  0008E2  CFF5 FFEE          	movff	tablat,postinc0
   473  0008E6  50E5               	movf	postdec1,w,c
   474  0008E8  50E1               	movf	fsr1l,w,c
   475  0008EA  E1FA               	bnz	copy_data2
   476                           
   477                           ; Initialize objects allocated to BANK1 (24 bytes)
   478                           ; load TBLPTR registers with __pidataBANK1
   479  0008EC  0E56               	movlw	low __pidataBANK1
   480  0008EE  6EF6               	movwf	tblptrl,c
   481  0008F0  0E11               	movlw	high __pidataBANK1
   482  0008F2  6EF7               	movwf	tblptrh,c
   483  0008F4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   484  0008F6  6EF8               	movwf	tblptru,c
   485  0008F8  EE01  F0A4         	lfsr	0,__pdataBANK1
   486  0008FC  EE10 F018          	lfsr	1,24
   487  000900                     copy_data3:
   488  000900  0009               	tblrd		*+
   489  000902  CFF5 FFEE          	movff	tablat,postinc0
   490  000906  50E5               	movf	postdec1,w,c
   491  000908  50E1               	movf	fsr1l,w,c
   492  00090A  E1FA               	bnz	copy_data3
   493                           
   494                           ; Initialize objects allocated to COMRAM (2 bytes)
   495                           ; load TBLPTR registers with __pidataCOMRAM
   496  00090C  0EC4               	movlw	low __pidataCOMRAM
   497  00090E  6EF6               	movwf	tblptrl,c
   498  000910  0E11               	movlw	high __pidataCOMRAM
   499  000912  6EF7               	movwf	tblptrh,c
   500  000914  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   501  000916  6EF8               	movwf	tblptru,c
   502  000918  0009               	tblrd		*+	;fetch initializer
   503  00091A  CFF5 F07C          	movff	tablat,__pdataCOMRAM
   504  00091E  0009               	tblrd		*+	;fetch initializer
   505  000920  CFF5 F07D          	movff	tablat,__pdataCOMRAM+1
   506  000924                     end_of_initialization:
   507                           	opt stack 0
   508  000924                     __end_of__initialization:
   509                           	opt stack 0
   510  000924  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   511  000926  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   512  000928  0E00               	movlw	low (__Lmediumconst shr (0+16))
   513  00092A  6EF8               	movwf	tblptru,c
   514  00092C  0100               	movlb	0
   515  00092E  EFCB  F008         	goto	_main	;jump to C main() function
   516                           tblptru	equ	0xFF8
   517                           tblptrh	equ	0xFF7
   518                           tblptrl	equ	0xFF6
   519                           tablat	equ	0xFF5
   520                           postinc0	equ	0xFEE
   521                           wreg	equ	0xFE8
   522                           postdec1	equ	0xFE5
   523                           fsr1l	equ	0xFE1
   524                           
   525                           	psect	bssCOMRAM
   526  00007A                     __pbssCOMRAM:
   527                           	opt stack 0
   528  00007A                     __timerCounter:
   529                           	opt stack 0
   530  00007A                     	ds	2
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           postinc0	equ	0xFEE
   536                           wreg	equ	0xFE8
   537                           postdec1	equ	0xFE5
   538                           fsr1l	equ	0xFE1
   539                           
   540                           	psect	dataCOMRAM
   541  00007C                     __pdataCOMRAM:
   542                           	opt stack 0
   543  00007C                     __speed:
   544                           	opt stack 0
   545  00007C                     	ds	2
   546                           tblptru	equ	0xFF8
   547                           tblptrh	equ	0xFF7
   548                           tblptrl	equ	0xFF6
   549                           tablat	equ	0xFF5
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           postdec1	equ	0xFE5
   553                           fsr1l	equ	0xFE1
   554                           
   555                           	psect	bssBANK1
   556  0001BC                     __pbssBANK1:
   557                           	opt stack 0
   558  0001BC                     __p1:
   559                           	opt stack 0
   560  0001BC                     	ds	5
   561  0001C1                     __p2:
   562                           	opt stack 0
   563  0001C1                     	ds	5
   564  0001C6                     __ball:
   565                           	opt stack 0
   566  0001C6                     	ds	3
   567  0001C9                     __nextPos:
   568                           	opt stack 0
   569  0001C9                     	ds	2
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           postdec1	equ	0xFE5
   577                           fsr1l	equ	0xFE1
   578                           
   579                           	psect	dataBANK1
   580  0001A4                     __pdataBANK1:
   581                           	opt stack 0
   582  0001A4                     drawSymbol@F3226:
   583                           	opt stack 0
   584  0001A4                     	ds	24
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           postdec1	equ	0xFE5
   592                           fsr1l	equ	0xFE1
   593                           
   594                           	psect	dataBANK2
   595  00027E                     __pdataBANK2:
   596                           	opt stack 0
   597  00027E                     drawSymbol@F3241:
   598                           	opt stack 0
   599  00027E                     	ds	30
   600  00029C                     drawSymbol@F3244:
   601                           	opt stack 0
   602  00029C                     	ds	30
   603  0002BA                     drawSymbol@F3229:
   604                           	opt stack 0
   605  0002BA                     	ds	28
   606  0002D6                     drawSymbol@F3232:
   607                           	opt stack 0
   608  0002D6                     	ds	24
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           postdec1	equ	0xFE5
   616                           fsr1l	equ	0xFE1
   617                           
   618                           	psect	bssBANK3
   619  000300                     __pbssBANK3:
   620                           	opt stack 0
   621  000300                     _pixels:
   622                           	opt stack 0
   623  000300                     	ds	128
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           postdec1	equ	0xFE5
   631                           fsr1l	equ	0xFE1
   632                           
   633                           	psect	dataBANK3
   634  000380                     __pdataBANK3:
   635                           	opt stack 0
   636  000380                     drawSymbol@F3235:
   637                           	opt stack 0
   638  000380                     	ds	68
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           postdec1	equ	0xFE5
   646                           fsr1l	equ	0xFE1
   647                           
   648                           	psect	dataBANK4
   649  000400                     __pdataBANK4:
   650                           	opt stack 0
   651  000400                     drawSymbol@F3238:
   652                           	opt stack 0
   653  000400                     	ds	68
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           postinc0	equ	0xFEE
   659                           wreg	equ	0xFE8
   660                           postdec1	equ	0xFE5
   661                           fsr1l	equ	0xFE1
   662                           
   663                           	psect	cstackBANK3
   664  0003C4                     __pcstackBANK3:
   665                           	opt stack 0
   666  0003C4                     drawSymbol@symbolOne:
   667                           	opt stack 0
   668                           
   669                           ; 24 bytes @ 0x0
   670  0003C4                     	ds	24
   671  0003DC                     drawSymbol@symbolThree:
   672                           	opt stack 0
   673                           
   674                           ; 24 bytes @ 0x18
   675  0003DC                     	ds	24
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           postinc0	equ	0xFEE
   681                           wreg	equ	0xFE8
   682                           postdec1	equ	0xFE5
   683                           fsr1l	equ	0xFE1
   684                           
   685                           	psect	cstackBANK2
   686  000200                     __pcstackBANK2:
   687                           	opt stack 0
   688  000200                     drawSymbol@symbolArrowLeft:
   689                           	opt stack 0
   690                           
   691                           ; 30 bytes @ 0x0
   692  000200                     	ds	30
   693  00021E                     drawSymbol@symbolGo:
   694                           	opt stack 0
   695                           
   696                           ; 68 bytes @ 0x1E
   697  00021E                     	ds	68
   698  000262                     drawSymbol@symbolTwo:
   699                           	opt stack 0
   700                           
   701                           ; 28 bytes @ 0x62
   702  000262                     	ds	28
   703                           tblptru	equ	0xFF8
   704                           tblptrh	equ	0xFF7
   705                           tblptrl	equ	0xFF6
   706                           tablat	equ	0xFF5
   707                           postinc0	equ	0xFEE
   708                           wreg	equ	0xFE8
   709                           postdec1	equ	0xFE5
   710                           fsr1l	equ	0xFE1
   711                           
   712                           	psect	cstackBANK1
   713  000100                     __pcstackBANK1:
   714                           	opt stack 0
   715  000100                     i2drawSymbol@symbolOne:
   716                           	opt stack 0
   717                           
   718                           ; 24 bytes @ 0x0
   719  000100                     	ds	24
   720  000118                     i2drawSymbol@symbolThree:
   721                           	opt stack 0
   722                           
   723                           ; 24 bytes @ 0x18
   724  000118                     	ds	24
   725  000130                     i2drawSymbol@i_85:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x30
   729  000130                     	ds	1
   730  000131                     i2drawSymbol@i_86:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x31
   734  000131                     	ds	1
   735  000132                     i2drawSymbol@i_87:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x32
   739  000132                     	ds	1
   740  000133                     i2drawSymbol@i_88:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x33
   744  000133                     	ds	1
   745  000134                     i2drawSymbol@i_89:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x34
   749  000134                     	ds	1
   750  000135                     ??_turnAllOff:
   751  000135                     ??_setColHigh:
   752  000135                     ??_setRowHigh:
   753  000135                     ??_initializeLED:
   754  000135                     ?___wmul:
   755                           	opt stack 0
   756  000135                     on@row:
   757                           	opt stack 0
   758  000135                     ___wmul@multiplier:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x35
   762  000135                     	ds	1
   763  000136                     ??_on:
   764                           
   765                           ; 1 bytes @ 0x36
   766  000136                     	ds	1
   767  000137                     setColHigh@column:
   768                           	opt stack 0
   769  000137                     setRowHigh@row:
   770                           	opt stack 0
   771  000137                     initializeLED@i:
   772                           	opt stack 0
   773  000137                     turnAllOff@i:
   774                           	opt stack 0
   775  000137                     ___wmul@multiplicand:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x37
   779  000137                     	ds	1
   780  000138                     ??_refresh:
   781  000138                     initializeLED@j:
   782                           	opt stack 0
   783  000138                     on@column:
   784                           	opt stack 0
   785  000138                     turnAllOff@j:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x38
   789  000138                     	ds	1
   790  000139                     drawSymbol@offSetX:
   791                           	opt stack 0
   792  000139                     ___wmul@product:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x39
   796  000139                     	ds	1
   797  00013A                     drawSymbol@symbolPlay:
   798                           	opt stack 0
   799                           
   800                           ; 68 bytes @ 0x3A
   801  00013A                     	ds	1
   802  00013B                     refresh@theCol:
   803                           	opt stack 0
   804  00013B                     delaySeconds@numberOfSeconds:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x3B
   808  00013B                     	ds	1
   809  00013C                     refresh@theRow:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x3C
   813  00013C                     	ds	1
   814  00013D                     ??_delaySeconds:
   815                           
   816                           ; 1 bytes @ 0x3D
   817  00013D                     	ds	1
   818  00013E                     delaySeconds@i:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x3E
   822  00013E                     	ds	64
   823  00017E                     drawSymbol@symbolArrowRight:
   824                           	opt stack 0
   825                           
   826                           ; 30 bytes @ 0x7E
   827  00017E                     	ds	30
   828  00019C                     drawSymbol@chosenSymbol:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x9C
   832  00019C                     	ds	1
   833  00019D                     drawSymbol@i:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x9D
   837  00019D                     	ds	1
   838  00019E                     drawSymbol@i_84:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x9E
   842  00019E                     	ds	1
   843  00019F                     drawSymbol@i_85:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x9F
   847  00019F                     	ds	1
   848  0001A0                     drawSymbol@i_86:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0xA0
   852  0001A0                     	ds	1
   853  0001A1                     drawSymbol@i_87:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0xA1
   857  0001A1                     	ds	1
   858  0001A2                     drawSymbol@i_88:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0xA2
   862  0001A2                     	ds	1
   863  0001A3                     drawSymbol@i_89:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0xA3
   867  0001A3                     	ds	1
   868  0001A4                     tblptru	equ	0xFF8
   869                           tblptrh	equ	0xFF7
   870                           tblptrl	equ	0xFF6
   871                           tablat	equ	0xFF5
   872                           postinc0	equ	0xFEE
   873                           wreg	equ	0xFE8
   874                           postdec1	equ	0xFE5
   875                           fsr1l	equ	0xFE1
   876                           
   877                           ; 1 bytes @ 0xA4
   878                           
   879                           	psect	cstackBANK0
   880  000080                     __pcstackBANK0:
   881                           	opt stack 0
   882  000080                     i2drawSymbol@symbolArrowLeft:
   883                           	opt stack 0
   884                           
   885                           ; 30 bytes @ 0x0
   886  000080                     	ds	30
   887  00009E                     i2drawSymbol@symbolGo:
   888                           	opt stack 0
   889                           
   890                           ; 68 bytes @ 0x1E
   891  00009E                     	ds	68
   892  0000E2                     i2drawSymbol@symbolTwo:
   893                           	opt stack 0
   894                           
   895                           ; 28 bytes @ 0x62
   896  0000E2                     	ds	28
   897  0000FE                     i2drawSymbol@i:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x7E
   901  0000FE                     	ds	1
   902  0000FF                     i2drawSymbol@i_84:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x7F
   906  0000FF                     	ds	1
   907                           tblptru	equ	0xFF8
   908                           tblptrh	equ	0xFF7
   909                           tblptrl	equ	0xFF6
   910                           tablat	equ	0xFF5
   911                           postinc0	equ	0xFEE
   912                           wreg	equ	0xFE8
   913                           postdec1	equ	0xFE5
   914                           fsr1l	equ	0xFE1
   915                           
   916                           	psect	cstackCOMRAM
   917  000001                     __pcstackCOMRAM:
   918                           	opt stack 0
   919  000001                     ??i2_setColHigh:
   920  000001                     ??i2_setRowHigh:
   921  000001                     ??i2_turnAllOff:
   922  000001                     ?___lwdiv:
   923                           	opt stack 0
   924  000001                     ?i2___wmul:
   925                           	opt stack 0
   926  000001                     off@row:
   927                           	opt stack 0
   928  000001                     i2on@row:
   929                           	opt stack 0
   930  000001                     ___lwdiv@dividend:
   931                           	opt stack 0
   932  000001                     i2___wmul@multiplier:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x0
   936  000001                     	ds	1
   937  000002                     ??_off:
   938  000002                     ??i2_on:
   939                           
   940                           ; 1 bytes @ 0x1
   941  000002                     	ds	1
   942  000003                     i2setColHigh@column:
   943                           	opt stack 0
   944  000003                     i2setRowHigh@row:
   945                           	opt stack 0
   946  000003                     i2turnAllOff@i:
   947                           	opt stack 0
   948  000003                     ___lwdiv@divisor:
   949                           	opt stack 0
   950  000003                     i2___wmul@multiplicand:
   951                           	opt stack 0
   952                           
   953                           ; 2 bytes @ 0x2
   954  000003                     	ds	1
   955  000004                     ??i2_refresh:
   956  000004                     off@column:
   957                           	opt stack 0
   958  000004                     i2on@column:
   959                           	opt stack 0
   960  000004                     i2turnAllOff@j:
   961                           	opt stack 0
   962                           
   963                           ; 1 bytes @ 0x3
   964  000004                     	ds	1
   965  000005                     i2drawSymbol@offSetX:
   966                           	opt stack 0
   967  000005                     ___lwdiv@quotient:
   968                           	opt stack 0
   969  000005                     i2___wmul@product:
   970                           	opt stack 0
   971                           
   972                           ; 2 bytes @ 0x4
   973  000005                     	ds	1
   974  000006                     i2drawSymbol@symbolPlay:
   975                           	opt stack 0
   976                           
   977                           ; 68 bytes @ 0x5
   978  000006                     	ds	1
   979  000007                     ___lwdiv@counter:
   980                           	opt stack 0
   981  000007                     i2refresh@theCol:
   982                           	opt stack 0
   983  000007                     i2delaySeconds@numberOfSeconds:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x6
   987  000007                     	ds	1
   988  000008                     i2refresh@theRow:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x7
   992  000008                     	ds	1
   993  000009                     ??i2_delaySeconds:
   994                           
   995                           ; 1 bytes @ 0x8
   996  000009                     	ds	1
   997  00000A                     i2delaySeconds@i:
   998                           	opt stack 0
   999                           
  1000                           ; 2 bytes @ 0x9
  1001  00000A                     	ds	64
  1002  00004A                     i2drawSymbol@symbolArrowRight:
  1003                           	opt stack 0
  1004                           
  1005                           ; 30 bytes @ 0x49
  1006  00004A                     	ds	30
  1007  000068                     i2drawSymbol@chosenSymbol:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x67
  1011  000068                     	ds	1
  1012  000069                     ??_ISR:
  1013  000069                     
  1014                           ; 1 bytes @ 0x68
  1015  000069                     	ds	14
  1016  000077                     ISR@ADvalue:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0x76
  1020  000077                     	ds	2
  1021  000079                     ISR@value:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x78
  1025  000079                     	ds	1
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           postdec1	equ	0xFE5
  1033                           fsr1l	equ	0xFE1
  1034                           
  1035 ;;
  1036 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1037 ;;
  1038 ;; *************** function _main *****************
  1039 ;; Defined at:
  1040 ;;		line 386 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1054 ;;      Params:         0       0       0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0
  1057 ;;      Totals:         0       0       0       0       0       0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels required when called:   10
  1060 ;; This function calls:
  1061 ;;		_initialize
  1062 ;;		_initializeLED
  1063 ;;		_initializePong
  1064 ;;		_refresh
  1065 ;; This function is called by:
  1066 ;;		Startup code after reset
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text0
  1071  001196                     __ptext0:
  1072                           	opt stack 0
  1073  001196                     _main:
  1074                           	opt stack 21
  1075                           
  1076                           ;main.c: 388: initialize();
  1077                           
  1078                           ;incstack = 0
  1079  001196  ECCA  F006         	call	_initialize	;wreg free
  1080                           
  1081                           ;main.c: 389: initializeLED();
  1082  00119A  EC64  F005         	call	_initializeLED	;wreg free
  1083                           
  1084                           ;main.c: 390: initializePong();
  1085  00119E  ECB7  F008         	call	_initializePong	;wreg free
  1086  0011A2                     l2889:
  1087  0011A2  EC99  F004         	call	_refresh	;wreg free
  1088  0011A6  D7FD               	goto	l2889
  1089  0011A8                     __end_of_main:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           postdec1	equ	0xFE5
  1098                           fsr1l	equ	0xFE1
  1099                           
  1100 ;; *************** function _initializePong *****************
  1101 ;; Defined at:
  1102 ;;		line 87 in file "main.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1116 ;;      Params:         0       0       0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    9
  1123 ;; This function calls:
  1124 ;;		_startPong
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text1
  1131  00116E                     __ptext1:
  1132                           	opt stack 0
  1133  00116E                     _initializePong:
  1134                           	opt stack 21
  1135                           
  1136                           ;main.c: 92: _p1.lives = 3;
  1137                           
  1138                           ;incstack = 0
  1139  00116E  0E03               	movlw	3
  1140  001170  0101               	movlb	1	; () banked
  1141  001172  6FC0               	movwf	(__p1+4)& (0+255),b
  1142                           
  1143                           ;main.c: 93: _p2.lives = 3;
  1144  001174  0E03               	movlw	3
  1145  001176  0101               	movlb	1	; () banked
  1146  001178  6FC5               	movwf	(__p2+4)& (0+255),b
  1147                           
  1148                           ; BSR set to: 1
  1149                           ;main.c: 95: startPong();
  1150  00117A  EC70  F006         	call	_startPong	;wreg free
  1151                           
  1152                           ;main.c: 98: TMR0ON = 1;
  1153  00117E  8ED5               	bsf	4053,7,c	;volatile
  1154  001180  0012               	return		;funcret
  1155  001182                     __end_of_initializePong:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           postdec1	equ	0xFE5
  1164                           fsr1l	equ	0xFE1
  1165                           
  1166 ;; *************** function _startPong *****************
  1167 ;; Defined at:
  1168 ;;		line 58 in file "main.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1182 ;;      Params:         0       0       0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    8
  1189 ;; This function calls:
  1190 ;;		_delaySeconds
  1191 ;;		_drawSymbol
  1192 ;;		_refresh
  1193 ;;		_turnAllOff
  1194 ;; This function is called by:
  1195 ;;		_initializePong
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text2
  1200  000CE0                     __ptext2:
  1201                           	opt stack 0
  1202  000CE0                     _startPong:
  1203                           	opt stack 21
  1204                           
  1205                           ;main.c: 61: turnAllOff();
  1206                           
  1207                           ;incstack = 0
  1208  000CE0  EC0F  F006         	call	_turnAllOff	;wreg free
  1209                           
  1210                           ;main.c: 62: drawSymbol(_p1.lives, 0);
  1211  000CE4  0E00               	movlw	0
  1212  000CE6  0101               	movlb	1	; () banked
  1213  000CE8  6F39               	movwf	drawSymbol@offSetX& (0+255),b
  1214  000CEA  0101               	movlb	1	; () banked
  1215  000CEC  51C0               	movf	(__p1+4)& (0+255),w,b
  1216  000CEE  EC0D  F000         	call	_drawSymbol
  1217                           
  1218                           ;main.c: 63: drawSymbol(_p2.lives, 8);
  1219  000CF2  0E08               	movlw	8
  1220  000CF4  0101               	movlb	1	; () banked
  1221  000CF6  6F39               	movwf	drawSymbol@offSetX& (0+255),b
  1222  000CF8  0101               	movlb	1	; () banked
  1223  000CFA  51C5               	movf	(__p2+4)& (0+255),w,b
  1224  000CFC  EC0D  F000         	call	_drawSymbol
  1225                           
  1226                           ;main.c: 64: while(!delaySeconds(2))
  1227  000D00  D002               	goto	l2687
  1228  000D02                     l2685:
  1229                           
  1230                           ;main.c: 65: {
  1231                           ;main.c: 66: refresh();
  1232  000D02  EC99  F004         	call	_refresh	;wreg free
  1233  000D06                     l2687:
  1234  000D06  0E00               	movlw	0
  1235  000D08  0101               	movlb	1	; () banked
  1236  000D0A  6F3C               	movwf	(delaySeconds@numberOfSeconds+1)& (0+255),b
  1237  000D0C  0E02               	movlw	2
  1238  000D0E  6F3B               	movwf	delaySeconds@numberOfSeconds& (0+255),b
  1239  000D10  EC41  F006         	call	_delaySeconds	;wreg free
  1240  000D14  0101               	movlb	1	; () banked
  1241  000D16  A0D8               	btfss	status,0,c
  1242  000D18  D7F4               	goto	l2685
  1243                           
  1244                           ; BSR set to: 1
  1245                           ;main.c: 67: }
  1246                           ;main.c: 68: turnAllOff();
  1247                           
  1248                           ; BSR set to: 1
  1249  000D1A  EC0F  F006         	call	_turnAllOff	;wreg free
  1250                           
  1251                           ;main.c: 75: _ball.bDirection = 3;
  1252  000D1E  0E03               	movlw	3
  1253  000D20  0101               	movlb	1	; () banked
  1254  000D22  6FC8               	movwf	(__ball+2)& (0+255),b
  1255                           
  1256                           ; BSR set to: 1
  1257                           ;main.c: 77: _ball.bPos[0] = 2;
  1258  000D24  0E02               	movlw	2
  1259  000D26  0101               	movlb	1	; () banked
  1260  000D28  6FC6               	movwf	__ball& (0+255),b
  1261                           
  1262                           ; BSR set to: 1
  1263                           ;main.c: 79: _ball.bPos[1] = 4;
  1264  000D2A  0E04               	movlw	4
  1265  000D2C  0101               	movlb	1	; () banked
  1266  000D2E  6FC7               	movwf	(__ball+1)& (0+255),b
  1267                           
  1268                           ; BSR set to: 1
  1269                           ;main.c: 82: _nextPos[0] = _ball.bPos[0];
  1270  000D30  C1C6  F1C9         	movff	__ball,__nextPos
  1271                           
  1272                           ; BSR set to: 1
  1273                           ;main.c: 83: _nextPos[1] = _ball.bPos[1];
  1274  000D34  C1C7  F1CA         	movff	__ball+1,__nextPos+1
  1275                           
  1276                           ; BSR set to: 1
  1277  000D38  0012               	return		;funcret
  1278  000D3A                     __end_of_startPong:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           postinc0	equ	0xFEE
  1285                           wreg	equ	0xFE8
  1286                           postdec1	equ	0xFE5
  1287                           fsr1l	equ	0xFE1
  1288                           status	equ	0xFD8
  1289                           
  1290 ;; *************** function _refresh *****************
  1291 ;; Defined at:
  1292 ;;		line 185 in file "Source/LED-API.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  theRow          1   60[BANK1 ] unsigned char 
  1297 ;;  theCol          1   59[BANK1 ] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1307 ;;      Params:         0       0       0       0       0       0       0
  1308 ;;      Locals:         0       0       2       0       0       0       0
  1309 ;;      Temps:          0       0       3       0       0       0       0
  1310 ;;      Totals:         0       0       5       0       0       0       0
  1311 ;;Total ram usage:        5 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    7
  1314 ;; This function calls:
  1315 ;;		_allOff
  1316 ;;		_setColHigh
  1317 ;;		_setRowHigh
  1318 ;; This function is called by:
  1319 ;;		_startPong
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text3
  1325  000932                     __ptext3:
  1326                           	opt stack 0
  1327  000932                     _refresh:
  1328                           	opt stack 23
  1329                           
  1330                           ;LED-API.c: 187: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  1331                           
  1332                           ; BSR set to: 1
  1333                           ;incstack = 0
  1334  000932  0E00               	movlw	0
  1335  000934  0101               	movlb	1	; () banked
  1336  000936  6F3B               	movwf	refresh@theCol& (0+255),b
  1337  000938                     l1969:
  1338                           
  1339                           ; BSR set to: 1
  1340  000938  0E07               	movlw	7
  1341  00093A  0101               	movlb	1	; () banked
  1342  00093C  653B               	cpfsgt	refresh@theCol& (0+255),b
  1343  00093E  D001               	goto	l1973
  1344  000940  0012               	return	
  1345  000942                     l1973:
  1346                           
  1347                           ; BSR set to: 1
  1348                           ;LED-API.c: 189: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  1349  000942  0E00               	movlw	0
  1350  000944  0101               	movlb	1	; () banked
  1351  000946  6F3C               	movwf	refresh@theRow& (0+255),b
  1352  000948                     l1975:
  1353                           
  1354                           ; BSR set to: 1
  1355  000948  0E0F               	movlw	15
  1356  00094A  0101               	movlb	1	; () banked
  1357  00094C  653C               	cpfsgt	refresh@theRow& (0+255),b
  1358  00094E  D001               	goto	l1979
  1359  000950  D024               	goto	l1987
  1360  000952                     l1979:
  1361                           
  1362                           ; BSR set to: 1
  1363                           ;LED-API.c: 191: if (pixels[theCol][theRow] == 1)
  1364  000952  0101               	movlb	1	; () banked
  1365  000954  513B               	movf	refresh@theCol& (0+255),w,b
  1366  000956  0D10               	mullw	16
  1367  000958  0E00               	movlw	low _pixels
  1368  00095A  0101               	movlb	1	; () banked
  1369  00095C  6F38               	movwf	??_refresh& (0+255),b
  1370  00095E  0E03               	movlw	high _pixels
  1371  000960  0101               	movlb	1	; () banked
  1372  000962  6F39               	movwf	(??_refresh+1)& (0+255),b
  1373  000964  50F3               	movf	prodl,w,c
  1374  000966  0101               	movlb	1	; () banked
  1375  000968  2738               	addwf	??_refresh& (0+255),f,b
  1376  00096A  50F4               	movf	prodh,w,c
  1377  00096C  0101               	movlb	1	; () banked
  1378  00096E  2339               	addwfc	(??_refresh+1)& (0+255),f,b
  1379  000970  0101               	movlb	1	; () banked
  1380  000972  513C               	movf	refresh@theRow& (0+255),w,b
  1381  000974  0D01               	mullw	1
  1382  000976  50F3               	movf	prodl,w,c
  1383  000978  0101               	movlb	1	; () banked
  1384  00097A  2538               	addwf	??_refresh& (0+255),w,b
  1385  00097C  6ED9               	movwf	fsr2l,c
  1386  00097E  50F4               	movf	prodh,w,c
  1387  000980  0101               	movlb	1	; () banked
  1388  000982  2139               	addwfc	(??_refresh+1)& (0+255),w,b
  1389  000984  6EDA               	movwf	fsr2h,c
  1390  000986  04DE               	decf	postinc2,w,c
  1391  000988  A4D8               	btfss	status,2,c
  1392  00098A  D004               	goto	l1983
  1393                           
  1394                           ; BSR set to: 1
  1395                           ;LED-API.c: 192: setRowHigh(theRow);
  1396  00098C  0101               	movlb	1	; () banked
  1397  00098E  513C               	movf	refresh@theRow& (0+255),w,b
  1398  000990  EC9D  F006         	call	_setRowHigh
  1399  000994                     l1983:
  1400  000994  0101               	movlb	1	; () banked
  1401  000996  2B3C               	incf	refresh@theRow& (0+255),f,b
  1402  000998  D7D7               	goto	l1975
  1403  00099A                     l1987:
  1404                           
  1405                           ; BSR set to: 1
  1406                           ;LED-API.c: 193: }
  1407                           ;LED-API.c: 197: setColHigh(theCol);
  1408  00099A  0101               	movlb	1	; () banked
  1409  00099C  513B               	movf	refresh@theCol& (0+255),w,b
  1410  00099E  EC76  F008         	call	_setColHigh
  1411                           
  1412                           ;LED-API.c: 198: _delay((unsigned long)((500)*(32000000/4000000.0)));
  1413  0009A2  0E06               	movlw	6
  1414  0009A4  0101               	movlb	1	; () banked
  1415  0009A6  6F38               	movwf	??_refresh& (0+255),b
  1416  0009A8  0E30               	movlw	48
  1417  0009AA                     u2847:
  1418  0009AA  2EE8               	decfsz	wreg,f,c
  1419  0009AC  D7FE               	goto	u2847
  1420  0009AE  2F38               	decfsz	??_refresh& (0+255),f,b
  1421  0009B0  D7FC               	goto	u2847
  1422  0009B2  D000               	nop2	
  1423                           
  1424                           ;LED-API.c: 199: allOff();
  1425  0009B4  ECD4  F008         	call	_allOff	;wreg free
  1426  0009B8  0101               	movlb	1	; () banked
  1427  0009BA  2B3B               	incf	refresh@theCol& (0+255),f,b
  1428  0009BC  D7BD               	goto	l1969
  1429  0009BE                     __end_of_refresh:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           prodh	equ	0xFF4
  1436                           prodl	equ	0xFF3
  1437                           postinc0	equ	0xFEE
  1438                           wreg	equ	0xFE8
  1439                           postdec1	equ	0xFE5
  1440                           fsr1l	equ	0xFE1
  1441                           postinc2	equ	0xFDE
  1442                           fsr2h	equ	0xFDA
  1443                           fsr2l	equ	0xFD9
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _setRowHigh *****************
  1447 ;; Defined at:
  1448 ;;		line 24 in file "Source/LED-API.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  row             1    wreg     unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  row             1   55[BANK1 ] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1462 ;;      Params:         0       0       0       0       0       0       0
  1463 ;;      Locals:         0       0       1       0       0       0       0
  1464 ;;      Temps:          0       0       2       0       0       0       0
  1465 ;;      Totals:         0       0       3       0       0       0       0
  1466 ;;Total ram usage:        3 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    6
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_refresh
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text4
  1477  000D3A                     __ptext4:
  1478                           	opt stack 0
  1479  000D3A                     _setRowHigh:
  1480                           	opt stack 23
  1481                           
  1482                           ; BSR set to: 1
  1483                           ;incstack = 0
  1484                           ;setRowHigh@row stored from wreg
  1485  000D3A  0101               	movlb	1	; () banked
  1486  000D3C  6F37               	movwf	setRowHigh@row& (0+255),b
  1487                           
  1488                           ;LED-API.c: 25: if(row < 8)
  1489  000D3E  0E08               	movlw	8
  1490  000D40  0101               	movlb	1	; () banked
  1491  000D42  6137               	cpfslt	setRowHigh@row& (0+255),b
  1492  000D44  D012               	goto	l1687
  1493                           
  1494                           ; BSR set to: 1
  1495                           ;LED-API.c: 26: LATC |= (1 << row);
  1496  000D46  C137  F135         	movff	setRowHigh@row,??_setRowHigh
  1497  000D4A  0E01               	movlw	1
  1498  000D4C  0101               	movlb	1	; () banked
  1499  000D4E  6F36               	movwf	(??_setRowHigh+1)& (0+255),b
  1500  000D50  0101               	movlb	1	; () banked
  1501  000D52  2B35               	incf	??_setRowHigh& (0+255),f,b
  1502  000D54  D003               	goto	u1194
  1503  000D56                     u1195:
  1504  000D56  0101               	movlb	1	; () banked
  1505  000D58  90D8               	bcf	status,0,c
  1506  000D5A  3736               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1507  000D5C                     u1194:
  1508  000D5C  0101               	movlb	1	; () banked
  1509  000D5E  2F35               	decfsz	??_setRowHigh& (0+255),f,b
  1510  000D60  D7FA               	goto	u1195
  1511  000D62  0101               	movlb	1	; () banked
  1512  000D64  5136               	movf	(??_setRowHigh+1)& (0+255),w,b
  1513  000D66  128B               	iorwf	3979,f,c	;volatile
  1514  000D68  0012               	return	
  1515  000D6A                     l1687:
  1516                           
  1517                           ; BSR set to: 1
  1518                           ;LED-API.c: 27: else
  1519                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  1520  000D6A  C137  F135         	movff	setRowHigh@row,??_setRowHigh
  1521  000D6E  0EF8               	movlw	-8
  1522  000D70  0101               	movlb	1	; () banked
  1523  000D72  2735               	addwf	??_setRowHigh& (0+255),f,b
  1524  000D74  0E01               	movlw	1
  1525  000D76  0101               	movlb	1	; () banked
  1526  000D78  6F36               	movwf	(??_setRowHigh+1)& (0+255),b
  1527  000D7A  0101               	movlb	1	; () banked
  1528  000D7C  2B35               	incf	??_setRowHigh& (0+255),f,b
  1529  000D7E  D003               	goto	u1204
  1530  000D80                     u1205:
  1531  000D80  0101               	movlb	1	; () banked
  1532  000D82  90D8               	bcf	status,0,c
  1533  000D84  3736               	rlcf	(??_setRowHigh+1)& (0+255),f,b
  1534  000D86                     u1204:
  1535  000D86  0101               	movlb	1	; () banked
  1536  000D88  2F35               	decfsz	??_setRowHigh& (0+255),f,b
  1537  000D8A  D7FA               	goto	u1205
  1538  000D8C  0101               	movlb	1	; () banked
  1539  000D8E  5136               	movf	(??_setRowHigh+1)& (0+255),w,b
  1540  000D90  128C               	iorwf	3980,f,c	;volatile
  1541  000D92  0012               	return	
  1542  000D94                     __end_of_setRowHigh:
  1543                           	opt stack 0
  1544                           tblptru	equ	0xFF8
  1545                           tblptrh	equ	0xFF7
  1546                           tblptrl	equ	0xFF6
  1547                           tablat	equ	0xFF5
  1548                           prodh	equ	0xFF4
  1549                           prodl	equ	0xFF3
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           postdec1	equ	0xFE5
  1553                           fsr1l	equ	0xFE1
  1554                           postinc2	equ	0xFDE
  1555                           fsr2h	equ	0xFDA
  1556                           fsr2l	equ	0xFD9
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function _setColHigh *****************
  1560 ;; Defined at:
  1561 ;;		line 20 in file "Source/LED-API.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  column          1    wreg     unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  column          1   55[BANK1 ] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1575 ;;      Params:         0       0       0       0       0       0       0
  1576 ;;      Locals:         0       0       1       0       0       0       0
  1577 ;;      Temps:          0       0       2       0       0       0       0
  1578 ;;      Totals:         0       0       3       0       0       0       0
  1579 ;;Total ram usage:        3 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    6
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_refresh
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text5
  1590  0010EC                     __ptext5:
  1591                           	opt stack 0
  1592  0010EC                     _setColHigh:
  1593                           	opt stack 23
  1594                           
  1595                           ; BSR set to: 1
  1596                           ;incstack = 0
  1597                           ;setColHigh@column stored from wreg
  1598  0010EC  0101               	movlb	1	; () banked
  1599  0010EE  6F37               	movwf	setColHigh@column& (0+255),b
  1600                           
  1601                           ;LED-API.c: 21: LATA |= (1 << column);
  1602  0010F0  C137  F135         	movff	setColHigh@column,??_setColHigh
  1603  0010F4  0E01               	movlw	1
  1604  0010F6  0101               	movlb	1	; () banked
  1605  0010F8  6F36               	movwf	(??_setColHigh+1)& (0+255),b
  1606  0010FA  0101               	movlb	1	; () banked
  1607  0010FC  2B35               	incf	??_setColHigh& (0+255),f,b
  1608  0010FE  D003               	goto	u1174
  1609  001100                     u1175:
  1610  001100  0101               	movlb	1	; () banked
  1611  001102  90D8               	bcf	status,0,c
  1612  001104  3736               	rlcf	(??_setColHigh+1)& (0+255),f,b
  1613  001106                     u1174:
  1614  001106  0101               	movlb	1	; () banked
  1615  001108  2F35               	decfsz	??_setColHigh& (0+255),f,b
  1616  00110A  D7FA               	goto	u1175
  1617  00110C  0101               	movlb	1	; () banked
  1618  00110E  5136               	movf	(??_setColHigh+1)& (0+255),w,b
  1619  001110  1289               	iorwf	3977,f,c	;volatile
  1620                           
  1621                           ; BSR set to: 1
  1622  001112  0012               	return		;funcret
  1623  001114                     __end_of_setColHigh:
  1624                           	opt stack 0
  1625                           tblptru	equ	0xFF8
  1626                           tblptrh	equ	0xFF7
  1627                           tblptrl	equ	0xFF6
  1628                           tablat	equ	0xFF5
  1629                           prodh	equ	0xFF4
  1630                           prodl	equ	0xFF3
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           postdec1	equ	0xFE5
  1634                           fsr1l	equ	0xFE1
  1635                           postinc2	equ	0xFDE
  1636                           fsr2h	equ	0xFDA
  1637                           fsr2l	equ	0xFD9
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function _allOff *****************
  1641 ;; Defined at:
  1642 ;;		line 179 in file "Source/LED-API.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1656 ;;      Params:         0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    6
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_refresh
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text6
  1671  0011A8                     __ptext6:
  1672                           	opt stack 0
  1673  0011A8                     _allOff:
  1674                           	opt stack 23
  1675                           
  1676                           ;LED-API.c: 180: LATA = 0;
  1677                           
  1678                           ; BSR set to: 1
  1679                           ;incstack = 0
  1680  0011A8  0E00               	movlw	0
  1681  0011AA  6E89               	movwf	3977,c	;volatile
  1682                           
  1683                           ;LED-API.c: 181: LATC = 0;
  1684  0011AC  0E00               	movlw	0
  1685  0011AE  6E8B               	movwf	3979,c	;volatile
  1686                           
  1687                           ;LED-API.c: 182: LATD = 0;
  1688  0011B0  0E00               	movlw	0
  1689  0011B2  6E8C               	movwf	3980,c	;volatile
  1690  0011B4  0012               	return		;funcret
  1691  0011B6                     __end_of_allOff:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           postinc0	equ	0xFEE
  1700                           wreg	equ	0xFE8
  1701                           postdec1	equ	0xFE5
  1702                           fsr1l	equ	0xFE1
  1703                           postinc2	equ	0xFDE
  1704                           fsr2h	equ	0xFDA
  1705                           fsr2l	equ	0xFD9
  1706                           status	equ	0xFD8
  1707                           
  1708 ;; *************** function _drawSymbol *****************
  1709 ;; Defined at:
  1710 ;;		line 89 in file "Source/LED-API.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  chosenSymbol    1    wreg     unsigned char 
  1713 ;;  offSetX         1   57[BANK1 ] unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  chosenSymbol    1  156[BANK1 ] unsigned char 
  1716 ;;  i               1  163[BANK1 ] unsigned char 
  1717 ;;  i               1  162[BANK1 ] unsigned char 
  1718 ;;  i               1  161[BANK1 ] unsigned char 
  1719 ;;  i               1  160[BANK1 ] unsigned char 
  1720 ;;  i               1  159[BANK1 ] unsigned char 
  1721 ;;  i               1  158[BANK1 ] unsigned char 
  1722 ;;  i               1  157[BANK1 ] unsigned char 
  1723 ;;  symbolGo       68   30[BANK2 ] unsigned char [2][34]
  1724 ;;  symbolPlay     68   58[BANK1 ] unsigned char [2][34]
  1725 ;;  symbolArrowL   30    0[BANK2 ] unsigned char [2][15]
  1726 ;;  symbolArrowR   30  126[BANK1 ] unsigned char [2][15]
  1727 ;;  symbolTwo      28   98[BANK2 ] unsigned char [2][14]
  1728 ;;  symbolThree    24   24[BANK3 ] unsigned char [2][12]
  1729 ;;  symbolOne      24    0[BANK3 ] unsigned char [2][12]
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1739 ;;      Params:         0       0       1       0       0       0       0
  1740 ;;      Locals:         0       0     106     126      48       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0
  1742 ;;      Totals:         0       0     107     126      48       0       0
  1743 ;;Total ram usage:      281 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    7
  1746 ;; This function calls:
  1747 ;;		_on
  1748 ;;		_turnAllOff
  1749 ;; This function is called by:
  1750 ;;		_startPong
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text7
  1755  00001A                     __ptext7:
  1756                           	opt stack 0
  1757  00001A                     _drawSymbol:
  1758                           	opt stack 21
  1759                           
  1760                           ;incstack = 0
  1761                           ;drawSymbol@chosenSymbol stored from wreg
  1762  00001A  0101               	movlb	1	; () banked
  1763  00001C  6F9C               	movwf	drawSymbol@chosenSymbol& (0+255),b
  1764                           
  1765                           ;LED-API.c: 91: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  1766  00001E  EE21  F0A4         	lfsr	2,drawSymbol@F3226
  1767  000022  EE13  F0C4         	lfsr	1,drawSymbol@symbolOne
  1768  000026  0E17               	movlw	23
  1769  000028                     u2461:
  1770  000028  CFDB FFE3          	movff	plusw2,plusw1
  1771  00002C  06E8               	decf	wreg,f,c
  1772  00002E  E2FC               	bc	u2461
  1773                           
  1774                           ;LED-API.c: 92: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  1775  000030  EE22  F0BA         	lfsr	2,drawSymbol@F3229
  1776  000034  EE12  F062         	lfsr	1,drawSymbol@symbolTwo
  1777  000038  0E1B               	movlw	27
  1778  00003A                     u2471:
  1779  00003A  CFDB FFE3          	movff	plusw2,plusw1
  1780  00003E  06E8               	decf	wreg,f,c
  1781  000040  E2FC               	bc	u2471
  1782                           
  1783                           ;LED-API.c: 93: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  1784  000042  EE22  F0D6         	lfsr	2,drawSymbol@F3232
  1785  000046  EE13  F0DC         	lfsr	1,drawSymbol@symbolThree
  1786  00004A  0E17               	movlw	23
  1787  00004C                     u2481:
  1788  00004C  CFDB FFE3          	movff	plusw2,plusw1
  1789  000050  06E8               	decf	wreg,f,c
  1790  000052  E2FC               	bc	u2481
  1791                           
  1792                           ;LED-API.c: 95: char symbolPlay[34][2] = {
  1793                           ;LED-API.c: 96: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  1794                           ;LED-API.c: 97: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  1795                           ;LED-API.c: 98: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  1796                           ;LED-API.c: 99: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  1797  000054  EE23  F080         	lfsr	2,drawSymbol@F3235
  1798  000058  EE11  F03A         	lfsr	1,drawSymbol@symbolPlay
  1799  00005C  0E43               	movlw	67
  1800  00005E                     u2491:
  1801  00005E  CFDB FFE3          	movff	plusw2,plusw1
  1802  000062  06E8               	decf	wreg,f,c
  1803  000064  E2FC               	bc	u2491
  1804                           
  1805                           ;LED-API.c: 101: char symbolGo[34][2] = {
  1806                           ;LED-API.c: 102: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0}
      +                          ,{5,0},{6,1},{5,2},{4,2},
  1807                           ;LED-API.c: 103: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},
      +                          {13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  1808  000066  EE24  F000         	lfsr	2,drawSymbol@F3238
  1809  00006A  EE12  F01E         	lfsr	1,drawSymbol@symbolGo
  1810  00006E  0E43               	movlw	67
  1811  000070                     u2501:
  1812  000070  CFDB FFE3          	movff	plusw2,plusw1
  1813  000074  06E8               	decf	wreg,f,c
  1814  000076  E2FC               	bc	u2501
  1815                           
  1816                           ;LED-API.c: 105: char symbolArrowRight[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3},{6,
      +                          3},{7,3},{8,3},{7,4},{6,5},{5,7},{6,2},{5,1},{4,0}};
  1817  000078  EE22  F07E         	lfsr	2,drawSymbol@F3241
  1818  00007C  EE11  F07E         	lfsr	1,drawSymbol@symbolArrowRight
  1819  000080  0E1D               	movlw	29
  1820  000082                     u2511:
  1821  000082  CFDB FFE3          	movff	plusw2,plusw1
  1822  000086  06E8               	decf	wreg,f,c
  1823  000088  E2FC               	bc	u2511
  1824                           
  1825                           ;LED-API.c: 106: char symbolArrowLeft[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3}, {6,
      +                          3},{7,3},{8,3}, {1,4},{2,5},{3,6},{1,2},{2,1},{3,0}};
  1826  00008A  EE22  F09C         	lfsr	2,drawSymbol@F3244
  1827  00008E  EE12  F000         	lfsr	1,drawSymbol@symbolArrowLeft
  1828  000092  0E1D               	movlw	29
  1829  000094                     u2521:
  1830  000094  CFDB FFE3          	movff	plusw2,plusw1
  1831  000098  06E8               	decf	wreg,f,c
  1832  00009A  E2FC               	bc	u2521
  1833                           
  1834                           ;LED-API.c: 108: switch(chosenSymbol)
  1835  00009C  D125               	goto	l2655
  1836  00009E                     l2561:
  1837                           
  1838                           ;LED-API.c: 113: for(unsigned char i = 0; i < 12; i++)
  1839  00009E  0E00               	movlw	0
  1840  0000A0  0101               	movlb	1	; () banked
  1841  0000A2  6F9D               	movwf	drawSymbol@i& (0+255),b
  1842  0000A4                     l2563:
  1843                           
  1844                           ; BSR set to: 1
  1845  0000A4  0E0B               	movlw	11
  1846  0000A6  0101               	movlb	1	; () banked
  1847  0000A8  659D               	cpfsgt	drawSymbol@i& (0+255),b
  1848  0000AA  D001               	goto	l2567
  1849  0000AC  0012               	return	
  1850  0000AE                     l2567:
  1851                           
  1852                           ; BSR set to: 1
  1853                           ;LED-API.c: 114: {
  1854                           ;LED-API.c: 115: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  1855  0000AE  0101               	movlb	1	; () banked
  1856  0000B0  519D               	movf	drawSymbol@i& (0+255),w,b
  1857  0000B2  0D02               	mullw	2
  1858  0000B4  0EC4               	movlw	low drawSymbol@symbolOne
  1859  0000B6  24F3               	addwf	prodl,w,c
  1860  0000B8  6ED9               	movwf	fsr2l,c
  1861  0000BA  0E03               	movlw	high drawSymbol@symbolOne
  1862  0000BC  20F4               	addwfc	prodh,w,c
  1863  0000BE  6EDA               	movwf	fsr2h,c
  1864  0000C0  50DF               	movf	indf2,w,c
  1865  0000C2  0101               	movlb	1	; () banked
  1866  0000C4  2539               	addwf	drawSymbol@offSetX& (0+255),w,b
  1867  0000C6  0101               	movlb	1	; () banked
  1868  0000C8  6F35               	movwf	on@row& (0+255),b
  1869  0000CA  0101               	movlb	1	; () banked
  1870  0000CC  519D               	movf	drawSymbol@i& (0+255),w,b
  1871  0000CE  0D02               	mullw	2
  1872  0000D0  0E01               	movlw	1
  1873  0000D2  26F3               	addwf	prodl,f,c
  1874  0000D4  0E00               	movlw	0
  1875  0000D6  22F4               	addwfc	prodh,f,c
  1876  0000D8  0EC4               	movlw	low drawSymbol@symbolOne
  1877  0000DA  24F3               	addwf	prodl,w,c
  1878  0000DC  6ED9               	movwf	fsr2l,c
  1879  0000DE  0E03               	movlw	high drawSymbol@symbolOne
  1880  0000E0  20F4               	addwfc	prodh,w,c
  1881  0000E2  6EDA               	movwf	fsr2h,c
  1882  0000E4  50DF               	movf	indf2,w,c
  1883  0000E6  ECF7  F006         	call	_on
  1884  0000EA  0101               	movlb	1	; () banked
  1885  0000EC  2B9D               	incf	drawSymbol@i& (0+255),f,b
  1886  0000EE  D7DA               	goto	l2563
  1887  0000F0                     l2573:
  1888                           
  1889                           ; BSR set to: 1
  1890                           ;LED-API.c: 121: for(unsigned char i = 0; i < 14; i++)
  1891  0000F0  0E00               	movlw	0
  1892  0000F2  0101               	movlb	1	; () banked
  1893  0000F4  6F9E               	movwf	drawSymbol@i_84& (0+255),b
  1894  0000F6                     l2575:
  1895                           
  1896                           ; BSR set to: 1
  1897  0000F6  0E0D               	movlw	13
  1898  0000F8  0101               	movlb	1	; () banked
  1899  0000FA  659E               	cpfsgt	drawSymbol@i_84& (0+255),b
  1900  0000FC  D001               	goto	l2579
  1901  0000FE  0012               	return	
  1902  000100                     l2579:
  1903                           
  1904                           ; BSR set to: 1
  1905                           ;LED-API.c: 122: {
  1906                           ;LED-API.c: 123: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  1907  000100  0101               	movlb	1	; () banked
  1908  000102  519E               	movf	drawSymbol@i_84& (0+255),w,b
  1909  000104  0D02               	mullw	2
  1910  000106  0E62               	movlw	low drawSymbol@symbolTwo
  1911  000108  24F3               	addwf	prodl,w,c
  1912  00010A  6ED9               	movwf	fsr2l,c
  1913  00010C  0E02               	movlw	high drawSymbol@symbolTwo
  1914  00010E  20F4               	addwfc	prodh,w,c
  1915  000110  6EDA               	movwf	fsr2h,c
  1916  000112  50DF               	movf	indf2,w,c
  1917  000114  0101               	movlb	1	; () banked
  1918  000116  2539               	addwf	drawSymbol@offSetX& (0+255),w,b
  1919  000118  0101               	movlb	1	; () banked
  1920  00011A  6F35               	movwf	on@row& (0+255),b
  1921  00011C  0101               	movlb	1	; () banked
  1922  00011E  519E               	movf	drawSymbol@i_84& (0+255),w,b
  1923  000120  0D02               	mullw	2
  1924  000122  0E01               	movlw	1
  1925  000124  26F3               	addwf	prodl,f,c
  1926  000126  0E00               	movlw	0
  1927  000128  22F4               	addwfc	prodh,f,c
  1928  00012A  0E62               	movlw	low drawSymbol@symbolTwo
  1929  00012C  24F3               	addwf	prodl,w,c
  1930  00012E  6ED9               	movwf	fsr2l,c
  1931  000130  0E02               	movlw	high drawSymbol@symbolTwo
  1932  000132  20F4               	addwfc	prodh,w,c
  1933  000134  6EDA               	movwf	fsr2h,c
  1934  000136  50DF               	movf	indf2,w,c
  1935  000138  ECF7  F006         	call	_on
  1936  00013C  0101               	movlb	1	; () banked
  1937  00013E  2B9E               	incf	drawSymbol@i_84& (0+255),f,b
  1938  000140  D7DA               	goto	l2575
  1939  000142                     l2585:
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;LED-API.c: 129: for(unsigned char i = 0; i < 12; i++)
  1943  000142  0E00               	movlw	0
  1944  000144  0101               	movlb	1	; () banked
  1945  000146  6F9F               	movwf	drawSymbol@i_85& (0+255),b
  1946  000148                     l2587:
  1947                           
  1948                           ; BSR set to: 1
  1949  000148  0E0B               	movlw	11
  1950  00014A  0101               	movlb	1	; () banked
  1951  00014C  659F               	cpfsgt	drawSymbol@i_85& (0+255),b
  1952  00014E  D001               	goto	l2591
  1953  000150  0012               	return	
  1954  000152                     l2591:
  1955                           
  1956                           ; BSR set to: 1
  1957                           ;LED-API.c: 130: {
  1958                           ;LED-API.c: 131: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  1959  000152  0101               	movlb	1	; () banked
  1960  000154  519F               	movf	drawSymbol@i_85& (0+255),w,b
  1961  000156  0D02               	mullw	2
  1962  000158  0EDC               	movlw	low drawSymbol@symbolThree
  1963  00015A  24F3               	addwf	prodl,w,c
  1964  00015C  6ED9               	movwf	fsr2l,c
  1965  00015E  0E03               	movlw	high drawSymbol@symbolThree
  1966  000160  20F4               	addwfc	prodh,w,c
  1967  000162  6EDA               	movwf	fsr2h,c
  1968  000164  50DF               	movf	indf2,w,c
  1969  000166  0101               	movlb	1	; () banked
  1970  000168  2539               	addwf	drawSymbol@offSetX& (0+255),w,b
  1971  00016A  0101               	movlb	1	; () banked
  1972  00016C  6F35               	movwf	on@row& (0+255),b
  1973  00016E  0101               	movlb	1	; () banked
  1974  000170  519F               	movf	drawSymbol@i_85& (0+255),w,b
  1975  000172  0D02               	mullw	2
  1976  000174  0E01               	movlw	1
  1977  000176  26F3               	addwf	prodl,f,c
  1978  000178  0E00               	movlw	0
  1979  00017A  22F4               	addwfc	prodh,f,c
  1980  00017C  0EDC               	movlw	low drawSymbol@symbolThree
  1981  00017E  24F3               	addwf	prodl,w,c
  1982  000180  6ED9               	movwf	fsr2l,c
  1983  000182  0E03               	movlw	high drawSymbol@symbolThree
  1984  000184  20F4               	addwfc	prodh,w,c
  1985  000186  6EDA               	movwf	fsr2h,c
  1986  000188  50DF               	movf	indf2,w,c
  1987  00018A  ECF7  F006         	call	_on
  1988  00018E  0101               	movlb	1	; () banked
  1989  000190  2B9F               	incf	drawSymbol@i_85& (0+255),f,b
  1990  000192  D7DA               	goto	l2587
  1991  000194                     l2597:
  1992                           
  1993                           ; BSR set to: 1
  1994                           ;LED-API.c: 137: turnAllOff();
  1995  000194  EC0F  F006         	call	_turnAllOff	;wreg free
  1996                           
  1997                           ;LED-API.c: 138: for(unsigned char i = 0; i < 34; i++)
  1998  000198  0E00               	movlw	0
  1999  00019A  0101               	movlb	1	; () banked
  2000  00019C  6FA0               	movwf	drawSymbol@i_86& (0+255),b
  2001  00019E                     l2601:
  2002                           
  2003                           ; BSR set to: 1
  2004  00019E  0E21               	movlw	33
  2005  0001A0  0101               	movlb	1	; () banked
  2006  0001A2  65A0               	cpfsgt	drawSymbol@i_86& (0+255),b
  2007  0001A4  D001               	goto	l2605
  2008  0001A6  0012               	return	
  2009  0001A8                     l2605:
  2010                           
  2011                           ; BSR set to: 1
  2012                           ;LED-API.c: 139: {
  2013                           ;LED-API.c: 140: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  2014  0001A8  0101               	movlb	1	; () banked
  2015  0001AA  51A0               	movf	drawSymbol@i_86& (0+255),w,b
  2016  0001AC  0D02               	mullw	2
  2017  0001AE  0E3A               	movlw	low drawSymbol@symbolPlay
  2018  0001B0  24F3               	addwf	prodl,w,c
  2019  0001B2  6ED9               	movwf	fsr2l,c
  2020  0001B4  0E01               	movlw	high drawSymbol@symbolPlay
  2021  0001B6  20F4               	addwfc	prodh,w,c
  2022  0001B8  6EDA               	movwf	fsr2h,c
  2023  0001BA  50DF               	movf	indf2,w,c
  2024  0001BC  0101               	movlb	1	; () banked
  2025  0001BE  2539               	addwf	drawSymbol@offSetX& (0+255),w,b
  2026  0001C0  0101               	movlb	1	; () banked
  2027  0001C2  6F35               	movwf	on@row& (0+255),b
  2028  0001C4  0101               	movlb	1	; () banked
  2029  0001C6  51A0               	movf	drawSymbol@i_86& (0+255),w,b
  2030  0001C8  0D02               	mullw	2
  2031  0001CA  0E01               	movlw	1
  2032  0001CC  26F3               	addwf	prodl,f,c
  2033  0001CE  0E00               	movlw	0
  2034  0001D0  22F4               	addwfc	prodh,f,c
  2035  0001D2  0E3A               	movlw	low drawSymbol@symbolPlay
  2036  0001D4  24F3               	addwf	prodl,w,c
  2037  0001D6  6ED9               	movwf	fsr2l,c
  2038  0001D8  0E01               	movlw	high drawSymbol@symbolPlay
  2039  0001DA  20F4               	addwfc	prodh,w,c
  2040  0001DC  6EDA               	movwf	fsr2h,c
  2041  0001DE  50DF               	movf	indf2,w,c
  2042  0001E0  ECF7  F006         	call	_on
  2043  0001E4  0101               	movlb	1	; () banked
  2044  0001E6  2BA0               	incf	drawSymbol@i_86& (0+255),f,b
  2045  0001E8  D7DA               	goto	l2601
  2046  0001EA                     l2611:
  2047                           
  2048                           ; BSR set to: 1
  2049                           ;LED-API.c: 146: turnAllOff();
  2050  0001EA  EC0F  F006         	call	_turnAllOff	;wreg free
  2051                           
  2052                           ;LED-API.c: 147: for(unsigned char i = 0; i < 34; i++)
  2053  0001EE  0E00               	movlw	0
  2054  0001F0  0101               	movlb	1	; () banked
  2055  0001F2  6FA1               	movwf	drawSymbol@i_87& (0+255),b
  2056  0001F4                     l2615:
  2057                           
  2058                           ; BSR set to: 1
  2059  0001F4  0E21               	movlw	33
  2060  0001F6  0101               	movlb	1	; () banked
  2061  0001F8  65A1               	cpfsgt	drawSymbol@i_87& (0+255),b
  2062  0001FA  D001               	goto	l2619
  2063  0001FC  0012               	return	
  2064  0001FE                     l2619:
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;LED-API.c: 148: {
  2068                           ;LED-API.c: 149: on(symbolGo[i][1], symbolGo[i][0]);
  2069  0001FE  0101               	movlb	1	; () banked
  2070  000200  51A1               	movf	drawSymbol@i_87& (0+255),w,b
  2071  000202  0D02               	mullw	2
  2072  000204  0E1E               	movlw	low drawSymbol@symbolGo
  2073  000206  24F3               	addwf	prodl,w,c
  2074  000208  6ED9               	movwf	fsr2l,c
  2075  00020A  0E02               	movlw	high drawSymbol@symbolGo
  2076  00020C  20F4               	addwfc	prodh,w,c
  2077  00020E  6EDA               	movwf	fsr2h,c
  2078  000210  50DF               	movf	indf2,w,c
  2079  000212  0101               	movlb	1	; () banked
  2080  000214  6F35               	movwf	on@row& (0+255),b
  2081  000216  0101               	movlb	1	; () banked
  2082  000218  51A1               	movf	drawSymbol@i_87& (0+255),w,b
  2083  00021A  0D02               	mullw	2
  2084  00021C  0E01               	movlw	1
  2085  00021E  26F3               	addwf	prodl,f,c
  2086  000220  0E00               	movlw	0
  2087  000222  22F4               	addwfc	prodh,f,c
  2088  000224  0E1E               	movlw	low drawSymbol@symbolGo
  2089  000226  24F3               	addwf	prodl,w,c
  2090  000228  6ED9               	movwf	fsr2l,c
  2091  00022A  0E02               	movlw	high drawSymbol@symbolGo
  2092  00022C  20F4               	addwfc	prodh,w,c
  2093  00022E  6EDA               	movwf	fsr2h,c
  2094  000230  50DF               	movf	indf2,w,c
  2095  000232  ECF7  F006         	call	_on
  2096  000236  0101               	movlb	1	; () banked
  2097  000238  2BA1               	incf	drawSymbol@i_87& (0+255),f,b
  2098  00023A  D7DC               	goto	l2615
  2099  00023C                     l2625:
  2100                           
  2101                           ; BSR set to: 1
  2102                           ;LED-API.c: 153: turnAllOff();
  2103  00023C  EC0F  F006         	call	_turnAllOff	;wreg free
  2104                           
  2105                           ;LED-API.c: 154: for(unsigned char i = 0; i < 15; i++)
  2106  000240  0E00               	movlw	0
  2107  000242  0101               	movlb	1	; () banked
  2108  000244  6FA2               	movwf	drawSymbol@i_88& (0+255),b
  2109  000246                     l2629:
  2110                           
  2111                           ; BSR set to: 1
  2112  000246  0E0E               	movlw	14
  2113  000248  0101               	movlb	1	; () banked
  2114  00024A  65A2               	cpfsgt	drawSymbol@i_88& (0+255),b
  2115  00024C  D001               	goto	l2633
  2116  00024E  0012               	return	
  2117  000250                     l2633:
  2118                           
  2119                           ; BSR set to: 1
  2120                           ;LED-API.c: 155: {
  2121                           ;LED-API.c: 156: on(symbolArrowLeft[i][1], symbolGo[i][0] + offSetX);
  2122  000250  0101               	movlb	1	; () banked
  2123  000252  51A2               	movf	drawSymbol@i_88& (0+255),w,b
  2124  000254  0D02               	mullw	2
  2125  000256  0E1E               	movlw	low drawSymbol@symbolGo
  2126  000258  24F3               	addwf	prodl,w,c
  2127  00025A  6ED9               	movwf	fsr2l,c
  2128  00025C  0E02               	movlw	high drawSymbol@symbolGo
  2129  00025E  20F4               	addwfc	prodh,w,c
  2130  000260  6EDA               	movwf	fsr2h,c
  2131  000262  50DF               	movf	indf2,w,c
  2132  000264  0101               	movlb	1	; () banked
  2133  000266  2539               	addwf	drawSymbol@offSetX& (0+255),w,b
  2134  000268  0101               	movlb	1	; () banked
  2135  00026A  6F35               	movwf	on@row& (0+255),b
  2136  00026C  0101               	movlb	1	; () banked
  2137  00026E  51A2               	movf	drawSymbol@i_88& (0+255),w,b
  2138  000270  0D02               	mullw	2
  2139  000272  0E01               	movlw	1
  2140  000274  26F3               	addwf	prodl,f,c
  2141  000276  0E00               	movlw	0
  2142  000278  22F4               	addwfc	prodh,f,c
  2143  00027A  0E00               	movlw	low drawSymbol@symbolArrowLeft
  2144  00027C  24F3               	addwf	prodl,w,c
  2145  00027E  6ED9               	movwf	fsr2l,c
  2146  000280  0E02               	movlw	high drawSymbol@symbolArrowLeft
  2147  000282  20F4               	addwfc	prodh,w,c
  2148  000284  6EDA               	movwf	fsr2h,c
  2149  000286  50DF               	movf	indf2,w,c
  2150  000288  ECF7  F006         	call	_on
  2151  00028C  0101               	movlb	1	; () banked
  2152  00028E  2BA2               	incf	drawSymbol@i_88& (0+255),f,b
  2153  000290  D7DA               	goto	l2629
  2154  000292                     l2639:
  2155                           
  2156                           ; BSR set to: 1
  2157                           ;LED-API.c: 160: turnAllOff();
  2158  000292  EC0F  F006         	call	_turnAllOff	;wreg free
  2159                           
  2160                           ;LED-API.c: 161: for(unsigned char i = 0; i < 15; i++)
  2161  000296  0E00               	movlw	0
  2162  000298  0101               	movlb	1	; () banked
  2163  00029A  6FA3               	movwf	drawSymbol@i_89& (0+255),b
  2164  00029C                     l2643:
  2165                           
  2166                           ; BSR set to: 1
  2167  00029C  0E0E               	movlw	14
  2168  00029E  0101               	movlb	1	; () banked
  2169  0002A0  65A3               	cpfsgt	drawSymbol@i_89& (0+255),b
  2170  0002A2  D001               	goto	l2647
  2171  0002A4  0012               	return	
  2172  0002A6                     l2647:
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;LED-API.c: 162: {
  2176                           ;LED-API.c: 163: on(symbolArrowRight[i][1], symbolGo[i][0]+ offSetX);
  2177  0002A6  0101               	movlb	1	; () banked
  2178  0002A8  51A3               	movf	drawSymbol@i_89& (0+255),w,b
  2179  0002AA  0D02               	mullw	2
  2180  0002AC  0E1E               	movlw	low drawSymbol@symbolGo
  2181  0002AE  24F3               	addwf	prodl,w,c
  2182  0002B0  6ED9               	movwf	fsr2l,c
  2183  0002B2  0E02               	movlw	high drawSymbol@symbolGo
  2184  0002B4  20F4               	addwfc	prodh,w,c
  2185  0002B6  6EDA               	movwf	fsr2h,c
  2186  0002B8  50DF               	movf	indf2,w,c
  2187  0002BA  0101               	movlb	1	; () banked
  2188  0002BC  2539               	addwf	drawSymbol@offSetX& (0+255),w,b
  2189  0002BE  0101               	movlb	1	; () banked
  2190  0002C0  6F35               	movwf	on@row& (0+255),b
  2191  0002C2  0101               	movlb	1	; () banked
  2192  0002C4  51A3               	movf	drawSymbol@i_89& (0+255),w,b
  2193  0002C6  0D02               	mullw	2
  2194  0002C8  0E01               	movlw	1
  2195  0002CA  26F3               	addwf	prodl,f,c
  2196  0002CC  0E00               	movlw	0
  2197  0002CE  22F4               	addwfc	prodh,f,c
  2198  0002D0  0E7E               	movlw	low drawSymbol@symbolArrowRight
  2199  0002D2  24F3               	addwf	prodl,w,c
  2200  0002D4  6ED9               	movwf	fsr2l,c
  2201  0002D6  0E01               	movlw	high drawSymbol@symbolArrowRight
  2202  0002D8  20F4               	addwfc	prodh,w,c
  2203  0002DA  6EDA               	movwf	fsr2h,c
  2204  0002DC  50DF               	movf	indf2,w,c
  2205  0002DE  ECF7  F006         	call	_on
  2206  0002E2  0101               	movlb	1	; () banked
  2207  0002E4  2BA3               	incf	drawSymbol@i_89& (0+255),f,b
  2208  0002E6  D7DA               	goto	l2643
  2209  0002E8                     l2655:
  2210  0002E8  0101               	movlb	1	; () banked
  2211  0002EA  519C               	movf	drawSymbol@chosenSymbol& (0+255),w,b
  2212                           
  2213                           ; Switch size 1, requested type "space"
  2214                           ; Number of cases is 7, Range of values is 1 to 7
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte           22    12 (average)
  2218                           ;	Chosen strategy is simple_byte
  2219  0002EC  0A01               	xorlw	1	; case 1
  2220  0002EE  B4D8               	btfsc	status,2,c
  2221  0002F0  D6D6               	goto	l2561
  2222  0002F2  0A03               	xorlw	3	; case 2
  2223  0002F4  B4D8               	btfsc	status,2,c
  2224  0002F6  D6FC               	goto	l2573
  2225  0002F8  0A01               	xorlw	1	; case 3
  2226  0002FA  B4D8               	btfsc	status,2,c
  2227  0002FC  D722               	goto	l2585
  2228  0002FE  0A07               	xorlw	7	; case 4
  2229  000300  B4D8               	btfsc	status,2,c
  2230  000302  D748               	goto	l2597
  2231  000304  0A01               	xorlw	1	; case 5
  2232  000306  B4D8               	btfsc	status,2,c
  2233  000308  D770               	goto	l2611
  2234  00030A  0A03               	xorlw	3	; case 6
  2235  00030C  B4D8               	btfsc	status,2,c
  2236  00030E  D796               	goto	l2625
  2237  000310  0A01               	xorlw	1	; case 7
  2238  000312  A4D8               	btfss	status,2,c
  2239  000314  0012               	return	
  2240  000316  D7BD               	goto	l2639
  2241  000318                     __end_of_drawSymbol:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           prodh	equ	0xFF4
  2248                           prodl	equ	0xFF3
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           plusw1	equ	0xFE3
  2253                           fsr1l	equ	0xFE1
  2254                           indf2	equ	0xFDF
  2255                           postinc2	equ	0xFDE
  2256                           plusw2	equ	0xFDB
  2257                           fsr2h	equ	0xFDA
  2258                           fsr2l	equ	0xFD9
  2259                           status	equ	0xFD8
  2260                           
  2261 ;; *************** function _turnAllOff *****************
  2262 ;; Defined at:
  2263 ;;		line 169 in file "Source/LED-API.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;		None
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  j               1   56[BANK1 ] unsigned char 
  2268 ;;  i               1   55[BANK1 ] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2278 ;;      Params:         0       0       0       0       0       0       0
  2279 ;;      Locals:         0       0       2       0       0       0       0
  2280 ;;      Temps:          0       0       2       0       0       0       0
  2281 ;;      Totals:         0       0       4       0       0       0       0
  2282 ;;Total ram usage:        4 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    6
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_drawSymbol
  2289 ;;		_startPong
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text8
  2294  000C1E                     __ptext8:
  2295                           	opt stack 0
  2296  000C1E                     _turnAllOff:
  2297                           	opt stack 22
  2298                           
  2299                           ;LED-API.c: 172: for (unsigned char i = 0; i < 8; i++) {
  2300                           
  2301                           ; BSR set to: 1
  2302                           ;incstack = 0
  2303  000C1E  0E00               	movlw	0
  2304  000C20  0101               	movlb	1	; () banked
  2305  000C22  6F37               	movwf	turnAllOff@i& (0+255),b
  2306  000C24                     l2441:
  2307                           
  2308                           ; BSR set to: 1
  2309  000C24  0E07               	movlw	7
  2310  000C26  0101               	movlb	1	; () banked
  2311  000C28  6537               	cpfsgt	turnAllOff@i& (0+255),b
  2312  000C2A  D001               	goto	l2445
  2313  000C2C  0012               	return	
  2314  000C2E                     l2445:
  2315                           
  2316                           ; BSR set to: 1
  2317                           ;LED-API.c: 173: for (unsigned char j = 0; j < 16; j++) {
  2318  000C2E  0E00               	movlw	0
  2319  000C30  0101               	movlb	1	; () banked
  2320  000C32  6F38               	movwf	turnAllOff@j& (0+255),b
  2321  000C34                     l2447:
  2322                           
  2323                           ; BSR set to: 1
  2324  000C34  0E0F               	movlw	15
  2325  000C36  0101               	movlb	1	; () banked
  2326  000C38  6538               	cpfsgt	turnAllOff@j& (0+255),b
  2327  000C3A  D001               	goto	l2451
  2328  000C3C  D01F               	goto	l2457
  2329  000C3E                     l2451:
  2330                           
  2331                           ; BSR set to: 1
  2332                           ;LED-API.c: 174: pixels[i][j] = 0;
  2333  000C3E  0101               	movlb	1	; () banked
  2334  000C40  5137               	movf	turnAllOff@i& (0+255),w,b
  2335  000C42  0D10               	mullw	16
  2336  000C44  0E00               	movlw	low _pixels
  2337  000C46  0101               	movlb	1	; () banked
  2338  000C48  6F35               	movwf	??_turnAllOff& (0+255),b
  2339  000C4A  0E03               	movlw	high _pixels
  2340  000C4C  0101               	movlb	1	; () banked
  2341  000C4E  6F36               	movwf	(??_turnAllOff+1)& (0+255),b
  2342  000C50  50F3               	movf	prodl,w,c
  2343  000C52  0101               	movlb	1	; () banked
  2344  000C54  2735               	addwf	??_turnAllOff& (0+255),f,b
  2345  000C56  50F4               	movf	prodh,w,c
  2346  000C58  0101               	movlb	1	; () banked
  2347  000C5A  2336               	addwfc	(??_turnAllOff+1)& (0+255),f,b
  2348  000C5C  0101               	movlb	1	; () banked
  2349  000C5E  5138               	movf	turnAllOff@j& (0+255),w,b
  2350  000C60  0D01               	mullw	1
  2351  000C62  50F3               	movf	prodl,w,c
  2352  000C64  0101               	movlb	1	; () banked
  2353  000C66  2535               	addwf	??_turnAllOff& (0+255),w,b
  2354  000C68  6ED9               	movwf	fsr2l,c
  2355  000C6A  50F4               	movf	prodh,w,c
  2356  000C6C  0101               	movlb	1	; () banked
  2357  000C6E  2136               	addwfc	(??_turnAllOff+1)& (0+255),w,b
  2358  000C70  6EDA               	movwf	fsr2h,c
  2359  000C72  0E00               	movlw	0
  2360  000C74  6EDF               	movwf	indf2,c
  2361                           
  2362                           ; BSR set to: 1
  2363  000C76  0101               	movlb	1	; () banked
  2364  000C78  2B38               	incf	turnAllOff@j& (0+255),f,b
  2365  000C7A  D7DC               	goto	l2447
  2366  000C7C                     l2457:
  2367                           
  2368                           ; BSR set to: 1
  2369  000C7C  0101               	movlb	1	; () banked
  2370  000C7E  2B37               	incf	turnAllOff@i& (0+255),f,b
  2371  000C80  D7D1               	goto	l2441
  2372  000C82                     __end_of_turnAllOff:
  2373                           	opt stack 0
  2374                           tblptru	equ	0xFF8
  2375                           tblptrh	equ	0xFF7
  2376                           tblptrl	equ	0xFF6
  2377                           tablat	equ	0xFF5
  2378                           prodh	equ	0xFF4
  2379                           prodl	equ	0xFF3
  2380                           postinc0	equ	0xFEE
  2381                           wreg	equ	0xFE8
  2382                           postdec1	equ	0xFE5
  2383                           plusw1	equ	0xFE3
  2384                           fsr1l	equ	0xFE1
  2385                           indf2	equ	0xFDF
  2386                           postinc2	equ	0xFDE
  2387                           plusw2	equ	0xFDB
  2388                           fsr2h	equ	0xFDA
  2389                           fsr2l	equ	0xFD9
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _on *****************
  2393 ;; Defined at:
  2394 ;;		line 47 in file "Source/LED-API.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  column          1    wreg     unsigned char 
  2397 ;;  row             1   53[BANK1 ] unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  column          1   56[BANK1 ] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2409 ;;      Params:         0       0       1       0       0       0       0
  2410 ;;      Locals:         0       0       1       0       0       0       0
  2411 ;;      Temps:          0       0       2       0       0       0       0
  2412 ;;      Totals:         0       0       4       0       0       0       0
  2413 ;;Total ram usage:        4 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    6
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_drawSymbol
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text9
  2424  000DEE                     __ptext9:
  2425                           	opt stack 0
  2426  000DEE                     _on:
  2427                           	opt stack 21
  2428                           
  2429                           ; BSR set to: 1
  2430                           ;incstack = 0
  2431                           ;on@column stored from wreg
  2432  000DEE  0101               	movlb	1	; () banked
  2433  000DF0  6F38               	movwf	on@column& (0+255),b
  2434                           
  2435                           ;LED-API.c: 49: if (row < 0 || row >= 16)
  2436  000DF2  0E0F               	movlw	15
  2437  000DF4  0101               	movlb	1	; () banked
  2438  000DF6  6535               	cpfsgt	on@row& (0+255),b
  2439  000DF8  D001               	goto	l2433
  2440  000DFA  0012               	return	
  2441  000DFC                     l2433:
  2442                           
  2443                           ; BSR set to: 1
  2444                           ;LED-API.c: 51: if (column < 0 || column >= 8)
  2445  000DFC  0E07               	movlw	7
  2446  000DFE  0101               	movlb	1	; () banked
  2447  000E00  6538               	cpfsgt	on@column& (0+255),b
  2448  000E02  D001               	goto	l2437
  2449  000E04  0012               	return	
  2450  000E06                     l2437:
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;LED-API.c: 54: pixels[column][row] = 1;
  2454  000E06  0101               	movlb	1	; () banked
  2455  000E08  5138               	movf	on@column& (0+255),w,b
  2456  000E0A  0D10               	mullw	16
  2457  000E0C  0E00               	movlw	low _pixels
  2458  000E0E  0101               	movlb	1	; () banked
  2459  000E10  6F36               	movwf	??_on& (0+255),b
  2460  000E12  0E03               	movlw	high _pixels
  2461  000E14  0101               	movlb	1	; () banked
  2462  000E16  6F37               	movwf	(??_on+1)& (0+255),b
  2463  000E18  50F3               	movf	prodl,w,c
  2464  000E1A  0101               	movlb	1	; () banked
  2465  000E1C  2736               	addwf	??_on& (0+255),f,b
  2466  000E1E  50F4               	movf	prodh,w,c
  2467  000E20  0101               	movlb	1	; () banked
  2468  000E22  2337               	addwfc	(??_on+1)& (0+255),f,b
  2469  000E24  0101               	movlb	1	; () banked
  2470  000E26  5135               	movf	on@row& (0+255),w,b
  2471  000E28  0D01               	mullw	1
  2472  000E2A  50F3               	movf	prodl,w,c
  2473  000E2C  0101               	movlb	1	; () banked
  2474  000E2E  2536               	addwf	??_on& (0+255),w,b
  2475  000E30  6ED9               	movwf	fsr2l,c
  2476  000E32  50F4               	movf	prodh,w,c
  2477  000E34  0101               	movlb	1	; () banked
  2478  000E36  2137               	addwfc	(??_on+1)& (0+255),w,b
  2479  000E38  6EDA               	movwf	fsr2h,c
  2480  000E3A  0E01               	movlw	1
  2481  000E3C  6EDF               	movwf	indf2,c
  2482                           
  2483                           ; BSR set to: 1
  2484  000E3E  0012               	return		;funcret
  2485  000E40                     __end_of_on:
  2486                           	opt stack 0
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           prodh	equ	0xFF4
  2492                           prodl	equ	0xFF3
  2493                           postinc0	equ	0xFEE
  2494                           wreg	equ	0xFE8
  2495                           postdec1	equ	0xFE5
  2496                           plusw1	equ	0xFE3
  2497                           fsr1l	equ	0xFE1
  2498                           indf2	equ	0xFDF
  2499                           postinc2	equ	0xFDE
  2500                           plusw2	equ	0xFDB
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _delaySeconds *****************
  2506 ;; Defined at:
  2507 ;;		line 49 in file "main.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  numberOfSeco    2   59[BANK1 ] int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  i               2   62[BANK1 ] int 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;		None               void
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2521 ;;      Params:         0       0       2       0       0       0       0
  2522 ;;      Locals:         0       0       2       0       0       0       0
  2523 ;;      Temps:          0       0       1       0       0       0       0
  2524 ;;      Totals:         0       0       5       0       0       0       0
  2525 ;;Total ram usage:        5 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    7
  2528 ;; This function calls:
  2529 ;;		___wmul
  2530 ;; This function is called by:
  2531 ;;		_startPong
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text10
  2536  000C82                     __ptext10:
  2537                           	opt stack 0
  2538  000C82                     _delaySeconds:
  2539                           	opt stack 21
  2540                           
  2541                           ;main.c: 51: for(int i = 0; i < numberOfSeconds * 100; i++)
  2542                           
  2543                           ; BSR set to: 1
  2544                           ;incstack = 0
  2545  000C82  0E00               	movlw	0
  2546  000C84  0101               	movlb	1	; () banked
  2547  000C86  6F3F               	movwf	(delaySeconds@i+1)& (0+255),b
  2548  000C88  0E00               	movlw	0
  2549  000C8A  6F3E               	movwf	delaySeconds@i& (0+255),b
  2550  000C8C  D00C               	goto	l2003
  2551  000C8E                     l1999:
  2552                           
  2553                           ; BSR set to: 1
  2554                           ;main.c: 52: _delay((unsigned long)((10)*(32000000/4000.0)));
  2555  000C8E  0E68               	movlw	104
  2556  000C90  0101               	movlb	1	; () banked
  2557  000C92  6F3D               	movwf	??_delaySeconds& (0+255),b
  2558  000C94  0EE4               	movlw	228
  2559  000C96                     u2857:
  2560  000C96  2EE8               	decfsz	wreg,f,c
  2561  000C98  D7FE               	goto	u2857
  2562  000C9A  2F3D               	decfsz	??_delaySeconds& (0+255),f,b
  2563  000C9C  D7FC               	goto	u2857
  2564  000C9E  D000               	nop2	
  2565  000CA0  0101               	movlb	1	; () banked
  2566  000CA2  4B3E               	infsnz	delaySeconds@i& (0+255),f,b
  2567  000CA4  2B3F               	incf	(delaySeconds@i+1)& (0+255),f,b
  2568  000CA6                     l2003:
  2569                           
  2570                           ; BSR set to: 1
  2571  000CA6  C13B  F135         	movff	delaySeconds@numberOfSeconds,___wmul@multiplier
  2572  000CAA  C13C  F136         	movff	delaySeconds@numberOfSeconds+1,___wmul@multiplier+1
  2573  000CAE  0E00               	movlw	0
  2574  000CB0  0101               	movlb	1	; () banked
  2575  000CB2  6F38               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2576  000CB4  0E64               	movlw	100
  2577  000CB6  6F37               	movwf	___wmul@multiplicand& (0+255),b
  2578  000CB8  EC5B  F008         	call	___wmul	;wreg free
  2579  000CBC  0101               	movlb	1	; () banked
  2580  000CBE  5135               	movf	?___wmul& (0+255),w,b
  2581  000CC0  0101               	movlb	1	; () banked
  2582  000CC2  5D3E               	subwf	delaySeconds@i& (0+255),w,b
  2583  000CC4  0101               	movlb	1	; () banked
  2584  000CC6  513F               	movf	(delaySeconds@i+1)& (0+255),w,b
  2585  000CC8  0A80               	xorlw	128
  2586  000CCA  0101               	movlb	1	; () banked
  2587  000CCC  6F3D               	movwf	??_delaySeconds& (0+255),b
  2588  000CCE  0101               	movlb	1	; () banked
  2589  000CD0  5136               	movf	(?___wmul+1)& (0+255),w,b
  2590  000CD2  0A80               	xorlw	128
  2591  000CD4  0101               	movlb	1	; () banked
  2592  000CD6  593D               	subwfb	??_delaySeconds& (0+255),w,b
  2593  000CD8  A0D8               	btfss	status,0,c
  2594  000CDA  D7D9               	goto	l1999
  2595                           
  2596                           ; BSR set to: 1
  2597                           ;main.c: 54: return 1;
  2598                           
  2599                           ; BSR set to: 1
  2600  000CDC  80D8               	bsf	status,0,c
  2601  000CDE  0012               	return	
  2602  000CE0                     __end_of_delaySeconds:
  2603                           	opt stack 0
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           prodh	equ	0xFF4
  2609                           prodl	equ	0xFF3
  2610                           postinc0	equ	0xFEE
  2611                           wreg	equ	0xFE8
  2612                           postdec1	equ	0xFE5
  2613                           plusw1	equ	0xFE3
  2614                           fsr1l	equ	0xFE1
  2615                           indf2	equ	0xFDF
  2616                           postinc2	equ	0xFDE
  2617                           plusw2	equ	0xFDB
  2618                           fsr2h	equ	0xFDA
  2619                           fsr2l	equ	0xFD9
  2620                           status	equ	0xFD8
  2621                           
  2622 ;; *************** function ___wmul *****************
  2623 ;; Defined at:
  2624 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  multiplier      2   53[BANK1 ] unsigned int 
  2627 ;;  multiplicand    2   55[BANK1 ] unsigned int 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  product         2   57[BANK1 ] unsigned int 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  2   53[BANK1 ] unsigned int 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0, prodl, prodh
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2639 ;;      Params:         0       0       4       0       0       0       0
  2640 ;;      Locals:         0       0       2       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0
  2642 ;;      Totals:         0       0       6       0       0       0       0
  2643 ;;Total ram usage:        6 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    6
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_delaySeconds
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text11
  2654  0010B6                     __ptext11:
  2655                           	opt stack 0
  2656  0010B6                     ___wmul:
  2657                           	opt stack 21
  2658                           
  2659                           ; BSR set to: 1
  2660                           ;incstack = 0
  2661  0010B6  0101               	movlb	1	; () banked
  2662  0010B8  5135               	movf	___wmul@multiplier& (0+255),w,b
  2663  0010BA  0101               	movlb	1	; () banked
  2664  0010BC  0337               	mulwf	___wmul@multiplicand& (0+255),b
  2665  0010BE  CFF3 F139          	movff	prodl,___wmul@product
  2666  0010C2  CFF4 F13A          	movff	prodh,___wmul@product+1
  2667  0010C6  0101               	movlb	1	; () banked
  2668  0010C8  5135               	movf	___wmul@multiplier& (0+255),w,b
  2669  0010CA  0101               	movlb	1	; () banked
  2670  0010CC  0338               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2671  0010CE  50F3               	movf	prodl,w,c
  2672  0010D0  0101               	movlb	1	; () banked
  2673  0010D2  273A               	addwf	(___wmul@product+1)& (0+255),f,b
  2674  0010D4  0101               	movlb	1	; () banked
  2675  0010D6  5136               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2676  0010D8  0101               	movlb	1	; () banked
  2677  0010DA  0337               	mulwf	___wmul@multiplicand& (0+255),b
  2678  0010DC  50F3               	movf	prodl,w,c
  2679  0010DE  0101               	movlb	1	; () banked
  2680  0010E0  273A               	addwf	(___wmul@product+1)& (0+255),f,b
  2681                           
  2682                           ; BSR set to: 1
  2683  0010E2  C139  F135         	movff	___wmul@product,?___wmul
  2684  0010E6  C13A  F136         	movff	___wmul@product+1,?___wmul+1
  2685  0010EA  0012               	return	
  2686  0010EC                     __end_of___wmul:
  2687                           	opt stack 0
  2688                           tblptru	equ	0xFF8
  2689                           tblptrh	equ	0xFF7
  2690                           tblptrl	equ	0xFF6
  2691                           tablat	equ	0xFF5
  2692                           prodh	equ	0xFF4
  2693                           prodl	equ	0xFF3
  2694                           postinc0	equ	0xFEE
  2695                           wreg	equ	0xFE8
  2696                           postdec1	equ	0xFE5
  2697                           plusw1	equ	0xFE3
  2698                           fsr1l	equ	0xFE1
  2699                           indf2	equ	0xFDF
  2700                           postinc2	equ	0xFDE
  2701                           plusw2	equ	0xFDB
  2702                           fsr2h	equ	0xFDA
  2703                           fsr2l	equ	0xFD9
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function _initializeLED *****************
  2707 ;; Defined at:
  2708 ;;		line 31 in file "Source/LED-API.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  j               1   56[BANK1 ] unsigned char 
  2713 ;;  i               1   55[BANK1 ] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2723 ;;      Params:         0       0       0       0       0       0       0
  2724 ;;      Locals:         0       0       2       0       0       0       0
  2725 ;;      Temps:          0       0       2       0       0       0       0
  2726 ;;      Totals:         0       0       4       0       0       0       0
  2727 ;;Total ram usage:        4 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    6
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_main
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text12
  2738  000AC8                     __ptext12:
  2739                           	opt stack 0
  2740  000AC8                     _initializeLED:
  2741                           	opt stack 24
  2742                           
  2743                           ;LED-API.c: 32: TRISA = 0b00000000;
  2744                           
  2745                           ; BSR set to: 1
  2746                           ;incstack = 0
  2747  000AC8  0E00               	movlw	0
  2748  000ACA  6E92               	movwf	3986,c	;volatile
  2749                           
  2750                           ;LED-API.c: 33: TRISC = 0b00000000;
  2751  000ACC  0E00               	movlw	0
  2752  000ACE  6E94               	movwf	3988,c	;volatile
  2753                           
  2754                           ;LED-API.c: 34: TRISD = 0b00000000;
  2755  000AD0  0E00               	movlw	0
  2756  000AD2  6E95               	movwf	3989,c	;volatile
  2757                           
  2758                           ;LED-API.c: 35: LATA = 0b00000000;
  2759  000AD4  0E00               	movlw	0
  2760  000AD6  6E89               	movwf	3977,c	;volatile
  2761                           
  2762                           ;LED-API.c: 36: LATC = 0b00000000;
  2763  000AD8  0E00               	movlw	0
  2764  000ADA  6E8B               	movwf	3979,c	;volatile
  2765                           
  2766                           ;LED-API.c: 37: LATD = 0b00000000;
  2767  000ADC  0E00               	movlw	0
  2768  000ADE  6E8C               	movwf	3980,c	;volatile
  2769                           
  2770                           ;LED-API.c: 40: for (unsigned char i = 0; i < 8; i++) {
  2771  000AE0  0E00               	movlw	0
  2772  000AE2  0101               	movlb	1	; () banked
  2773  000AE4  6F37               	movwf	initializeLED@i& (0+255),b
  2774  000AE6                     l2089:
  2775                           
  2776                           ; BSR set to: 1
  2777  000AE6  0E07               	movlw	7
  2778  000AE8  0101               	movlb	1	; () banked
  2779  000AEA  6537               	cpfsgt	initializeLED@i& (0+255),b
  2780  000AEC  D001               	goto	l2093
  2781  000AEE  0012               	return	
  2782  000AF0                     l2093:
  2783                           
  2784                           ; BSR set to: 1
  2785                           ;LED-API.c: 41: for (unsigned char j = 0; j < 16; j++) {
  2786  000AF0  0E00               	movlw	0
  2787  000AF2  0101               	movlb	1	; () banked
  2788  000AF4  6F38               	movwf	initializeLED@j& (0+255),b
  2789  000AF6                     l2095:
  2790                           
  2791                           ; BSR set to: 1
  2792  000AF6  0E0F               	movlw	15
  2793  000AF8  0101               	movlb	1	; () banked
  2794  000AFA  6538               	cpfsgt	initializeLED@j& (0+255),b
  2795  000AFC  D001               	goto	l2099
  2796  000AFE  D01F               	goto	l2105
  2797  000B00                     l2099:
  2798                           
  2799                           ; BSR set to: 1
  2800                           ;LED-API.c: 42: pixels[i][j] = 0;
  2801  000B00  0101               	movlb	1	; () banked
  2802  000B02  5137               	movf	initializeLED@i& (0+255),w,b
  2803  000B04  0D10               	mullw	16
  2804  000B06  0E00               	movlw	low _pixels
  2805  000B08  0101               	movlb	1	; () banked
  2806  000B0A  6F35               	movwf	??_initializeLED& (0+255),b
  2807  000B0C  0E03               	movlw	high _pixels
  2808  000B0E  0101               	movlb	1	; () banked
  2809  000B10  6F36               	movwf	(??_initializeLED+1)& (0+255),b
  2810  000B12  50F3               	movf	prodl,w,c
  2811  000B14  0101               	movlb	1	; () banked
  2812  000B16  2735               	addwf	??_initializeLED& (0+255),f,b
  2813  000B18  50F4               	movf	prodh,w,c
  2814  000B1A  0101               	movlb	1	; () banked
  2815  000B1C  2336               	addwfc	(??_initializeLED+1)& (0+255),f,b
  2816  000B1E  0101               	movlb	1	; () banked
  2817  000B20  5138               	movf	initializeLED@j& (0+255),w,b
  2818  000B22  0D01               	mullw	1
  2819  000B24  50F3               	movf	prodl,w,c
  2820  000B26  0101               	movlb	1	; () banked
  2821  000B28  2535               	addwf	??_initializeLED& (0+255),w,b
  2822  000B2A  6ED9               	movwf	fsr2l,c
  2823  000B2C  50F4               	movf	prodh,w,c
  2824  000B2E  0101               	movlb	1	; () banked
  2825  000B30  2136               	addwfc	(??_initializeLED+1)& (0+255),w,b
  2826  000B32  6EDA               	movwf	fsr2h,c
  2827  000B34  0E00               	movlw	0
  2828  000B36  6EDF               	movwf	indf2,c
  2829                           
  2830                           ; BSR set to: 1
  2831  000B38  0101               	movlb	1	; () banked
  2832  000B3A  2B38               	incf	initializeLED@j& (0+255),f,b
  2833  000B3C  D7DC               	goto	l2095
  2834  000B3E                     l2105:
  2835                           
  2836                           ; BSR set to: 1
  2837  000B3E  0101               	movlb	1	; () banked
  2838  000B40  2B37               	incf	initializeLED@i& (0+255),f,b
  2839  000B42  D7D1               	goto	l2089
  2840  000B44                     __end_of_initializeLED:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           prodh	equ	0xFF4
  2847                           prodl	equ	0xFF3
  2848                           postinc0	equ	0xFEE
  2849                           wreg	equ	0xFE8
  2850                           postdec1	equ	0xFE5
  2851                           plusw1	equ	0xFE3
  2852                           fsr1l	equ	0xFE1
  2853                           indf2	equ	0xFDF
  2854                           postinc2	equ	0xFDE
  2855                           plusw2	equ	0xFDB
  2856                           fsr2h	equ	0xFDA
  2857                           fsr2l	equ	0xFD9
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function _initialize *****************
  2861 ;; Defined at:
  2862 ;;		line 101 in file "main.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2876 ;;      Params:         0       0       0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    6
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text13
  2891  000D94                     __ptext13:
  2892                           	opt stack 0
  2893  000D94                     _initialize:
  2894                           	opt stack 24
  2895                           
  2896                           ;main.c: 104: OSCTUNEbits.PLLEN = 1;
  2897                           
  2898                           ; BSR set to: 1
  2899                           ;incstack = 0
  2900  000D94  8C9B               	bsf	3995,6,c	;volatile
  2901                           
  2902                           ;main.c: 105: OSCTUNEbits.TUN = 011111;
  2903  000D96  809B               	bsf	3995,0,c	;volatile
  2904  000D98  929B               	bcf	3995,1,c	;volatile
  2905  000D9A  949B               	bcf	3995,2,c	;volatile
  2906  000D9C  869B               	bsf	3995,3,c	;volatile
  2907  000D9E  989B               	bcf	3995,4,c	;volatile
  2908                           
  2909                           ;main.c: 107: OSCCONbits.SCS = 00;
  2910  000DA0  0EFC               	movlw	-4
  2911  000DA2  16D3               	andwf	4051,f,c	;volatile
  2912                           
  2913                           ;main.c: 108: OSCCONbits.IRCF = 111;
  2914  000DA4  88D3               	bsf	4051,4,c	;volatile
  2915  000DA6  8AD3               	bsf	4051,5,c	;volatile
  2916  000DA8  8CD3               	bsf	4051,6,c	;volatile
  2917                           
  2918                           ;main.c: 110: PLLEN = 1;
  2919  000DAA  8C9B               	bsf	3995,6,c	;volatile
  2920                           
  2921                           ;main.c: 113: GIE = 1;
  2922  000DAC  8EF2               	bsf	intcon,7,c	;volatile
  2923                           
  2924                           ;main.c: 114: PEIE=1;
  2925  000DAE  8CF2               	bsf	intcon,6,c	;volatile
  2926                           
  2927                           ;main.c: 117: TRISBbits.TRISB0 = 1;
  2928  000DB0  8093               	bsf	3987,0,c	;volatile
  2929                           
  2930                           ;main.c: 118: TRISBbits.TRISB1 = 1;
  2931  000DB2  8293               	bsf	3987,1,c	;volatile
  2932                           
  2933                           ;main.c: 119: ADCON2bits.ADFM = 1;
  2934  000DB4  8EC0               	bsf	4032,7,c	;volatile
  2935                           
  2936                           ;main.c: 120: ADCON2bits.ADCS = 010;
  2937  000DB6  90C0               	bcf	4032,0,c	;volatile
  2938  000DB8  92C0               	bcf	4032,1,c	;volatile
  2939  000DBA  94C0               	bcf	4032,2,c	;volatile
  2940                           
  2941                           ;main.c: 121: ADCON2bits.ACQT = 111;
  2942  000DBC  86C0               	bsf	4032,3,c	;volatile
  2943  000DBE  88C0               	bsf	4032,4,c	;volatile
  2944  000DC0  8AC0               	bsf	4032,5,c	;volatile
  2945                           
  2946                           ;main.c: 122: ADCON1bits.VCFG0 = 0;
  2947  000DC2  98C1               	bcf	4033,4,c	;volatile
  2948                           
  2949                           ;main.c: 123: ADCON1bits.VCFG1 = 0;
  2950  000DC4  9AC1               	bcf	4033,5,c	;volatile
  2951                           
  2952                           ;main.c: 124: ADCON1bits.PCFG = 0000;
  2953  000DC6  90C1               	bcf	4033,0,c	;volatile
  2954  000DC8  92C1               	bcf	4033,1,c	;volatile
  2955  000DCA  94C1               	bcf	4033,2,c	;volatile
  2956  000DCC  96C1               	bcf	4033,3,c	;volatile
  2957                           
  2958                           ;main.c: 125: ADCON0bits.CHS = 1100;
  2959  000DCE  50C2               	movf	4034,w,c	;volatile
  2960  000DD0  0BC3               	andlw	-61
  2961  000DD2  0930               	iorlw	48
  2962  000DD4  6EC2               	movwf	4034,c	;volatile
  2963                           
  2964                           ;main.c: 126: ADCON0bits.ADON = 1;
  2965  000DD6  80C2               	bsf	4034,0,c	;volatile
  2966                           
  2967                           ;main.c: 127: ADIE = 1;
  2968  000DD8  8C9D               	bsf	3997,6,c	;volatile
  2969                           
  2970                           ;main.c: 130: T0PS0 = 1;
  2971  000DDA  80D5               	bsf	4053,0,c	;volatile
  2972                           
  2973                           ;main.c: 131: T0PS1 = 0;
  2974  000DDC  92D5               	bcf	4053,1,c	;volatile
  2975                           
  2976                           ;main.c: 132: T0PS2 = 1;
  2977  000DDE  84D5               	bsf	4053,2,c	;volatile
  2978                           
  2979                           ;main.c: 133: PSA = 0;
  2980  000DE0  96D5               	bcf	4053,3,c	;volatile
  2981                           
  2982                           ;main.c: 134: T0CS = 0;
  2983  000DE2  9AD5               	bcf	4053,5,c	;volatile
  2984                           
  2985                           ;main.c: 135: T08BIT = 1;
  2986  000DE4  8CD5               	bsf	4053,6,c	;volatile
  2987                           
  2988                           ;main.c: 136: TMR0IE = 1;
  2989  000DE6  8AF2               	bsf	intcon,5,c	;volatile
  2990                           
  2991                           ;main.c: 137: TMR0IF = 0;
  2992  000DE8  94F2               	bcf	intcon,2,c	;volatile
  2993                           
  2994                           ;main.c: 139: TMR0ON = 0;
  2995  000DEA  9ED5               	bcf	4053,7,c	;volatile
  2996  000DEC  0012               	return		;funcret
  2997  000DEE                     __end_of_initialize:
  2998                           	opt stack 0
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           prodh	equ	0xFF4
  3004                           prodl	equ	0xFF3
  3005                           intcon	equ	0xFF2
  3006                           postinc0	equ	0xFEE
  3007                           wreg	equ	0xFE8
  3008                           postdec1	equ	0xFE5
  3009                           plusw1	equ	0xFE3
  3010                           fsr1l	equ	0xFE1
  3011                           indf2	equ	0xFDF
  3012                           postinc2	equ	0xFDE
  3013                           plusw2	equ	0xFDB
  3014                           fsr2h	equ	0xFDA
  3015                           fsr2l	equ	0xFD9
  3016                           status	equ	0xFD8
  3017                           
  3018 ;; *************** function _ISR *****************
  3019 ;; Defined at:
  3020 ;;		line 331 in file "main.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  ADvalue         2  118[COMRAM] unsigned short 
  3025 ;;  value           1  120[COMRAM] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3035 ;;      Params:         0       0       0       0       0       0       0
  3036 ;;      Locals:         3       0       0       0       0       0       0
  3037 ;;      Temps:         14       0       0       0       0       0       0
  3038 ;;      Totals:        17       0       0       0       0       0       0
  3039 ;;Total ram usage:       17 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    5
  3042 ;; This function calls:
  3043 ;;		___lwdiv
  3044 ;;		_checkNextPosition
  3045 ;;		_writePong
  3046 ;; This function is called by:
  3047 ;;		Interrupt level 2
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	intcode
  3052  000008                     __pintcode:
  3053                           	opt stack 0
  3054  000008                     _ISR:
  3055                           	opt stack 21
  3056                           
  3057                           ;incstack = 0
  3058  000008  827E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3059  00000A  CFFA F069          	movff	pclath,??_ISR
  3060  00000E  CFFB F06A          	movff	pclatu,??_ISR+1
  3061  000012  EDB7  F003         	call	int_func,f	;refresh shadow registers
  3062                           pclatu	equ	0xFFB
  3063                           pclath	equ	0xFFA
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           intcon	equ	0xFF2
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           postdec1	equ	0xFE5
  3074                           plusw1	equ	0xFE3
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           postinc2	equ	0xFDE
  3078                           plusw2	equ	0xFDB
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8
  3082                           
  3083                           	psect	intcode_body
  3084  00076E                     __pintcode_body:
  3085                           	opt stack 21
  3086  00076E                     int_func:
  3087                           	opt stack 21
  3088  00076E  0006               	pop		; remove dummy address from shadow register refresh
  3089  000770  CFE9 F06B          	movff	fsr0l,??_ISR+2
  3090  000774  CFEA F06C          	movff	fsr0h,??_ISR+3
  3091  000778  CFE1 F06D          	movff	fsr1l,??_ISR+4
  3092  00077C  CFE2 F06E          	movff	fsr1h,??_ISR+5
  3093  000780  CFD9 F06F          	movff	fsr2l,??_ISR+6
  3094  000784  CFDA F070          	movff	fsr2h,??_ISR+7
  3095  000788  CFF3 F071          	movff	prodl,??_ISR+8
  3096  00078C  CFF4 F072          	movff	prodh,??_ISR+9
  3097  000790  CFF6 F073          	movff	tblptrl,??_ISR+10
  3098  000794  CFF7 F074          	movff	tblptrh,??_ISR+11
  3099  000798  CFF8 F075          	movff	tblptru,??_ISR+12
  3100  00079C  CFF5 F076          	movff	tablat,??_ISR+13
  3101                           
  3102                           ;main.c: 333: if(TMR0IE && TMR0IF)
  3103  0007A0  BAF2               	btfsc	intcon,5,c	;volatile
  3104  0007A2  A4F2               	btfss	intcon,2,c	;volatile
  3105  0007A4  D012               	goto	i2l2853
  3106                           
  3107                           ;main.c: 334: {
  3108                           ;main.c: 336: TMR0IF = 0;
  3109  0007A6  94F2               	bcf	intcon,2,c	;volatile
  3110                           
  3111                           ;main.c: 338: if(_timerCounter > _speed)
  3112  0007A8  507A               	movf	__timerCounter,w,c
  3113  0007AA  5C7C               	subwf	__speed,w,c
  3114  0007AC  507B               	movf	__timerCounter+1,w,c
  3115  0007AE  587D               	subwfb	__speed+1,w,c
  3116  0007B0  B0D8               	btfsc	status,0,c
  3117  0007B2  D006               	goto	i2l2847
  3118                           
  3119                           ;main.c: 339: {
  3120                           ;main.c: 340: checkNextPosition();
  3121  0007B4  ECFC  F002         	call	_checkNextPosition	;wreg free
  3122                           
  3123                           ;main.c: 341: _timerCounter = 0;
  3124  0007B8  0E00               	movlw	0
  3125  0007BA  6E7B               	movwf	__timerCounter+1,c
  3126  0007BC  0E00               	movlw	0
  3127  0007BE  6E7A               	movwf	__timerCounter,c
  3128  0007C0                     i2l2847:
  3129                           
  3130                           ;main.c: 342: }
  3131                           ;main.c: 344: _timerCounter++;
  3132  0007C0  4A7A               	infsnz	__timerCounter,f,c
  3133  0007C2  2A7B               	incf	__timerCounter+1,f,c
  3134                           
  3135                           ;main.c: 345: writePong();
  3136  0007C4  EC23  F005         	call	_writePong	;wreg free
  3137                           
  3138                           ;main.c: 348: ADCON0bits.GODONE = 1;
  3139  0007C8  82C2               	bsf	4034,1,c	;volatile
  3140  0007CA                     i2l2853:
  3141                           
  3142                           ;main.c: 350: }
  3143                           ;main.c: 352: if(ADIE && ADIF)
  3144  0007CA  BC9D               	btfsc	3997,6,c	;volatile
  3145  0007CC  AC9E               	btfss	3998,6,c	;volatile
  3146  0007CE  D032               	goto	i2l265
  3147                           
  3148                           ;main.c: 353: {
  3149                           ;main.c: 355: ADIF = 0;
  3150  0007D0  9C9E               	bcf	3998,6,c	;volatile
  3151                           
  3152                           ;main.c: 357: unsigned short ADvalue = ADRES;
  3153  0007D2  CFC3 F077          	movff	4035,ISR@ADvalue	;volatile
  3154  0007D6  CFC4 F078          	movff	4036,ISR@ADvalue+1	;volatile
  3155                           
  3156                           ;main.c: 358: unsigned char value = (ADvalue / 85);
  3157  0007DA  C077  F001         	movff	ISR@ADvalue,___lwdiv@dividend
  3158  0007DE  C078  F002         	movff	ISR@ADvalue+1,___lwdiv@dividend+1
  3159  0007E2  0E00               	movlw	0
  3160  0007E4  6E04               	movwf	___lwdiv@divisor+1,c
  3161  0007E6  0E55               	movlw	85
  3162  0007E8  6E03               	movwf	___lwdiv@divisor,c
  3163  0007EA  EC49  F007         	call	___lwdiv	;wreg free
  3164  0007EE  5001               	movf	?___lwdiv,w,c
  3165  0007F0  6E79               	movwf	ISR@value,c
  3166                           
  3167                           ;main.c: 361: if(ADCON0bits.CHS == 12)
  3168  0007F2  30C2               	rrcf	4034,w,c	;volatile
  3169  0007F4  32E8               	rrcf	wreg,f,c
  3170  0007F6  0B0F               	andlw	15
  3171  0007F8  0A0C               	xorlw	12
  3172  0007FA  A4D8               	btfss	status,2,c
  3173  0007FC  D00E               	goto	i2l2873
  3174                           
  3175                           ;main.c: 362: {
  3176                           ;main.c: 363: ADCON0bits.CHS = 10;
  3177  0007FE  50C2               	movf	4034,w,c	;volatile
  3178  000800  0BC3               	andlw	-61
  3179  000802  0928               	iorlw	40
  3180  000804  6EC2               	movwf	4034,c	;volatile
  3181                           
  3182                           ;main.c: 366: _p1.paddlePosOld[0] = _p1.paddlePos[0];
  3183  000806  C1BE  F1BC         	movff	__p1+2,__p1
  3184                           
  3185                           ;main.c: 367: _p1.paddlePos[0] = value;
  3186  00080A  C079  F1BE         	movff	ISR@value,__p1+2
  3187                           
  3188                           ;main.c: 369: _p1.paddlePosOld[1] = _p1.paddlePos[1];
  3189  00080E  C1BF  F1BD         	movff	__p1+3,__p1+1
  3190                           
  3191                           ;main.c: 370: _p1.paddlePos[1] = value + 1;
  3192  000812  2879               	incf	ISR@value,w,c
  3193  000814  0101               	movlb	1	; () banked
  3194  000816  6FBF               	movwf	(__p1+3)& (0+255),b
  3195                           
  3196                           ;main.c: 371: }
  3197  000818  D00D               	goto	i2l265
  3198  00081A                     i2l2873:
  3199                           
  3200                           ;main.c: 372: else
  3201                           ;main.c: 373: {
  3202                           ;main.c: 374: ADCON0bits.CHS = 12;
  3203  00081A  50C2               	movf	4034,w,c	;volatile
  3204  00081C  0BC3               	andlw	-61
  3205  00081E  0930               	iorlw	48
  3206  000820  6EC2               	movwf	4034,c	;volatile
  3207                           
  3208                           ;main.c: 377: _p2.paddlePosOld[0] = _p2.paddlePos[0];
  3209  000822  C1C3  F1C1         	movff	__p2+2,__p2
  3210                           
  3211                           ;main.c: 378: _p2.paddlePos[0] = value;
  3212  000826  C079  F1C3         	movff	ISR@value,__p2+2
  3213                           
  3214                           ;main.c: 380: _p2.paddlePosOld[1] = _p2.paddlePos[1];
  3215  00082A  C1C4  F1C2         	movff	__p2+3,__p2+1
  3216                           
  3217                           ;main.c: 381: _p2.paddlePos[1] = value + 1;
  3218  00082E  2879               	incf	ISR@value,w,c
  3219  000830  0101               	movlb	1	; () banked
  3220  000832  6FC4               	movwf	(__p2+3)& (0+255),b
  3221  000834                     i2l265:
  3222  000834  C076  FFF5         	movff	??_ISR+13,tablat
  3223  000838  C075  FFF8         	movff	??_ISR+12,tblptru
  3224  00083C  C074  FFF7         	movff	??_ISR+11,tblptrh
  3225  000840  C073  FFF6         	movff	??_ISR+10,tblptrl
  3226  000844  C072  FFF4         	movff	??_ISR+9,prodh
  3227  000848  C071  FFF3         	movff	??_ISR+8,prodl
  3228  00084C  C070  FFDA         	movff	??_ISR+7,fsr2h
  3229  000850  C06F  FFD9         	movff	??_ISR+6,fsr2l
  3230  000854  C06E  FFE2         	movff	??_ISR+5,fsr1h
  3231  000858  C06D  FFE1         	movff	??_ISR+4,fsr1l
  3232  00085C  C06C  FFEA         	movff	??_ISR+3,fsr0h
  3233  000860  C06B  FFE9         	movff	??_ISR+2,fsr0l
  3234  000864  C06A  FFFB         	movff	??_ISR+1,pclatu
  3235  000868  C069  FFFA         	movff	??_ISR,pclath
  3236  00086C  927E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3237  00086E  0011               	retfie		f
  3238  000870                     __end_of_ISR:
  3239                           	opt stack 0
  3240                           pclatu	equ	0xFFB
  3241                           pclath	equ	0xFFA
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           postinc0	equ	0xFEE
  3250                           fsr0h	equ	0xFEA
  3251                           fsr0l	equ	0xFE9
  3252                           wreg	equ	0xFE8
  3253                           postdec1	equ	0xFE5
  3254                           plusw1	equ	0xFE3
  3255                           fsr1h	equ	0xFE2
  3256                           fsr1l	equ	0xFE1
  3257                           indf2	equ	0xFDF
  3258                           postinc2	equ	0xFDE
  3259                           plusw2	equ	0xFDB
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function _writePong *****************
  3265 ;; Defined at:
  3266 ;;		line 143 in file "main.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3280 ;;      Params:         0       0       0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    1
  3287 ;; This function calls:
  3288 ;;		_off
  3289 ;;		i2_on
  3290 ;; This function is called by:
  3291 ;;		_ISR
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text15
  3296  000A46                     __ptext15:
  3297                           	opt stack 0
  3298  000A46                     _writePong:
  3299                           	opt stack 24
  3300                           
  3301                           ;main.c: 148: off(_ball.bPos[1], _ball.bPos[0]);
  3302                           
  3303                           ;incstack = 0
  3304  000A46  C1C6  F001         	movff	__ball,off@row
  3305  000A4A  0101               	movlb	1	; () banked
  3306  000A4C  51C7               	movf	(__ball+1)& (0+255),w,b
  3307  000A4E  EC1F  F008         	call	_off
  3308                           
  3309                           ;main.c: 149: _ball.bPos[0] = _nextPos[0];
  3310  000A52  C1C9  F1C6         	movff	__nextPos,__ball
  3311                           
  3312                           ;main.c: 150: _ball.bPos[1] = _nextPos[1];
  3313  000A56  C1CA  F1C7         	movff	__nextPos+1,__ball+1
  3314                           
  3315                           ;main.c: 151: on(_ball.bPos[1], _ball.bPos[0]);
  3316  000A5A  C1C6  F001         	movff	__ball,i2on@row
  3317  000A5E  0101               	movlb	1	; () banked
  3318  000A60  51C7               	movf	(__ball+1)& (0+255),w,b
  3319  000A62  EC3D  F008         	call	i2_on
  3320                           
  3321                           ;main.c: 154: off(_p1.paddlePosOld[0], 0);
  3322  000A66  0E00               	movlw	0
  3323  000A68  6E01               	movwf	off@row,c
  3324  000A6A  0101               	movlb	1	; () banked
  3325  000A6C  51BC               	movf	__p1& (0+255),w,b
  3326  000A6E  EC1F  F008         	call	_off
  3327                           
  3328                           ;main.c: 155: off(_p1.paddlePosOld[1], 0);
  3329  000A72  0E00               	movlw	0
  3330  000A74  6E01               	movwf	off@row,c
  3331  000A76  0101               	movlb	1	; () banked
  3332  000A78  51BD               	movf	(__p1+1)& (0+255),w,b
  3333  000A7A  EC1F  F008         	call	_off
  3334                           
  3335                           ;main.c: 157: off(_p2.paddlePosOld[0], 15);
  3336  000A7E  0E0F               	movlw	15
  3337  000A80  6E01               	movwf	off@row,c
  3338  000A82  0101               	movlb	1	; () banked
  3339  000A84  51C1               	movf	__p2& (0+255),w,b
  3340  000A86  EC1F  F008         	call	_off
  3341                           
  3342                           ;main.c: 158: off(_p2.paddlePosOld[1], 15);
  3343  000A8A  0E0F               	movlw	15
  3344  000A8C  6E01               	movwf	off@row,c
  3345  000A8E  0101               	movlb	1	; () banked
  3346  000A90  51C2               	movf	(__p2+1)& (0+255),w,b
  3347  000A92  EC1F  F008         	call	_off
  3348                           
  3349                           ;main.c: 160: on(_p1.paddlePos[0], 0);
  3350  000A96  0E00               	movlw	0
  3351  000A98  6E01               	movwf	i2on@row,c
  3352  000A9A  0101               	movlb	1	; () banked
  3353  000A9C  51BE               	movf	(__p1+2)& (0+255),w,b
  3354  000A9E  EC3D  F008         	call	i2_on
  3355                           
  3356                           ;main.c: 161: on(_p1.paddlePos[1], 0);
  3357  000AA2  0E00               	movlw	0
  3358  000AA4  6E01               	movwf	i2on@row,c
  3359  000AA6  0101               	movlb	1	; () banked
  3360  000AA8  51BF               	movf	(__p1+3)& (0+255),w,b
  3361  000AAA  EC3D  F008         	call	i2_on
  3362                           
  3363                           ;main.c: 162: on(_p2.paddlePos[0], 15);
  3364  000AAE  0E0F               	movlw	15
  3365  000AB0  6E01               	movwf	i2on@row,c
  3366  000AB2  0101               	movlb	1	; () banked
  3367  000AB4  51C3               	movf	(__p2+2)& (0+255),w,b
  3368  000AB6  EC3D  F008         	call	i2_on
  3369                           
  3370                           ;main.c: 163: on(_p2.paddlePos[1], 15);
  3371  000ABA  0E0F               	movlw	15
  3372  000ABC  6E01               	movwf	i2on@row,c
  3373  000ABE  0101               	movlb	1	; () banked
  3374  000AC0  51C4               	movf	(__p2+3)& (0+255),w,b
  3375  000AC2  EC3D  F008         	call	i2_on
  3376  000AC6  0012               	return		;funcret
  3377  000AC8                     __end_of_writePong:
  3378                           	opt stack 0
  3379                           pclatu	equ	0xFFB
  3380                           pclath	equ	0xFFA
  3381                           tblptru	equ	0xFF8
  3382                           tblptrh	equ	0xFF7
  3383                           tblptrl	equ	0xFF6
  3384                           tablat	equ	0xFF5
  3385                           prodh	equ	0xFF4
  3386                           prodl	equ	0xFF3
  3387                           intcon	equ	0xFF2
  3388                           postinc0	equ	0xFEE
  3389                           fsr0h	equ	0xFEA
  3390                           fsr0l	equ	0xFE9
  3391                           wreg	equ	0xFE8
  3392                           postdec1	equ	0xFE5
  3393                           plusw1	equ	0xFE3
  3394                           fsr1h	equ	0xFE2
  3395                           fsr1l	equ	0xFE1
  3396                           indf2	equ	0xFDF
  3397                           postinc2	equ	0xFDE
  3398                           plusw2	equ	0xFDB
  3399                           fsr2h	equ	0xFDA
  3400                           fsr2l	equ	0xFD9
  3401                           status	equ	0xFD8
  3402                           
  3403 ;; *************** function _off *****************
  3404 ;; Defined at:
  3405 ;;		line 68 in file "Source/LED-API.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  column          1    wreg     unsigned char 
  3408 ;;  row             1    0[COMRAM] unsigned char 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  column          1    3[COMRAM] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3420 ;;      Params:         1       0       0       0       0       0       0
  3421 ;;      Locals:         1       0       0       0       0       0       0
  3422 ;;      Temps:          2       0       0       0       0       0       0
  3423 ;;      Totals:         4       0       0       0       0       0       0
  3424 ;;Total ram usage:        4 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_writePong
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text16
  3434  00103E                     __ptext16:
  3435                           	opt stack 0
  3436  00103E                     _off:
  3437                           	opt stack 24
  3438                           
  3439                           ;incstack = 0
  3440                           ;off@column stored from wreg
  3441  00103E  6E04               	movwf	off@column,c
  3442                           
  3443                           ;LED-API.c: 70: if (row < 0 || row > 16)
  3444  001040  0E10               	movlw	16
  3445  001042  6401               	cpfsgt	off@row,c
  3446  001044  D001               	goto	i2l2035
  3447  001046  0012               	return	
  3448  001048                     i2l2035:
  3449                           
  3450                           ;LED-API.c: 72: if (column < 0 || column > 8)
  3451  001048  0E08               	movlw	8
  3452  00104A  6404               	cpfsgt	off@column,c
  3453  00104C  D001               	goto	i2l2039
  3454  00104E  0012               	return	
  3455  001050                     i2l2039:
  3456                           
  3457                           ;LED-API.c: 75: pixels[column][row] = 0;
  3458  001050  5004               	movf	off@column,w,c
  3459  001052  0D10               	mullw	16
  3460  001054  0E00               	movlw	low _pixels
  3461  001056  6E02               	movwf	??_off& (0+255),c
  3462  001058  0E03               	movlw	high _pixels
  3463  00105A  6E03               	movwf	(??_off+1)& (0+255),c
  3464  00105C  50F3               	movf	prodl,w,c
  3465  00105E  2602               	addwf	??_off,f,c
  3466  001060  50F4               	movf	prodh,w,c
  3467  001062  2203               	addwfc	??_off+1,f,c
  3468  001064  5001               	movf	off@row,w,c
  3469  001066  0D01               	mullw	1
  3470  001068  50F3               	movf	prodl,w,c
  3471  00106A  2402               	addwf	??_off,w,c
  3472  00106C  6ED9               	movwf	fsr2l,c
  3473  00106E  50F4               	movf	prodh,w,c
  3474  001070  2003               	addwfc	??_off+1,w,c
  3475  001072  6EDA               	movwf	fsr2h,c
  3476  001074  0E00               	movlw	0
  3477  001076  6EDF               	movwf	indf2,c
  3478  001078  0012               	return		;funcret
  3479  00107A                     __end_of_off:
  3480                           	opt stack 0
  3481                           pclatu	equ	0xFFB
  3482                           pclath	equ	0xFFA
  3483                           tblptru	equ	0xFF8
  3484                           tblptrh	equ	0xFF7
  3485                           tblptrl	equ	0xFF6
  3486                           tablat	equ	0xFF5
  3487                           prodh	equ	0xFF4
  3488                           prodl	equ	0xFF3
  3489                           intcon	equ	0xFF2
  3490                           postinc0	equ	0xFEE
  3491                           fsr0h	equ	0xFEA
  3492                           fsr0l	equ	0xFE9
  3493                           wreg	equ	0xFE8
  3494                           postdec1	equ	0xFE5
  3495                           plusw1	equ	0xFE3
  3496                           fsr1h	equ	0xFE2
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           postinc2	equ	0xFDE
  3500                           plusw2	equ	0xFDB
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function _checkNextPosition *****************
  3506 ;; Defined at:
  3507 ;;		line 197 in file "main.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3521 ;;      Params:         0       0       0       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    4
  3528 ;; This function calls:
  3529 ;;		_getNextPosition
  3530 ;;		i2_drawSymbol
  3531 ;;		i2_initializePong
  3532 ;;		i2_startPong
  3533 ;; This function is called by:
  3534 ;;		_ISR
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text17
  3539  0005F8                     __ptext17:
  3540                           	opt stack 0
  3541  0005F8                     _checkNextPosition:
  3542                           	opt stack 21
  3543                           
  3544                           ;main.c: 199: getNextPosition();
  3545                           
  3546                           ;incstack = 0
  3547  0005F8  ECDF  F004         	call	_getNextPosition	;wreg free
  3548                           
  3549                           ;main.c: 200: if(_nextPos[0] == 0)
  3550  0005FC  0101               	movlb	1	; () banked
  3551  0005FE  51C9               	movf	__nextPos& (0+255),w,b
  3552  000600  A4D8               	btfss	status,2,c
  3553  000602  D047               	goto	i2l2767
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;main.c: 201: {
  3557                           ;main.c: 202: if(_p1.paddlePos[0] == _nextPos[1])
  3558  000604  0101               	movlb	1	; () banked
  3559  000606  51CA               	movf	(__nextPos+1)& (0+255),w,b
  3560  000608  0101               	movlb	1	; () banked
  3561  00060A  19BE               	xorwf	(__p1+2)& (0+255),w,b
  3562  00060C  B4D8               	btfsc	status,2,c
  3563  00060E  D007               	goto	i2l2733
  3564  000610  D014               	goto	i2l2741
  3565  000612                     i2l2729:
  3566                           
  3567                           ; BSR set to: 1
  3568                           ;main.c: 212: _ball.bDirection = 1;
  3569  000612  0E01               	movlw	1
  3570  000614  D001               	goto	L2
  3571  000616                     i2l2731:
  3572                           
  3573                           ; BSR set to: 1
  3574                           ;main.c: 215: _ball.bDirection = 2;
  3575  000616  0E02               	movlw	2
  3576  000618                     L2:
  3577  000618  0101               	movlb	1	; () banked
  3578  00061A  6FC8               	movwf	(__ball+2)& (0+255),b
  3579                           
  3580                           ;main.c: 216: }
  3581  00061C  D00B               	goto	i2l2735
  3582  00061E                     i2l2733:
  3583                           
  3584                           ; BSR set to: 1
  3585  00061E  0101               	movlb	1	; () banked
  3586  000620  51C8               	movf	(__ball+2)& (0+255),w,b
  3587                           
  3588                           ; Switch size 1, requested type "space"
  3589                           ; Number of cases is 3, Range of values is 4 to 6
  3590                           ; switch strategies available:
  3591                           ; Name         Instructions Cycles
  3592                           ; simple_byte           10     6 (average)
  3593                           ;	Chosen strategy is simple_byte
  3594  000622  0A04               	xorlw	4	; case 4
  3595  000624  B4D8               	btfsc	status,2,c
  3596  000626  D7F7               	goto	i2l2731
  3597  000628  0A01               	xorlw	1	; case 5
  3598  00062A  B4D8               	btfsc	status,2,c
  3599  00062C  D7F2               	goto	i2l2729
  3600  00062E  0A03               	xorlw	3	; case 6
  3601  000630  B4D8               	btfsc	status,2,c
  3602  000632  D7F1               	goto	i2l2731
  3603  000634                     i2l2735:
  3604                           
  3605                           ; BSR set to: 1
  3606                           ;main.c: 217: getNextPosition();
  3607  000634  ECDF  F004         	call	_getNextPosition	;wreg free
  3608                           
  3609                           ;main.c: 218: return;
  3610  000638  0012               	return	
  3611  00063A                     i2l2741:
  3612                           
  3613                           ;main.c: 220: else if(_p1.paddlePos[1] == _nextPos[1])
  3614  00063A  0101               	movlb	1	; () banked
  3615  00063C  51CA               	movf	(__nextPos+1)& (0+255),w,b
  3616  00063E  0101               	movlb	1	; () banked
  3617  000640  19BF               	xorwf	(__p1+3)& (0+255),w,b
  3618  000642  B4D8               	btfsc	status,2,c
  3619  000644  D007               	goto	i2l2753
  3620  000646  D014               	goto	i2l2759
  3621  000648                     i2l2745:
  3622                           
  3623                           ; BSR set to: 1
  3624                           ;main.c: 227: _ball.bDirection = 1;
  3625  000648  0E01               	movlw	1
  3626  00064A                     L3:
  3627  00064A  0101               	movlb	1	; () banked
  3628  00064C  6FC8               	movwf	(__ball+2)& (0+255),b
  3629                           
  3630                           ;main.c: 231: break;
  3631  00064E  D00D               	goto	i2l2755
  3632  000650                     i2l2749:
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;main.c: 233: _ball.bDirection = 3;
  3636  000650  0E03               	movlw	3
  3637  000652  D7FB               	goto	L3
  3638  000654                     i2l2753:
  3639                           
  3640                           ; BSR set to: 1
  3641  000654  0101               	movlb	1	; () banked
  3642  000656  51C8               	movf	(__ball+2)& (0+255),w,b
  3643                           
  3644                           ; Switch size 1, requested type "space"
  3645                           ; Number of cases is 3, Range of values is 4 to 6
  3646                           ; switch strategies available:
  3647                           ; Name         Instructions Cycles
  3648                           ; simple_byte           10     6 (average)
  3649                           ;	Chosen strategy is simple_byte
  3650  000658  0A04               	xorlw	4	; case 4
  3651  00065A  B4D8               	btfsc	status,2,c
  3652  00065C  D7F5               	goto	i2l2745
  3653  00065E  0A01               	xorlw	1	; case 5
  3654  000660  B4D8               	btfsc	status,2,c
  3655  000662  D7F6               	goto	i2l2749
  3656  000664  0A03               	xorlw	3	; case 6
  3657  000666  B4D8               	btfsc	status,2,c
  3658  000668  D7F3               	goto	i2l2749
  3659  00066A                     i2l2755:
  3660                           
  3661                           ; BSR set to: 1
  3662                           ;main.c: 236: getNextPosition();
  3663  00066A  ECDF  F004         	call	_getNextPosition	;wreg free
  3664                           
  3665                           ;main.c: 237: return;
  3666  00066E  0012               	return	
  3667  000670                     i2l2759:
  3668                           
  3669                           ;main.c: 238: }
  3670                           ;main.c: 241: _p1.lives--;
  3671  000670  0101               	movlb	1	; () banked
  3672  000672  07C0               	decf	(__p1+4)& (0+255),f,b
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;main.c: 242: if(_p1.lives == 0)
  3676  000674  0101               	movlb	1	; () banked
  3677  000676  51C0               	movf	(__p1+4)& (0+255),w,b
  3678  000678  A4D8               	btfss	status,2,c
  3679  00067A  D008               	goto	i2l2765
  3680                           
  3681                           ; BSR set to: 1
  3682                           ;main.c: 243: {
  3683                           ;main.c: 245: drawSymbol(7, 8);
  3684  00067C  0E08               	movlw	8
  3685  00067E  6E05               	movwf	i2drawSymbol@offSetX,c
  3686  000680  0E07               	movlw	7
  3687  000682  EC8C  F001         	call	i2_drawSymbol
  3688                           
  3689                           ;main.c: 248: initializePong();
  3690  000686  ECC1  F008         	call	i2_initializePong	;wreg free
  3691                           
  3692                           ;main.c: 249: }
  3693  00068A  0012               	return	
  3694  00068C                     i2l2765:
  3695                           
  3696                           ;main.c: 250: else
  3697                           ;main.c: 251: {
  3698                           ;main.c: 252: startPong();
  3699  00068C  EC20  F007         	call	i2_startPong	;wreg free
  3700                           
  3701                           ;main.c: 253: }
  3702                           ;main.c: 254: }
  3703  000690  0012               	return	
  3704  000692                     i2l2767:
  3705                           
  3706                           ;main.c: 255: else if(_nextPos[0] == 15)
  3707  000692  0E0F               	movlw	15
  3708  000694  0101               	movlb	1	; () banked
  3709  000696  19C9               	xorwf	__nextPos& (0+255),w,b
  3710  000698  A4D8               	btfss	status,2,c
  3711  00069A  D049               	goto	i2l2815
  3712                           
  3713                           ; BSR set to: 1
  3714                           ;main.c: 256: {
  3715                           ;main.c: 257: if(_p2.paddlePos[0] == _nextPos[1])
  3716  00069C  0101               	movlb	1	; () banked
  3717  00069E  51CA               	movf	(__nextPos+1)& (0+255),w,b
  3718  0006A0  0101               	movlb	1	; () banked
  3719  0006A2  19C3               	xorwf	(__p2+2)& (0+255),w,b
  3720  0006A4  B4D8               	btfsc	status,2,c
  3721  0006A6  D009               	goto	i2l2781
  3722  0006A8  D016               	goto	i2l2789
  3723  0006AA                     i2l2773:
  3724                           
  3725                           ; BSR set to: 1
  3726                           ;main.c: 263: _ball.bDirection = 4;
  3727  0006AA  0E04               	movlw	4
  3728  0006AC  D003               	goto	L5
  3729  0006AE                     i2l2775:
  3730                           
  3731                           ; BSR set to: 1
  3732                           ;main.c: 266: _ball.bDirection = 6;
  3733  0006AE  0E06               	movlw	6
  3734  0006B0  D001               	goto	L5
  3735  0006B2                     i2l2777:
  3736                           
  3737                           ; BSR set to: 1
  3738                           ;main.c: 269: _ball.bDirection = 5;
  3739  0006B2  0E05               	movlw	5
  3740  0006B4                     L5:
  3741  0006B4  0101               	movlb	1	; () banked
  3742  0006B6  6FC8               	movwf	(__ball+2)& (0+255),b
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;main.c: 271: }
  3746                           
  3747                           ;main.c: 270: break;
  3748  0006B8  D00B               	goto	i2l2783
  3749  0006BA                     i2l2781:
  3750                           
  3751                           ; BSR set to: 1
  3752  0006BA  0101               	movlb	1	; () banked
  3753  0006BC  51C8               	movf	(__ball+2)& (0+255),w,b
  3754                           
  3755                           ; Switch size 1, requested type "space"
  3756                           ; Number of cases is 3, Range of values is 1 to 3
  3757                           ; switch strategies available:
  3758                           ; Name         Instructions Cycles
  3759                           ; simple_byte           10     6 (average)
  3760                           ;	Chosen strategy is simple_byte
  3761  0006BE  0A01               	xorlw	1	; case 1
  3762  0006C0  B4D8               	btfsc	status,2,c
  3763  0006C2  D7F3               	goto	i2l2773
  3764  0006C4  0A03               	xorlw	3	; case 2
  3765  0006C6  B4D8               	btfsc	status,2,c
  3766  0006C8  D7F2               	goto	i2l2775
  3767  0006CA  0A01               	xorlw	1	; case 3
  3768  0006CC  B4D8               	btfsc	status,2,c
  3769  0006CE  D7F1               	goto	i2l2777
  3770  0006D0                     i2l2783:
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;main.c: 272: getNextPosition();
  3774  0006D0  ECDF  F004         	call	_getNextPosition	;wreg free
  3775                           
  3776                           ;main.c: 273: return;
  3777  0006D4  0012               	return	
  3778  0006D6                     i2l2789:
  3779                           
  3780                           ;main.c: 275: else if( _p2.paddlePos[1] == _nextPos[1])
  3781  0006D6  0101               	movlb	1	; () banked
  3782  0006D8  51CA               	movf	(__nextPos+1)& (0+255),w,b
  3783  0006DA  0101               	movlb	1	; () banked
  3784  0006DC  19C4               	xorwf	(__p2+3)& (0+255),w,b
  3785  0006DE  B4D8               	btfsc	status,2,c
  3786  0006E0  D007               	goto	i2l2801
  3787  0006E2  D014               	goto	i2l2807
  3788  0006E4                     i2l2795:
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;main.c: 284: _ball.bDirection = 4;
  3792  0006E4  0E04               	movlw	4
  3793  0006E6  D001               	goto	L6
  3794  0006E8                     i2l2797:
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;main.c: 287: _ball.bDirection = 6;
  3798  0006E8  0E06               	movlw	6
  3799  0006EA                     L6:
  3800  0006EA  0101               	movlb	1	; () banked
  3801  0006EC  6FC8               	movwf	(__ball+2)& (0+255),b
  3802                           
  3803                           ; BSR set to: 1
  3804                           ;main.c: 289: }
  3805                           
  3806                           ;main.c: 288: break;
  3807  0006EE  D00B               	goto	i2l2803
  3808  0006F0                     i2l2801:
  3809                           
  3810                           ; BSR set to: 1
  3811  0006F0  0101               	movlb	1	; () banked
  3812  0006F2  51C8               	movf	(__ball+2)& (0+255),w,b
  3813                           
  3814                           ; Switch size 1, requested type "space"
  3815                           ; Number of cases is 3, Range of values is 1 to 3
  3816                           ; switch strategies available:
  3817                           ; Name         Instructions Cycles
  3818                           ; simple_byte           10     6 (average)
  3819                           ;	Chosen strategy is simple_byte
  3820  0006F4  0A01               	xorlw	1	; case 1
  3821  0006F6  B4D8               	btfsc	status,2,c
  3822  0006F8  D7F5               	goto	i2l2795
  3823  0006FA  0A03               	xorlw	3	; case 2
  3824  0006FC  B4D8               	btfsc	status,2,c
  3825  0006FE  D7F2               	goto	i2l2795
  3826  000700  0A01               	xorlw	1	; case 3
  3827  000702  B4D8               	btfsc	status,2,c
  3828  000704  D7F1               	goto	i2l2797
  3829  000706                     i2l2803:
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;main.c: 290: getNextPosition();
  3833  000706  ECDF  F004         	call	_getNextPosition	;wreg free
  3834                           
  3835                           ;main.c: 291: return;
  3836  00070A  0012               	return	
  3837  00070C                     i2l2807:
  3838                           
  3839                           ;main.c: 292: }
  3840                           ;main.c: 294: _p2.lives--;
  3841  00070C  0101               	movlb	1	; () banked
  3842  00070E  07C5               	decf	(__p2+4)& (0+255),f,b
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;main.c: 295: if(_p2.lives == 0)
  3846  000710  0101               	movlb	1	; () banked
  3847  000712  51C5               	movf	(__p2+4)& (0+255),w,b
  3848  000714  A4D8               	btfss	status,2,c
  3849  000716  D008               	goto	i2l2813
  3850                           
  3851                           ; BSR set to: 1
  3852                           ;main.c: 296: {
  3853                           ;main.c: 298: drawSymbol(6, 0);
  3854  000718  0E00               	movlw	0
  3855  00071A  6E05               	movwf	i2drawSymbol@offSetX,c
  3856  00071C  0E06               	movlw	6
  3857  00071E  EC8C  F001         	call	i2_drawSymbol
  3858                           
  3859                           ;main.c: 301: initializePong();
  3860  000722  ECC1  F008         	call	i2_initializePong	;wreg free
  3861                           
  3862                           ;main.c: 302: }
  3863  000726  0012               	return	
  3864  000728                     i2l2813:
  3865                           
  3866                           ;main.c: 303: else
  3867                           ;main.c: 304: {
  3868                           ;main.c: 305: startPong();
  3869  000728  EC20  F007         	call	i2_startPong	;wreg free
  3870                           
  3871                           ;main.c: 306: }
  3872                           ;main.c: 307: }
  3873  00072C  0012               	return	
  3874  00072E                     i2l2815:
  3875                           
  3876                           ;main.c: 308: else if(_nextPos[1] < 0 || _nextPos[1] > 7)
  3877  00072E  0E07               	movlw	7
  3878  000730  0101               	movlb	1	; () banked
  3879  000732  65CA               	cpfsgt	(__nextPos+1)& (0+255),b
  3880  000734  0012               	return	
  3881  000736  D00A               	goto	i2l2829
  3882  000738                     i2l2819:
  3883                           
  3884                           ; BSR set to: 1
  3885                           ;main.c: 313: _ball.bDirection = 3;
  3886  000738  0E03               	movlw	3
  3887  00073A  D005               	goto	L9
  3888  00073C                     i2l2821:
  3889                           
  3890                           ; BSR set to: 1
  3891                           ;main.c: 316: _ball.bDirection = 1;
  3892  00073C  0E01               	movlw	1
  3893  00073E  D003               	goto	L9
  3894  000740                     i2l2823:
  3895                           
  3896                           ; BSR set to: 1
  3897                           ;main.c: 319: _ball.bDirection = 6;
  3898  000740  0E06               	movlw	6
  3899  000742  D001               	goto	L9
  3900  000744                     i2l2825:
  3901                           
  3902                           ; BSR set to: 1
  3903                           ;main.c: 322: _ball.bDirection = 4;
  3904  000744  0E04               	movlw	4
  3905  000746                     L9:
  3906  000746  0101               	movlb	1	; () banked
  3907  000748  6FC8               	movwf	(__ball+2)& (0+255),b
  3908                           
  3909                           ; BSR set to: 1
  3910                           ;main.c: 324: }
  3911                           
  3912                           ;main.c: 323: break;
  3913  00074A  D00E               	goto	i2l2831
  3914  00074C                     i2l2829:
  3915                           
  3916                           ; BSR set to: 1
  3917  00074C  0101               	movlb	1	; () banked
  3918  00074E  51C8               	movf	(__ball+2)& (0+255),w,b
  3919                           
  3920                           ; Switch size 1, requested type "space"
  3921                           ; Number of cases is 4, Range of values is 1 to 6
  3922                           ; switch strategies available:
  3923                           ; Name         Instructions Cycles
  3924                           ; simple_byte           13     7 (average)
  3925                           ;	Chosen strategy is simple_byte
  3926  000750  0A01               	xorlw	1	; case 1
  3927  000752  B4D8               	btfsc	status,2,c
  3928  000754  D7F1               	goto	i2l2819
  3929  000756  0A02               	xorlw	2	; case 3
  3930  000758  B4D8               	btfsc	status,2,c
  3931  00075A  D7F0               	goto	i2l2821
  3932  00075C  0A07               	xorlw	7	; case 4
  3933  00075E  B4D8               	btfsc	status,2,c
  3934  000760  D7EF               	goto	i2l2823
  3935  000762  0A02               	xorlw	2	; case 6
  3936  000764  B4D8               	btfsc	status,2,c
  3937  000766  D7EE               	goto	i2l2825
  3938  000768                     i2l2831:
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;main.c: 325: getNextPosition();
  3942  000768  ECDF  F004         	call	_getNextPosition	;wreg free
  3943                           
  3944                           ;main.c: 326: return;
  3945  00076C  0012               	return	
  3946  00076E                     __end_of_checkNextPosition:
  3947                           	opt stack 0
  3948                           pclatu	equ	0xFFB
  3949                           pclath	equ	0xFFA
  3950                           tblptru	equ	0xFF8
  3951                           tblptrh	equ	0xFF7
  3952                           tblptrl	equ	0xFF6
  3953                           tablat	equ	0xFF5
  3954                           prodh	equ	0xFF4
  3955                           prodl	equ	0xFF3
  3956                           intcon	equ	0xFF2
  3957                           postinc0	equ	0xFEE
  3958                           fsr0h	equ	0xFEA
  3959                           fsr0l	equ	0xFE9
  3960                           wreg	equ	0xFE8
  3961                           postdec1	equ	0xFE5
  3962                           plusw1	equ	0xFE3
  3963                           fsr1h	equ	0xFE2
  3964                           fsr1l	equ	0xFE1
  3965                           indf2	equ	0xFDF
  3966                           postinc2	equ	0xFDE
  3967                           plusw2	equ	0xFDB
  3968                           fsr2h	equ	0xFDA
  3969                           fsr2l	equ	0xFD9
  3970                           status	equ	0xFD8
  3971                           
  3972 ;; *************** function i2_initializePong *****************
  3973 ;; Defined at:
  3974 ;;		line 87 in file "main.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3988 ;;      Params:         0       0       0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    3
  3995 ;; This function calls:
  3996 ;;		i2_startPong
  3997 ;; This function is called by:
  3998 ;;		_checkNextPosition
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text18
  4003  001182                     __ptext18:
  4004                           	opt stack 0
  4005  001182                     i2_initializePong:
  4006                           	opt stack 21
  4007                           
  4008                           ;main.c: 92: _p1.lives = 3;
  4009                           
  4010                           ;incstack = 0
  4011  001182  0E03               	movlw	3
  4012  001184  0101               	movlb	1	; () banked
  4013  001186  6FC0               	movwf	(__p1+4)& (0+255),b
  4014                           
  4015                           ;main.c: 93: _p2.lives = 3;
  4016  001188  0E03               	movlw	3
  4017  00118A  0101               	movlb	1	; () banked
  4018  00118C  6FC5               	movwf	(__p2+4)& (0+255),b
  4019                           
  4020                           ; BSR set to: 1
  4021                           ;main.c: 95: startPong();
  4022  00118E  EC20  F007         	call	i2_startPong	;wreg free
  4023                           
  4024                           ;main.c: 98: TMR0ON = 1;
  4025  001192  8ED5               	bsf	4053,7,c	;volatile
  4026  001194  0012               	return		;funcret
  4027  001196                     __end_ofi2_initializePong:
  4028                           	opt stack 0
  4029                           pclatu	equ	0xFFB
  4030                           pclath	equ	0xFFA
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon	equ	0xFF2
  4038                           postinc0	equ	0xFEE
  4039                           fsr0h	equ	0xFEA
  4040                           fsr0l	equ	0xFE9
  4041                           wreg	equ	0xFE8
  4042                           postdec1	equ	0xFE5
  4043                           plusw1	equ	0xFE3
  4044                           fsr1h	equ	0xFE2
  4045                           fsr1l	equ	0xFE1
  4046                           indf2	equ	0xFDF
  4047                           postinc2	equ	0xFDE
  4048                           plusw2	equ	0xFDB
  4049                           fsr2h	equ	0xFDA
  4050                           fsr2l	equ	0xFD9
  4051                           status	equ	0xFD8
  4052                           
  4053 ;; *************** function i2_startPong *****************
  4054 ;; Defined at:
  4055 ;;		line 58 in file "main.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4069 ;;      Params:         0       0       0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0
  4072 ;;      Totals:         0       0       0       0       0       0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    2
  4076 ;; This function calls:
  4077 ;;		i2_delaySeconds
  4078 ;;		i2_drawSymbol
  4079 ;;		i2_refresh
  4080 ;;		i2_turnAllOff
  4081 ;; This function is called by:
  4082 ;;		_checkNextPosition
  4083 ;;		i2_initializePong
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text19
  4088  000E40                     __ptext19:
  4089                           	opt stack 0
  4090  000E40                     i2_startPong:
  4091                           	opt stack 22
  4092                           
  4093                           ;main.c: 61: turnAllOff();
  4094                           
  4095                           ;incstack = 0
  4096  000E40  EC97  F007         	call	i2_turnAllOff	;wreg free
  4097                           
  4098                           ;main.c: 62: drawSymbol(_p1.lives, 0);
  4099  000E44  0E00               	movlw	0
  4100  000E46  6E05               	movwf	i2drawSymbol@offSetX,c
  4101  000E48  0101               	movlb	1	; () banked
  4102  000E4A  51C0               	movf	(__p1+4)& (0+255),w,b
  4103  000E4C  EC8C  F001         	call	i2_drawSymbol
  4104                           
  4105                           ;main.c: 63: drawSymbol(_p2.lives, 8);
  4106  000E50  0E08               	movlw	8
  4107  000E52  6E05               	movwf	i2drawSymbol@offSetX,c
  4108  000E54  0101               	movlb	1	; () banked
  4109  000E56  51C5               	movf	(__p2+4)& (0+255),w,b
  4110  000E58  EC8C  F001         	call	i2_drawSymbol
  4111                           
  4112                           ;main.c: 64: while(!delaySeconds(2))
  4113  000E5C  D002               	goto	i2l2665
  4114  000E5E                     i2l2663:
  4115                           
  4116                           ;main.c: 65: {
  4117                           ;main.c: 66: refresh();
  4118  000E5E  ECDA  F005         	call	i2_refresh	;wreg free
  4119  000E62                     i2l2665:
  4120  000E62  0E00               	movlw	0
  4121  000E64  6E08               	movwf	i2delaySeconds@numberOfSeconds+1,c
  4122  000E66  0E02               	movlw	2
  4123  000E68  6E07               	movwf	i2delaySeconds@numberOfSeconds,c
  4124  000E6A  EC72  F007         	call	i2_delaySeconds	;wreg free
  4125  000E6E  A0D8               	btfss	status,0,c
  4126  000E70  D7F6               	goto	i2l2663
  4127                           
  4128                           ;main.c: 67: }
  4129                           ;main.c: 68: turnAllOff();
  4130  000E72  EC97  F007         	call	i2_turnAllOff	;wreg free
  4131                           
  4132                           ;main.c: 75: _ball.bDirection = 3;
  4133  000E76  0E03               	movlw	3
  4134  000E78  0101               	movlb	1	; () banked
  4135  000E7A  6FC8               	movwf	(__ball+2)& (0+255),b
  4136                           
  4137                           ; BSR set to: 1
  4138                           ;main.c: 77: _ball.bPos[0] = 2;
  4139  000E7C  0E02               	movlw	2
  4140  000E7E  0101               	movlb	1	; () banked
  4141  000E80  6FC6               	movwf	__ball& (0+255),b
  4142                           
  4143                           ; BSR set to: 1
  4144                           ;main.c: 79: _ball.bPos[1] = 4;
  4145  000E82  0E04               	movlw	4
  4146  000E84  0101               	movlb	1	; () banked
  4147  000E86  6FC7               	movwf	(__ball+1)& (0+255),b
  4148                           
  4149                           ; BSR set to: 1
  4150                           ;main.c: 82: _nextPos[0] = _ball.bPos[0];
  4151  000E88  C1C6  F1C9         	movff	__ball,__nextPos
  4152                           
  4153                           ; BSR set to: 1
  4154                           ;main.c: 83: _nextPos[1] = _ball.bPos[1];
  4155  000E8C  C1C7  F1CA         	movff	__ball+1,__nextPos+1
  4156                           
  4157                           ; BSR set to: 1
  4158  000E90  0012               	return		;funcret
  4159  000E92                     __end_ofi2_startPong:
  4160                           	opt stack 0
  4161                           pclatu	equ	0xFFB
  4162                           pclath	equ	0xFFA
  4163                           tblptru	equ	0xFF8
  4164                           tblptrh	equ	0xFF7
  4165                           tblptrl	equ	0xFF6
  4166                           tablat	equ	0xFF5
  4167                           prodh	equ	0xFF4
  4168                           prodl	equ	0xFF3
  4169                           intcon	equ	0xFF2
  4170                           postinc0	equ	0xFEE
  4171                           fsr0h	equ	0xFEA
  4172                           fsr0l	equ	0xFE9
  4173                           wreg	equ	0xFE8
  4174                           postdec1	equ	0xFE5
  4175                           plusw1	equ	0xFE3
  4176                           fsr1h	equ	0xFE2
  4177                           fsr1l	equ	0xFE1
  4178                           indf2	equ	0xFDF
  4179                           postinc2	equ	0xFDE
  4180                           plusw2	equ	0xFDB
  4181                           fsr2h	equ	0xFDA
  4182                           fsr2l	equ	0xFD9
  4183                           status	equ	0xFD8
  4184                           
  4185 ;; *************** function i2_refresh *****************
  4186 ;; Defined at:
  4187 ;;		line 185 in file "Source/LED-API.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  refresh         1    7[COMRAM] unsigned char 
  4192 ;;  refresh         1    6[COMRAM] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4202 ;;      Params:         0       0       0       0       0       0       0
  4203 ;;      Locals:         2       0       0       0       0       0       0
  4204 ;;      Temps:          3       0       0       0       0       0       0
  4205 ;;      Totals:         5       0       0       0       0       0       0
  4206 ;;Total ram usage:        5 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    1
  4209 ;; This function calls:
  4210 ;;		i2_allOff
  4211 ;;		i2_setColHigh
  4212 ;;		i2_setRowHigh
  4213 ;; This function is called by:
  4214 ;;		i2_startPong
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text20
  4219  000BB4                     __ptext20:
  4220                           	opt stack 0
  4221  000BB4                     i2_refresh:
  4222                           	opt stack 22
  4223                           
  4224                           ;LED-API.c: 187: for (unsigned char theCol = 0; theCol < 8; theCol++) {
  4225                           
  4226                           ; BSR set to: 1
  4227                           ;incstack = 0
  4228  000BB4  0E00               	movlw	0
  4229  000BB6  6E07               	movwf	i2refresh@theCol,c
  4230  000BB8                     i2l1829:
  4231  000BB8  0E07               	movlw	7
  4232  000BBA  6407               	cpfsgt	i2refresh@theCol,c
  4233  000BBC  D001               	goto	i2l1833
  4234  000BBE  0012               	return	
  4235  000BC0                     i2l1833:
  4236                           
  4237                           ;LED-API.c: 189: for (unsigned char theRow = 0; theRow < 16; theRow++) {
  4238  000BC0  0E00               	movlw	0
  4239  000BC2  6E08               	movwf	i2refresh@theRow,c
  4240  000BC4                     i2l1835:
  4241  000BC4  0E0F               	movlw	15
  4242  000BC6  6408               	cpfsgt	i2refresh@theRow,c
  4243  000BC8  D001               	goto	i2l1839
  4244  000BCA  D01A               	goto	i2l1847
  4245  000BCC                     i2l1839:
  4246                           
  4247                           ;LED-API.c: 191: if (pixels[theCol][theRow] == 1)
  4248  000BCC  5007               	movf	i2refresh@theCol,w,c
  4249  000BCE  0D10               	mullw	16
  4250  000BD0  0E00               	movlw	low _pixels
  4251  000BD2  6E04               	movwf	??i2_refresh& (0+255),c
  4252  000BD4  0E03               	movlw	high _pixels
  4253  000BD6  6E05               	movwf	(??i2_refresh+1)& (0+255),c
  4254  000BD8  50F3               	movf	prodl,w,c
  4255  000BDA  2604               	addwf	??i2_refresh,f,c
  4256  000BDC  50F4               	movf	prodh,w,c
  4257  000BDE  2205               	addwfc	??i2_refresh+1,f,c
  4258  000BE0  5008               	movf	i2refresh@theRow,w,c
  4259  000BE2  0D01               	mullw	1
  4260  000BE4  50F3               	movf	prodl,w,c
  4261  000BE6  2404               	addwf	??i2_refresh,w,c
  4262  000BE8  6ED9               	movwf	fsr2l,c
  4263  000BEA  50F4               	movf	prodh,w,c
  4264  000BEC  2005               	addwfc	??i2_refresh+1,w,c
  4265  000BEE  6EDA               	movwf	fsr2h,c
  4266  000BF0  04DE               	decf	postinc2,w,c
  4267  000BF2  A4D8               	btfss	status,2,c
  4268  000BF4  D003               	goto	i2l1843
  4269                           
  4270                           ;LED-API.c: 192: setRowHigh(theRow);
  4271  000BF6  5008               	movf	i2refresh@theRow,w,c
  4272  000BF8  ECFF  F007         	call	i2_setRowHigh
  4273  000BFC                     i2l1843:
  4274  000BFC  2A08               	incf	i2refresh@theRow,f,c
  4275  000BFE  D7E2               	goto	i2l1835
  4276  000C00                     i2l1847:
  4277                           
  4278                           ;LED-API.c: 193: }
  4279                           ;LED-API.c: 197: setColHigh(theCol);
  4280  000C00  5007               	movf	i2refresh@theCol,w,c
  4281  000C02  EC9D  F008         	call	i2_setColHigh
  4282                           
  4283                           ;LED-API.c: 198: _delay((unsigned long)((500)*(32000000/4000000.0)));
  4284  000C06  0E06               	movlw	6
  4285  000C08  6E04               	movwf	??i2_refresh& (0+255),c
  4286  000C0A  0E30               	movlw	48
  4287  000C0C                     i2u286_47:
  4288  000C0C  2EE8               	decfsz	wreg,f,c
  4289  000C0E  D7FE               	goto	i2u286_47
  4290  000C10  2E04               	decfsz	??i2_refresh& (0+255),f,c
  4291  000C12  D7FC               	goto	i2u286_47
  4292  000C14  D000               	nop2	
  4293                           
  4294                           ;LED-API.c: 199: allOff();
  4295  000C16  ECDB  F008         	call	i2_allOff	;wreg free
  4296  000C1A  2A07               	incf	i2refresh@theCol,f,c
  4297  000C1C  D7CD               	goto	i2l1829
  4298  000C1E                     __end_ofi2_refresh:
  4299                           	opt stack 0
  4300                           pclatu	equ	0xFFB
  4301                           pclath	equ	0xFFA
  4302                           tblptru	equ	0xFF8
  4303                           tblptrh	equ	0xFF7
  4304                           tblptrl	equ	0xFF6
  4305                           tablat	equ	0xFF5
  4306                           prodh	equ	0xFF4
  4307                           prodl	equ	0xFF3
  4308                           intcon	equ	0xFF2
  4309                           postinc0	equ	0xFEE
  4310                           fsr0h	equ	0xFEA
  4311                           fsr0l	equ	0xFE9
  4312                           wreg	equ	0xFE8
  4313                           postdec1	equ	0xFE5
  4314                           plusw1	equ	0xFE3
  4315                           fsr1h	equ	0xFE2
  4316                           fsr1l	equ	0xFE1
  4317                           indf2	equ	0xFDF
  4318                           postinc2	equ	0xFDE
  4319                           plusw2	equ	0xFDB
  4320                           fsr2h	equ	0xFDA
  4321                           fsr2l	equ	0xFD9
  4322                           status	equ	0xFD8
  4323                           
  4324 ;; *************** function i2_setRowHigh *****************
  4325 ;; Defined at:
  4326 ;;		line 24 in file "Source/LED-API.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  row             1    wreg     unsigned char 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  row             1    2[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4340 ;;      Params:         0       0       0       0       0       0       0
  4341 ;;      Locals:         1       0       0       0       0       0       0
  4342 ;;      Temps:          2       0       0       0       0       0       0
  4343 ;;      Totals:         3       0       0       0       0       0       0
  4344 ;;Total ram usage:        3 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		i2_refresh
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text21
  4354  000FFE                     __ptext21:
  4355                           	opt stack 0
  4356  000FFE                     i2_setRowHigh:
  4357                           	opt stack 22
  4358                           
  4359                           ;incstack = 0
  4360                           ;i2setRowHigh@row stored from wreg
  4361  000FFE  6E03               	movwf	i2setRowHigh@row,c
  4362                           
  4363                           ;LED-API.c: 25: if(row < 8)
  4364  001000  0E08               	movlw	8
  4365  001002  6003               	cpfslt	i2setRowHigh@row,c
  4366  001004  D00D               	goto	i2l1639
  4367                           
  4368                           ;LED-API.c: 26: LATC |= (1 << row);
  4369  001006  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4370  00100A  0E01               	movlw	1
  4371  00100C  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4372  00100E  2A01               	incf	??i2_setRowHigh,f,c
  4373  001010  D002               	goto	i2u109_44
  4374  001012                     i2u109_45:
  4375  001012  90D8               	bcf	status,0,c
  4376  001014  3602               	rlcf	??i2_setRowHigh+1,f,c
  4377  001016                     i2u109_44:
  4378  001016  2E01               	decfsz	??i2_setRowHigh,f,c
  4379  001018  D7FC               	goto	i2u109_45
  4380  00101A  5002               	movf	??i2_setRowHigh+1,w,c
  4381  00101C  128B               	iorwf	3979,f,c	;volatile
  4382  00101E  0012               	return	
  4383  001020                     i2l1639:
  4384                           
  4385                           ;LED-API.c: 27: else
  4386                           ;LED-API.c: 28: LATD |= (1 << (row - 8));
  4387  001020  C003  F001         	movff	i2setRowHigh@row,??i2_setRowHigh
  4388  001024  0EF8               	movlw	-8
  4389  001026  2601               	addwf	??i2_setRowHigh,f,c
  4390  001028  0E01               	movlw	1
  4391  00102A  6E02               	movwf	(??i2_setRowHigh+1)& (0+255),c
  4392  00102C  2A01               	incf	??i2_setRowHigh,f,c
  4393  00102E  D002               	goto	i2u110_44
  4394  001030                     i2u110_45:
  4395  001030  90D8               	bcf	status,0,c
  4396  001032  3602               	rlcf	??i2_setRowHigh+1,f,c
  4397  001034                     i2u110_44:
  4398  001034  2E01               	decfsz	??i2_setRowHigh,f,c
  4399  001036  D7FC               	goto	i2u110_45
  4400  001038  5002               	movf	??i2_setRowHigh+1,w,c
  4401  00103A  128C               	iorwf	3980,f,c	;volatile
  4402  00103C  0012               	return	
  4403  00103E                     __end_ofi2_setRowHigh:
  4404                           	opt stack 0
  4405                           pclatu	equ	0xFFB
  4406                           pclath	equ	0xFFA
  4407                           tblptru	equ	0xFF8
  4408                           tblptrh	equ	0xFF7
  4409                           tblptrl	equ	0xFF6
  4410                           tablat	equ	0xFF5
  4411                           prodh	equ	0xFF4
  4412                           prodl	equ	0xFF3
  4413                           intcon	equ	0xFF2
  4414                           postinc0	equ	0xFEE
  4415                           fsr0h	equ	0xFEA
  4416                           fsr0l	equ	0xFE9
  4417                           wreg	equ	0xFE8
  4418                           postdec1	equ	0xFE5
  4419                           plusw1	equ	0xFE3
  4420                           fsr1h	equ	0xFE2
  4421                           fsr1l	equ	0xFE1
  4422                           indf2	equ	0xFDF
  4423                           postinc2	equ	0xFDE
  4424                           plusw2	equ	0xFDB
  4425                           fsr2h	equ	0xFDA
  4426                           fsr2l	equ	0xFD9
  4427                           status	equ	0xFD8
  4428                           
  4429 ;; *************** function i2_setColHigh *****************
  4430 ;; Defined at:
  4431 ;;		line 20 in file "Source/LED-API.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  column          1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  column          1    2[COMRAM] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4445 ;;      Params:         0       0       0       0       0       0       0
  4446 ;;      Locals:         1       0       0       0       0       0       0
  4447 ;;      Temps:          2       0       0       0       0       0       0
  4448 ;;      Totals:         3       0       0       0       0       0       0
  4449 ;;Total ram usage:        3 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		i2_refresh
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text22
  4459  00113A                     __ptext22:
  4460                           	opt stack 0
  4461  00113A                     i2_setColHigh:
  4462                           	opt stack 22
  4463                           
  4464                           ;incstack = 0
  4465                           ;i2setColHigh@column stored from wreg
  4466  00113A  6E03               	movwf	i2setColHigh@column,c
  4467                           
  4468                           ;LED-API.c: 21: LATA |= (1 << column);
  4469  00113C  C003  F001         	movff	i2setColHigh@column,??i2_setColHigh
  4470  001140  0E01               	movlw	1
  4471  001142  6E02               	movwf	(??i2_setColHigh+1)& (0+255),c
  4472  001144  2A01               	incf	??i2_setColHigh,f,c
  4473  001146  D002               	goto	i2u107_44
  4474  001148                     i2u107_45:
  4475  001148  90D8               	bcf	status,0,c
  4476  00114A  3602               	rlcf	??i2_setColHigh+1,f,c
  4477  00114C                     i2u107_44:
  4478  00114C  2E01               	decfsz	??i2_setColHigh,f,c
  4479  00114E  D7FC               	goto	i2u107_45
  4480  001150  5002               	movf	??i2_setColHigh+1,w,c
  4481  001152  1289               	iorwf	3977,f,c	;volatile
  4482  001154  0012               	return		;funcret
  4483  001156                     __end_ofi2_setColHigh:
  4484                           	opt stack 0
  4485                           pclatu	equ	0xFFB
  4486                           pclath	equ	0xFFA
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           postinc0	equ	0xFEE
  4495                           fsr0h	equ	0xFEA
  4496                           fsr0l	equ	0xFE9
  4497                           wreg	equ	0xFE8
  4498                           postdec1	equ	0xFE5
  4499                           plusw1	equ	0xFE3
  4500                           fsr1h	equ	0xFE2
  4501                           fsr1l	equ	0xFE1
  4502                           indf2	equ	0xFDF
  4503                           postinc2	equ	0xFDE
  4504                           plusw2	equ	0xFDB
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function i2_allOff *****************
  4510 ;; Defined at:
  4511 ;;		line 179 in file "Source/LED-API.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4525 ;;      Params:         0       0       0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0
  4528 ;;      Totals:         0       0       0       0       0       0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		i2_refresh
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text23
  4539  0011B6                     __ptext23:
  4540                           	opt stack 0
  4541  0011B6                     i2_allOff:
  4542                           	opt stack 22
  4543                           
  4544                           ;LED-API.c: 180: LATA = 0;
  4545                           
  4546                           ;incstack = 0
  4547  0011B6  0E00               	movlw	0
  4548  0011B8  6E89               	movwf	3977,c	;volatile
  4549                           
  4550                           ;LED-API.c: 181: LATC = 0;
  4551  0011BA  0E00               	movlw	0
  4552  0011BC  6E8B               	movwf	3979,c	;volatile
  4553                           
  4554                           ;LED-API.c: 182: LATD = 0;
  4555  0011BE  0E00               	movlw	0
  4556  0011C0  6E8C               	movwf	3980,c	;volatile
  4557  0011C2  0012               	return		;funcret
  4558  0011C4                     __end_ofi2_allOff:
  4559                           	opt stack 0
  4560                           pclatu	equ	0xFFB
  4561                           pclath	equ	0xFFA
  4562                           tblptru	equ	0xFF8
  4563                           tblptrh	equ	0xFF7
  4564                           tblptrl	equ	0xFF6
  4565                           tablat	equ	0xFF5
  4566                           prodh	equ	0xFF4
  4567                           prodl	equ	0xFF3
  4568                           intcon	equ	0xFF2
  4569                           postinc0	equ	0xFEE
  4570                           fsr0h	equ	0xFEA
  4571                           fsr0l	equ	0xFE9
  4572                           wreg	equ	0xFE8
  4573                           postdec1	equ	0xFE5
  4574                           plusw1	equ	0xFE3
  4575                           fsr1h	equ	0xFE2
  4576                           fsr1l	equ	0xFE1
  4577                           indf2	equ	0xFDF
  4578                           postinc2	equ	0xFDE
  4579                           plusw2	equ	0xFDB
  4580                           fsr2h	equ	0xFDA
  4581                           fsr2l	equ	0xFD9
  4582                           status	equ	0xFD8
  4583                           
  4584 ;; *************** function i2_drawSymbol *****************
  4585 ;; Defined at:
  4586 ;;		line 89 in file "Source/LED-API.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  chosenSymbol    1    wreg     unsigned char 
  4589 ;;  offSetX         1    4[COMRAM] unsigned char 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  chosenSymbol    1  103[COMRAM] unsigned char 
  4592 ;;  drawSymbol     68   30[BANK0 ] unsigned char [2][34]
  4593 ;;  drawSymbol     68    5[COMRAM] unsigned char [2][34]
  4594 ;;  drawSymbol     30    0[BANK0 ] unsigned char [2][15]
  4595 ;;  drawSymbol     30   73[COMRAM] unsigned char [2][15]
  4596 ;;  drawSymbol     28   98[BANK0 ] unsigned char [2][14]
  4597 ;;  drawSymbol     24   24[BANK1 ] unsigned char [2][12]
  4598 ;;  drawSymbol     24    0[BANK1 ] unsigned char [2][12]
  4599 ;;  drawSymbol      1   52[BANK1 ] unsigned char 
  4600 ;;  drawSymbol      1   51[BANK1 ] unsigned char 
  4601 ;;  drawSymbol      1   50[BANK1 ] unsigned char 
  4602 ;;  drawSymbol      1   49[BANK1 ] unsigned char 
  4603 ;;  drawSymbol      1   48[BANK1 ] unsigned char 
  4604 ;;  drawSymbol      1  127[BANK0 ] unsigned char 
  4605 ;;  drawSymbol      1  126[BANK0 ] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4615 ;;      Params:         1       0       0       0       0       0       0
  4616 ;;      Locals:        99     128      53       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0
  4618 ;;      Totals:       100     128      53       0       0       0       0
  4619 ;;Total ram usage:      281 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    1
  4622 ;; This function calls:
  4623 ;;		i2_on
  4624 ;;		i2_turnAllOff
  4625 ;; This function is called by:
  4626 ;;		_checkNextPosition
  4627 ;;		i2_startPong
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text24
  4632  000318                     __ptext24:
  4633                           	opt stack 0
  4634  000318                     i2_drawSymbol:
  4635                           	opt stack 22
  4636                           
  4637                           ;incstack = 0
  4638                           ;i2drawSymbol@chosenSymbol stored from wreg
  4639  000318  6E68               	movwf	i2drawSymbol@chosenSymbol,c
  4640                           
  4641                           ;LED-API.c: 91: char symbolOne[12][2] = {{2,5},{3,6},{4,7},{4,6},{4,5},{4,4},{4,3},{4,2}
      +                          ,{4,1},{4,0},{3,0},{5,0}};
  4642  00031A  EE21  F0A4         	lfsr	2,drawSymbol@F3226
  4643  00031E  EE11  F000         	lfsr	1,i2drawSymbol@symbolOne
  4644  000322  0E17               	movlw	23
  4645  000324                     i2u225_41:
  4646  000324  CFDB FFE3          	movff	plusw2,plusw1
  4647  000328  06E8               	decf	wreg,f,c
  4648  00032A  E2FC               	bc	i2u225_41
  4649                           
  4650                           ;LED-API.c: 92: char symbolTwo[14][2] = {{2,5},{3,6},{4,6},{5,6},{6,5},{6,4},{5,3},{4,2}
      +                          ,{3,1},{2,0},{3,0},{4,0},{5,0},{6,0}};
  4651  00032C  EE22  F0BA         	lfsr	2,drawSymbol@F3229
  4652  000330  EE10  F0E2         	lfsr	1,i2drawSymbol@symbolTwo
  4653  000334  0E1B               	movlw	27
  4654  000336                     i2u226_41:
  4655  000336  CFDB FFE3          	movff	plusw2,plusw1
  4656  00033A  06E8               	decf	wreg,f,c
  4657  00033C  E2FC               	bc	i2u226_41
  4658                           
  4659                           ;LED-API.c: 93: char symbolThree[12][2] = {{2,6},{3,7},{4,7},{5,6},{5,5},{4,4},{5,3},{5,
      +                          2},{5,1},{4,0},{3,0},{2,1}};
  4660  00033E  EE22  F0D6         	lfsr	2,drawSymbol@F3232
  4661  000342  EE11  F018         	lfsr	1,i2drawSymbol@symbolThree
  4662  000346  0E17               	movlw	23
  4663  000348                     i2u227_41:
  4664  000348  CFDB FFE3          	movff	plusw2,plusw1
  4665  00034C  06E8               	decf	wreg,f,c
  4666  00034E  E2FC               	bc	i2u227_41
  4667                           
  4668                           ;LED-API.c: 95: char symbolPlay[34][2] = {
  4669                           ;LED-API.c: 96: {1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{2,6},{3,6},{3,5},{3,4},{2,4},
  4670                           ;LED-API.c: 97: {5,6},{5,5},{5,4},{5,3},{5,2},{5,1},{6,1},
  4671                           ;LED-API.c: 98: {8,1},{8,2},{8,3},{9,4},{10,4},{11,3},{11,2},{11,1},
  4672                           ;LED-API.c: 99: {13,1},{13,2},{13,3},{13,4},{12,5},{11,6},{14,5},{14,6}};
  4673  000350  EE23  F080         	lfsr	2,drawSymbol@F3235
  4674  000354  EE10  F006         	lfsr	1,i2drawSymbol@symbolPlay
  4675  000358  0E43               	movlw	67
  4676  00035A                     i2u228_41:
  4677  00035A  CFDB FFE3          	movff	plusw2,plusw1
  4678  00035E  06E8               	decf	wreg,f,c
  4679  000360  E2FC               	bc	i2u228_41
  4680                           
  4681                           ;LED-API.c: 101: char symbolGo[34][2] = {
  4682                           ;LED-API.c: 102: {6,6},{5,7},{4,7},{3,7},{2,6},{2,5},{2,4},{2,3},{2,2},{2,1},{3,0},{4,0}
      +                          ,{5,0},{6,1},{5,2},{4,2},
  4683                           ;LED-API.c: 103: {9,6},{9,5},{9,4},{9,3},{9,2},{9,1},{10,0},{11,0},{12,0},{13,1},{13,2},
      +                          {13,4},{13,5},{13,6},{12,7},{11,7},{10,7}};
  4684  000362  EE24  F000         	lfsr	2,drawSymbol@F3238
  4685  000366  EE10  F09E         	lfsr	1,i2drawSymbol@symbolGo
  4686  00036A  0E43               	movlw	67
  4687  00036C                     i2u229_41:
  4688  00036C  CFDB FFE3          	movff	plusw2,plusw1
  4689  000370  06E8               	decf	wreg,f,c
  4690  000372  E2FC               	bc	i2u229_41
  4691                           
  4692                           ;LED-API.c: 105: char symbolArrowRight[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3},{6,
      +                          3},{7,3},{8,3},{7,4},{6,5},{5,7},{6,2},{5,1},{4,0}};
  4693  000374  EE22  F07E         	lfsr	2,drawSymbol@F3241
  4694  000378  EE10  F04A         	lfsr	1,i2drawSymbol@symbolArrowRight
  4695  00037C  0E1D               	movlw	29
  4696  00037E                     i2u230_41:
  4697  00037E  CFDB FFE3          	movff	plusw2,plusw1
  4698  000382  06E8               	decf	wreg,f,c
  4699  000384  E2FC               	bc	i2u230_41
  4700                           
  4701                           ;LED-API.c: 106: char symbolArrowLeft[15][2] = {{0,3},{1,3},{2,3},{3,3},{4,3},{5,3}, {6,
      +                          3},{7,3},{8,3}, {1,4},{2,5},{3,6},{1,2},{2,1},{3,0}};
  4702  000386  EE22  F09C         	lfsr	2,drawSymbol@F3244
  4703  00038A  EE10  F080         	lfsr	1,i2drawSymbol@symbolArrowLeft
  4704  00038E  0E1D               	movlw	29
  4705  000390                     i2u231_41:
  4706  000390  CFDB FFE3          	movff	plusw2,plusw1
  4707  000394  06E8               	decf	wreg,f,c
  4708  000396  E2FC               	bc	i2u231_41
  4709                           
  4710                           ;LED-API.c: 108: switch(chosenSymbol)
  4711  000398  D118               	goto	i2l2557
  4712  00039A                     i2l2463:
  4713                           
  4714                           ;LED-API.c: 113: for(unsigned char i = 0; i < 12; i++)
  4715  00039A  0E00               	movlw	0
  4716  00039C  0100               	movlb	0	; () banked
  4717  00039E  6FFE               	movwf	i2drawSymbol@i& (0+255),b
  4718  0003A0                     i2l2465:
  4719                           
  4720                           ; BSR set to: 0
  4721  0003A0  0E0B               	movlw	11
  4722  0003A2  0100               	movlb	0	; () banked
  4723  0003A4  65FE               	cpfsgt	i2drawSymbol@i& (0+255),b
  4724  0003A6  D001               	goto	i2l2469
  4725  0003A8  0012               	return	
  4726  0003AA                     i2l2469:
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;LED-API.c: 114: {
  4730                           ;LED-API.c: 115: on(symbolOne[i][1], symbolOne[i][0] + offSetX);
  4731  0003AA  0100               	movlb	0	; () banked
  4732  0003AC  51FE               	movf	i2drawSymbol@i& (0+255),w,b
  4733  0003AE  0D02               	mullw	2
  4734  0003B0  0E00               	movlw	low i2drawSymbol@symbolOne
  4735  0003B2  24F3               	addwf	prodl,w,c
  4736  0003B4  6ED9               	movwf	fsr2l,c
  4737  0003B6  0E01               	movlw	high i2drawSymbol@symbolOne
  4738  0003B8  20F4               	addwfc	prodh,w,c
  4739  0003BA  6EDA               	movwf	fsr2h,c
  4740  0003BC  50DF               	movf	indf2,w,c
  4741  0003BE  2405               	addwf	i2drawSymbol@offSetX,w,c
  4742  0003C0  6E01               	movwf	i2on@row,c
  4743  0003C2  0100               	movlb	0	; () banked
  4744  0003C4  51FE               	movf	i2drawSymbol@i& (0+255),w,b
  4745  0003C6  0D02               	mullw	2
  4746  0003C8  0E01               	movlw	1
  4747  0003CA  26F3               	addwf	prodl,f,c
  4748  0003CC  0E00               	movlw	0
  4749  0003CE  22F4               	addwfc	prodh,f,c
  4750  0003D0  0E00               	movlw	low i2drawSymbol@symbolOne
  4751  0003D2  24F3               	addwf	prodl,w,c
  4752  0003D4  6ED9               	movwf	fsr2l,c
  4753  0003D6  0E01               	movlw	high i2drawSymbol@symbolOne
  4754  0003D8  20F4               	addwfc	prodh,w,c
  4755  0003DA  6EDA               	movwf	fsr2h,c
  4756  0003DC  50DF               	movf	indf2,w,c
  4757  0003DE  EC3D  F008         	call	i2_on
  4758  0003E2  0100               	movlb	0	; () banked
  4759  0003E4  2BFE               	incf	i2drawSymbol@i& (0+255),f,b
  4760  0003E6  D7DC               	goto	i2l2465
  4761  0003E8                     i2l2475:
  4762                           
  4763                           ;LED-API.c: 121: for(unsigned char i = 0; i < 14; i++)
  4764  0003E8  0E00               	movlw	0
  4765  0003EA  0100               	movlb	0	; () banked
  4766  0003EC  6FFF               	movwf	i2drawSymbol@i_84& (0+255),b
  4767  0003EE                     i2l2477:
  4768                           
  4769                           ; BSR set to: 0
  4770  0003EE  0E0D               	movlw	13
  4771  0003F0  0100               	movlb	0	; () banked
  4772  0003F2  65FF               	cpfsgt	i2drawSymbol@i_84& (0+255),b
  4773  0003F4  D001               	goto	i2l2481
  4774  0003F6  0012               	return	
  4775  0003F8                     i2l2481:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;LED-API.c: 122: {
  4779                           ;LED-API.c: 123: on(symbolTwo[i][1], symbolTwo[i][0] + offSetX);
  4780  0003F8  0100               	movlb	0	; () banked
  4781  0003FA  51FF               	movf	i2drawSymbol@i_84& (0+255),w,b
  4782  0003FC  0D02               	mullw	2
  4783  0003FE  0EE2               	movlw	low i2drawSymbol@symbolTwo
  4784  000400  24F3               	addwf	prodl,w,c
  4785  000402  6ED9               	movwf	fsr2l,c
  4786  000404  0E00               	movlw	high i2drawSymbol@symbolTwo
  4787  000406  20F4               	addwfc	prodh,w,c
  4788  000408  6EDA               	movwf	fsr2h,c
  4789  00040A  50DF               	movf	indf2,w,c
  4790  00040C  2405               	addwf	i2drawSymbol@offSetX,w,c
  4791  00040E  6E01               	movwf	i2on@row,c
  4792  000410  0100               	movlb	0	; () banked
  4793  000412  51FF               	movf	i2drawSymbol@i_84& (0+255),w,b
  4794  000414  0D02               	mullw	2
  4795  000416  0E01               	movlw	1
  4796  000418  26F3               	addwf	prodl,f,c
  4797  00041A  0E00               	movlw	0
  4798  00041C  22F4               	addwfc	prodh,f,c
  4799  00041E  0EE2               	movlw	low i2drawSymbol@symbolTwo
  4800  000420  24F3               	addwf	prodl,w,c
  4801  000422  6ED9               	movwf	fsr2l,c
  4802  000424  0E00               	movlw	high i2drawSymbol@symbolTwo
  4803  000426  20F4               	addwfc	prodh,w,c
  4804  000428  6EDA               	movwf	fsr2h,c
  4805  00042A  50DF               	movf	indf2,w,c
  4806  00042C  EC3D  F008         	call	i2_on
  4807  000430  0100               	movlb	0	; () banked
  4808  000432  2BFF               	incf	i2drawSymbol@i_84& (0+255),f,b
  4809  000434  D7DC               	goto	i2l2477
  4810  000436                     i2l2487:
  4811                           
  4812                           ;LED-API.c: 129: for(unsigned char i = 0; i < 12; i++)
  4813  000436  0E00               	movlw	0
  4814  000438  0101               	movlb	1	; () banked
  4815  00043A  6F30               	movwf	i2drawSymbol@i_85& (0+255),b
  4816  00043C                     i2l2489:
  4817                           
  4818                           ; BSR set to: 1
  4819  00043C  0E0B               	movlw	11
  4820  00043E  0101               	movlb	1	; () banked
  4821  000440  6530               	cpfsgt	i2drawSymbol@i_85& (0+255),b
  4822  000442  D001               	goto	i2l2493
  4823  000444  0012               	return	
  4824  000446                     i2l2493:
  4825                           
  4826                           ; BSR set to: 1
  4827                           ;LED-API.c: 130: {
  4828                           ;LED-API.c: 131: on(symbolThree[i][1], symbolThree[i][0] + offSetX);
  4829  000446  0101               	movlb	1	; () banked
  4830  000448  5130               	movf	i2drawSymbol@i_85& (0+255),w,b
  4831  00044A  0D02               	mullw	2
  4832  00044C  0E18               	movlw	low i2drawSymbol@symbolThree
  4833  00044E  24F3               	addwf	prodl,w,c
  4834  000450  6ED9               	movwf	fsr2l,c
  4835  000452  0E01               	movlw	high i2drawSymbol@symbolThree
  4836  000454  20F4               	addwfc	prodh,w,c
  4837  000456  6EDA               	movwf	fsr2h,c
  4838  000458  50DF               	movf	indf2,w,c
  4839  00045A  2405               	addwf	i2drawSymbol@offSetX,w,c
  4840  00045C  6E01               	movwf	i2on@row,c
  4841  00045E  0101               	movlb	1	; () banked
  4842  000460  5130               	movf	i2drawSymbol@i_85& (0+255),w,b
  4843  000462  0D02               	mullw	2
  4844  000464  0E01               	movlw	1
  4845  000466  26F3               	addwf	prodl,f,c
  4846  000468  0E00               	movlw	0
  4847  00046A  22F4               	addwfc	prodh,f,c
  4848  00046C  0E18               	movlw	low i2drawSymbol@symbolThree
  4849  00046E  24F3               	addwf	prodl,w,c
  4850  000470  6ED9               	movwf	fsr2l,c
  4851  000472  0E01               	movlw	high i2drawSymbol@symbolThree
  4852  000474  20F4               	addwfc	prodh,w,c
  4853  000476  6EDA               	movwf	fsr2h,c
  4854  000478  50DF               	movf	indf2,w,c
  4855  00047A  EC3D  F008         	call	i2_on
  4856  00047E  0101               	movlb	1	; () banked
  4857  000480  2B30               	incf	i2drawSymbol@i_85& (0+255),f,b
  4858  000482  D7DC               	goto	i2l2489
  4859  000484                     i2l2499:
  4860                           
  4861                           ;LED-API.c: 137: turnAllOff();
  4862  000484  EC97  F007         	call	i2_turnAllOff	;wreg free
  4863                           
  4864                           ;LED-API.c: 138: for(unsigned char i = 0; i < 34; i++)
  4865  000488  0E00               	movlw	0
  4866  00048A  0101               	movlb	1	; () banked
  4867  00048C  6F31               	movwf	i2drawSymbol@i_86& (0+255),b
  4868  00048E                     i2l2503:
  4869                           
  4870                           ; BSR set to: 1
  4871  00048E  0E21               	movlw	33
  4872  000490  0101               	movlb	1	; () banked
  4873  000492  6531               	cpfsgt	i2drawSymbol@i_86& (0+255),b
  4874  000494  D001               	goto	i2l2507
  4875  000496  0012               	return	
  4876  000498                     i2l2507:
  4877                           
  4878                           ; BSR set to: 1
  4879                           ;LED-API.c: 139: {
  4880                           ;LED-API.c: 140: on(symbolPlay[i][1], symbolPlay[i][0] + offSetX);
  4881  000498  0101               	movlb	1	; () banked
  4882  00049A  5131               	movf	i2drawSymbol@i_86& (0+255),w,b
  4883  00049C  0D02               	mullw	2
  4884  00049E  0E06               	movlw	low i2drawSymbol@symbolPlay
  4885  0004A0  24F3               	addwf	prodl,w,c
  4886  0004A2  6ED9               	movwf	fsr2l,c
  4887  0004A4  0E00               	movlw	high i2drawSymbol@symbolPlay
  4888  0004A6  20F4               	addwfc	prodh,w,c
  4889  0004A8  6EDA               	movwf	fsr2h,c
  4890  0004AA  50DF               	movf	indf2,w,c
  4891  0004AC  2405               	addwf	i2drawSymbol@offSetX,w,c
  4892  0004AE  6E01               	movwf	i2on@row,c
  4893  0004B0  0101               	movlb	1	; () banked
  4894  0004B2  5131               	movf	i2drawSymbol@i_86& (0+255),w,b
  4895  0004B4  0D02               	mullw	2
  4896  0004B6  0E01               	movlw	1
  4897  0004B8  26F3               	addwf	prodl,f,c
  4898  0004BA  0E00               	movlw	0
  4899  0004BC  22F4               	addwfc	prodh,f,c
  4900  0004BE  0E06               	movlw	low i2drawSymbol@symbolPlay
  4901  0004C0  24F3               	addwf	prodl,w,c
  4902  0004C2  6ED9               	movwf	fsr2l,c
  4903  0004C4  0E00               	movlw	high i2drawSymbol@symbolPlay
  4904  0004C6  20F4               	addwfc	prodh,w,c
  4905  0004C8  6EDA               	movwf	fsr2h,c
  4906  0004CA  50DF               	movf	indf2,w,c
  4907  0004CC  EC3D  F008         	call	i2_on
  4908  0004D0  0101               	movlb	1	; () banked
  4909  0004D2  2B31               	incf	i2drawSymbol@i_86& (0+255),f,b
  4910  0004D4  D7DC               	goto	i2l2503
  4911  0004D6                     i2l2513:
  4912                           
  4913                           ;LED-API.c: 146: turnAllOff();
  4914  0004D6  EC97  F007         	call	i2_turnAllOff	;wreg free
  4915                           
  4916                           ;LED-API.c: 147: for(unsigned char i = 0; i < 34; i++)
  4917  0004DA  0E00               	movlw	0
  4918  0004DC  0101               	movlb	1	; () banked
  4919  0004DE  6F32               	movwf	i2drawSymbol@i_87& (0+255),b
  4920  0004E0                     i2l2517:
  4921                           
  4922                           ; BSR set to: 1
  4923  0004E0  0E21               	movlw	33
  4924  0004E2  0101               	movlb	1	; () banked
  4925  0004E4  6532               	cpfsgt	i2drawSymbol@i_87& (0+255),b
  4926  0004E6  D001               	goto	i2l2521
  4927  0004E8  0012               	return	
  4928  0004EA                     i2l2521:
  4929                           
  4930                           ; BSR set to: 1
  4931                           ;LED-API.c: 148: {
  4932                           ;LED-API.c: 149: on(symbolGo[i][1], symbolGo[i][0]);
  4933  0004EA  0101               	movlb	1	; () banked
  4934  0004EC  5132               	movf	i2drawSymbol@i_87& (0+255),w,b
  4935  0004EE  0D02               	mullw	2
  4936  0004F0  0E9E               	movlw	low i2drawSymbol@symbolGo
  4937  0004F2  24F3               	addwf	prodl,w,c
  4938  0004F4  6ED9               	movwf	fsr2l,c
  4939  0004F6  0E00               	movlw	high i2drawSymbol@symbolGo
  4940  0004F8  20F4               	addwfc	prodh,w,c
  4941  0004FA  6EDA               	movwf	fsr2h,c
  4942  0004FC  50DF               	movf	indf2,w,c
  4943  0004FE  6E01               	movwf	i2on@row,c
  4944  000500  0101               	movlb	1	; () banked
  4945  000502  5132               	movf	i2drawSymbol@i_87& (0+255),w,b
  4946  000504  0D02               	mullw	2
  4947  000506  0E01               	movlw	1
  4948  000508  26F3               	addwf	prodl,f,c
  4949  00050A  0E00               	movlw	0
  4950  00050C  22F4               	addwfc	prodh,f,c
  4951  00050E  0E9E               	movlw	low i2drawSymbol@symbolGo
  4952  000510  24F3               	addwf	prodl,w,c
  4953  000512  6ED9               	movwf	fsr2l,c
  4954  000514  0E00               	movlw	high i2drawSymbol@symbolGo
  4955  000516  20F4               	addwfc	prodh,w,c
  4956  000518  6EDA               	movwf	fsr2h,c
  4957  00051A  50DF               	movf	indf2,w,c
  4958  00051C  EC3D  F008         	call	i2_on
  4959  000520  0101               	movlb	1	; () banked
  4960  000522  2B32               	incf	i2drawSymbol@i_87& (0+255),f,b
  4961  000524  D7DD               	goto	i2l2517
  4962  000526                     i2l2527:
  4963                           
  4964                           ;LED-API.c: 153: turnAllOff();
  4965  000526  EC97  F007         	call	i2_turnAllOff	;wreg free
  4966                           
  4967                           ;LED-API.c: 154: for(unsigned char i = 0; i < 15; i++)
  4968  00052A  0E00               	movlw	0
  4969  00052C  0101               	movlb	1	; () banked
  4970  00052E  6F33               	movwf	i2drawSymbol@i_88& (0+255),b
  4971  000530                     i2l2531:
  4972                           
  4973                           ; BSR set to: 1
  4974  000530  0E0E               	movlw	14
  4975  000532  0101               	movlb	1	; () banked
  4976  000534  6533               	cpfsgt	i2drawSymbol@i_88& (0+255),b
  4977  000536  D001               	goto	i2l2535
  4978  000538  0012               	return	
  4979  00053A                     i2l2535:
  4980                           
  4981                           ; BSR set to: 1
  4982                           ;LED-API.c: 155: {
  4983                           ;LED-API.c: 156: on(symbolArrowLeft[i][1], symbolGo[i][0] + offSetX);
  4984  00053A  0101               	movlb	1	; () banked
  4985  00053C  5133               	movf	i2drawSymbol@i_88& (0+255),w,b
  4986  00053E  0D02               	mullw	2
  4987  000540  0E9E               	movlw	low i2drawSymbol@symbolGo
  4988  000542  24F3               	addwf	prodl,w,c
  4989  000544  6ED9               	movwf	fsr2l,c
  4990  000546  0E00               	movlw	high i2drawSymbol@symbolGo
  4991  000548  20F4               	addwfc	prodh,w,c
  4992  00054A  6EDA               	movwf	fsr2h,c
  4993  00054C  50DF               	movf	indf2,w,c
  4994  00054E  2405               	addwf	i2drawSymbol@offSetX,w,c
  4995  000550  6E01               	movwf	i2on@row,c
  4996  000552  0101               	movlb	1	; () banked
  4997  000554  5133               	movf	i2drawSymbol@i_88& (0+255),w,b
  4998  000556  0D02               	mullw	2
  4999  000558  0E01               	movlw	1
  5000  00055A  26F3               	addwf	prodl,f,c
  5001  00055C  0E00               	movlw	0
  5002  00055E  22F4               	addwfc	prodh,f,c
  5003  000560  0E80               	movlw	low i2drawSymbol@symbolArrowLeft
  5004  000562  24F3               	addwf	prodl,w,c
  5005  000564  6ED9               	movwf	fsr2l,c
  5006  000566  0E00               	movlw	high i2drawSymbol@symbolArrowLeft
  5007  000568  20F4               	addwfc	prodh,w,c
  5008  00056A  6EDA               	movwf	fsr2h,c
  5009  00056C  50DF               	movf	indf2,w,c
  5010  00056E  EC3D  F008         	call	i2_on
  5011  000572  0101               	movlb	1	; () banked
  5012  000574  2B33               	incf	i2drawSymbol@i_88& (0+255),f,b
  5013  000576  D7DC               	goto	i2l2531
  5014  000578                     i2l2541:
  5015                           
  5016                           ;LED-API.c: 160: turnAllOff();
  5017  000578  EC97  F007         	call	i2_turnAllOff	;wreg free
  5018                           
  5019                           ;LED-API.c: 161: for(unsigned char i = 0; i < 15; i++)
  5020  00057C  0E00               	movlw	0
  5021  00057E  0101               	movlb	1	; () banked
  5022  000580  6F34               	movwf	i2drawSymbol@i_89& (0+255),b
  5023  000582                     i2l2545:
  5024                           
  5025                           ; BSR set to: 1
  5026  000582  0E0E               	movlw	14
  5027  000584  0101               	movlb	1	; () banked
  5028  000586  6534               	cpfsgt	i2drawSymbol@i_89& (0+255),b
  5029  000588  D001               	goto	i2l2549
  5030  00058A  0012               	return	
  5031  00058C                     i2l2549:
  5032                           
  5033                           ; BSR set to: 1
  5034                           ;LED-API.c: 162: {
  5035                           ;LED-API.c: 163: on(symbolArrowRight[i][1], symbolGo[i][0]+ offSetX);
  5036  00058C  0101               	movlb	1	; () banked
  5037  00058E  5134               	movf	i2drawSymbol@i_89& (0+255),w,b
  5038  000590  0D02               	mullw	2
  5039  000592  0E9E               	movlw	low i2drawSymbol@symbolGo
  5040  000594  24F3               	addwf	prodl,w,c
  5041  000596  6ED9               	movwf	fsr2l,c
  5042  000598  0E00               	movlw	high i2drawSymbol@symbolGo
  5043  00059A  20F4               	addwfc	prodh,w,c
  5044  00059C  6EDA               	movwf	fsr2h,c
  5045  00059E  50DF               	movf	indf2,w,c
  5046  0005A0  2405               	addwf	i2drawSymbol@offSetX,w,c
  5047  0005A2  6E01               	movwf	i2on@row,c
  5048  0005A4  0101               	movlb	1	; () banked
  5049  0005A6  5134               	movf	i2drawSymbol@i_89& (0+255),w,b
  5050  0005A8  0D02               	mullw	2
  5051  0005AA  0E01               	movlw	1
  5052  0005AC  26F3               	addwf	prodl,f,c
  5053  0005AE  0E00               	movlw	0
  5054  0005B0  22F4               	addwfc	prodh,f,c
  5055  0005B2  0E4A               	movlw	low i2drawSymbol@symbolArrowRight
  5056  0005B4  24F3               	addwf	prodl,w,c
  5057  0005B6  6ED9               	movwf	fsr2l,c
  5058  0005B8  0E00               	movlw	high i2drawSymbol@symbolArrowRight
  5059  0005BA  20F4               	addwfc	prodh,w,c
  5060  0005BC  6EDA               	movwf	fsr2h,c
  5061  0005BE  50DF               	movf	indf2,w,c
  5062  0005C0  EC3D  F008         	call	i2_on
  5063  0005C4  0101               	movlb	1	; () banked
  5064  0005C6  2B34               	incf	i2drawSymbol@i_89& (0+255),f,b
  5065  0005C8  D7DC               	goto	i2l2545
  5066  0005CA                     i2l2557:
  5067  0005CA  5068               	movf	i2drawSymbol@chosenSymbol,w,c
  5068                           
  5069                           ; Switch size 1, requested type "space"
  5070                           ; Number of cases is 7, Range of values is 1 to 7
  5071                           ; switch strategies available:
  5072                           ; Name         Instructions Cycles
  5073                           ; simple_byte           22    12 (average)
  5074                           ;	Chosen strategy is simple_byte
  5075  0005CC  0A01               	xorlw	1	; case 1
  5076  0005CE  B4D8               	btfsc	status,2,c
  5077  0005D0  D6E4               	goto	i2l2463
  5078  0005D2  0A03               	xorlw	3	; case 2
  5079  0005D4  B4D8               	btfsc	status,2,c
  5080  0005D6  D708               	goto	i2l2475
  5081  0005D8  0A01               	xorlw	1	; case 3
  5082  0005DA  B4D8               	btfsc	status,2,c
  5083  0005DC  D72C               	goto	i2l2487
  5084  0005DE  0A07               	xorlw	7	; case 4
  5085  0005E0  B4D8               	btfsc	status,2,c
  5086  0005E2  D750               	goto	i2l2499
  5087  0005E4  0A01               	xorlw	1	; case 5
  5088  0005E6  B4D8               	btfsc	status,2,c
  5089  0005E8  D776               	goto	i2l2513
  5090  0005EA  0A03               	xorlw	3	; case 6
  5091  0005EC  B4D8               	btfsc	status,2,c
  5092  0005EE  D79B               	goto	i2l2527
  5093  0005F0  0A01               	xorlw	1	; case 7
  5094  0005F2  A4D8               	btfss	status,2,c
  5095  0005F4  0012               	return	
  5096  0005F6  D7C0               	goto	i2l2541
  5097  0005F8                     __end_ofi2_drawSymbol:
  5098                           	opt stack 0
  5099                           pclatu	equ	0xFFB
  5100                           pclath	equ	0xFFA
  5101                           tblptru	equ	0xFF8
  5102                           tblptrh	equ	0xFF7
  5103                           tblptrl	equ	0xFF6
  5104                           tablat	equ	0xFF5
  5105                           prodh	equ	0xFF4
  5106                           prodl	equ	0xFF3
  5107                           intcon	equ	0xFF2
  5108                           postinc0	equ	0xFEE
  5109                           fsr0h	equ	0xFEA
  5110                           fsr0l	equ	0xFE9
  5111                           wreg	equ	0xFE8
  5112                           postdec1	equ	0xFE5
  5113                           plusw1	equ	0xFE3
  5114                           fsr1h	equ	0xFE2
  5115                           fsr1l	equ	0xFE1
  5116                           indf2	equ	0xFDF
  5117                           postinc2	equ	0xFDE
  5118                           plusw2	equ	0xFDB
  5119                           fsr2h	equ	0xFDA
  5120                           fsr2l	equ	0xFD9
  5121                           status	equ	0xFD8
  5122                           
  5123 ;; *************** function i2_turnAllOff *****************
  5124 ;; Defined at:
  5125 ;;		line 169 in file "Source/LED-API.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;		None
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  turnAllOff      1    3[COMRAM] unsigned char 
  5130 ;;  turnAllOff      1    2[COMRAM] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5140 ;;      Params:         0       0       0       0       0       0       0
  5141 ;;      Locals:         2       0       0       0       0       0       0
  5142 ;;      Temps:          2       0       0       0       0       0       0
  5143 ;;      Totals:         4       0       0       0       0       0       0
  5144 ;;Total ram usage:        4 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		i2_drawSymbol
  5150 ;;		i2_startPong
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text25
  5155  000F2E                     __ptext25:
  5156                           	opt stack 0
  5157  000F2E                     i2_turnAllOff:
  5158                           	opt stack 23
  5159                           
  5160                           ;LED-API.c: 172: for (unsigned char i = 0; i < 8; i++) {
  5161                           
  5162                           ;incstack = 0
  5163  000F2E  0E00               	movlw	0
  5164  000F30  6E03               	movwf	i2turnAllOff@i,c
  5165  000F32                     i2l2409:
  5166  000F32  0E07               	movlw	7
  5167  000F34  6403               	cpfsgt	i2turnAllOff@i,c
  5168  000F36  D001               	goto	i2l2413
  5169  000F38  0012               	return	
  5170  000F3A                     i2l2413:
  5171                           
  5172                           ;LED-API.c: 173: for (unsigned char j = 0; j < 16; j++) {
  5173  000F3A  0E00               	movlw	0
  5174  000F3C  6E04               	movwf	i2turnAllOff@j,c
  5175  000F3E                     i2l2415:
  5176  000F3E  0E0F               	movlw	15
  5177  000F40  6404               	cpfsgt	i2turnAllOff@j,c
  5178  000F42  D001               	goto	i2l2419
  5179  000F44  D016               	goto	i2l2425
  5180  000F46                     i2l2419:
  5181                           
  5182                           ;LED-API.c: 174: pixels[i][j] = 0;
  5183  000F46  5003               	movf	i2turnAllOff@i,w,c
  5184  000F48  0D10               	mullw	16
  5185  000F4A  0E00               	movlw	low _pixels
  5186  000F4C  6E01               	movwf	??i2_turnAllOff& (0+255),c
  5187  000F4E  0E03               	movlw	high _pixels
  5188  000F50  6E02               	movwf	(??i2_turnAllOff+1)& (0+255),c
  5189  000F52  50F3               	movf	prodl,w,c
  5190  000F54  2601               	addwf	??i2_turnAllOff,f,c
  5191  000F56  50F4               	movf	prodh,w,c
  5192  000F58  2202               	addwfc	??i2_turnAllOff+1,f,c
  5193  000F5A  5004               	movf	i2turnAllOff@j,w,c
  5194  000F5C  0D01               	mullw	1
  5195  000F5E  50F3               	movf	prodl,w,c
  5196  000F60  2401               	addwf	??i2_turnAllOff,w,c
  5197  000F62  6ED9               	movwf	fsr2l,c
  5198  000F64  50F4               	movf	prodh,w,c
  5199  000F66  2002               	addwfc	??i2_turnAllOff+1,w,c
  5200  000F68  6EDA               	movwf	fsr2h,c
  5201  000F6A  0E00               	movlw	0
  5202  000F6C  6EDF               	movwf	indf2,c
  5203  000F6E  2A04               	incf	i2turnAllOff@j,f,c
  5204  000F70  D7E6               	goto	i2l2415
  5205  000F72                     i2l2425:
  5206  000F72  2A03               	incf	i2turnAllOff@i,f,c
  5207  000F74  D7DE               	goto	i2l2409
  5208  000F76                     __end_ofi2_turnAllOff:
  5209                           	opt stack 0
  5210                           pclatu	equ	0xFFB
  5211                           pclath	equ	0xFFA
  5212                           tblptru	equ	0xFF8
  5213                           tblptrh	equ	0xFF7
  5214                           tblptrl	equ	0xFF6
  5215                           tablat	equ	0xFF5
  5216                           prodh	equ	0xFF4
  5217                           prodl	equ	0xFF3
  5218                           intcon	equ	0xFF2
  5219                           postinc0	equ	0xFEE
  5220                           fsr0h	equ	0xFEA
  5221                           fsr0l	equ	0xFE9
  5222                           wreg	equ	0xFE8
  5223                           postdec1	equ	0xFE5
  5224                           plusw1	equ	0xFE3
  5225                           fsr1h	equ	0xFE2
  5226                           fsr1l	equ	0xFE1
  5227                           indf2	equ	0xFDF
  5228                           postinc2	equ	0xFDE
  5229                           plusw2	equ	0xFDB
  5230                           fsr2h	equ	0xFDA
  5231                           fsr2l	equ	0xFD9
  5232                           status	equ	0xFD8
  5233                           
  5234 ;; *************** function i2_on *****************
  5235 ;; Defined at:
  5236 ;;		line 47 in file "Source/LED-API.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  column          1    wreg     unsigned char 
  5239 ;;  row             1    0[COMRAM] unsigned char 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  column          1    3[COMRAM] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5251 ;;      Params:         1       0       0       0       0       0       0
  5252 ;;      Locals:         1       0       0       0       0       0       0
  5253 ;;      Temps:          2       0       0       0       0       0       0
  5254 ;;      Totals:         4       0       0       0       0       0       0
  5255 ;;Total ram usage:        4 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_writePong
  5261 ;;		i2_drawSymbol
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text26
  5266  00107A                     __ptext26:
  5267                           	opt stack 0
  5268  00107A                     i2_on:
  5269                           	opt stack 24
  5270                           
  5271                           ;incstack = 0
  5272                           ;i2on@column stored from wreg
  5273  00107A  6E04               	movwf	i2on@column,c
  5274                           
  5275                           ;LED-API.c: 49: if (row < 0 || row >= 16)
  5276  00107C  0E0F               	movlw	15
  5277  00107E  6401               	cpfsgt	i2on@row,c
  5278  001080  D001               	goto	i2l2401
  5279  001082  0012               	return	
  5280  001084                     i2l2401:
  5281                           
  5282                           ;LED-API.c: 51: if (column < 0 || column >= 8)
  5283  001084  0E07               	movlw	7
  5284  001086  6404               	cpfsgt	i2on@column,c
  5285  001088  D001               	goto	i2l2405
  5286  00108A  0012               	return	
  5287  00108C                     i2l2405:
  5288                           
  5289                           ;LED-API.c: 54: pixels[column][row] = 1;
  5290  00108C  5004               	movf	i2on@column,w,c
  5291  00108E  0D10               	mullw	16
  5292  001090  0E00               	movlw	low _pixels
  5293  001092  6E02               	movwf	??i2_on& (0+255),c
  5294  001094  0E03               	movlw	high _pixels
  5295  001096  6E03               	movwf	(??i2_on+1)& (0+255),c
  5296  001098  50F3               	movf	prodl,w,c
  5297  00109A  2602               	addwf	??i2_on,f,c
  5298  00109C  50F4               	movf	prodh,w,c
  5299  00109E  2203               	addwfc	??i2_on+1,f,c
  5300  0010A0  5001               	movf	i2on@row,w,c
  5301  0010A2  0D01               	mullw	1
  5302  0010A4  50F3               	movf	prodl,w,c
  5303  0010A6  2402               	addwf	??i2_on,w,c
  5304  0010A8  6ED9               	movwf	fsr2l,c
  5305  0010AA  50F4               	movf	prodh,w,c
  5306  0010AC  2003               	addwfc	??i2_on+1,w,c
  5307  0010AE  6EDA               	movwf	fsr2h,c
  5308  0010B0  0E01               	movlw	1
  5309  0010B2  6EDF               	movwf	indf2,c
  5310  0010B4  0012               	return		;funcret
  5311  0010B6                     __end_ofi2_on:
  5312                           	opt stack 0
  5313                           pclatu	equ	0xFFB
  5314                           pclath	equ	0xFFA
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodh	equ	0xFF4
  5320                           prodl	equ	0xFF3
  5321                           intcon	equ	0xFF2
  5322                           postinc0	equ	0xFEE
  5323                           fsr0h	equ	0xFEA
  5324                           fsr0l	equ	0xFE9
  5325                           wreg	equ	0xFE8
  5326                           postdec1	equ	0xFE5
  5327                           plusw1	equ	0xFE3
  5328                           fsr1h	equ	0xFE2
  5329                           fsr1l	equ	0xFE1
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           plusw2	equ	0xFDB
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function i2_delaySeconds *****************
  5338 ;; Defined at:
  5339 ;;		line 49 in file "main.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  numberOfSeco    2    6[COMRAM] int 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  delaySeconds    2    9[COMRAM] int 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;		None               void
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         2       0       0       0       0       0       0
  5354 ;;      Locals:         2       0       0       0       0       0       0
  5355 ;;      Temps:          1       0       0       0       0       0       0
  5356 ;;      Totals:         5       0       0       0       0       0       0
  5357 ;;Total ram usage:        5 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    1
  5360 ;; This function calls:
  5361 ;;		i2___wmul
  5362 ;; This function is called by:
  5363 ;;		i2_startPong
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text27
  5368  000EE4                     __ptext27:
  5369                           	opt stack 0
  5370  000EE4                     i2_delaySeconds:
  5371                           	opt stack 22
  5372                           
  5373                           ;main.c: 51: for(int i = 0; i < numberOfSeconds * 100; i++)
  5374                           
  5375                           ;incstack = 0
  5376  000EE4  0E00               	movlw	0
  5377  000EE6  6E0B               	movwf	i2delaySeconds@i+1,c
  5378  000EE8  0E00               	movlw	0
  5379  000EEA  6E0A               	movwf	i2delaySeconds@i,c
  5380  000EEC  D00A               	goto	i2l1863
  5381  000EEE                     i2l1859:
  5382                           
  5383                           ;main.c: 52: _delay((unsigned long)((10)*(32000000/4000.0)));
  5384  000EEE  0E68               	movlw	104
  5385  000EF0  6E09               	movwf	??i2_delaySeconds& (0+255),c
  5386  000EF2  0EE4               	movlw	228
  5387  000EF4                     i2u287_47:
  5388  000EF4  2EE8               	decfsz	wreg,f,c
  5389  000EF6  D7FE               	goto	i2u287_47
  5390  000EF8  2E09               	decfsz	??i2_delaySeconds& (0+255),f,c
  5391  000EFA  D7FC               	goto	i2u287_47
  5392  000EFC  D000               	nop2	
  5393  000EFE  4A0A               	infsnz	i2delaySeconds@i,f,c
  5394  000F00  2A0B               	incf	i2delaySeconds@i+1,f,c
  5395  000F02                     i2l1863:
  5396  000F02  C007  F001         	movff	i2delaySeconds@numberOfSeconds,i2___wmul@multiplier
  5397  000F06  C008  F002         	movff	i2delaySeconds@numberOfSeconds+1,i2___wmul@multiplier+1
  5398  000F0A  0E00               	movlw	0
  5399  000F0C  6E04               	movwf	i2___wmul@multiplicand+1,c
  5400  000F0E  0E64               	movlw	100
  5401  000F10  6E03               	movwf	i2___wmul@multiplicand,c
  5402  000F12  EC8A  F008         	call	i2___wmul	;wreg free
  5403  000F16  5001               	movf	?i2___wmul,w,c
  5404  000F18  5C0A               	subwf	i2delaySeconds@i,w,c
  5405  000F1A  500B               	movf	i2delaySeconds@i+1,w,c
  5406  000F1C  0A80               	xorlw	128
  5407  000F1E  6E09               	movwf	??i2_delaySeconds& (0+255),c
  5408  000F20  5002               	movf	?i2___wmul+1,w,c
  5409  000F22  0A80               	xorlw	128
  5410  000F24  5809               	subwfb	??i2_delaySeconds& (0+255),w,c
  5411  000F26  A0D8               	btfss	status,0,c
  5412  000F28  D7E2               	goto	i2l1859
  5413                           
  5414                           ;main.c: 54: return 1;
  5415  000F2A  80D8               	bsf	status,0,c
  5416  000F2C  0012               	return	
  5417  000F2E                     __end_ofi2_delaySeconds:
  5418                           	opt stack 0
  5419                           pclatu	equ	0xFFB
  5420                           pclath	equ	0xFFA
  5421                           tblptru	equ	0xFF8
  5422                           tblptrh	equ	0xFF7
  5423                           tblptrl	equ	0xFF6
  5424                           tablat	equ	0xFF5
  5425                           prodh	equ	0xFF4
  5426                           prodl	equ	0xFF3
  5427                           intcon	equ	0xFF2
  5428                           postinc0	equ	0xFEE
  5429                           fsr0h	equ	0xFEA
  5430                           fsr0l	equ	0xFE9
  5431                           wreg	equ	0xFE8
  5432                           postdec1	equ	0xFE5
  5433                           plusw1	equ	0xFE3
  5434                           fsr1h	equ	0xFE2
  5435                           fsr1l	equ	0xFE1
  5436                           indf2	equ	0xFDF
  5437                           postinc2	equ	0xFDE
  5438                           plusw2	equ	0xFDB
  5439                           fsr2h	equ	0xFDA
  5440                           fsr2l	equ	0xFD9
  5441                           status	equ	0xFD8
  5442                           
  5443 ;; *************** function i2___wmul *****************
  5444 ;; Defined at:
  5445 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  multiplier      2    0[COMRAM] unsigned int 
  5448 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  __wmul          2    4[COMRAM] unsigned int 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  2    0[COMRAM] unsigned int 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0, prodl, prodh
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5460 ;;      Params:         4       0       0       0       0       0       0
  5461 ;;      Locals:         2       0       0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0
  5463 ;;      Totals:         6       0       0       0       0       0       0
  5464 ;;Total ram usage:        6 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		i2_delaySeconds
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text28
  5474  001114                     __ptext28:
  5475                           	opt stack 0
  5476  001114                     i2___wmul:
  5477                           	opt stack 22
  5478                           
  5479                           ;incstack = 0
  5480  001114  5001               	movf	i2___wmul@multiplier,w,c
  5481  001116  0203               	mulwf	i2___wmul@multiplicand,c
  5482  001118  CFF3 F005          	movff	prodl,i2___wmul@product
  5483  00111C  CFF4 F006          	movff	prodh,i2___wmul@product+1
  5484  001120  5001               	movf	i2___wmul@multiplier,w,c
  5485  001122  0204               	mulwf	i2___wmul@multiplicand+1,c
  5486  001124  50F3               	movf	prodl,w,c
  5487  001126  2606               	addwf	i2___wmul@product+1,f,c
  5488  001128  5002               	movf	i2___wmul@multiplier+1,w,c
  5489  00112A  0203               	mulwf	i2___wmul@multiplicand,c
  5490  00112C  50F3               	movf	prodl,w,c
  5491  00112E  2606               	addwf	i2___wmul@product+1,f,c
  5492  001130  C005  F001         	movff	i2___wmul@product,?i2___wmul
  5493  001134  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  5494  001138  0012               	return	
  5495  00113A                     __end_ofi2___wmul:
  5496                           	opt stack 0
  5497                           pclatu	equ	0xFFB
  5498                           pclath	equ	0xFFA
  5499                           tblptru	equ	0xFF8
  5500                           tblptrh	equ	0xFF7
  5501                           tblptrl	equ	0xFF6
  5502                           tablat	equ	0xFF5
  5503                           prodh	equ	0xFF4
  5504                           prodl	equ	0xFF3
  5505                           intcon	equ	0xFF2
  5506                           postinc0	equ	0xFEE
  5507                           fsr0h	equ	0xFEA
  5508                           fsr0l	equ	0xFE9
  5509                           wreg	equ	0xFE8
  5510                           postdec1	equ	0xFE5
  5511                           plusw1	equ	0xFE3
  5512                           fsr1h	equ	0xFE2
  5513                           fsr1l	equ	0xFE1
  5514                           indf2	equ	0xFDF
  5515                           postinc2	equ	0xFDE
  5516                           plusw2	equ	0xFDB
  5517                           fsr2h	equ	0xFDA
  5518                           fsr2l	equ	0xFD9
  5519                           status	equ	0xFD8
  5520                           
  5521 ;; *************** function _getNextPosition *****************
  5522 ;; Defined at:
  5523 ;;		line 168 in file "main.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2, status,0
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5537 ;;      Params:         0       0       0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0
  5540 ;;      Totals:         0       0       0       0       0       0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_checkNextPosition
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text29
  5551  0009BE                     __ptext29:
  5552                           	opt stack 0
  5553  0009BE                     _getNextPosition:
  5554                           	opt stack 24
  5555                           
  5556                           ;main.c: 170: switch(_ball.bDirection)
  5557                           
  5558                           ;incstack = 0
  5559  0009BE  D02E               	goto	i2l2079
  5560  0009C0                     i2l2065:
  5561                           
  5562                           ;main.c: 173: _nextPos[0] = _ball.bPos[0] + 1;
  5563  0009C0  0101               	movlb	1	; () banked
  5564  0009C2  29C6               	incf	__ball& (0+255),w,b
  5565  0009C4  0101               	movlb	1	; () banked
  5566  0009C6  6FC9               	movwf	__nextPos& (0+255),b
  5567                           
  5568                           ;main.c: 174: _nextPos[1] = _ball.bPos[1] + 1;
  5569  0009C8  0101               	movlb	1	; () banked
  5570  0009CA  29C7               	incf	(__ball+1)& (0+255),w,b
  5571  0009CC  0101               	movlb	1	; () banked
  5572  0009CE  6FCA               	movwf	(__nextPos+1)& (0+255),b
  5573                           
  5574                           ;main.c: 175: break;
  5575  0009D0  0012               	return	
  5576  0009D2                     i2l2067:
  5577                           
  5578                           ; BSR set to: 1
  5579                           ;main.c: 177: _nextPos[0] = _ball.bPos[0] + 1;
  5580  0009D2  0101               	movlb	1	; () banked
  5581  0009D4  29C6               	incf	__ball& (0+255),w,b
  5582  0009D6  0101               	movlb	1	; () banked
  5583  0009D8  6FC9               	movwf	__nextPos& (0+255),b
  5584                           
  5585                           ;main.c: 178: break;
  5586  0009DA  0012               	return	
  5587  0009DC                     i2l2069:
  5588                           
  5589                           ; BSR set to: 1
  5590                           ;main.c: 180: _nextPos[0] = _ball.bPos[0] + 1;
  5591  0009DC  0101               	movlb	1	; () banked
  5592  0009DE  29C6               	incf	__ball& (0+255),w,b
  5593  0009E0  0101               	movlb	1	; () banked
  5594  0009E2  6FC9               	movwf	__nextPos& (0+255),b
  5595                           
  5596                           ;main.c: 181: _nextPos[1] = _ball.bPos[1] - 1;
  5597  0009E4  0101               	movlb	1	; () banked
  5598  0009E6  05C7               	decf	(__ball+1)& (0+255),w,b
  5599  0009E8  0101               	movlb	1	; () banked
  5600  0009EA  6FCA               	movwf	(__nextPos+1)& (0+255),b
  5601                           
  5602                           ;main.c: 182: break;
  5603  0009EC  0012               	return	
  5604  0009EE                     i2l2071:
  5605                           
  5606                           ; BSR set to: 1
  5607                           ;main.c: 184: _nextPos[0] = _ball.bPos[0] - 1;
  5608  0009EE  0101               	movlb	1	; () banked
  5609  0009F0  05C6               	decf	__ball& (0+255),w,b
  5610  0009F2  0101               	movlb	1	; () banked
  5611  0009F4  6FC9               	movwf	__nextPos& (0+255),b
  5612                           
  5613                           ;main.c: 185: _nextPos[1] = _ball.bPos[1] - 1;
  5614  0009F6  0101               	movlb	1	; () banked
  5615  0009F8  05C7               	decf	(__ball+1)& (0+255),w,b
  5616  0009FA  0101               	movlb	1	; () banked
  5617  0009FC  6FCA               	movwf	(__nextPos+1)& (0+255),b
  5618                           
  5619                           ;main.c: 186: break;
  5620  0009FE  0012               	return	
  5621  000A00                     i2l2073:
  5622                           
  5623                           ; BSR set to: 1
  5624                           ;main.c: 188: _nextPos[0] = _ball.bPos[0] - 1;
  5625  000A00  0101               	movlb	1	; () banked
  5626  000A02  05C6               	decf	__ball& (0+255),w,b
  5627  000A04  0101               	movlb	1	; () banked
  5628  000A06  6FC9               	movwf	__nextPos& (0+255),b
  5629                           
  5630                           ;main.c: 189: break;
  5631  000A08  0012               	return	
  5632  000A0A                     i2l2075:
  5633                           
  5634                           ; BSR set to: 1
  5635                           ;main.c: 191: _nextPos[0] = _ball.bPos[0] - 1;
  5636  000A0A  0101               	movlb	1	; () banked
  5637  000A0C  05C6               	decf	__ball& (0+255),w,b
  5638  000A0E  0101               	movlb	1	; () banked
  5639  000A10  6FC9               	movwf	__nextPos& (0+255),b
  5640                           
  5641                           ;main.c: 192: _nextPos[1] = _ball.bPos[1] + 1;
  5642  000A12  0101               	movlb	1	; () banked
  5643  000A14  29C7               	incf	(__ball+1)& (0+255),w,b
  5644  000A16  0101               	movlb	1	; () banked
  5645  000A18  6FCA               	movwf	(__nextPos+1)& (0+255),b
  5646                           
  5647                           ; BSR set to: 1
  5648                           ;main.c: 194: }
  5649                           
  5650                           ;main.c: 193: break;
  5651  000A1A  0012               	return	
  5652  000A1C                     i2l2079:
  5653  000A1C  0101               	movlb	1	; () banked
  5654  000A1E  51C8               	movf	(__ball+2)& (0+255),w,b
  5655                           
  5656                           ; Switch size 1, requested type "space"
  5657                           ; Number of cases is 6, Range of values is 1 to 6
  5658                           ; switch strategies available:
  5659                           ; Name         Instructions Cycles
  5660                           ; simple_byte           19    10 (average)
  5661                           ;	Chosen strategy is simple_byte
  5662  000A20  0A01               	xorlw	1	; case 1
  5663  000A22  B4D8               	btfsc	status,2,c
  5664  000A24  D7CD               	goto	i2l2065
  5665  000A26  0A03               	xorlw	3	; case 2
  5666  000A28  B4D8               	btfsc	status,2,c
  5667  000A2A  D7D3               	goto	i2l2067
  5668  000A2C  0A01               	xorlw	1	; case 3
  5669  000A2E  B4D8               	btfsc	status,2,c
  5670  000A30  D7D5               	goto	i2l2069
  5671  000A32  0A07               	xorlw	7	; case 4
  5672  000A34  B4D8               	btfsc	status,2,c
  5673  000A36  D7DB               	goto	i2l2071
  5674  000A38  0A01               	xorlw	1	; case 5
  5675  000A3A  B4D8               	btfsc	status,2,c
  5676  000A3C  D7E1               	goto	i2l2073
  5677  000A3E  0A03               	xorlw	3	; case 6
  5678  000A40  A4D8               	btfss	status,2,c
  5679  000A42  0012               	return	
  5680  000A44  D7E2               	goto	i2l2075
  5681  000A46                     __end_of_getNextPosition:
  5682                           	opt stack 0
  5683                           pclatu	equ	0xFFB
  5684                           pclath	equ	0xFFA
  5685                           tblptru	equ	0xFF8
  5686                           tblptrh	equ	0xFF7
  5687                           tblptrl	equ	0xFF6
  5688                           tablat	equ	0xFF5
  5689                           prodh	equ	0xFF4
  5690                           prodl	equ	0xFF3
  5691                           intcon	equ	0xFF2
  5692                           postinc0	equ	0xFEE
  5693                           fsr0h	equ	0xFEA
  5694                           fsr0l	equ	0xFE9
  5695                           wreg	equ	0xFE8
  5696                           postdec1	equ	0xFE5
  5697                           plusw1	equ	0xFE3
  5698                           fsr1h	equ	0xFE2
  5699                           fsr1l	equ	0xFE1
  5700                           indf2	equ	0xFDF
  5701                           postinc2	equ	0xFDE
  5702                           plusw2	equ	0xFDB
  5703                           fsr2h	equ	0xFDA
  5704                           fsr2l	equ	0xFD9
  5705                           status	equ	0xFD8
  5706                           
  5707 ;; *************** function ___lwdiv *****************
  5708 ;; Defined at:
  5709 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  dividend        2    0[COMRAM] unsigned int 
  5712 ;;  divisor         2    2[COMRAM] unsigned int 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  quotient        2    4[COMRAM] unsigned int 
  5715 ;;  counter         1    6[COMRAM] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  2    0[COMRAM] unsigned int 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5725 ;;      Params:         4       0       0       0       0       0       0
  5726 ;;      Locals:         3       0       0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0
  5728 ;;      Totals:         7       0       0       0       0       0       0
  5729 ;;Total ram usage:        7 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_ISR
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text30
  5739  000E92                     __ptext30:
  5740                           	opt stack 0
  5741  000E92                     ___lwdiv:
  5742                           	opt stack 25
  5743                           
  5744                           ; BSR set to: 1
  5745                           ;incstack = 0
  5746  000E92  0E00               	movlw	0
  5747  000E94  6E06               	movwf	___lwdiv@quotient+1,c
  5748  000E96  0E00               	movlw	0
  5749  000E98  6E05               	movwf	___lwdiv@quotient,c
  5750  000E9A  5003               	movf	___lwdiv@divisor,w,c
  5751  000E9C  1004               	iorwf	___lwdiv@divisor+1,w,c
  5752  000E9E  B4D8               	btfsc	status,2,c
  5753  000EA0  D01C               	goto	i2l674
  5754  000EA2  0E01               	movlw	1
  5755  000EA4  6E07               	movwf	___lwdiv@counter,c
  5756  000EA6  D004               	goto	i2l2295
  5757  000EA8                     i2l2293:
  5758  000EA8  90D8               	bcf	status,0,c
  5759  000EAA  3603               	rlcf	___lwdiv@divisor,f,c
  5760  000EAC  3604               	rlcf	___lwdiv@divisor+1,f,c
  5761  000EAE  2A07               	incf	___lwdiv@counter,f,c
  5762  000EB0                     i2l2295:
  5763  000EB0  AE04               	btfss	___lwdiv@divisor+1,7,c
  5764  000EB2  D7FA               	goto	i2l2293
  5765  000EB4                     i2l2297:
  5766  000EB4  90D8               	bcf	status,0,c
  5767  000EB6  3605               	rlcf	___lwdiv@quotient,f,c
  5768  000EB8  3606               	rlcf	___lwdiv@quotient+1,f,c
  5769  000EBA  5003               	movf	___lwdiv@divisor,w,c
  5770  000EBC  5C01               	subwf	___lwdiv@dividend,w,c
  5771  000EBE  5004               	movf	___lwdiv@divisor+1,w,c
  5772  000EC0  5802               	subwfb	___lwdiv@dividend+1,w,c
  5773  000EC2  A0D8               	btfss	status,0,c
  5774  000EC4  D005               	goto	i2l2305
  5775  000EC6  5003               	movf	___lwdiv@divisor,w,c
  5776  000EC8  5E01               	subwf	___lwdiv@dividend,f,c
  5777  000ECA  5004               	movf	___lwdiv@divisor+1,w,c
  5778  000ECC  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5779  000ECE  8005               	bsf	___lwdiv@quotient,0,c
  5780  000ED0                     i2l2305:
  5781  000ED0  90D8               	bcf	status,0,c
  5782  000ED2  3204               	rrcf	___lwdiv@divisor+1,f,c
  5783  000ED4  3203               	rrcf	___lwdiv@divisor,f,c
  5784  000ED6  2E07               	decfsz	___lwdiv@counter,f,c
  5785  000ED8  D7ED               	goto	i2l2297
  5786  000EDA                     i2l674:
  5787  000EDA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5788  000EDE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5789  000EE2  0012               	return		;funcret
  5790  000EE4                     __end_of___lwdiv:
  5791                           	opt stack 0
  5792  0000                     pclatu	equ	0xFFB
  5793                           pclath	equ	0xFFA
  5794                           tblptru	equ	0xFF8
  5795                           tblptrh	equ	0xFF7
  5796                           tblptrl	equ	0xFF6
  5797                           tablat	equ	0xFF5
  5798                           prodh	equ	0xFF4
  5799                           prodl	equ	0xFF3
  5800                           intcon	equ	0xFF2
  5801                           postinc0	equ	0xFEE
  5802                           fsr0h	equ	0xFEA
  5803                           fsr0l	equ	0xFE9
  5804                           wreg	equ	0xFE8
  5805                           postdec1	equ	0xFE5
  5806                           plusw1	equ	0xFE3
  5807                           fsr1h	equ	0xFE2
  5808                           fsr1l	equ	0xFE1
  5809                           indf2	equ	0xFDF
  5810                           postinc2	equ	0xFDE
  5811                           plusw2	equ	0xFDB
  5812                           fsr2h	equ	0xFDA
  5813                           fsr2l	equ	0xFD9
  5814                           status	equ	0xFD8
  5815                           pclatu	equ	0xFFB
  5816                           pclath	equ	0xFFA
  5817                           tblptru	equ	0xFF8
  5818                           tblptrh	equ	0xFF7
  5819                           tblptrl	equ	0xFF6
  5820                           tablat	equ	0xFF5
  5821                           prodh	equ	0xFF4
  5822                           prodl	equ	0xFF3
  5823                           intcon	equ	0xFF2
  5824                           postinc0	equ	0xFEE
  5825                           fsr0h	equ	0xFEA
  5826                           fsr0l	equ	0xFE9
  5827                           wreg	equ	0xFE8
  5828                           postdec1	equ	0xFE5
  5829                           plusw1	equ	0xFE3
  5830                           fsr1h	equ	0xFE2
  5831                           fsr1l	equ	0xFE1
  5832                           indf2	equ	0xFDF
  5833                           postinc2	equ	0xFDE
  5834                           plusw2	equ	0xFDB
  5835                           fsr2h	equ	0xFDA
  5836                           fsr2l	equ	0xFD9
  5837                           status	equ	0xFD8
  5838                           
  5839                           	psect	rparam
  5840  0000                     pclatu	equ	0xFFB
  5841                           pclath	equ	0xFFA
  5842                           tblptru	equ	0xFF8
  5843                           tblptrh	equ	0xFF7
  5844                           tblptrl	equ	0xFF6
  5845                           tablat	equ	0xFF5
  5846                           prodh	equ	0xFF4
  5847                           prodl	equ	0xFF3
  5848                           intcon	equ	0xFF2
  5849                           postinc0	equ	0xFEE
  5850                           fsr0h	equ	0xFEA
  5851                           fsr0l	equ	0xFE9
  5852                           wreg	equ	0xFE8
  5853                           postdec1	equ	0xFE5
  5854                           plusw1	equ	0xFE3
  5855                           fsr1h	equ	0xFE2
  5856                           fsr1l	equ	0xFE1
  5857                           indf2	equ	0xFDF
  5858                           postinc2	equ	0xFDE
  5859                           plusw2	equ	0xFDB
  5860                           fsr2h	equ	0xFDA
  5861                           fsr2l	equ	0xFD9
  5862                           status	equ	0xFD8
  5863                           
  5864                           	psect	temp
  5865  00007E                     btemp:
  5866                           	opt stack 0
  5867  00007E                     	ds	1
  5868  0000                     int$flags	set	btemp
  5869                           pclatu	equ	0xFFB
  5870                           pclath	equ	0xFFA
  5871                           tblptru	equ	0xFF8
  5872                           tblptrh	equ	0xFF7
  5873                           tblptrl	equ	0xFF6
  5874                           tablat	equ	0xFF5
  5875                           prodh	equ	0xFF4
  5876                           prodl	equ	0xFF3
  5877                           intcon	equ	0xFF2
  5878                           postinc0	equ	0xFEE
  5879                           fsr0h	equ	0xFEA
  5880                           fsr0l	equ	0xFE9
  5881                           wreg	equ	0xFE8
  5882                           postdec1	equ	0xFE5
  5883                           plusw1	equ	0xFE3
  5884                           fsr1h	equ	0xFE2
  5885                           fsr1l	equ	0xFE1
  5886                           indf2	equ	0xFDF
  5887                           postinc2	equ	0xFDE
  5888                           plusw2	equ	0xFDB
  5889                           fsr2h	equ	0xFDA
  5890                           fsr2l	equ	0xFD9
  5891                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        274
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    121     125
    BANK0           128    128     128
    BANK1           256    164     203
    BANK2           256    126     238
    BANK3           256     48     244
    BANK4           256      0      68
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _writePong->_off
    _writePong->i2_on
    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol
    i2_refresh->i2_setColHigh
    i2_refresh->i2_setRowHigh
    i2_drawSymbol->i2_on
    i2_drawSymbol->i2_turnAllOff
    i2_delaySeconds->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK1

    _startPong->_drawSymbol
    _refresh->_setColHigh
    _refresh->_setRowHigh
    _drawSymbol->_on
    _drawSymbol->_turnAllOff
    _delaySeconds->___wmul

Critical Paths under _ISR in BANK1

    _checkNextPosition->i2_drawSymbol
    i2_startPong->i2_drawSymbol

Critical Paths under _main in BANK2

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _startPong->_drawSymbol

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3813
                         _initialize
                      _initializeLED
                     _initializePong
                            _refresh
 ---------------------------------------------------------------------------------
 (1) _initializePong                                       0     0      0    3409
                          _startPong
 ---------------------------------------------------------------------------------
 (2) _startPong                                            0     0      0    3409
                       _delaySeconds
                         _drawSymbol
                            _refresh
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (1) _refresh                                              5     5      0     268
                                             56 BANK1      5     5      0
                             _allOff
                         _setColHigh
                         _setRowHigh
 ---------------------------------------------------------------------------------
 (2) _setRowHigh                                           3     3      0      66
                                             53 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setColHigh                                           3     3      0      22
                                             53 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _allOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drawSymbol                                         281   280      1    2607
                                             57 BANK1    107   106      1
                                              0 BANK2    126   126      0
                                              0 BANK3     48    48      0
                                 _on
                         _turnAllOff
 ---------------------------------------------------------------------------------
 (3) _turnAllOff                                           4     4      0     198
                                             53 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (4) _on                                                   4     3      1     597
                                             53 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (3) _delaySeconds                                         5     3      2     336
                                             59 BANK1      5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     247
                                             53 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initializeLED                                        4     4      0     136
                                             53 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 17    17      0   10142
                                            104 COMRAM    17    17      0
                            ___lwdiv
                  _checkNextPosition
                          _writePong
 ---------------------------------------------------------------------------------
 (6) _writePong                                            0     0      0     847
                                _off
                               i2_on
 ---------------------------------------------------------------------------------
 (7) _off                                                  4     3      1     303
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _checkNextPosition                                    0     0      0    8886
                    _getNextPosition
                       i2_drawSymbol
                   i2_initializePong
                        i2_startPong
 ---------------------------------------------------------------------------------
 (7) i2_initializePong                                     0     0      0    3211
                        i2_startPong
 ---------------------------------------------------------------------------------
 (7) i2_startPong                                          0     0      0    3211
                     i2_delaySeconds
                       i2_drawSymbol
                          i2_refresh
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (8) i2_refresh                                            5     5      0     268
                                              3 COMRAM     5     5      0
                           i2_allOff
                       i2_setColHigh
                       i2_setRowHigh
 ---------------------------------------------------------------------------------
 (9) i2_setRowHigh                                         3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_setColHigh                                         3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_allOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_drawSymbol                                       281   280      1    2464
                                              4 COMRAM   100    99      1
                                              0 BANK0    128   128      0
                                              0 BANK1     53    53      0
                               i2_on
                       i2_turnAllOff
 ---------------------------------------------------------------------------------
 (8) i2_turnAllOff                                         4     4      0     198
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) i2_on                                                 4     3      1     544
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) i2_delaySeconds                                       5     3      2     281
                                              6 COMRAM     5     3      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _getNextPosition                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _initializeLED
   _initializePong
     _startPong
       _delaySeconds
         ___wmul
       _drawSymbol
         _on
         _turnAllOff
       _refresh
         _allOff
         _setColHigh
         _setRowHigh
       _turnAllOff
   _refresh
     _allOff
     _setColHigh
     _setRowHigh

 _ISR (ROOT)
   ___lwdiv
   _checkNextPosition
     _getNextPosition
     i2_drawSymbol
       i2_on
       i2_turnAllOff
     i2_initializePong
       i2_startPong
         i2_delaySeconds
           i2___wmul
         i2_drawSymbol
           i2_on
           i2_turnAllOff
         i2_refresh
           i2_allOff
           i2_setColHigh
           i2_setRowHigh
         i2_turnAllOff
     i2_startPong
       i2_delaySeconds
         i2___wmul
       i2_drawSymbol
         i2_on
         i2_turnAllOff
       i2_refresh
         i2_allOff
         i2_setColHigh
         i2_setRowHigh
       i2_turnAllOff
   _writePong
     _off
     i2_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      44      13       26.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100     30      F4      11       95.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     7E      EE       9       93.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A4      CB       7       79.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     80      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     79      7D       1       99.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3EE      15        0.0%
DATA                 0      0     3EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Apr 03 11:43:35 2016

         __end_ofi2_setColHigh 1156             drawSymbol@symbolGo 021E              ?i2_initializePong 0001  
                           _on 0DEE            ___wmul@multiplicand 0137                    __CFG_BORV$3 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000  
                 __CFG_CP3$OFF 000000             ??i2_initializePong 0069            drawSymbol@symbolOne 03C4  
         __end_ofi2_setRowHigh 103E                            ?_on 0135            drawSymbol@symbolTwo 0262  
                          _GIE 007F97                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
                          _ISR 0008                            _PSA 007EAB                            __p1 01BC  
                          __p2 01C1                            _off 103E                            prod 000FF3  
                          wreg 000FE8            __end_ofi2_startPong 0E92                           ??_on 0136  
                 __CFG_LVP$OFF 000000                           ?_ISR 0001                   __CFG_WDT$OFF 000000  
         drawSymbol@symbolPlay 013A                           l2003 0CA6                           l2105 0B3E  
                         l2093 0AF0                           l2095 0AF6                           l2089 0AE6  
                         l2433 0DFC                           l2441 0C24                           l2601 019E  
                         l2099 0B00                           l2451 0C3E                           l2611 01EA  
                         l2437 0E06                           l2445 0C2E                           l2605 01A8  
                         l2447 0C34                           l2615 01F4                           l2457 0C7C  
                         l2633 0250                           l2625 023C                           l2561 009E  
                         l2643 029C                           l2619 01FE                           l2563 00A4  
                         l2629 0246                           l2573 00F0                           l2647 02A6  
                         l2639 0292                           l2591 0152                           l2575 00F6  
                         l2567 00AE                           l2655 02E8                           l1687 0D6A  
                         l2585 0142                           l2587 0148                           l2579 0100  
                         l2597 0194                           l1973 0942                           l2685 0D02  
                         l1983 0994                           l1975 0948                           l2687 0D06  
                         l1969 0938                           l1987 099A                           l1979 0952  
                         ?_off 0001                           l1999 0C8E                           l2889 11A2  
                         _ADIE 007CEE                           _ADIF 007CF6                           _T0CS 007EAD  
                         u1204 0D86                           u1205 0D80                           _LATA 000F89  
                         u1174 1106                           u1175 1100                           _LATC 000F8B  
                         _LATD 000F8C                           u1194 0D5C                           u1195 0D56  
                         u2501 0070                           u2511 0082                           u2521 0094  
                         u2461 0028                           u2471 003A                           u2481 004C  
                         u2491 005E                           _PEIE 007F96                           u2847 09AA  
                         u2857 0C96                           i2_on 107A               ??_initializePong 01A4  
                         _main 1196                    drawSymbol@i 019D                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         btemp 007E                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0016                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000                   ___param_bank 000010           __end_of_delaySeconds 0CE0  
                        ??_ISR 0069                          ??_off 0002                          ?i2_on 0001  
                   i2on@column 0004          drawSymbol@symbolThree 03DC                          ?_main 0001  
                        _ADRES 000FC3                          _T0PS0 007EA8                          _T0PS1 007EA9  
                        _T0PS2 007EAA                __end_of___lwdiv 0EE4                          i2l265 0834  
                        i2l674 0EDA                          _PLLEN 007CDE                          _TRISA 000F92  
                        _TRISC 000F94                          _TRISD 000F95                  __CFG_PWRT$OFF 000000  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000           __end_ofi2_turnAllOff 0F76                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                        __ball 01C6                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
              __end_of_refresh 09BE                          on@row 0135                 __CFG_BOREN$OFF 000000  
                        tablat 000FF5               __end_ofi2___wmul 113A               __end_ofi2_allOff 11C4  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
        __size_ofi2_drawSymbol 02E0                   __end_ofi2_on 10B6                __initialization 0870  
                 __end_of_main 11A8                         ??i2_on 0002                _getNextPosition 09BE  
           __size_ofi2_refresh 006A                         ??_main 01A4                    i2_startPong 0E40  
                __activetblptr 000002                   i2_drawSymbol 0318                         _T08BIT 007EAE  
                       i2l2035 1048                         i2l2071 09EE                         i2l2039 1050  
                       i2l2305 0ED0                         i2l2073 0A00                         i2l2065 09C0  
                       i2l2401 1084                         i2l2075 0A0A                         i2l2067 09D2  
                       i2l2069 09DC                         i2l2405 108C                         i2l2413 0F3A  
                       i2l2079 0A1C                         i2l2415 0F3E                         i2l2503 048E  
                       i2l2425 0F72                         i2l2409 0F32                         i2l2521 04EA  
                       i2l2513 04D6                         i2l2419 0F46                         i2l2531 0530  
                       i2l2507 0498                         i2l2293 0EA8                         i2l2541 0578  
                       i2l2517 04E0                         i2l2295 0EB0                         i2l2535 053A  
                       i2l2527 0526                         i2l2463 039A                         i2l1639 1020  
                       i2l2297 0EB4                         i2l2545 0582                         i2l2481 03F8  
                       i2l2465 03A0                         i2l1833 0BC0                         i2l2801 06F0  
                       i2l2475 03E8                         i2l1843 0BFC                         i2l1835 0BC4  
                       i2l2803 0706                         i2l2731 0616                         i2l2549 058C  
                       i2l2493 0446                         i2l2477 03EE                         i2l2469 03AA  
                       i2l2557 05CA                         i2l1829 0BB8                         i2l2821 073C  
                       i2l2813 0728                         i2l2733 061E                         i2l2741 063A  
                       i2l1863 0F02                         i2l2487 0436                         i2l1847 0C00  
                       i2l1839 0BCC                         i2l2663 0E5E                         i2l2823 0740  
                       i2l2831 0768                         i2l2807 070C                         i2l2815 072E  
                       i2l2735 0634                         i2l2489 043C                         i2l2665 0E62  
                       i2l2825 0744                         i2l2745 0648                         i2l2753 0654  
                       i2l2729 0612                         i2l1859 0EEE                         i2l2499 0484  
                       i2l2819 0738                         i2l2755 066A                         i2l2829 074C  
                       i2l2773 06AA                         i2l2781 06BA                         i2l2765 068C  
                       i2l2749 0650                         i2l2853 07CA                         i2l2775 06AE  
                       i2l2783 06D0                         i2l2759 0670                         i2l2767 0692  
                       i2l2847 07C0                         i2l2777 06B2                         i2l2873 081A  
                       i2l2795 06E4                         i2l2797 06E8                         i2l2789 06D6  
                       _TMR0IE 007F95                         _TMR0IF 007F92                         _TMR0ON 007EAF  
          i2drawSymbol@offSetX 0005          __size_ofi2_setColHigh 001C                 __CFG_XINST$OFF 000000  
                       ___wmul 10B6                         _allOff 11A8                 __CFG_STVREN$ON 000000  
        __size_ofi2_setRowHigh 0040                         __speed 007C                      ??___lwdiv 0005  
                       clear_0 0876                         clear_1 0882                         _pixels 0300  
                       off@row 0001                   __pdataCOMRAM 007C                      ??_refresh 0138  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
       __size_of_initializeLED 007C  i2delaySeconds@numberOfSeconds 0007                   i2_setColHigh 113A  
                   __accesstop 0080        __end_of__initialization 0924             i2setColHigh@column 0003  
            __end_ofi2_refresh 0C1E                __CFG_PBADEN$OFF 000000          __size_of_delaySeconds 005E  
                 i2_setRowHigh 0FFE                  ___rparam_used 000001        __end_of_getNextPosition 0A46  
               __pcstackCOMRAM 0001               i2drawSymbol@i_84 00FF               i2drawSymbol@i_85 0130  
             i2drawSymbol@i_86 0131               i2drawSymbol@i_87 0132               i2drawSymbol@i_88 0133  
             i2drawSymbol@i_89 0134                   __pidataBANK1 1156                   __pidataBANK2 0B44  
                 __pidataBANK3 0F76                   __pidataBANK4 0FBA        i2drawSymbol@symbolThree 0118  
                   __end_of_on 0E40          __size_ofi2_turnAllOff 0048                      ?i2___wmul 0001  
                    ?i2_allOff 0001                  i2turnAllOff@i 0003                  i2turnAllOff@j 0004  
                 _delaySeconds 0C82      __size_ofi2_initializePong 0014                     __pbssBANK1 01BC  
                   __pbssBANK3 0300        __size_ofi2_delaySeconds 004A                  _initializeLED 0AC8  
                 i2_turnAllOff 0F2E   i2drawSymbol@symbolArrowRight 004A                        ?___wmul 0135  
                      ?_allOff 0001                     ??i2___wmul 0005                     ??i2_allOff 0001  
                   _drawSymbol 001A    i2drawSymbol@symbolArrowLeft 0080             __size_of_startPong 005A  
  delaySeconds@numberOfSeconds 013B                        i2on@row 0001             __size_of_writePong 0082  
               ?_initializeLED 0001                        __Hparam 0000                        __Lparam 0000  
             ?_getNextPosition 0001                  refresh@theCol 013B                  refresh@theRow 013C  
              __size_of___wmul 0036                __size_of_allOff 000E           i2drawSymbol@symbolGo 009E  
                      ___lwdiv 0E92     drawSymbol@symbolArrowRight 017E                        __pcinit 0870  
       drawSymbol@chosenSymbol 019C                        __ramtop 0600                     _initialize 0D94  
                      __ptext0 1196                        __ptext1 116E                        __ptext2 0CE0  
                      __ptext3 0932                        __ptext4 0D3A                        __ptext5 10EC  
                      __ptext6 11A8                        __ptext7 001A                        __ptext8 0C1E  
                      __ptext9 0DEE                   ?i2_startPong 0001                   __size_of_ISR 0868  
                 __size_of_off 003C                        _refresh 0932                 drawSymbol@i_84 019E  
               drawSymbol@i_85 019F                 drawSymbol@i_86 01A0                 drawSymbol@i_87 01A1  
               drawSymbol@i_88 01A2                 drawSymbol@i_89 01A3                     _setColHigh 10EC  
               __pintcode_body 076E           end_of_initialization 0924                  __Lmediumconst 0000  
                      int_func 076E            i2___wmul@multiplier 0001                     _setRowHigh 0D3A  
                      postdec1 000FE5                        postinc0 000FEE                        postinc2 000FDE  
      __size_of_initializePong 0014              __end_of_startPong 0D3A              drawSymbol@offSetX 0139  
                delaySeconds@i 013E              __end_of_writePong 0AC8                      _TRISBbits 000F93  
                  ?_drawSymbol 0139               i2_initializePong 1182                 i2_delaySeconds 0EE4  
              ??_initializeLED 0135                      i2_refresh 0BB4                     _turnAllOff 0C1E  
                setRowHigh@row 0137                 __end_of___wmul 10EC                 __end_of_allOff 11B6  
                __pidataCOMRAM 11C4                    ?_initialize 0001               i2___wmul@product 0005  
          start_initialization 0870                    __end_of_ISR 0870              __size_ofi2___wmul 0026  
            __size_ofi2_allOff 000E                    ?_setColHigh 0001                    __end_of_off 107A  
       __end_ofi2_delaySeconds 0F2E                     ISR@ADvalue 0077                    ?_setRowHigh 0001  
             __CFG_OSC$INTIO67 000000                     ?i2_refresh 0001                       ??___wmul 0139  
                     ??_allOff 0135            __size_of_drawSymbol 02FE                    __pdataBANK1 01A4  
                  __pdataBANK2 027E                    __pdataBANK3 0380                    __pdataBANK4 0400  
             __CFG_LPT1OSC$OFF 000000                    __pbssCOMRAM 007A           __size_ofi2_startPong 0052  
                __pcstackBANK0 0080                  __pcstackBANK1 0100                  __pcstackBANK2 0200  
                __pcstackBANK3 03C4         i2drawSymbol@symbolPlay 0006                ?i2_delaySeconds 0007  
          __size_of_initialize 005A                  i2drawSymbol@i 00FE                       ISR@value 0079  
             ___lwdiv@dividend 0001                    ?_turnAllOff 0001              __CFG_CCP2MX$PORTC 000000  
                    __pintcode 0008                 _initializePong 116E            __size_of_setColHigh 0028  
                     ?___lwdiv 0001            __size_of_setRowHigh 005A                    turnAllOff@i 0137  
                  turnAllOff@j 0138              _checkNextPosition 05F8                       ?_refresh 0001  
           ?_checkNextPosition 0001               ___lwdiv@quotient 0005                  ?i2_drawSymbol 0005  
                  __size_of_on 0052            ??_checkNextPosition 0069                 ___wmul@product 0139  
       __end_of_initializePong 1182                       i2u110_44 1034                       i2u110_45 1030  
                     i2u107_44 114C                       i2u107_45 1148                    ??i2_refresh 0004  
                     i2u109_44 1016                       i2u109_45 1012                       i2u230_41 037E  
                     i2u231_41 0390                       i2u225_41 0324                       i2u226_41 0336  
                     i2u227_41 0348                       i2u228_41 035A                       i2u229_41 036C  
                     i2u286_47 0C0C                       i2u287_47 0EF4               __CFG_WDTPS$32768 000000  
     __end_ofi2_initializePong 1196                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0135      __end_of_checkNextPosition 076E  
                    _startPong 0CE0       __size_of_getNextPosition 0088                       i2___wmul 1114  
                     i2_allOff 11B6                      off@column 0004                 ??i2_drawSymbol 0006  
          __size_of_turnAllOff 0064                  ?i2_setColHigh 0001                   ??_drawSymbol 013A  
                    _writePong 0A46                      copy_data0 08A0                      copy_data1 08C0  
                    copy_data2 08E0                      copy_data3 0900                  __timerCounter 007A  
                ?i2_setRowHigh 0001                       __Hrparam 0000                ?_initializePong 0001  
                     __Lrparam 0000       i2drawSymbol@chosenSymbol 0068          i2___wmul@multiplicand 0003  
           __end_of_drawSymbol 0318               __size_of___lwdiv 0052                   ??_initialize 0135  
        i2drawSymbol@symbolOne 0100          i2drawSymbol@symbolTwo 00E2                     ?_startPong 0001  
              i2refresh@theCol 0007                i2refresh@theRow 0008                       __nextPos 01C9  
               ??i2_setColHigh 0001                ___lwdiv@divisor 0003                   ??_setColHigh 0135  
             __size_of_refresh 008C                ___lwdiv@counter 0007                  ?_delaySeconds 013B  
                     __ptext10 0C82                       __ptext11 10B6                       __ptext20 0BB4  
                     __ptext12 0AC8                       __ptext21 0FFE                       __ptext13 0D94  
                     __ptext30 0E92                       __ptext22 113A                       __ptext23 11B6  
                     __ptext15 0A46                       __ptext24 0318                       __ptext16 103E  
                     __ptext25 0F2E                       __ptext17 05F8                       __ptext26 107A  
                     __ptext18 1182                       __ptext27 0EE4                       __ptext19 0E40  
                     __ptext28 1114                       __ptext29 09BE                     ?_writePong 0001  
                __size_ofi2_on 003C                drawSymbol@F3232 02D6                drawSymbol@F3241 027E  
              drawSymbol@F3226 01A4                drawSymbol@F3235 0380                drawSymbol@F3244 029C  
              drawSymbol@F3229 02BA                drawSymbol@F3238 0400                 ??i2_setRowHigh 0001  
                 ??_setRowHigh 0135                  __size_of_main 0012             __end_of_initialize 0DEE  
        __end_of_initializeLED 0B44                  ?i2_turnAllOff 0001                 initializeLED@i 0137  
               initializeLED@j 0138                       int$flags 007E             __end_of_setColHigh 1114  
                     on@column 0138     __size_of_checkNextPosition 0176               ??i2_delaySeconds 0009  
                  _OSCTUNEbits 000F9B             __end_of_setRowHigh 0D94                 ??_delaySeconds 013D  
             setColHigh@column 0137                i2delaySeconds@i 000A              ??_getNextPosition 0001  
    drawSymbol@symbolArrowLeft 0200                       intlevel2 0000                 ??i2_turnAllOff 0001  
                   _OSCCONbits 000FD3                   ??_turnAllOff 0135           __end_ofi2_drawSymbol 05F8  
                ??i2_startPong 0069                    ??_startPong 01A4                i2setRowHigh@row 0003  
                  ??_writePong 0005             __end_of_turnAllOff 0C82  
