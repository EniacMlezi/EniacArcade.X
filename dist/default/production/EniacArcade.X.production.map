Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\EniacArcade.X.production.sym \
  --cmf=dist/default/production\EniacArcade.X.production.cmf -z -Q18F4520 \
  -oC:\Users\larsg\AppData\Local\Temp\s2ko.2 \
  -Mdist/default/production/EniacArcade.X.production.map -E1 -ver=XC8 \
  -ASTACK=03E4h-05ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0600h-06FFhx122 -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-07Fh \
  -AABS1=00h-05FFh -ABIGRAM=01h-05FFh -ARAM=080h-0FFh,0100h-01FFhx5 \
  -ABANK0=080h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0F80h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0600h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\larsg\AppData\Local\Temp\s2ko.obj \
  dist/default/production\EniacArcade.X.production.obj 

Object code version is 3.11

Machine type is 18F4520

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\larsg\AppData\Local\Temp\s2ko.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\EniacArcade.X.production.obj
                intcode                               8        8        E        4       0
                temp                                 7F       7F        1        1       1
                text26                              ED4      ED4       52        4       0
                text25                              A94      A94       88        4       0
                text24                             102E     102E       3C        4       0
                text23                              308      308      2D0        4       0
                text22                             1126     1126        E        4       0
                text21                             10B0     10B0       1C        4       0
                text20                              FB2      FB2       40        4       0
                text19                              D00      D00       6A        4       0
                text18                              F26      F26       48        4       0
                text17                              C94      C94       6C        4       0
                text16                             10E0     10E0       14        4       0
                text15                              5D8      5D8      276        4       0
                text14                              FF2      FF2       3C        4       0
                text13                              BA2      BA2       82        4       0
                intcode_body                        84E      84E      114        4       0
                text11                              E28      E28       5A        4       0
                text10                              D6A      D6A       64        4       0
                text9                              1092     1092       1E        4       0
                text8                               E82      E82       52        4       0
                text7                                1A       1A      2EE        4       0
                text6                              1118     1118        E        4       0
                text5                              106A     106A       28        4       0
                text4                               DCE      DCE       5A        4       0
                text3                               A08      A08       8C        4       0
                text2                               C24      C24       70        4       0
                text1                              10CC     10CC       14        4       0
                text0                              1106     1106       12        4       0
                cstackCOMRAM                          1        1       7E        1       1
                cstackBANK0                          80       80       7F       80       1
                cstackBANK1                         100      100       B3      100       1
                cstackBANK2                         2A6      2A6       57      200       1
                cstackBANK3                         3C4      3C4       20      300       1
                dataBANK3                           380      380       44      300       1
                bssBANK3                            300      300       80      300       1
                dataBANK2                           200      200       A6      200       1
                dataBANK1                           1B3      1B3       12      100       1
                bssBANK1                            1C5      1C5       11      100       1
                cinit                               B1C      B1C       86        4       0
                idataBANK3                          F6E      F6E       44        4       0
                idataBANK2                          962      962       A6        4       0
                idataBANK1                         10F4     10F4       12        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text26                              ED4      ED4       52         0
                text25                              A94      A94       88         0
                text24                             102E     102E       3C         0
                text23                              308      308      2D0         0
                text22                             1126     1126        E         0
                text21                             10B0     10B0       1C         0
                text20                              FB2      FB2       40         0
                text19                              D00      D00       6A         0
                text18                              F26      F26       48         0
                text17                              C94      C94       6C         0
                text16                             10E0     10E0       14         0
                text15                              5D8      5D8      276         0
                text14                              FF2      FF2       3C         0
                text13                              BA2      BA2       82         0
                intcode_body                        84E      84E      114         0
                text11                              E28      E28       5A         0
                text10                              D6A      D6A       64         0
                text9                              1092     1092       1E         0
                text8                               E82      E82       52         0
                text7                                1A       1A      2EE         0
                text6                              1118     1118        E         0
                text5                              106A     106A       28         0
                text4                               DCE      DCE       5A         0
                text3                               A08      A08       8C         0
                text2                               C24      C24       70         0
                text1                              10CC     10CC       14         0
                text0                              1106     1106       12         0
                cinit                               B1C      B1C       86         0
                idataBANK3                          F6E      F6E       44         0
                idataBANK2                          962      962       A6         0
                idataBANK1                         10F4     10F4       12         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 7F       7F        1         1
                cstackCOMRAM                          1        1       7E         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          80       80       7F         1

        CLASS   BANK1          
                cstackBANK1                         100      100       B3         1
                dataBANK1                           1B3      1B3       12         1
                bssBANK1                            1C5      1C5       11         1

        CLASS   BANK2          
                cstackBANK2                         2A6      2A6       57         1
                dataBANK2                           200      200       A6         1

        CLASS   BANK3          
                cstackBANK3                         3C4      3C4       20         1
                dataBANK3                           380      380       44         1
                bssBANK3                            300      300       80         1

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00007F  000080         1       1  COMRAM  
                intcode                        000008  00112C  001134         4       0  CODE    
                cstackBANK0                    000080  00007F  0000FF        80       1  BANK0   
                cstackBANK1                    000100  0000D6  0001D6       100       1  BANK1   
                dataBANK2                      000200  0000FD  0002FD       200       1  BANK2   
                bssBANK3                       000300  0000E4  0003E4       300       1  BANK3   
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000FF-0000FF                1
        BANK1            0001D6-0001FF               2A
        BANK2            0002FD-0002FF                3
        BANK3            0003E4-0003FF               1C
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           0000FF-0000FF                1
                         0001D6-0001FF               2A
                         0002FD-0002FF                3
                         0003E4-0005FF              21C
        CODE             000004-000007                4
                         001134-007FFF             6ECC
        CONST            000004-000007                4
                         001134-007FFF             6ECC
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001134-007FFF             6ECC
        RAM              0000FF-0000FF                1
                         0001D6-0001FF               2A
                         0002FD-0002FF                3
                         0003E4-0005FF              100
        SFR              000F80-000FFF               80
        SMALLCONST       001134-007FFF              100
        STACK            0003E4-0005FF              21C

                                  Symbol Table

?___lwdiv                     cstackCOMRAM 000001
ISR@ADvalue                   cstackBANK1  00011E
ISR@value                     cstackBANK1  000120
_ADCON0bits                   (abs)        000FC2
_ADCON1bits                   (abs)        000FC1
_ADCON2bits                   (abs)        000FC0
_ADIE                         (abs)        007CEE
_ADIF                         (abs)        007CF6
_ADRES                        (abs)        000FC3
_GIE                          (abs)        007F97
_ISR                          intcode      000008
_LATA                         (abs)        000F89
_LATC                         (abs)        000F8B
_LATD                         (abs)        000F8C
_OSCCONbits                   (abs)        000FD3
_OSCTUNEbits                  (abs)        000F9B
_PEIE                         (abs)        007F96
_PLLEN                        (abs)        007CDE
_PSA                          (abs)        007EAB
_T08BIT                       (abs)        007EAE
_T0CS                         (abs)        007EAD
_T0PS0                        (abs)        007EA8
_T0PS1                        (abs)        007EA9
_T0PS2                        (abs)        007EAA
_TMR0IE                       (abs)        007F95
_TMR0IF                       (abs)        007F92
_TMR0ON                       (abs)        007EAF
_TRISA                        (abs)        000F92
_TRISBbits                    (abs)        000F93
_TRISC                        (abs)        000F94
_TRISD                        (abs)        000F95
__CFG_BOREN$OFF               (abs)        000000
__CFG_BORV$3                  (abs)        000000
__CFG_CCP2MX$PORTC            (abs)        000000
__CFG_CP0$OFF                 (abs)        000000
__CFG_CP1$OFF                 (abs)        000000
__CFG_CP2$OFF                 (abs)        000000
__CFG_CP3$OFF                 (abs)        000000
__CFG_CPB$OFF                 (abs)        000000
__CFG_CPD$OFF                 (abs)        000000
__CFG_EBTR0$OFF               (abs)        000000
__CFG_EBTR1$OFF               (abs)        000000
__CFG_EBTR2$OFF               (abs)        000000
__CFG_EBTR3$OFF               (abs)        000000
__CFG_EBTRB$OFF               (abs)        000000
__CFG_FCMEN$OFF               (abs)        000000
__CFG_IESO$OFF                (abs)        000000
__CFG_LPT1OSC$OFF             (abs)        000000
__CFG_LVP$OFF                 (abs)        000000
__CFG_MCLRE$ON                (abs)        000000
__CFG_OSC$INTIO67             (abs)        000000
__CFG_PBADEN$OFF              (abs)        000000
__CFG_PWRT$OFF                (abs)        000000
__CFG_STVREN$ON               (abs)        000000
__CFG_WDT$OFF                 (abs)        000000
__CFG_WDTPS$32768             (abs)        000000
__CFG_WRT0$OFF                (abs)        000000
__CFG_WRT1$OFF                (abs)        000000
__CFG_WRT2$OFF                (abs)        000000
__CFG_WRT3$OFF                (abs)        000000
__CFG_WRTB$OFF                (abs)        000000
__CFG_WRTC$OFF                (abs)        000000
__CFG_WRTD$OFF                (abs)        000000
__CFG_XINST$OFF               (abs)        000000
__HRAM                        (abs)        000000
__Habs1                       abs1         000000
__Hbank0                      bank0        000000
__Hbank1                      bank1        000000
__Hbank2                      bank2        000000
__Hbank3                      bank3        000000
__Hbank4                      bank4        000000
__Hbank5                      bank5        000000
__Hbigbss                     bigbss       000000
__Hbigdata                    bigdata      000000
__Hbigram                     bigram       000000
__Hbss                        bss          000000
__HbssBANK1                   bssBANK1     000000
__HbssBANK3                   bssBANK3     000000
__Hcinit                      cinit        000000
__Hclrtext                    clrtext      000000
__Hcomram                     comram       000000
__Hconfig                     config       30000E
__Hconst                      const        000000
__HcstackBANK0                cstackBANK0  000000
__HcstackBANK1                cstackBANK1  000000
__HcstackBANK2                cstackBANK2  000000
__HcstackBANK3                cstackBANK3  000000
__HcstackCOMRAM               cstackCOMRAM 000000
__Hdata                       data         000000
__HdataBANK1                  dataBANK1    000000
__HdataBANK2                  dataBANK2    000000
__HdataBANK3                  dataBANK3    000000
__Heeprom_data                eeprom_data  000000
__Hend_init                   end_init     00001A
__Hfarbss                     farbss       000000
__Hfardata                    fardata      000000
__Hibigdata                   ibigdata     000000
__Hidata                      idata        000000
__HidataBANK1                 idataBANK1   000000
__HidataBANK2                 idataBANK2   000000
__HidataBANK3                 idataBANK3   000000
__Hidloc                      idloc        200008
__Hifardata                   ifardata     000000
__Hinit                       init         000016
__Hintcode                    intcode      000016
__Hintcode_body               intcode_body 000000
__Hintcodelo                  intcodelo    000016
__Hintentry                   intentry     000000
__Hintret                     intret       000000
__Hintsave_regs               intsave_regs 000000
__Hirdata                     irdata       000000
__Hmediumconst                mediumconst  000000
__HnvFARRAM                   nvFARRAM     000000
__Hnvbit                      nvbit        000000
__Hnvrram                     nvrram       000000
__Hparam                      rparam       000000
__Hpowerup                    powerup      000016
__Hram                        ram          000000
__Hramtop                     ramtop       000600
__Hrbit                       rbit         000000
__Hrbss                       rbss         000000
__Hrdata                      rdata        000000
__Hreset_vec                  reset_vec    000004
__Hrparam                     rparam       000000
__Hsfr                        sfr          000000
__Hsmallconst                 smallconst   000000
__Hspace_0                    (abs)        30000E
__Hspace_1                    (abs)        0003E4
__Hspace_2                    (abs)        000000
__Hstack                      stack        000000
__Hstruct                     struct       000000
__Htemp                       temp         000080
__Htext                       text         000000
__Htext0                      text0        000000
__Htext1                      text1        000000
__Htext10                     text10       000000
__Htext11                     text11       000000
__Htext13                     text13       000000
__Htext14                     text14       000000
__Htext15                     text15       000000
__Htext16                     text16       000000
__Htext17                     text17       000000
__Htext18                     text18       000000
__Htext19                     text19       000000
__Htext2                      text2        000000
__Htext20                     text20       000000
__Htext21                     text21       000000
__Htext22                     text22       000000
__Htext23                     text23       000000
__Htext24                     text24       000000
__Htext25                     text25       000000
__Htext26                     text26       000000
__Htext3                      text3        000000
__Htext4                      text4        000000
__Htext5                      text5        000000
__Htext6                      text6        000000
__Htext7                      text7        000000
__Htext8                      text8        000000
__Htext9                      text9        000000
__LRAM                        (abs)        000001
__Labs1                       abs1         000000
__Lbank0                      bank0        000000
__Lbank1                      bank1        000000
__Lbank2                      bank2        000000
__Lbank3                      bank3        000000
__Lbank4                      bank4        000000
__Lbank5                      bank5        000000
__Lbigbss                     bigbss       000000
__Lbigdata                    bigdata      000000
__Lbigram                     bigram       000000
__Lbss                        bss          000000
__LbssBANK1                   bssBANK1     000000
__LbssBANK3                   bssBANK3     000000
__Lcinit                      cinit        000000
__Lclrtext                    clrtext      000000
__Lcomram                     comram       000000
__Lconfig                     config       300000
__Lconst                      const        000000
__LcstackBANK0                cstackBANK0  000000
__LcstackBANK1                cstackBANK1  000000
__LcstackBANK2                cstackBANK2  000000
__LcstackBANK3                cstackBANK3  000000
__LcstackCOMRAM               cstackCOMRAM 000000
__Ldata                       data         000000
__LdataBANK1                  dataBANK1    000000
__LdataBANK2                  dataBANK2    000000
__LdataBANK3                  dataBANK3    000000
__Leeprom_data                eeprom_data  000000
__Lend_init                   end_init     000016
__Lfarbss                     farbss       000000
__Lfardata                    fardata      000000
__Libigdata                   ibigdata     000000
__Lidata                      idata        000000
__LidataBANK1                 idataBANK1   000000
__LidataBANK2                 idataBANK2   000000
__LidataBANK3                 idataBANK3   000000
__Lidloc                      idloc        200000
__Lifardata                   ifardata     000000
__Linit                       init         000016
__Lintcode                    intcode      000008
__Lintcode_body               intcode_body 000000
__Lintcodelo                  intcodelo    000016
__Lintentry                   intentry     000000
__Lintret                     intret       000000
__Lintsave_regs               intsave_regs 000000
__Lirdata                     irdata       000000
__Lmediumconst                mediumconst  000000
__LnvFARRAM                   nvFARRAM     000000
__Lnvbit                      nvbit        000000
__Lnvrram                     nvrram       000000
__Lparam                      rparam       000000
__Lpowerup                    powerup      000016
__Lram                        ram          000000
__Lramtop                     ramtop       000600
__Lrbit                       rbit         000000
__Lrbss                       rbss         000000
__Lrdata                      rdata        000000
__Lreset_vec                  reset_vec    000000
__Lrparam                     rparam       000000
__Lsfr                        sfr          000000
__Lsmallconst                 smallconst   000000
__Lspace_0                    (abs)        000000
__Lspace_1                    (abs)        000000
__Lspace_2                    (abs)        000000
__Lstack                      stack        000000
__Lstruct                     struct       000000
__Ltemp                       temp         00007F
__Ltext                       text         000000
__Ltext0                      text0        000000
__Ltext1                      text1        000000
__Ltext10                     text10       000000
__Ltext11                     text11       000000
__Ltext13                     text13       000000
__Ltext14                     text14       000000
__Ltext15                     text15       000000
__Ltext16                     text16       000000
__Ltext17                     text17       000000
__Ltext18                     text18       000000
__Ltext19                     text19       000000
__Ltext2                      text2        000000
__Ltext20                     text20       000000
__Ltext21                     text21       000000
__Ltext22                     text22       000000
__Ltext23                     text23       000000
__Ltext24                     text24       000000
__Ltext25                     text25       000000
__Ltext26                     text26       000000
__Ltext3                      text3        000000
__Ltext4                      text4        000000
__Ltext5                      text5        000000
__Ltext6                      text6        000000
__Ltext7                      text7        000000
__Ltext8                      text8        000000
__Ltext9                      text9        000000
__S0                          (abs)        30000E
__S1                          (abs)        0003E4
__S2                          (abs)        000000
___inthi_sp                   stack        000000
___intlo_sp                   stack        000000
___lwdiv                      text26       000ED4
___lwdiv@counter              cstackCOMRAM 000007
___lwdiv@dividend             cstackCOMRAM 000001
___lwdiv@divisor              cstackCOMRAM 000003
___lwdiv@quotient             cstackCOMRAM 000005
___param_bank                 (abs)        000010
___rparam_used                (abs)        000001
___sp                         stack        000000
__accesstop                   (abs)        000080
__activetblptr                (abs)        000002
__ball                        bssBANK1     0001CF
__end_of_ISR                  intcode_body 000962
__end_of___lwdiv              text26       000F26
__end_of__initialization      cinit        000B94
__end_of_allOff               text6        001126
__end_of_checkNextPosition    text15       00084E
__end_of_drawSymbol           text7        000308
__end_of_getNextPosition      text25       000B1C
__end_of_initialize           text11       000E82
__end_of_initializeLED        text9        0010B0
__end_of_initializePong       text1        0010E0
__end_of_main                 text0        001118
__end_of_off                  text14       00102E
__end_of_on                   text8        000ED4
__end_of_refresh              text3        000A94
__end_of_setColHigh           text5        001092
__end_of_setRowHigh           text4        000E28
__end_of_startPong            text2        000C94
__end_of_turnAllOff           text10       000DCE
__end_of_writePong            text13       000C24
__end_ofi2_allOff             text22       001134
__end_ofi2_drawSymbol         text23       0005D8
__end_ofi2_initializePong     text16       0010F4
__end_ofi2_on                 text24       00106A
__end_ofi2_refresh            text19       000D6A
__end_ofi2_setColHigh         text21       0010CC
__end_ofi2_setRowHigh         text20       000FF2
__end_ofi2_startPong          text17       000D00
__end_ofi2_turnAllOff         text18       000F6E
__initialization              cinit        000B1C
__mediumconst                 mediumconst  000000
__nextPos                     bssBANK1     0001D2
__p1                          bssBANK1     0001C5
__p2                          bssBANK1     0001CA
__pbssBANK1                   bssBANK1     0001C5
__pbssBANK3                   bssBANK3     000300
__pcinit                      cinit        000B1C
__pcstackBANK0                cstackBANK0  000080
__pcstackBANK1                cstackBANK1  000100
__pcstackBANK2                cstackBANK2  0002A6
__pcstackBANK3                cstackBANK3  0003C4
__pcstackCOMRAM               cstackCOMRAM 000001
__pdataBANK1                  dataBANK1    0001B3
__pdataBANK2                  dataBANK2    000200
__pdataBANK3                  dataBANK3    000380
__pidataBANK1                 idataBANK1   0010F4
__pidataBANK2                 idataBANK2   000962
__pidataBANK3                 idataBANK3   000F6E
__pintcode                    intcode      000008
__pintcode_body               intcode_body 00084E
__ptext0                      text0        001106
__ptext1                      text1        0010CC
__ptext10                     text10       000D6A
__ptext11                     text11       000E28
__ptext13                     text13       000BA2
__ptext14                     text14       000FF2
__ptext15                     text15       0005D8
__ptext16                     text16       0010E0
__ptext17                     text17       000C94
__ptext18                     text18       000F26
__ptext19                     text19       000D00
__ptext2                      text2        000C24
__ptext20                     text20       000FB2
__ptext21                     text21       0010B0
__ptext22                     text22       001126
__ptext23                     text23       000308
__ptext24                     text24       00102E
__ptext25                     text25       000A94
__ptext26                     text26       000ED4
__ptext3                      text3        000A08
__ptext4                      text4        000DCE
__ptext5                      text5        00106A
__ptext6                      text6        001118
__ptext7                      text7        00001A
__ptext8                      text8        000E82
__ptext9                      text9        001092
__ramtop                      ramtop       000600
__size_of_ISR                 (abs)        000000
__size_of___lwdiv             (abs)        000000
__size_of_allOff              (abs)        000000
__size_of_checkNextPosition   (abs)        000000
__size_of_drawSymbol          (abs)        000000
__size_of_getNextPosition     (abs)        000000
__size_of_initialize          (abs)        000000
__size_of_initializeLED       (abs)        000000
__size_of_initializePong      (abs)        000000
__size_of_main                (abs)        000000
__size_of_off                 (abs)        000000
__size_of_on                  (abs)        000000
__size_of_refresh             (abs)        000000
__size_of_setColHigh          (abs)        000000
__size_of_setRowHigh          (abs)        000000
__size_of_startPong           (abs)        000000
__size_of_turnAllOff          (abs)        000000
__size_of_writePong           (abs)        000000
__size_ofi2_allOff            (abs)        000000
__size_ofi2_drawSymbol        (abs)        000000
__size_ofi2_initializePong    (abs)        000000
__size_ofi2_on                (abs)        000000
__size_ofi2_refresh           (abs)        000000
__size_ofi2_setColHigh        (abs)        000000
__size_ofi2_setRowHigh        (abs)        000000
__size_ofi2_startPong         (abs)        000000
__size_ofi2_turnAllOff        (abs)        000000
__smallconst                  smallconst   000000
__speed                       dataBANK1    0001C3
__timerCounter                bssBANK1     0001D4
_allOff                       text6        001118
_checkNextPosition            text15       0005D8
_drawSymbol                   text7        00001A
_getNextPosition              text25       000A94
_initialize                   text11       000E28
_initializeLED                text9        001092
_initializePong               text1        0010CC
_main                         text0        001106
_off                          text14       000FF2
_on                           text8        000E82
_pixels                       bssBANK3     000300
_refresh                      text3        000A08
_setColHigh                   text5        00106A
_setRowHigh                   text4        000DCE
_startPong                    text2        000C24
_turnAllOff                   text10       000D6A
_writePong                    text13       000BA2
btemp                         temp         00007F
checkNextPosition@counter     cstackBANK0  0000FB
checkNextPosition@counter_430 cstackBANK0  0000FD
drawSymbol@F3224              dataBANK2    000280
drawSymbol@F3227              dataBANK2    000244
drawSymbol@F3230              dataBANK2    000262
drawSymbol@F3233              dataBANK2    000200
drawSymbol@F3236              dataBANK3    000380
drawSymbol@F3239              dataBANK1    0001B3
drawSymbol@F3242              dataBANK2    000296
drawSymbol@chosenSymbol       cstackBANK1  0001AE
drawSymbol@i                  cstackBANK1  0001AF
drawSymbol@i_82               cstackBANK1  0001B0
drawSymbol@i_83               cstackBANK2  0002F8
drawSymbol@i_84               cstackBANK2  0002F9
drawSymbol@i_85               cstackBANK2  0002FA
drawSymbol@i_86               cstackBANK2  0002FB
drawSymbol@i_87               cstackBANK2  0002FC
drawSymbol@offSetX            cstackBANK1  000125
drawSymbol@symbolArrowLeft    cstackBANK3  0003C4
drawSymbol@symbolArrowRight   cstackBANK3  0003D4
drawSymbol@symbolGo           cstackBANK1  00016A
drawSymbol@symbolOne          cstackBANK2  0002E2
drawSymbol@symbolPlay         cstackBANK1  000126
drawSymbol@symbolThree        cstackBANK2  0002C4
drawSymbol@symbolTwo          cstackBANK2  0002A6
end_of_initialization         cinit        000B94
i2_allOff                     text22       001126
i2_drawSymbol                 text23       000308
i2_initializePong             text16       0010E0
i2_on                         text24       00102E
i2_refresh                    text19       000D00
i2_setColHigh                 text21       0010B0
i2_setRowHigh                 text20       000FB2
i2_startPong                  text17       000C94
i2_turnAllOff                 text18       000F26
i2drawSymbol@chosenSymbol     cstackCOMRAM 00007E
i2drawSymbol@i                cstackBANK0  0000F2
i2drawSymbol@i_82             cstackBANK0  0000F3
i2drawSymbol@i_83             cstackBANK0  0000F4
i2drawSymbol@i_84             cstackBANK0  0000F5
i2drawSymbol@i_85             cstackBANK0  0000F6
i2drawSymbol@i_86             cstackBANK0  0000F7
i2drawSymbol@i_87             cstackBANK0  0000F8
i2drawSymbol@offSetX          cstackCOMRAM 000005
i2drawSymbol@symbolArrowLeft  cstackBANK0  0000E2
i2drawSymbol@symbolArrowRight cstackBANK1  000100
i2drawSymbol@symbolGo         cstackBANK0  000080
i2drawSymbol@symbolOne        cstackCOMRAM 000068
i2drawSymbol@symbolPlay       cstackCOMRAM 000006
i2drawSymbol@symbolThree      cstackBANK0  0000C4
i2drawSymbol@symbolTwo        cstackCOMRAM 00004A
i2on@column                   cstackCOMRAM 000004
i2on@row                      cstackCOMRAM 000001
i2refresh@theCol              cstackCOMRAM 000007
i2refresh@theRow              cstackCOMRAM 000008
i2setColHigh@column           cstackCOMRAM 000003
i2setRowHigh@row              cstackCOMRAM 000003
i2startPong@counter           cstackBANK0  0000F9
i2turnAllOff@i                cstackCOMRAM 000003
i2turnAllOff@j                cstackCOMRAM 000004
int$flags                     temp         00007F
int_func                      intcode_body 00084E
intlevel0                     text         000000
intlevel1                     text         000000
intlevel2                     text         000000
intlevel3                     text         000000
off@column                    cstackCOMRAM 000004
off@row                       cstackCOMRAM 000001
on@column                     cstackBANK1  000124
on@row                        cstackBANK1  000121
refresh@theCol                cstackBANK1  000127
refresh@theRow                cstackBANK1  000128
setColHigh@column             cstackBANK1  000123
setRowHigh@row                cstackBANK1  000123
stackhi                       (abs)        0005FF
stacklo                       (abs)        0003E4
start                         init         000016
startPong@counter             cstackBANK1  0001B1
start_initialization          cinit        000B1C
turnAllOff@i                  cstackBANK1  000123
turnAllOff@j                  cstackBANK1  000124


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 409 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_initialize
		_initializeLED
		_initializePong
		_refresh
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _initializePong *****************
 Defined at:
		line 88 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_startPong
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _startPong *****************
 Defined at:
		line 59 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  counter         2  177[BANK1 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       2       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_drawSymbol
		_refresh
		_turnAllOff
 This function is called by:
		_initializePong
 This function uses a non-reentrant model


 *************** function _refresh *****************
 Defined at:
		line 177 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  theRow          1   40[BANK1 ] unsigned char 
  theCol          1   39[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       2       0       0       0       0
      Temps:          0       0       3       0       0       0       0
      Totals:         0       0       5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_allOff
		_setColHigh
		_setRowHigh
 This function is called by:
		_startPong
		_main
 This function uses a non-reentrant model


 *************** function _setRowHigh *****************
 Defined at:
		line 24 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  row             1   35[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       1       0       0       0       0
      Temps:          0       0       2       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_refresh
 This function uses a non-reentrant model


 *************** function _setColHigh *****************
 Defined at:
		line 20 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  column          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  column          1   35[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       1       0       0       0       0
      Temps:          0       0       2       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_refresh
 This function uses a non-reentrant model


 *************** function _allOff *****************
 Defined at:
		line 171 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_refresh
 This function uses a non-reentrant model


 *************** function _drawSymbol *****************
 Defined at:
		line 85 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  chosenSymbol    1    wreg     unsigned char 
  offSetX         1   37[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  chosenSymbol    1  174[BANK1 ] unsigned char 
  i               1   86[BANK2 ] unsigned char 
  i               1   85[BANK2 ] unsigned char 
  i               1   84[BANK2 ] unsigned char 
  i               1   83[BANK2 ] unsigned char 
  i               1   82[BANK2 ] unsigned char 
  i               1  176[BANK1 ] unsigned char 
  i               1  175[BANK1 ] unsigned char 
  symbolGo       68  106[BANK1 ] unsigned char [2][34]
  symbolPlay     68   38[BANK1 ] unsigned char [2][34]
  symbolThree    30   30[BANK2 ] unsigned char [2][15]
  symbolTwo      30    0[BANK2 ] unsigned char [2][15]
  symbolOne      22   60[BANK2 ] unsigned char [2][11]
  symbolArrowR   16   16[BANK3 ] unsigned char [2][8]
  symbolArrowL   16    0[BANK3 ] unsigned char [2][8]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       1       0       0       0       0
      Locals:         0       0     139      87      32       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0     140      87      32       0       0
Total ram usage:      259 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_on
 This function is called by:
		_startPong
 This function uses a non-reentrant model


 *************** function _on *****************
 Defined at:
		line 43 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  column          1    wreg     unsigned char 
  row             1   33[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  column          1   36[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       1       0       0       0       0
      Locals:         0       0       1       0       0       0       0
      Temps:          0       0       2       0       0       0       0
      Totals:         0       0       4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_drawSymbol
 This function uses a non-reentrant model


 *************** function _initializeLED *****************
 Defined at:
		line 31 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_turnAllOff
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnAllOff *****************
 Defined at:
		line 161 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               1   36[BANK1 ] unsigned char 
  i               1   35[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       2       0       0       0       0
      Temps:          0       0       2       0       0       0       0
      Totals:         0       0       4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_initializeLED
		_startPong
 This function uses a non-reentrant model


 *************** function _initialize *****************
 Defined at:
		line 102 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 354 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ADvalue         2   30[BANK1 ] unsigned short 
  value           1   32[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0      14       0       0       0       0
      Totals:         0       0      17       0       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___lwdiv
		_checkNextPosition
		_writePong
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _writePong *****************
 Defined at:
		line 144 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_off
		i2_on
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _off *****************
 Defined at:
		line 64 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  column          1    wreg     unsigned char 
  row             1    0[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  column          1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_writePong
 This function uses a non-reentrant model


 *************** function _checkNextPosition *****************
 Defined at:
		line 197 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  counter         2  125[BANK0 ] unsigned int 
  counter         2  123[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_getNextPosition
		i2_drawSymbol
		i2_initializePong
		i2_refresh
		i2_startPong
		i2_turnAllOff
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_initializePong *****************
 Defined at:
		line 88 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_startPong
 This function is called by:
		_checkNextPosition
 This function uses a non-reentrant model


 *************** function i2_startPong *****************
 Defined at:
		line 59 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  startPong       2  121[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_drawSymbol
		i2_refresh
		i2_turnAllOff
 This function is called by:
		_checkNextPosition
		i2_initializePong
 This function uses a non-reentrant model


 *************** function i2_turnAllOff *****************
 Defined at:
		line 161 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  turnAllOff      1    3[COMRAM] unsigned char 
  turnAllOff      1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_checkNextPosition
		i2_startPong
 This function uses a non-reentrant model


 *************** function i2_refresh *****************
 Defined at:
		line 177 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  refresh         1    7[COMRAM] unsigned char 
  refresh         1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_allOff
		i2_setColHigh
		i2_setRowHigh
 This function is called by:
		_checkNextPosition
		i2_startPong
 This function uses a non-reentrant model


 *************** function i2_setRowHigh *****************
 Defined at:
		line 24 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  row             1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_refresh
 This function uses a non-reentrant model


 *************** function i2_setColHigh *****************
 Defined at:
		line 20 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  column          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  column          1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_refresh
 This function uses a non-reentrant model


 *************** function i2_allOff *****************
 Defined at:
		line 171 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_refresh
 This function uses a non-reentrant model


 *************** function i2_drawSymbol *****************
 Defined at:
		line 85 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  chosenSymbol    1    wreg     unsigned char 
  offSetX         1    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  chosenSymbol    1  125[COMRAM] unsigned char 
  drawSymbol     68    0[BANK0 ] unsigned char [2][34]
  drawSymbol     68    5[COMRAM] unsigned char [2][34]
  drawSymbol     30   68[BANK0 ] unsigned char [2][15]
  drawSymbol     30   73[COMRAM] unsigned char [2][15]
  drawSymbol     22  103[COMRAM] unsigned char [2][11]
  drawSymbol     16    0[BANK1 ] unsigned char [2][8]
  drawSymbol     16   98[BANK0 ] unsigned char [2][8]
  drawSymbol      1  120[BANK0 ] unsigned char 
  drawSymbol      1  119[BANK0 ] unsigned char 
  drawSymbol      1  118[BANK0 ] unsigned char 
  drawSymbol      1  117[BANK0 ] unsigned char 
  drawSymbol      1  116[BANK0 ] unsigned char 
  drawSymbol      1  115[BANK0 ] unsigned char 
  drawSymbol      1  114[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:       121     121      16       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:       122     121      16       0       0       0       0
Total ram usage:      259 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_on
 This function is called by:
		_checkNextPosition
		i2_startPong
 This function uses a non-reentrant model


 *************** function i2_on *****************
 Defined at:
		line 43 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  column          1    wreg     unsigned char 
  row             1    0[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  column          1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_writePong
		i2_drawSymbol
 This function uses a non-reentrant model


 *************** function _getNextPosition *****************
 Defined at:
		line 168 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_checkNextPosition
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] unsigned int 
  divisor         2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    4[COMRAM] unsigned int 
  counter         1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c
		___lwdiv       		CODE           	0ED4	0000	83

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c estimated size: 83

shared
		i2_allOff      		CODE           	1126	0000	15
		i2_startPong   		CODE           	0C94	0000	109
		__initialization		CODE           	0B1C	0000	121
		i2_refresh     		CODE           	0D00	0000	107
		i2_drawSymbol  		CODE           	0308	0000	721
		i2_setColHigh  		CODE           	10B0	0000	29
		i2_setRowHigh  		CODE           	0FB2	0000	65
		i2_on          		CODE           	102E	0000	61
		i2_turnAllOff  		CODE           	0F26	0000	73
		i2_initializePong		CODE           	10E0	0000	21

shared estimated size: 1322

main.c
		_initializePong		CODE           	10CC	0000	21
		_getNextPosition		CODE           	0A94	0000	137
		_ISR           		CODE           	0008	0000	291
		_main          		CODE           	1106	0000	19
		_checkNextPosition		CODE           	05D8	0000	631
		_writePong     		CODE           	0BA2	0000	131
		_startPong     		CODE           	0C24	0000	113
		_initialize    		CODE           	0E28	0000	91

main.c estimated size: 1434

Source/LED-API.c
		_setColHigh    		CODE           	106A	0000	41
		_setRowHigh    		CODE           	0DCE	0000	91
		_refresh       		CODE           	0A08	0000	141
		_allOff        		CODE           	1118	0000	15
		_on            		CODE           	0E82	0000	83
		_turnAllOff    		CODE           	0D6A	0000	101
		_off           		CODE           	0FF2	0000	61
		_initializeLED 		CODE           	1092	0000	31
		_drawSymbol    		CODE           	001A	0000	751

Source/LED-API.c estimated size: 1315

