Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\EniacArcade.X.production.sym \
  --cmf=dist/default/production\EniacArcade.X.production.cmf -z -Q18F4520 \
  -oC:\Users\larsg\AppData\Local\Temp\s92k.2 \
  -Mdist/default/production/EniacArcade.X.production.map -E1 -ver=XC8 \
  -ASTACK=02FAh-05ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0600h-06FFhx122 -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-07Fh \
  -AABS1=00h-05FFh -ABIGRAM=01h-05FFh -ARAM=080h-0FFh,0100h-01FFhx5 \
  -ABANK0=080h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0F80h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0600h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\larsg\AppData\Local\Temp\s92k.obj \
  dist/default/production\EniacArcade.X.production.obj 

Object code version is 3.11

Machine type is 18F4520

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\larsg\AppData\Local\Temp\s92k.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\EniacArcade.X.production.obj
                intcode                               8        8        E        4       0
                temp                                 3B       3B        1        1       1
                text21                              872      872       52        4       0
                text20                              8C4      8C4       4E        4       0
                text19                              65C      65C       88        4       0
                text18                              A92      A92       38        4       0
                text17                              B62      B62        E        4       0
                text16                              ACA      ACA       2A        4       0
                text15                              A56      A56       3C        4       0
                text14                              A1A      A1A       3C        4       0
                text13                              456      456       D6        4       0
                intcode_body                        2C2      2C2      194        4       0
                text11                              7C0      7C0       5A        4       0
                text10                              912      912       48        4       0
                text9                               AF4      AF4       1E        4       0
                text8                               9DE      9DE       3C        4       0
                text7                                1A       1A      2A8        4       0
                text6                               B54      B54        E        4       0
                text5                               B12      B12       1C        4       0
                text4                               99E      99E       40        4       0
                text3                               756      756       6A        4       0
                text2                               6E4      6E4       72        4       0
                text1                               81A      81A       58        4       0
                text0                               B42      B42       12        4       0
                cstackCOMRAM                          1        1       24        1       1
                cstackBANK0                          80       80       80       80       1
                cstackBANK1                         1A6      1A6       47      100       1
                cstackBANK2                         2C4      2C4       36      200       1
                dataBANK2                           280      280       44      200       1
                bssBANK2                            200      200       80      200       1
                dataBANK1                           100      100       A6      100       1
                bssBANK1                            1ED      1ED        9      100       1
                dataCOMRAM                           25       25       14        1       1
                bssCOMRAM                            39       39        2        1       1
                cinit                               5D2      5D2       8A        4       0
                idataBANK2                          95A      95A       44        4       0
                idataBANK1                          52C      52C       A6        4       0
                idataCOMRAM                         B2E      B2E       14        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text21                              872      872       52         0
                text20                              8C4      8C4       4E         0
                text19                              65C      65C       88         0
                text18                              A92      A92       38         0
                text17                              B62      B62        E         0
                text16                              ACA      ACA       2A         0
                text15                              A56      A56       3C         0
                text14                              A1A      A1A       3C         0
                text13                              456      456       D6         0
                intcode_body                        2C2      2C2      194         0
                text11                              7C0      7C0       5A         0
                text10                              912      912       48         0
                text9                               AF4      AF4       1E         0
                text8                               9DE      9DE       3C         0
                text7                                1A       1A      2A8         0
                text6                               B54      B54        E         0
                text5                               B12      B12       1C         0
                text4                               99E      99E       40         0
                text3                               756      756       6A         0
                text2                               6E4      6E4       72         0
                text1                               81A      81A       58         0
                text0                               B42      B42       12         0
                cinit                               5D2      5D2       8A         0
                idataBANK2                          95A      95A       44         0
                idataBANK1                          52C      52C       A6         0
                idataCOMRAM                         B2E      B2E       14         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 3B       3B        1         1
                cstackCOMRAM                          1        1       24         1
                dataCOMRAM                           25       25       14         1
                bssCOMRAM                            39       39        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          80       80       80         1

        CLASS   BANK1          
                cstackBANK1                         1A6      1A6       47         1
                dataBANK1                           100      100       A6         1
                bssBANK1                            1ED      1ED        9         1

        CLASS   BANK2          
                cstackBANK2                         2C4      2C4       36         1
                dataBANK2                           280      280       44         1
                bssBANK2                            200      200       80         1

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00003B  00003C         1       1  COMRAM  
                intcode                        000008  000B68  000B70         4       0  CODE    
                cstackBANK0                    000080  000080  000100        80       1  BANK0   
                dataBANK1                      000100  0000F6  0001F6       100       1  BANK1   
                bssBANK2                       000200  0000FA  0002FA       200       1  BANK2   
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK1            0001F6-0001FF                A
        BANK2            0002FA-0002FF                6
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           00003C-00007F               44
                         0001F6-0001FF                A
                         0002FA-0005FF              306
        CODE             000004-000007                4
                         000B70-007FFF             7490
        COMRAM           00003C-00007F               44
        CONST            000004-000007                4
                         000B70-007FFF             7490
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000B70-007FFF             7490
        RAM              0001F6-0001FF                A
                         0002FA-0005FF              100
        SFR              000F80-000FFF               80
        SMALLCONST       000B70-007FFF              100
        STACK            0002FA-0005FF              306

                                  Symbol Table

?___lwdiv                      cstackCOMRAM 000001
ISR@ADvalue                    cstackCOMRAM 000016
ISR@value                      cstackCOMRAM 000018
_ADCON0bits                    (abs)        000FC2
_ADCON1bits                    (abs)        000FC1
_ADCON2bits                    (abs)        000FC0
_ADIE                          (abs)        007CEE
_ADIF                          (abs)        007CF6
_ADRES                         (abs)        000FC3
_GIE                           (abs)        007F97
_ISR                           intcode      000008
_LATA                          (abs)        000F89
_LATC                          (abs)        000F8B
_LATD                          (abs)        000F8C
_OSCCONbits                    (abs)        000FD3
_OSCTUNEbits                   (abs)        000F9B
_PEIE                          (abs)        007F96
_PLLEN                         (abs)        007CDE
_PSA                           (abs)        007EAB
_T08BIT                        (abs)        007EAE
_T0CS                          (abs)        007EAD
_T0PS0                         (abs)        007EA8
_T0PS1                         (abs)        007EA9
_T0PS2                         (abs)        007EAA
_TMR0IE                        (abs)        007F95
_TMR0IF                        (abs)        007F92
_TMR0ON                        (abs)        007EAF
_TRISA                         (abs)        000F92
_TRISBbits                     (abs)        000F93
_TRISC                         (abs)        000F94
_TRISD                         (abs)        000F95
__CFG_BOREN$OFF                (abs)        000000
__CFG_BORV$3                   (abs)        000000
__CFG_CCP2MX$PORTC             (abs)        000000
__CFG_CP0$OFF                  (abs)        000000
__CFG_CP1$OFF                  (abs)        000000
__CFG_CP2$OFF                  (abs)        000000
__CFG_CP3$OFF                  (abs)        000000
__CFG_CPB$OFF                  (abs)        000000
__CFG_CPD$OFF                  (abs)        000000
__CFG_EBTR0$OFF                (abs)        000000
__CFG_EBTR1$OFF                (abs)        000000
__CFG_EBTR2$OFF                (abs)        000000
__CFG_EBTR3$OFF                (abs)        000000
__CFG_EBTRB$OFF                (abs)        000000
__CFG_FCMEN$OFF                (abs)        000000
__CFG_IESO$OFF                 (abs)        000000
__CFG_LPT1OSC$OFF              (abs)        000000
__CFG_LVP$OFF                  (abs)        000000
__CFG_MCLRE$ON                 (abs)        000000
__CFG_OSC$INTIO67              (abs)        000000
__CFG_PBADEN$OFF               (abs)        000000
__CFG_PWRT$OFF                 (abs)        000000
__CFG_STVREN$ON                (abs)        000000
__CFG_WDT$OFF                  (abs)        000000
__CFG_WDTPS$32768              (abs)        000000
__CFG_WRT0$OFF                 (abs)        000000
__CFG_WRT1$OFF                 (abs)        000000
__CFG_WRT2$OFF                 (abs)        000000
__CFG_WRT3$OFF                 (abs)        000000
__CFG_WRTB$OFF                 (abs)        000000
__CFG_WRTC$OFF                 (abs)        000000
__CFG_WRTD$OFF                 (abs)        000000
__CFG_XINST$OFF                (abs)        000000
__HRAM                         (abs)        000000
__Habs1                        abs1         000000
__Hbank0                       bank0        000000
__Hbank1                       bank1        000000
__Hbank2                       bank2        000000
__Hbank3                       bank3        000000
__Hbank4                       bank4        000000
__Hbank5                       bank5        000000
__Hbigbss                      bigbss       000000
__Hbigdata                     bigdata      000000
__Hbigram                      bigram       000000
__Hbss                         bss          000000
__HbssBANK1                    bssBANK1     000000
__HbssBANK2                    bssBANK2     000000
__HbssCOMRAM                   bssCOMRAM    000000
__Hcinit                       cinit        000000
__Hclrtext                     clrtext      000000
__Hcomram                      comram       000000
__Hconfig                      config       30000E
__Hconst                       const        000000
__HcstackBANK0                 cstackBANK0  000000
__HcstackBANK1                 cstackBANK1  000000
__HcstackBANK2                 cstackBANK2  000000
__HcstackCOMRAM                cstackCOMRAM 000000
__Hdata                        data         000000
__HdataBANK1                   dataBANK1    000000
__HdataBANK2                   dataBANK2    000000
__HdataCOMRAM                  dataCOMRAM   000000
__Heeprom_data                 eeprom_data  000000
__Hend_init                    end_init     00001A
__Hfarbss                      farbss       000000
__Hfardata                     fardata      000000
__Hibigdata                    ibigdata     000000
__Hidata                       idata        000000
__HidataBANK1                  idataBANK1   000000
__HidataBANK2                  idataBANK2   000000
__HidataCOMRAM                 idataCOMRAM  000000
__Hidloc                       idloc        200008
__Hifardata                    ifardata     000000
__Hinit                        init         000016
__Hintcode                     intcode      000016
__Hintcode_body                intcode_body 000000
__Hintcodelo                   intcodelo    000016
__Hintentry                    intentry     000000
__Hintret                      intret       000000
__Hintsave_regs                intsave_regs 000000
__Hirdata                      irdata       000000
__Hmediumconst                 mediumconst  000000
__HnvFARRAM                    nvFARRAM     000000
__Hnvbit                       nvbit        000000
__Hnvrram                      nvrram       000000
__Hparam                       rparam       000000
__Hpowerup                     powerup      000016
__Hram                         ram          000000
__Hramtop                      ramtop       000600
__Hrbit                        rbit         000000
__Hrbss                        rbss         000000
__Hrdata                       rdata        000000
__Hreset_vec                   reset_vec    000004
__Hrparam                      rparam       000000
__Hsfr                         sfr          000000
__Hsmallconst                  smallconst   000000
__Hspace_0                     (abs)        30000E
__Hspace_1                     (abs)        0002FA
__Hspace_2                     (abs)        000000
__Hstack                       stack        000000
__Hstruct                      struct       000000
__Htemp                        temp         00003C
__Htext                        text         000000
__Htext0                       text0        000000
__Htext1                       text1        000000
__Htext10                      text10       000000
__Htext11                      text11       000000
__Htext13                      text13       000000
__Htext14                      text14       000000
__Htext15                      text15       000000
__Htext16                      text16       000000
__Htext17                      text17       000000
__Htext18                      text18       000000
__Htext19                      text19       000000
__Htext2                       text2        000000
__Htext20                      text20       000000
__Htext21                      text21       000000
__Htext3                       text3        000000
__Htext4                       text4        000000
__Htext5                       text5        000000
__Htext6                       text6        000000
__Htext7                       text7        000000
__Htext8                       text8        000000
__Htext9                       text9        000000
__LRAM                         (abs)        000001
__Labs1                        abs1         000000
__Lbank0                       bank0        000000
__Lbank1                       bank1        000000
__Lbank2                       bank2        000000
__Lbank3                       bank3        000000
__Lbank4                       bank4        000000
__Lbank5                       bank5        000000
__Lbigbss                      bigbss       000000
__Lbigdata                     bigdata      000000
__Lbigram                      bigram       000000
__Lbss                         bss          000000
__LbssBANK1                    bssBANK1     000000
__LbssBANK2                    bssBANK2     000000
__LbssCOMRAM                   bssCOMRAM    000000
__Lcinit                       cinit        000000
__Lclrtext                     clrtext      000000
__Lcomram                      comram       000000
__Lconfig                      config       300000
__Lconst                       const        000000
__LcstackBANK0                 cstackBANK0  000000
__LcstackBANK1                 cstackBANK1  000000
__LcstackBANK2                 cstackBANK2  000000
__LcstackCOMRAM                cstackCOMRAM 000000
__Ldata                        data         000000
__LdataBANK1                   dataBANK1    000000
__LdataBANK2                   dataBANK2    000000
__LdataCOMRAM                  dataCOMRAM   000000
__Leeprom_data                 eeprom_data  000000
__Lend_init                    end_init     000016
__Lfarbss                      farbss       000000
__Lfardata                     fardata      000000
__Libigdata                    ibigdata     000000
__Lidata                       idata        000000
__LidataBANK1                  idataBANK1   000000
__LidataBANK2                  idataBANK2   000000
__LidataCOMRAM                 idataCOMRAM  000000
__Lidloc                       idloc        200000
__Lifardata                    ifardata     000000
__Linit                        init         000016
__Lintcode                     intcode      000008
__Lintcode_body                intcode_body 000000
__Lintcodelo                   intcodelo    000016
__Lintentry                    intentry     000000
__Lintret                      intret       000000
__Lintsave_regs                intsave_regs 000000
__Lirdata                      irdata       000000
__Lmediumconst                 mediumconst  000000
__LnvFARRAM                    nvFARRAM     000000
__Lnvbit                       nvbit        000000
__Lnvrram                      nvrram       000000
__Lparam                       rparam       000000
__Lpowerup                     powerup      000016
__Lram                         ram          000000
__Lramtop                      ramtop       000600
__Lrbit                        rbit         000000
__Lrbss                        rbss         000000
__Lrdata                       rdata        000000
__Lreset_vec                   reset_vec    000000
__Lrparam                      rparam       000000
__Lsfr                         sfr          000000
__Lsmallconst                  smallconst   000000
__Lspace_0                     (abs)        000000
__Lspace_1                     (abs)        000000
__Lspace_2                     (abs)        000000
__Lstack                       stack        000000
__Lstruct                      struct       000000
__Ltemp                        temp         00003B
__Ltext                        text         000000
__Ltext0                       text0        000000
__Ltext1                       text1        000000
__Ltext10                      text10       000000
__Ltext11                      text11       000000
__Ltext13                      text13       000000
__Ltext14                      text14       000000
__Ltext15                      text15       000000
__Ltext16                      text16       000000
__Ltext17                      text17       000000
__Ltext18                      text18       000000
__Ltext19                      text19       000000
__Ltext2                       text2        000000
__Ltext20                      text20       000000
__Ltext21                      text21       000000
__Ltext3                       text3        000000
__Ltext4                       text4        000000
__Ltext5                       text5        000000
__Ltext6                       text6        000000
__Ltext7                       text7        000000
__Ltext8                       text8        000000
__Ltext9                       text9        000000
__S0                           (abs)        30000E
__S1                           (abs)        0002FA
__S2                           (abs)        000000
___inthi_sp                    stack        000000
___intlo_sp                    stack        000000
___lwdiv                       text21       000872
___lwdiv@counter               cstackCOMRAM 000007
___lwdiv@dividend              cstackCOMRAM 000001
___lwdiv@divisor               cstackCOMRAM 000003
___lwdiv@quotient              cstackCOMRAM 000005
___param_bank                  (abs)        000010
___rparam_used                 (abs)        000001
___sp                          stack        000000
__accesstop                    (abs)        000080
__activetblptr                 (abs)        000002
__ball                         bssBANK1     0001ED
__end_of_ISR                   intcode_body 000456
__end_of___lwdiv               text21       0008C4
__end_of__initialization       cinit        00064E
__end_of_allOff                text6        000B62
__end_of_checkNextPosition     text16       000AF4
__end_of_checkPaddleCollision  text20       000912
__end_of_checkWallCollision    text17       000B70
__end_of_drawSymbol            text7        0002C2
__end_of_getNextPosition       text19       0006E4
__end_of_handleWallCollision   text18       000ACA
__end_of_initialize            text11       00081A
__end_of_initializeLED         text9        000B12
__end_of_initializePong        text1        000872
__end_of_main                  text0        000B54
__end_of_off                   text15       000A92
__end_of_on                    text8        000A1A
__end_of_refresh               text3        0007C0
__end_of_setColHigh            text5        000B2E
__end_of_setRowHigh            text4        0009DE
__end_of_startPong             text2        000756
__end_of_turnAllOff            text10       00095A
__end_of_writePong             text13       00052C
__end_ofi2_on                  text14       000A56
__glfsr                        dataCOMRAM   000037
__initialization               cinit        0005D2
__lcg                          dataCOMRAM   000038
__mediumconst                  mediumconst  000000
__nextPos                      bssBANK1     0001F0
__p1                           bssBANK1     0001F2
__p2                           bssBANK1     0001F4
__pbssBANK1                    bssBANK1     0001ED
__pbssBANK2                    bssBANK2     000200
__pbssCOMRAM                   bssCOMRAM    000039
__pcinit                       cinit        0005D2
__pcstackBANK0                 cstackBANK0  000080
__pcstackBANK1                 cstackBANK1  0001A6
__pcstackBANK2                 cstackBANK2  0002C4
__pcstackCOMRAM                cstackCOMRAM 000001
__pdataBANK1                   dataBANK1    000100
__pdataBANK2                   dataBANK2    000280
__pdataCOMRAM                  dataCOMRAM   000025
__pidataBANK1                  idataBANK1   00052C
__pidataBANK2                  idataBANK2   00095A
__pidataCOMRAM                 idataCOMRAM  000B2E
__pintcode                     intcode      000008
__pintcode_body                intcode_body 0002C2
__ptext0                       text0        000B42
__ptext1                       text1        00081A
__ptext10                      text10       000912
__ptext11                      text11       0007C0
__ptext13                      text13       000456
__ptext14                      text14       000A1A
__ptext15                      text15       000A56
__ptext16                      text16       000ACA
__ptext17                      text17       000B62
__ptext18                      text18       000A92
__ptext19                      text19       00065C
__ptext2                       text2        0006E4
__ptext20                      text20       0008C4
__ptext21                      text21       000872
__ptext3                       text3        000756
__ptext4                       text4        00099E
__ptext5                       text5        000B12
__ptext6                       text6        000B54
__ptext7                       text7        00001A
__ptext8                       text8        0009DE
__ptext9                       text9        000AF4
__ramtop                       ramtop       000600
__size_of_ISR                  (abs)        000000
__size_of___lwdiv              (abs)        000000
__size_of_allOff               (abs)        000000
__size_of_checkNextPosition    (abs)        000000
__size_of_checkPaddleCollision (abs)        000000
__size_of_checkWallCollision   (abs)        000000
__size_of_drawSymbol           (abs)        000000
__size_of_getNextPosition      (abs)        000000
__size_of_handleWallCollision  (abs)        000000
__size_of_initialize           (abs)        000000
__size_of_initializeLED        (abs)        000000
__size_of_initializePong       (abs)        000000
__size_of_main                 (abs)        000000
__size_of_off                  (abs)        000000
__size_of_on                   (abs)        000000
__size_of_refresh              (abs)        000000
__size_of_setColHigh           (abs)        000000
__size_of_setRowHigh           (abs)        000000
__size_of_startPong            (abs)        000000
__size_of_turnAllOff           (abs)        000000
__size_of_writePong            (abs)        000000
__size_ofi2_on                 (abs)        000000
__smallconst                   smallconst   000000
__speed                        dataCOMRAM   000035
__timerCounter                 bssCOMRAM    000039
_allOff                        text6        000B54
_checkNextPosition             text16       000ACA
_checkPaddleCollision          text20       0008C4
_checkWallCollision            text17       000B62
_drawSymbol                    text7        00001A
_getNextPosition               text19       00065C
_handlePaddleLeftCollision     (abs)        000000
_handlePaddleRightCollision    (abs)        000000
_handleWallCollision           text18       000A92
_initialize                    text11       0007C0
_initializeLED                 text9        000AF4
_initializePong                text1        00081A
_main                          text0        000B42
_off                           text15       000A56
_on                            text8        0009DE
_pixels                        bssBANK2     000200
_refresh                       text3        000756
_setColHigh                    text5        000B12
_setRowHigh                    text4        00099E
_startPong                     text2        0006E4
_turnAllOff                    text10       000912
_writePong                     text13       000456
btemp                          temp         00003B
checkPaddleCollision@i         cstackCOMRAM 000004
checkPaddleCollision@paddle    cstackCOMRAM 000001
drawSymbol@F3224               dataBANK1    000180
drawSymbol@F3228               dataBANK1    000144
drawSymbol@F3232               dataBANK1    000162
drawSymbol@F3236               dataBANK1    000100
drawSymbol@F3240               dataBANK2    000280
drawSymbol@F3244               dataCOMRAM   000025
drawSymbol@F3248               dataBANK1    000196
drawSymbol@chosenSymbol        cstackCOMRAM 00001E
drawSymbol@i                   cstackCOMRAM 00001F
drawSymbol@i_67                cstackCOMRAM 000020
drawSymbol@i_71                cstackCOMRAM 000021
drawSymbol@i_75                cstackCOMRAM 000022
drawSymbol@i_79                cstackBANK1  0001EA
drawSymbol@i_83                cstackBANK1  0001EB
drawSymbol@i_87                cstackBANK1  0001EC
drawSymbol@offSetX             cstackCOMRAM 00001D
drawSymbol@symbolArrowLeft     cstackBANK2  0002DA
drawSymbol@symbolArrowRight    cstackBANK2  0002EA
drawSymbol@symbolGo            cstackBANK1  0001A6
drawSymbol@symbolOne           cstackBANK2  0002C4
drawSymbol@symbolPlay          cstackBANK0  000080
drawSymbol@symbolThree         cstackBANK0  0000E2
drawSymbol@symbolTwo           cstackBANK0  0000C4
end_of_initialization          cinit        00064E
i2_on                          text14       000A1A
i2on@column                    cstackCOMRAM 000004
i2on@row                       cstackCOMRAM 000001
int$flags                      temp         00003B
int_func                       intcode_body 0002C2
intlevel0                      text         000000
intlevel1                      text         000000
intlevel2                      text         000000
intlevel3                      text         000000
off@column                     cstackCOMRAM 000004
off@row                        cstackCOMRAM 000001
on@column                      cstackCOMRAM 00001C
on@row                         cstackCOMRAM 000019
refresh@theCol                 cstackCOMRAM 00001F
refresh@theRow                 cstackCOMRAM 000020
setColHigh@column              cstackCOMRAM 00001B
setRowHigh@row                 cstackCOMRAM 00001B
stackhi                        (abs)        0005FF
stacklo                        (abs)        0002FA
start                          init         000016
startPong@counter              cstackCOMRAM 000023
start_initialization           cinit        0005D2
turnAllOff@i                   cstackCOMRAM 00001B
turnAllOff@j                   cstackCOMRAM 00001C


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 364 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    9
 This function calls:
		_initialize
		_initializeLED
		_initializePong
		_refresh
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _initializePong *****************
 Defined at:
		line 87 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_startPong
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _startPong *****************
 Defined at:
		line 63 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  counter         2   34[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_drawSymbol
		_refresh
		_turnAllOff
 This function is called by:
		_initializePong
 This function uses a non-reentrant model


 *************** function _refresh *****************
 Defined at:
		line 186 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  theRow          1   31[COMRAM] unsigned char 
  theCol          1   30[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_allOff
		_setColHigh
		_setRowHigh
 This function is called by:
		_startPong
		_main
 This function uses a non-reentrant model


 *************** function _setRowHigh *****************
 Defined at:
		line 24 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  row             1   26[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_refresh
 This function uses a non-reentrant model


 *************** function _setColHigh *****************
 Defined at:
		line 20 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  column          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  column          1   26[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_refresh
 This function uses a non-reentrant model


 *************** function _allOff *****************
 Defined at:
		line 180 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_refresh
 This function uses a non-reentrant model


 *************** function _drawSymbol *****************
 Defined at:
		line 85 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  chosenSymbol    1    wreg     unsigned char 
  offSetX         1   28[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  chosenSymbol    1   29[COMRAM] unsigned char 
  i               1   70[BANK1 ] unsigned char 
  i               1   69[BANK1 ] unsigned char 
  i               1   68[BANK1 ] unsigned char 
  i               1   33[COMRAM] unsigned char 
  i               1   32[COMRAM] unsigned char 
  i               1   31[COMRAM] unsigned char 
  i               1   30[COMRAM] unsigned char 
  symbolArrowR   16   38[BANK2 ] unsigned char [2][8]
  symbolArrowL   16   22[BANK2 ] unsigned char [2][8]
  symbolGo       68    0[BANK1 ] unsigned char [2][34]
  symbolPlay     68    0[BANK0 ] unsigned char [2][34]
  symbolThree    30   98[BANK0 ] unsigned char [2][15]
  symbolTwo      30   68[BANK0 ] unsigned char [2][15]
  symbolOne      22    0[BANK2 ] unsigned char [2][11]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         5     128      71      54       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6     128      71      54       0       0       0
Total ram usage:      259 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_on
 This function is called by:
		_startPong
 This function uses a non-reentrant model


 *************** function _on *****************
 Defined at:
		line 43 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  column          1    wreg     unsigned char 
  row             1   24[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  column          1   27[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_drawSymbol
 This function uses a non-reentrant model


 *************** function _initializeLED *****************
 Defined at:
		line 31 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_turnAllOff
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnAllOff *****************
 Defined at:
		line 170 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               1   27[COMRAM] unsigned char 
  i               1   26[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_initializeLED
		_startPong
 This function uses a non-reentrant model


 *************** function _initialize *****************
 Defined at:
		line 104 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 317 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ADvalue         2   21[COMRAM] unsigned short 
  value           1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:         14       0       0       0       0       0       0
      Totals:        17       0       0       0       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lwdiv
		_checkNextPosition
		_writePong
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _writePong *****************
 Defined at:
		line 146 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_off
		i2_on
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_on *****************
 Defined at:
		line 43 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  column          1    wreg     unsigned char 
  row             1    0[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  column          1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_writePong
 This function uses a non-reentrant model


 *************** function _off *****************
 Defined at:
		line 64 in file "Source/LED-API.c"
 Parameters:    Size  Location     Type
  column          1    wreg     unsigned char 
  row             1    0[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  column          1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_writePong
 This function uses a non-reentrant model


 *************** function _checkNextPosition *****************
 Defined at:
		line 307 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_checkPaddleCollision
		_checkWallCollision
		_getNextPosition
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _checkWallCollision *****************
 Defined at:
		line 215 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_handleWallCollision
 This function is called by:
		_checkNextPosition
 This function uses a non-reentrant model


 *************** function _handleWallCollision *****************
 Defined at:
		line 197 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_getNextPosition
 This function is called by:
		_checkWallCollision
 This function uses a non-reentrant model


 *************** function _getNextPosition *****************
 Defined at:
		line 170 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  218[None  ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_handleWallCollision
		_handlePaddleLeftCollision
		_handlePaddleRightCollision
		_checkNextPosition
 This function uses a non-reentrant model


 *************** function _checkPaddleCollision *****************
 Defined at:
		line 288 in file "main.c"
 Parameters:    Size  Location     Type
  paddle          2    0[COMRAM] PTR struct player
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
  i               2    3[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_checkNextPosition
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] unsigned int 
  divisor         2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    4[COMRAM] unsigned int 
  counter         1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c
		___lwdiv       		CODE           	0872	0000	83

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c estimated size: 83

shared
		__initialization		CODE           	05D2	0000	125
		i2_on          		CODE           	0A1A	0000	61

shared estimated size: 186

main.c
		_initializePong		CODE           	081A	0000	89
		_getNextPosition		CODE           	065C	0000	137
		_ISR           		CODE           	0008	0000	419
		_handleWallCollision		CODE           	0A92	0000	57
		_main          		CODE           	0B42	0000	19
		_checkNextPosition		CODE           	0ACA	0000	43
		_writePong     		CODE           	0456	0000	215
		_startPong     		CODE           	06E4	0000	115
		_checkPaddleCollision		CODE           	08C4	0000	79
		_initialize    		CODE           	07C0	0000	91
		_checkWallCollision		CODE           	0B62	0000	15

main.c estimated size: 1279

Source/LED-API.c
		_setColHigh    		CODE           	0B12	0000	29
		_setRowHigh    		CODE           	099E	0000	65
		_refresh       		CODE           	0756	0000	107
		_allOff        		CODE           	0B54	0000	15
		_on            		CODE           	09DE	0000	61
		_turnAllOff    		CODE           	0912	0000	73
		_off           		CODE           	0A56	0000	61
		_initializeLED 		CODE           	0AF4	0000	31
		_drawSymbol    		CODE           	001A	0000	681

Source/LED-API.c estimated size: 1123

